{
  unitField=h;
  l4j.debug("Unit.init HF= " + ReflectionSerDeField.fieldToString(unitField));
  isList=unitField.isList();
  isSlice=isList;
  lowIndex=0;
  highIndex=-1;
  isMap=unitField.isMap();
  if (sliceExpression == null) {
    return;
  }
 else   if (!isList && !isMap) {
    throw new SerDeException("Trying to index type " + unitField.getType().getName() + " which is neither list nor map");
  }
  try {
    if (isList) {
      if (sliceExpression.indexOf(":") == -1) {
        isSlice=false;
        lowIndex=Integer.parseInt(sliceExpression);
      }
 else {
        String[] lh=sliceExpression.split(":");
        if (lh.length > 2) {
          throw new SerDeException("Illegal list slice: " + sliceExpression);
        }
        if (!lh[0].equals("")) {
          lowIndex=Integer.parseInt(lh[0]);
        }
        if (!lh[1].equals("")) {
          highIndex=Integer.parseInt(lh[1]);
        }
      }
    }
 else     if (isMap) {
      keyString=sliceExpression;
    }
  }
 catch (  NumberFormatException e) {
    throw new SerDeException("Illegal slice expression " + sliceExpression);
  }
}
