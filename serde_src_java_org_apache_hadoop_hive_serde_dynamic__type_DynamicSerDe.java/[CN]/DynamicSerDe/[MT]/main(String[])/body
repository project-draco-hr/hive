{
  try {
{
      String schema_file=args[0];
      String kv_file=args[1];
      Properties schema=new Properties();
      schema.load(new FileInputStream(schema_file));
      System.out.println(schema.toString());
      DynamicSerDe serde=new DynamicSerDe();
      serde.initialize(new Configuration(),schema);
      BufferedReader r=new BufferedReader(new FileReader(kv_file));
      String row;
      SerDeField keyF=serde.getFieldFromExpression(null,"key");
      while ((row=r.readLine()) != null) {
        Text t=new Text(row);
        System.out.println("row = " + row);
        System.out.flush();
        Object o=serde.deserialize(t);
        System.out.println(o.toString() + " of type " + o.getClass().getName());
        Object fo=keyF.get(o);
      }
      if (true)       return;
    }
    Properties schema=new Properties();
    String ddl="struct test { i32 hello, list<string> bye, set<i32> more, map<string,bool> another}";
    schema.setProperty(Constants.SERIALIZATION_DDL,ddl);
    schema.setProperty(Constants.SERIALIZATION_LIB,new DynamicSerDe().getClass().toString());
    schema.setProperty(Constants.SERIALIZATION_FORMAT,"com.facebook.thrift.protocol.TJSONProtocol");
    schema.setProperty(META_TABLE_NAME,"test");
    DynamicSerDe serde=new DynamicSerDe();
    serde.initialize(new Configuration(),schema);
    DynamicSerDeTypeContainer data=new DynamicSerDeTypeContainer();
    ArrayList<String> hellos=new ArrayList<String>();
    hellos.add("goodbye and this is more stuff - what is going oin here this is really really weird");
    Set<Integer> set=new HashSet<Integer>();
    set.add(22);
    Map<String,Boolean> map=new HashMap<String,Boolean>();
    map.put("me",true);
    data.fields.put("bye",hellos);
    data.fields.put("hello",Integer.valueOf(10032));
    data.fields.put("more",set);
    data.fields.put("another",map);
    BytesWritable foo=(BytesWritable)serde.serialize(data);
    System.err.println(new String(foo.get()));
    Object obj=serde.deserialize(foo);
    System.err.println("obj=" + obj);
  }
 catch (  Exception e) {
    System.err.println("got exception: " + e.getMessage());
    e.printStackTrace();
  }
}
