{
  if (arguments.length != 2) {
    throw new UDFArgumentLengthException("The function INDEX accepts exactly 2 arguments.");
  }
  if (arguments[0] instanceof MapObjectInspector) {
    mapOI=(MapObjectInspector)arguments[0];
    listOI=null;
  }
 else   if (arguments[0] instanceof ListObjectInspector) {
    listOI=(ListObjectInspector)arguments[0];
    mapOI=null;
  }
 else {
    throw new UDFArgumentTypeException(0,"\"" + Category.MAP.toString().toLowerCase() + "\" or \""+ Category.LIST.toString().toLowerCase()+ "\" is expected at function INDEX, but \""+ arguments[0].getTypeName()+ "\" is found");
  }
  if (arguments[1] instanceof PrimitiveObjectInspector) {
    indexOI=(PrimitiveObjectInspector)arguments[1];
  }
 else {
    throw new UDFArgumentTypeException(1,"Primitive Type is expected but " + arguments[1].getTypeName() + "\" is found");
  }
  if (mapOI != null) {
    returnOI=mapOI.getMapValueObjectInspector();
    ObjectInspector keyOI=mapOI.getMapKeyObjectInspector();
    mapKeyPreferWritable=((PrimitiveObjectInspector)keyOI).preferWritable();
  }
 else {
    returnOI=listOI.getListElementObjectInspector();
  }
  return returnOI;
}
