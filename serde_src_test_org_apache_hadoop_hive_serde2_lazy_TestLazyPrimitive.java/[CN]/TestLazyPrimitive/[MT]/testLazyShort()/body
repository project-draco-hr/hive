{
  try {
    LazyShort b=new LazyShort();
    b.setAll(new byte[]{'0'},0,1);
    assertEquals(Short.valueOf((short)0),b.getPrimitiveObject());
    b.setAll(new byte[]{'+','0'},0,2);
    assertEquals(Short.valueOf((short)0),b.getPrimitiveObject());
    b.setAll(new byte[]{'-','0'},0,2);
    assertEquals(Short.valueOf((short)0),b.getPrimitiveObject());
    b.setAll(new byte[]{'a','1','b'},1,1);
    assertEquals(Short.valueOf((short)1),b.getPrimitiveObject());
    b.setAll(new byte[]{'a','-','1'},1,2);
    assertEquals(Short.valueOf((short)-1),b.getPrimitiveObject());
    b.setAll(new byte[]{'a','+','1'},1,2);
    assertEquals(Short.valueOf((short)1),b.getPrimitiveObject());
    b.setAll(new byte[]{'-','1','2','8'},0,4);
    assertEquals(Short.valueOf((short)-128),b.getPrimitiveObject());
    b.setAll(new byte[]{'+','1','2','7'},0,4);
    assertEquals(Short.valueOf((short)127),b.getPrimitiveObject());
    b.setAll(new byte[]{'-','3','2','7','6','8'},0,6);
    assertEquals(Short.valueOf((short)-32768),b.getPrimitiveObject());
    b.setAll(new byte[]{'+','3','2','7','6','7'},0,6);
    assertEquals(Short.valueOf((short)32767),b.getPrimitiveObject());
    b.setAll(new byte[]{'a','1','b'},1,2);
    assertNull(b.getPrimitiveObject());
    b.setAll(new byte[]{'-','3','2','7','6','9'},0,6);
    assertNull(b.getPrimitiveObject());
    b.setAll(new byte[]{'+','3','2','7','6','8'},0,6);
    assertNull(b.getPrimitiveObject());
    b.setAll(new byte[]{'-','1','2','3'},0,1);
    assertNull(b.getPrimitiveObject());
    b.setAll(new byte[]{'+','1','2','3'},0,1);
    assertNull(b.getPrimitiveObject());
  }
 catch (  Throwable e) {
    e.printStackTrace();
    throw e;
  }
}
