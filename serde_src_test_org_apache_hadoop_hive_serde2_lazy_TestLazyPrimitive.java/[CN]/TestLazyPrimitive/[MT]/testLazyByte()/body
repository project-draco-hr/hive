{
  try {
    LazyByte b=new LazyByte();
    b.setAll(new byte[]{'0'},0,1);
    assertEquals(Byte.valueOf((byte)0),b.getPrimitiveObject());
    b.setAll(new byte[]{'+','0'},0,2);
    assertEquals(Byte.valueOf((byte)0),b.getPrimitiveObject());
    b.setAll(new byte[]{'-','0'},0,2);
    assertEquals(Byte.valueOf((byte)0),b.getPrimitiveObject());
    b.setAll(new byte[]{'a','1','b'},1,1);
    assertEquals(Byte.valueOf((byte)1),b.getPrimitiveObject());
    b.setAll(new byte[]{'a','-','1'},1,2);
    assertEquals(Byte.valueOf((byte)-1),b.getPrimitiveObject());
    b.setAll(new byte[]{'a','+','1'},1,2);
    assertEquals(Byte.valueOf((byte)1),b.getPrimitiveObject());
    b.setAll(new byte[]{'-','1','2','8'},0,4);
    assertEquals(Byte.valueOf((byte)-128),b.getPrimitiveObject());
    b.setAll(new byte[]{'+','1','2','7'},0,4);
    assertEquals(Byte.valueOf((byte)127),b.getPrimitiveObject());
    b.setAll(new byte[]{'a','1','b'},1,2);
    assertNull(b.getPrimitiveObject());
    b.setAll(new byte[]{'+','1','2','8'},0,4);
    assertNull(b.getPrimitiveObject());
    b.setAll(new byte[]{'-','1','2','9'},0,4);
    assertNull(b.getPrimitiveObject());
    b.setAll(new byte[]{'-','1','2','3'},0,1);
    assertNull(b.getPrimitiveObject());
    b.setAll(new byte[]{'+','1','2','3'},0,1);
    assertNull(b.getPrimitiveObject());
  }
 catch (  Throwable e) {
    e.printStackTrace();
    throw e;
  }
}
