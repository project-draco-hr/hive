{
  try {
    LazyByte b=new LazyByte();
    initLazyObject(b,new byte[]{'0'},0,0);
    assertNull(b.getObject());
    initLazyObject(b,new byte[]{'0'},0,1);
    assertEquals(new ByteWritable((byte)0),b.getObject());
    initLazyObject(b,new byte[]{'+','0'},0,2);
    assertEquals(new ByteWritable((byte)0),b.getObject());
    initLazyObject(b,new byte[]{'-','0'},0,2);
    assertEquals(new ByteWritable((byte)0),b.getObject());
    initLazyObject(b,new byte[]{'a','1','b'},1,1);
    assertEquals(new ByteWritable((byte)1),b.getObject());
    initLazyObject(b,new byte[]{'a','-','1'},1,2);
    assertEquals(new ByteWritable((byte)-1),b.getObject());
    initLazyObject(b,new byte[]{'a','+','1'},1,2);
    assertEquals(new ByteWritable((byte)1),b.getObject());
    initLazyObject(b,new byte[]{'-','1','2','8'},0,4);
    assertEquals(new ByteWritable((byte)-128),b.getObject());
    initLazyObject(b,new byte[]{'+','1','2','7'},0,4);
    assertEquals(new ByteWritable((byte)127),b.getObject());
    initLazyObject(b,new byte[]{'a','1','b'},1,2);
    assertNull(b.getObject());
    initLazyObject(b,new byte[]{'+','1','2','8'},0,4);
    assertNull(b.getObject());
    initLazyObject(b,new byte[]{'-','1','2','9'},0,4);
    assertNull(b.getObject());
    initLazyObject(b,new byte[]{'-','1','2','3'},0,1);
    assertNull(b.getObject());
    initLazyObject(b,new byte[]{'+','1','2','3'},0,1);
    assertNull(b.getObject());
  }
 catch (  Throwable e) {
    e.printStackTrace();
    throw e;
  }
}
