{
  GenericUDFPrintf udf=new GenericUDFPrintf();
  ObjectInspector[] inputOIs={PrimitiveObjectInspectorFactory.writableStringObjectInspector,PrimitiveObjectInspectorFactory.getPrimitiveWritableObjectInspector(TypeInfoFactory.getDecimalTypeInfo(5,2)),PrimitiveObjectInspectorFactory.getPrimitiveWritableObjectInspector(TypeInfoFactory.getDecimalTypeInfo(3,2))};
  HiveDecimalWritable argDec1=new HiveDecimalWritable();
  argDec1.set(HiveDecimal.create("234.789"));
  HiveDecimalWritable argDec2=new HiveDecimalWritable();
  argDec2.set(HiveDecimal.create("3.5"));
  DeferredObject[] args={new DeferredJavaObject(new Text("1st: %s, 2nd: %s")),new DeferredJavaObject(argDec1),new DeferredJavaObject(argDec2)};
  PrimitiveObjectInspector oi=(PrimitiveObjectInspector)udf.initialize(inputOIs);
  Assert.assertEquals(PrimitiveObjectInspectorFactory.writableStringObjectInspector,oi);
  Text res=(Text)udf.evaluate(args);
  Assert.assertEquals("1st: 234.79, 2nd: 3.5",res.toString());
}
