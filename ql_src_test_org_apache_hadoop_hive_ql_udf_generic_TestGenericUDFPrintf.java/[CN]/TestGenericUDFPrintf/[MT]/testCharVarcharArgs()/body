{
  GenericUDFPrintf udf=new GenericUDFPrintf();
  ObjectInspector[] inputOIs={PrimitiveObjectInspectorFactory.writableStringObjectInspector,PrimitiveObjectInspectorFactory.getPrimitiveWritableObjectInspector(TypeInfoFactory.getCharTypeInfo(5)),PrimitiveObjectInspectorFactory.getPrimitiveWritableObjectInspector(TypeInfoFactory.getVarcharTypeInfo(7))};
  HiveCharWritable argChar=new HiveCharWritable();
  argChar.set("hello");
  HiveVarcharWritable argVarchar=new HiveVarcharWritable();
  argVarchar.set("world");
  DeferredObject[] args={new DeferredJavaObject(new Text("1st: %s, 2nd: %s")),new DeferredJavaObject(argChar),new DeferredJavaObject(argVarchar)};
  PrimitiveObjectInspector oi=(PrimitiveObjectInspector)udf.initialize(inputOIs);
  Assert.assertEquals(PrimitiveObjectInspectorFactory.writableStringObjectInspector,oi);
  Text res=(Text)udf.evaluate(args);
  Assert.assertEquals("1st: hello, 2nd: world",res.toString());
}
