{
  perms=perms.trim();
  FsPermission fp=null;
  if (perms.matches("^\\s*([r,w,x,-]{9})\\s*$")) {
    fp=FsPermission.valueOf("d" + perms);
  }
 else   if (perms.matches("^\\s*([0-7]{3})\\s*$")) {
    fp=new FsPermission(Short.decode("0" + perms));
  }
 else {
    ss.err.println("Invalid permission specification: " + perms);
    System.exit(1);
  }
  if (!HCatUtil.validateMorePermissive(fp.getUserAction(),fp.getGroupAction())) {
    ss.err.println("Invalid permission specification: " + perms + " : user permissions must be more permissive than group permission ");
    System.exit(1);
  }
  if (!HCatUtil.validateMorePermissive(fp.getGroupAction(),fp.getOtherAction())) {
    ss.err.println("Invalid permission specification: " + perms + " : group permissions must be more permissive than other permission ");
    System.exit(1);
  }
  if ((!HCatUtil.validateExecuteBitPresentIfReadOrWrite(fp.getUserAction())) || (!HCatUtil.validateExecuteBitPresentIfReadOrWrite(fp.getGroupAction())) || (!HCatUtil.validateExecuteBitPresentIfReadOrWrite(fp.getOtherAction()))) {
    ss.err.println("Invalid permission specification: " + perms + " : permissions must have execute permissions if read or write permissions are specified ");
    System.exit(1);
  }
  conf.set(HCatConstants.HCAT_PERMS,"d" + fp.toString());
}
