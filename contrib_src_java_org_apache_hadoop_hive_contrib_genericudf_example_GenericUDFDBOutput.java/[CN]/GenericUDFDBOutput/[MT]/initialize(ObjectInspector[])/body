{
  argumentOI=arguments;
  for (int i=0; i < 4; i++) {
    if (arguments[i].getCategory() == ObjectInspector.Category.PRIMITIVE) {
      PrimitiveObjectInspector poi=((PrimitiveObjectInspector)arguments[i]);
      if (!(poi.getPrimitiveCategory() == PrimitiveObjectInspector.PrimitiveCategory.STRING)) {
        throw new UDFArgumentTypeException(i,"The argument of function  should be \"" + Constants.STRING_TYPE_NAME + "\", but \""+ arguments[i].getTypeName()+ "\" is found");
      }
    }
  }
  for (int i=4; i < arguments.length; i++) {
    if (arguments[i].getCategory() != ObjectInspector.Category.PRIMITIVE) {
      throw new UDFArgumentTypeException(i,"The argument of function should be primative" + ", but \"" + arguments[i].getTypeName() + "\" is found");
    }
  }
  return PrimitiveObjectInspectorFactory.writableIntObjectInspector;
}
