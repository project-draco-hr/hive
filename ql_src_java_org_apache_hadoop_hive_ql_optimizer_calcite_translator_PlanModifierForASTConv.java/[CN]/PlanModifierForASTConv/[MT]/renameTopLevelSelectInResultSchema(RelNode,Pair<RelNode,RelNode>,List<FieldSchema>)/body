{
  RelNode parentOforiginalProjRel=topSelparentPair.getKey();
  HiveProject originalProjRel=(HiveProject)topSelparentPair.getValue();
  List<RexNode> rootChildExps=originalProjRel.getChildExps();
  if (resultSchema.size() != rootChildExps.size()) {
    LOG.error(generateInvalidSchemaMessage(originalProjRel,resultSchema,0));
    throw new CalciteSemanticException("Result Schema didn't match Optimized Op Tree Schema");
  }
  List<String> newSelAliases=new ArrayList<String>();
  String colAlias;
  for (int i=0; i < rootChildExps.size(); i++) {
    colAlias=resultSchema.get(i).getName();
    if (colAlias.startsWith("_")) {
      colAlias=colAlias.substring(1);
    }
    newSelAliases.add(colAlias);
  }
  HiveProject replacementProjectRel=HiveProject.create(originalProjRel.getInput(),originalProjRel.getChildExps(),newSelAliases);
  if (rootRel == originalProjRel) {
    return replacementProjectRel;
  }
 else {
    parentOforiginalProjRel.replaceInput(0,replacementProjectRel);
    return rootRel;
  }
}
