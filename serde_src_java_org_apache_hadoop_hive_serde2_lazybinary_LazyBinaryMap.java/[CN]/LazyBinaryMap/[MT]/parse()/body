{
  byte[] bytes=this.bytes.getData();
  LazyBinaryUtils.readVInt(bytes,start,vInt);
  mapSize=vInt.value;
  if (0 == mapSize) {
    parsed=true;
    return;
  }
  adjustArraySize(mapSize);
  int mapByteStart=start + vInt.length;
  int nullByteCur=mapByteStart;
  int nullByteEnd=mapByteStart + (mapSize * 2 + 7) / 8;
  int lastElementByteEnd=nullByteEnd;
  for (int i=0; i < mapSize; i++) {
    keyIsNull[i]=true;
    if ((bytes[nullByteCur] & (1 << ((i * 2) % 8))) != 0) {
      keyIsNull[i]=false;
      LazyBinaryUtils.checkObjectByteInfo(((MapObjectInspector)oi).getMapKeyObjectInspector(),bytes,lastElementByteEnd,recordInfo);
      keyStart[i]=lastElementByteEnd + recordInfo.elementOffset;
      keyLength[i]=recordInfo.elementSize;
      lastElementByteEnd=keyStart[i] + keyLength[i];
    }
 else     if (!nullMapKey) {
      nullMapKey=true;
      LOG.warn("Null map key encountered! Ignoring similar problems.");
    }
    valueIsNull[i]=true;
    if ((bytes[nullByteCur] & (1 << ((i * 2 + 1) % 8))) != 0) {
      valueIsNull[i]=false;
      LazyBinaryUtils.checkObjectByteInfo(((MapObjectInspector)oi).getMapValueObjectInspector(),bytes,lastElementByteEnd,recordInfo);
      valueStart[i]=lastElementByteEnd + recordInfo.elementOffset;
      valueLength[i]=recordInfo.elementSize;
      lastElementByteEnd=valueStart[i] + valueLength[i];
    }
    if (3 == (i % 4)) {
      nullByteCur++;
    }
  }
  Arrays.fill(keyInited,0,mapSize,false);
  Arrays.fill(valueInited,0,mapSize,false);
  parsed=true;
}
