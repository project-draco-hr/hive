{
  if (l >= -112 && l <= 127) {
    bytes[offset]=(byte)l;
    return 1;
  }
  int len=-112;
  if (l < 0) {
    l^=-1L;
    len=-120;
  }
  long tmp=l;
  while (tmp != 0) {
    tmp=tmp >> 8;
    len--;
  }
  bytes[offset]=(byte)len;
  len=(len < -120) ? -(len + 120) : -(len + 112);
  for (int idx=len; idx != 0; idx--) {
    int shiftbits=(idx - 1) * 8;
    long mask=0xFFL << shiftbits;
    bytes[offset + 1 - (idx - len)]=(byte)((l & mask) >> shiftbits);
  }
  return 1 + len;
}
