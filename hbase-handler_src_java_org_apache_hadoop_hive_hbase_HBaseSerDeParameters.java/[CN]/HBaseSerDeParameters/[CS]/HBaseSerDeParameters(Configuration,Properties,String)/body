{
  this.job=job;
  columnMappingString=tbl.getProperty(HBaseSerDe.HBASE_COLUMNS_MAPPING);
  doColumnRegexMatching=Boolean.valueOf(tbl.getProperty(HBaseSerDe.HBASE_COLUMNS_REGEX_MATCHING,"true"));
  doColumnPrefixCut=Boolean.valueOf(tbl.getProperty(HBaseSerDe.HBASE_COLUMNS_PREFIX_HIDE,"false"));
  columnMappings=HBaseSerDe.parseColumnsMapping(columnMappingString,doColumnRegexMatching,doColumnPrefixCut);
  String columnTypeProperty=tbl.getProperty(serdeConstants.LIST_COLUMN_TYPES);
  String autogenerate=tbl.getProperty(HBaseSerDe.HBASE_AUTOGENERATE_STRUCT);
  if (columnTypeProperty == null || columnTypeProperty.isEmpty()) {
    String columnNameProperty=tbl.getProperty(serdeConstants.LIST_COLUMNS);
    if (columnNameProperty == null || columnNameProperty.isEmpty()) {
      if (autogenerate == null || autogenerate.isEmpty()) {
        throw new IllegalArgumentException("Either the columns must be specified or the " + HBaseSerDe.HBASE_AUTOGENERATE_STRUCT + " property must be set to true.");
      }
      tbl.setProperty(serdeConstants.LIST_COLUMNS,columnMappings.toNamesString(tbl,autogenerate));
    }
    tbl.setProperty(serdeConstants.LIST_COLUMN_TYPES,columnMappings.toTypesString(tbl,job,autogenerate));
  }
  this.serdeParams=new LazySerDeParameters(job,tbl,serdeName);
  this.putTimestamp=Long.valueOf(tbl.getProperty(HBaseSerDe.HBASE_PUT_TIMESTAMP,"-1"));
  columnMappings.setHiveColumnDescription(serdeName,serdeParams.getColumnNames(),serdeParams.getColumnTypes());
  String hbaseTableStorageType=tbl.getProperty(HBaseSerDe.HBASE_TABLE_DEFAULT_STORAGE_TYPE);
  columnMappings.parseColumnStorageTypes(hbaseTableStorageType);
  this.keyFactory=initKeyFactory(job,tbl);
  this.valueFactories=initValueFactories(job,tbl);
}
