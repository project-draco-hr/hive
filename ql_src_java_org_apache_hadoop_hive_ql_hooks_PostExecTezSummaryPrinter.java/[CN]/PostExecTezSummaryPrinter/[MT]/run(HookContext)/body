{
  assert(hookContext.getHookType() == HookContext.HookType.POST_EXEC_HOOK);
  HiveConf conf=hookContext.getConf();
  if (!"tez".equals(HiveConf.getVar(conf,HiveConf.ConfVars.HIVE_EXECUTION_ENGINE))) {
    return;
  }
  LOG.info("Executing post execution hook to print tez summary..");
  SessionState ss=SessionState.get();
  SessionState.LogHelper console=ss.getConsole();
  QueryPlan plan=hookContext.getQueryPlan();
  if (plan == null) {
    return;
  }
  List<TezTask> rootTasks=Utilities.getTezTasks(plan.getRootTasks());
  for (  TezTask tezTask : rootTasks) {
    LOG.info("Printing summary for tez task: " + tezTask.getName());
    TezCounters counters=tezTask.getTezCounters();
    if (counters != null) {
      String hiveCountersGroup=HiveConf.getVar(conf,HiveConf.ConfVars.HIVECOUNTERGROUP);
      for (      CounterGroup group : counters) {
        if (hiveCountersGroup.equals(group.getDisplayName())) {
          console.printError(tezTask.getId() + " HIVE COUNTERS:");
          for (          TezCounter counter : group) {
            console.printError("   " + counter.getDisplayName() + ": "+ counter.getValue());
          }
        }
 else         if (group.getName().equals(FileSystemCounter.class.getName())) {
          console.printError(tezTask.getId() + " FILE SYSTEM COUNTERS:");
          for (          TezCounter counter : group) {
            if (counter.getName().contains("HDFS")) {
              console.printError("   " + counter.getDisplayName() + ": "+ counter.getValue());
            }
          }
        }
 else         if (group.getName().equals(LlapIOCounters.class.getName())) {
          console.printError(tezTask.getId() + " LLAP IO COUNTERS:");
          List<String> testSafeCounters=LlapIOCounters.testSafeCounterNames();
          for (          TezCounter counter : group) {
            if (testSafeCounters.contains(counter.getDisplayName())) {
              console.printError("   " + counter.getDisplayName() + ": "+ counter.getValue());
            }
          }
        }
      }
    }
  }
}
