{
  this.lowLevelCache=lowLevelCache;
  this.metadataCache=metadataCache;
  this.bufferManager=bufferManager;
  this.conf=conf;
  this.split=split;
  this.columnIds=columnIds;
  if (this.columnIds != null) {
    Collections.sort(this.columnIds);
  }
  this.sarg=sarg;
  this.columnNames=columnNames;
  this.consumer=consumer;
  this.counters=counters;
  try {
    this.ugi=UserGroupInformation.getCurrentUser();
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  LlapDaemonIOMetrics ioMetrics=consumer.getIOMetrics();
  ioMetrics.setColumnStreamDataPoolSize(CSD_POOL.size());
  ioMetrics.setEncodedColumnBatchPoolSize(ECB_POOL.size());
}
