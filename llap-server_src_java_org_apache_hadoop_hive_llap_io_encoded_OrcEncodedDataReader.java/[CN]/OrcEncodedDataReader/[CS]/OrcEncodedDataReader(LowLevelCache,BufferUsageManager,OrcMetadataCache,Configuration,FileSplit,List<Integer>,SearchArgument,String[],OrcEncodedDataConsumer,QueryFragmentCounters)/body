{
  this.lowLevelCache=lowLevelCache;
  this.metadataCache=metadataCache;
  this.bufferManager=bufferManager;
  this.conf=conf;
  this.split=split;
  this.columnIds=columnIds;
  if (this.columnIds != null) {
    Collections.sort(this.columnIds);
  }
  this.sarg=sarg;
  this.columnNames=columnNames;
  this.consumer=consumer;
  this.counters=counters;
  try {
    this.ugi=UserGroupInformation.getCurrentUser();
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  orcReader=null;
  fs=split.getPath().getFileSystem(conf);
  fileKey=determineFileId(fs,split,HiveConf.getBoolVar(conf,ConfVars.LLAP_CACHE_ALLOW_SYNTHETIC_FILEID));
  fileMetadata=getOrReadFileMetadata();
  globalIncludes=OrcInputFormat.genIncludedColumns(fileMetadata.getTypes(),columnIds,true);
  consumer.setFileMetadata(fileMetadata);
  consumer.setIncludedColumns(globalIncludes);
}
