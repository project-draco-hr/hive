{
  List<StripeInformation> stripes=fileMetadata.getStripes();
  long offset=split.getStart(), maxOffset=offset + split.getLength();
  stripeIxFrom=-1;
  int stripeIxTo=-1;
  if (LlapIoImpl.ORC_LOGGER.isDebugEnabled()) {
    String tmp="FileSplit {" + split.getStart() + ", "+ split.getLength()+ "}; stripes ";
    for (    StripeInformation stripe : stripes) {
      tmp+="{" + stripe.getOffset() + ", "+ stripe.getLength()+ "}, ";
    }
    LlapIoImpl.ORC_LOGGER.debug(tmp);
  }
  int stripeIx=0;
  for (  StripeInformation stripe : stripes) {
    long stripeStart=stripe.getOffset();
    if (offset > stripeStart) {
      ++stripeIx;
      continue;
    }
    if (stripeIxFrom == -1) {
      LlapIoImpl.ORC_LOGGER.trace("Including stripes from {} ({} >= {})",stripeIx,stripeStart,offset);
      stripeIxFrom=stripeIx;
    }
    if (stripeStart >= maxOffset) {
      stripeIxTo=stripeIx;
      LlapIoImpl.ORC_LOGGER.trace("Including stripes until {} ({} >= {}); {} stripes",stripeIxTo,stripeStart,maxOffset,(stripeIxTo - stripeIxFrom));
      break;
    }
    ++stripeIx;
  }
  if (stripeIxFrom == -1) {
    LlapIoImpl.LOG.info("Not including any stripes - empty split");
  }
  if (stripeIxTo == -1 && stripeIxFrom != -1) {
    stripeIxTo=stripeIx;
    LlapIoImpl.ORC_LOGGER.trace("Including stripes until {} (end of file); {} stripes",stripeIx,(stripeIxTo - stripeIxFrom));
  }
  readState=new boolean[stripeIxTo - stripeIxFrom][][];
}
