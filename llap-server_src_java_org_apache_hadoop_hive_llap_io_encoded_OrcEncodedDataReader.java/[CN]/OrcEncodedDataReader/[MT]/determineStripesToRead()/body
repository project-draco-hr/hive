{
  List<StripeInformation> stripes=fileMetadata.getStripes();
  long offset=split.getStart(), maxOffset=offset + split.getLength();
  stripeIxFrom=-1;
  int stripeIxTo=-1;
  if (LlapIoImpl.LOGL.isDebugEnabled()) {
    String tmp="FileSplit {" + split.getStart() + ", "+ split.getLength()+ "}; stripes ";
    for (    StripeInformation stripe : stripes) {
      tmp+="{" + stripe.getOffset() + ", "+ stripe.getLength()+ "}, ";
    }
    LlapIoImpl.LOG.debug(tmp);
  }
  int stripeIx=0;
  for (  StripeInformation stripe : stripes) {
    long stripeStart=stripe.getOffset();
    if (offset > stripeStart)     continue;
    if (stripeIxFrom == -1) {
      if (DebugUtils.isTraceOrcEnabled()) {
        LlapIoImpl.LOG.info("Including stripes from " + stripeIx + " ("+ stripeStart+ " >= "+ offset+ ")");
      }
      stripeIxFrom=stripeIx;
    }
    if (stripeStart >= maxOffset) {
      if (DebugUtils.isTraceOrcEnabled()) {
        LlapIoImpl.LOG.info("Including stripes until " + stripeIxTo + " ("+ stripeStart+ " >= "+ maxOffset+ "); "+ (stripeIxTo - stripeIxFrom)+ " stripes");
      }
      stripeIxTo=stripeIx;
      break;
    }
    ++stripeIx;
  }
  if (stripeIxTo == -1) {
    stripeIxTo=stripeIx;
    if (DebugUtils.isTraceOrcEnabled()) {
      LlapIoImpl.LOG.info("Including stripes until " + stripeIx + " (end of file); "+ (stripeIxTo - stripeIxFrom)+ " stripes");
    }
  }
  readState=new boolean[stripeIxTo - stripeIxFrom][][];
}
