{
  List<String> queries=new ArrayList<String>();
  queries.add("select count(*) from " + Table.ACIDTBL + " t1 join "+ Table.ACIDTBL+ " t2 on t1.a=t2.a");
  queries.add("select count(*) from " + Table.ACIDTBL + " t1 join "+ Table.NONACIDORCTBL+ " t2 on t1.a=t2.a");
  List<String> explain;
  int[][] expected={{5}};
  List<String> rs=null;
  for (  String query : queries) {
    if (engine.equals("tez")) {
      explain=runStatementOnDriver("explain " + query,confForTez);
      if (joinType.equals("MergeJoin")) {
        TestTxnCommands2.assertExplainHasString("Merge Join Operator",explain,"Didn't find " + joinType);
      }
 else {
        TestTxnCommands2.assertExplainHasString("Map Join Operator",explain,"Didn't find " + joinType);
      }
      rs=runStatementOnDriver(query,confForTez);
    }
 else {
      explain=runStatementOnDriver("explain " + query,confForMR);
      if (joinType.equals("MergeJoin")) {
        TestTxnCommands2.assertExplainHasString("  Join Operator",explain,"Didn't find " + joinType);
      }
 else {
        TestTxnCommands2.assertExplainHasString("Map Join Operator",explain,"Didn't find " + joinType);
      }
      rs=runStatementOnDriver(query,confForMR);
    }
    Assert.assertEquals("Join result incorrect",TestTxnCommands2.stringifyValues(expected),rs);
  }
}
