{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  ShowCompactResponseElement typedOther=(ShowCompactResponseElement)other;
  lastComparison=Boolean.valueOf(isSetDbname()).compareTo(typedOther.isSetDbname());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDbname()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.dbname,typedOther.dbname);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTablename()).compareTo(typedOther.isSetTablename());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTablename()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.tablename,typedOther.tablename);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetPartitionname()).compareTo(typedOther.isSetPartitionname());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetPartitionname()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.partitionname,typedOther.partitionname);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetType()).compareTo(typedOther.isSetType());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetType()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.type,typedOther.type);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetState()).compareTo(typedOther.isSetState());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetState()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.state,typedOther.state);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetWorkerid()).compareTo(typedOther.isSetWorkerid());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetWorkerid()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.workerid,typedOther.workerid);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetStart()).compareTo(typedOther.isSetStart());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetStart()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.start,typedOther.start);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRunAs()).compareTo(typedOther.isSetRunAs());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRunAs()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.runAs,typedOther.runAs);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
