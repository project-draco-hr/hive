{
  LOG.debug("Starting majorWithOpenInMiddle");
  Table t=newTable("default","mtwb",false);
  addBaseFile(t,null,20L,20);
  addDeltaFile(t,null,21L,22L,2);
  addDeltaFile(t,null,23L,25L,3);
  addLengthFile(t,null,23L,25L,3);
  addDeltaFile(t,null,26L,27L,2);
  burnThroughTransactions(27,new HashSet<Long>(Arrays.asList(23L)),null);
  CompactionRequest rqst=new CompactionRequest("default","mtwb",CompactionType.MAJOR);
  txnHandler.compact(rqst);
  startWorker();
  ShowCompactResponse rsp=txnHandler.showCompact(new ShowCompactRequest());
  List<ShowCompactResponseElement> compacts=rsp.getCompacts();
  Assert.assertEquals(1,compacts.size());
  Assert.assertEquals("ready for cleaning",compacts.get(0).getState());
  FileSystem fs=FileSystem.get(conf);
  FileStatus[] stat=fs.listStatus(new Path(t.getSd().getLocation()));
  Assert.assertEquals(5,stat.length);
  Arrays.sort(stat);
  Assert.assertEquals("base_0000022",stat[0].getPath().getName());
  Assert.assertEquals("base_20",stat[1].getPath().getName());
  Assert.assertEquals("delta_21_22",stat[2].getPath().getName());
  Assert.assertEquals("delta_23_25",stat[3].getPath().getName());
  Assert.assertEquals("delta_26_27",stat[4].getPath().getName());
}
