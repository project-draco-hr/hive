from __future__ import print_function
import argparse
import time
from threading import Thread
import os.path
import collections
import re
import os
import Report
import config
local = None
qfile_set = None
other_set = None
remote_set = None
all_set = None
master_base_path = None
host_base_path = None
runtest_dir = os.getcwd()
ant_path = None
arc_path = None
phutil_path = None
code_path = None
report_path = None
host_code_path = None
ivy_path = None
parser = argparse.ArgumentParser(description='Hive test farm controller.')
parser.add_argument('--config', dest='config', help='Path to configuration file')
parser.add_argument('--prepare', action='store_true', dest='prepare', help='Builds Hive and propagates it to all test machines')
parser.add_argument('--run-tests', action='store_true', dest='run_tests', help='Runs tests on all test machines')
parser.add_argument('--test', action='store_true', dest='test', help='Same as running `prepare` and then `run-tests`')
parser.add_argument('--report-name', dest='report_name', help='Store report and logs directory called `REPORT_NAME`')
parser.add_argument('--stop', action='store_true', dest='stop', help='Kill misbehaving tests on all machines')
parser.add_argument('--remove', action='store_true', dest='remove', help='Remove Hive trunk copies from test machines')
parser.add_argument('--revision', dest='revision', help='Differential revision to test')
parser.add_argument('--patch', dest='patch', nargs='*', help='Patches from local file system to test')
parser.add_argument('--one-file-report', dest='one_file_report', action='store_true', help='Generate one (huge) report file instead of multiple small ones')
parser.add_argument('--overwrite', dest='overwrite', action='store_true', help='Overwrite result files in master repo')
parser.add_argument('--copylocal', dest='copylocal', action='store_true', help='Copy local repo instead of using git clone and git hub')
parser.add_argument('--singlehost', dest='singlehost', action='store_true', help='Only run the test on single host, It is the users responsibility to make sure that the conf. file does not contain multiple hosts. The script is not doing any validation. When --singlehost is set the script should not be run using sudo.')
parser.add_argument('--very-clean', action='store_true', dest='very_clean', help='Build hive with `very-clean` option')
parser.add_argument('--svn-info', dest='svn_info', action='store_true', help='Save result of `svn info` into ${report_path}/svn-info')
parser.add_argument('--save-patch', dest='save_patch', action='store_true', help='Save applied patch into ${report_path}/patch')
parser.add_argument('--http-proxy', dest='http_proxy', help='Proxy host')
parser.add_argument('--http-proxy-port', dest='http_proxy_port', help='Proxy port')
args = parser.parse_args()
read_conf(args.config)
if args.report_name:
    report_path = '/'.join((report_path.split('/')[:(-1)] + [args.report_name]))
if args.prepare:
    cmd_prepare(args.patch, args.revision)
elif args.run_tests:
    cmd_run_tests(args.one_file_report)
elif args.test:
    cmd_test(args.patch, args.revision, args.one_file_report)
elif args.stop:
    cmd_stop()
elif args.remove:
    cmd_remove()
else:
    parser.print_help()
