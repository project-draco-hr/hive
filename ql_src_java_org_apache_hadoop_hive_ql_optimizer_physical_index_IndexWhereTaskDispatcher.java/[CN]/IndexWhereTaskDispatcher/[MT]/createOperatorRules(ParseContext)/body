{
  Map<Rule,NodeProcessor> operatorRules=new LinkedHashMap<Rule,NodeProcessor>();
  List<String> supportedIndexes=new ArrayList<String>();
  supportedIndexes.add(CompactIndexHandler.class.getName());
  supportedIndexes.add(BitmapIndexHandler.class.getName());
  Map<TableScanOperator,List<Index>> indexes=new HashMap<TableScanOperator,List<Index>>();
  for (  Operator<? extends OperatorDesc> op : pctx.getTopOps().values()) {
    if (op instanceof TableScanOperator) {
      List<Index> tblIndexes=IndexUtils.getIndexes(((TableScanOperator)op).getConf().getTableMetadata(),supportedIndexes);
      if (tblIndexes.size() > 0) {
        indexes.put((TableScanOperator)op,tblIndexes);
      }
    }
  }
  if (indexes.size() == 0) {
    return null;
  }
  operatorRules.put(new RuleRegExp("RULEWhere",TableScanOperator.getOperatorName() + "%"),new IndexWhereProcessor(indexes));
  return operatorRules;
}
