{
  super.setUp();
  Class.forName(driverName);
  if (standAloneServer) {
    con=DriverManager.getConnection("jdbc:hive2://localhost:10000/default","","");
  }
 else {
    con=DriverManager.getConnection("jdbc:hive2://","","");
  }
  assertNotNull("Connection is null",con);
  assertFalse("Connection should not be closed",con.isClosed());
  Statement stmt=con.createStatement();
  assertNotNull("Statement is null",stmt);
  stmt.execute("set hive.support.concurrency = false");
  try {
    stmt.execute("drop table " + tableName);
  }
 catch (  Exception ex) {
    fail(ex.toString());
  }
  ResultSet res;
  stmt.execute("create table " + tableName + " (under_col int comment 'the under column', value string) comment '"+ tableComment+ "'");
  stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table "+ tableName);
  try {
    stmt.execute("drop table " + partitionedTableName);
  }
 catch (  Exception ex) {
    fail(ex.toString());
  }
  stmt.execute("create table " + partitionedTableName + " (under_col int, value string) comment '"+ partitionedTableComment+ "' partitioned by ("+ partitionedColumnName+ " STRING)");
  stmt.execute("load data local inpath '" + dataFilePath.toString() + "' into table "+ partitionedTableName+ " PARTITION ("+ partitionedColumnName+ "="+ partitionedColumnValue+ ")");
  try {
    stmt.execute("drop table " + dataTypeTableName);
  }
 catch (  Exception ex) {
    fail(ex.toString());
  }
  stmt.execute("create table " + dataTypeTableName + " (c1 int, c2 boolean, c3 double, c4 string,"+ " c5 array<int>, c6 map<int,string>, c7 map<string,string>,"+ " c8 struct<r:string,s:int,t:double>,"+ " c9 tinyint, c10 smallint, c11 float, c12 bigint,"+ " c13 array<array<string>>,"+ " c14 map<int, map<int,int>>,"+ " c15 struct<r:int,s:struct<a:int,b:string>>,"+ " c16 array<struct<m:map<string,string>,n:int>>,"+ " c17 timestamp, "+ " c18 decimal, "+ " c19 binary, "+ " c20 date,"+ " c21 varchar(20)"+ ") comment'"+ dataTypeTableComment+ "' partitioned by (dt STRING)");
  stmt.execute("load data local inpath '" + dataTypeDataFilePath.toString() + "' into table "+ dataTypeTableName+ " PARTITION (dt='20090619')");
  try {
    stmt.execute("drop view " + viewName);
  }
 catch (  Exception ex) {
    fail(ex.toString());
  }
  stmt.execute("create view " + viewName + " comment '"+ viewComment+ "' as select * from "+ tableName);
}
