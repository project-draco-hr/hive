{
  String dbName=SessionState.get().getCurrentDatabase();
  ColumnStatsDesc desc=work.getColStats();
  String tableName=desc.getTableName();
  String partName=work.getPartName();
  List<String> colName=desc.getColName();
  List<String> colType=desc.getColType();
  ColumnStatisticsObj statsObj=new ColumnStatisticsObj();
  statsObj.setColName(colName.get(0));
  statsObj.setColType(colType.get(0));
  ColumnStatisticsData statsData=new ColumnStatisticsData();
  String columnType=colType.get(0);
  if (columnType.equalsIgnoreCase("long")) {
    LongColumnStatsData longStats=new LongColumnStatsData();
    longStats.setNumNullsIsSet(false);
    longStats.setNumDVsIsSet(false);
    longStats.setLowValueIsSet(false);
    longStats.setHighValueIsSet(false);
    Map<String,String> mapProp=work.getMapProp();
    for (    Entry<String,String> entry : mapProp.entrySet()) {
      String fName=entry.getKey();
      String value=entry.getValue();
      if (fName.equals("numNulls")) {
        longStats.setNumNulls(Long.parseLong(value));
      }
 else       if (fName.equals("numDVs")) {
        longStats.setNumDVs(Long.parseLong(value));
      }
 else       if (fName.equals("lowValue")) {
        longStats.setLowValue(Long.parseLong(value));
      }
 else       if (fName.equals("highValue")) {
        longStats.setHighValue(Long.parseLong(value));
      }
 else {
        throw new SemanticException("Unknown stat");
      }
    }
    statsData.setLongStats(longStats);
    statsObj.setStatsData(statsData);
  }
 else   if (columnType.equalsIgnoreCase("double")) {
    DoubleColumnStatsData doubleStats=new DoubleColumnStatsData();
    doubleStats.setNumNullsIsSet(false);
    doubleStats.setNumDVsIsSet(false);
    doubleStats.setLowValueIsSet(false);
    doubleStats.setHighValueIsSet(false);
    Map<String,String> mapProp=work.getMapProp();
    for (    Entry<String,String> entry : mapProp.entrySet()) {
      String fName=entry.getKey();
      String value=entry.getValue();
      if (fName.equals("numNulls")) {
        doubleStats.setNumNulls(Long.parseLong(value));
      }
 else       if (fName.equals("numDVs")) {
        doubleStats.setNumDVs(Long.parseLong(value));
      }
 else       if (fName.equals("lowValue")) {
        doubleStats.setLowValue(Double.parseDouble(value));
      }
 else       if (fName.equals("highValue")) {
        doubleStats.setHighValue(Double.parseDouble(value));
      }
 else {
        throw new SemanticException("Unknown stat");
      }
    }
    statsData.setDoubleStats(doubleStats);
    statsObj.setStatsData(statsData);
  }
 else   if (columnType.equalsIgnoreCase("string")) {
    StringColumnStatsData stringStats=new StringColumnStatsData();
    stringStats.setMaxColLenIsSet(false);
    stringStats.setAvgColLenIsSet(false);
    stringStats.setNumNullsIsSet(false);
    stringStats.setNumDVsIsSet(false);
    Map<String,String> mapProp=work.getMapProp();
    for (    Entry<String,String> entry : mapProp.entrySet()) {
      String fName=entry.getKey();
      String value=entry.getValue();
      if (fName.equals("numNulls")) {
        stringStats.setNumNulls(Long.parseLong(value));
      }
 else       if (fName.equals("numDVs")) {
        stringStats.setNumDVs(Long.parseLong(value));
      }
 else       if (fName.equals("avgColLen")) {
        stringStats.setAvgColLen(Double.parseDouble(value));
      }
 else       if (fName.equals("maxColLen")) {
        stringStats.setMaxColLen(Long.parseLong(value));
      }
 else {
        throw new SemanticException("Unknown stat");
      }
    }
    statsData.setStringStats(stringStats);
    statsObj.setStatsData(statsData);
  }
 else   if (columnType.equalsIgnoreCase("boolean")) {
    BooleanColumnStatsData booleanStats=new BooleanColumnStatsData();
    booleanStats.setNumNullsIsSet(false);
    booleanStats.setNumTruesIsSet(false);
    booleanStats.setNumFalsesIsSet(false);
    Map<String,String> mapProp=work.getMapProp();
    for (    Entry<String,String> entry : mapProp.entrySet()) {
      String fName=entry.getKey();
      String value=entry.getValue();
      if (fName.equals("numNulls")) {
        booleanStats.setNumNulls(Long.parseLong(value));
      }
 else       if (fName.equals("numTrues")) {
        booleanStats.setNumTrues(Long.parseLong(value));
      }
 else       if (fName.equals("numFalses")) {
        booleanStats.setNumFalses(Long.parseLong(value));
      }
 else {
        throw new SemanticException("Unknown stat");
      }
    }
    statsData.setBooleanStats(booleanStats);
    statsObj.setStatsData(statsData);
  }
 else   if (columnType.equalsIgnoreCase("binary")) {
    BinaryColumnStatsData binaryStats=new BinaryColumnStatsData();
    binaryStats.setNumNullsIsSet(false);
    binaryStats.setAvgColLenIsSet(false);
    binaryStats.setMaxColLenIsSet(false);
    Map<String,String> mapProp=work.getMapProp();
    for (    Entry<String,String> entry : mapProp.entrySet()) {
      String fName=entry.getKey();
      String value=entry.getValue();
      if (fName.equals("numNulls")) {
        binaryStats.setNumNulls(Long.parseLong(value));
      }
 else       if (fName.equals("avgColLen")) {
        binaryStats.setAvgColLen(Double.parseDouble(value));
      }
 else       if (fName.equals("maxColLen")) {
        binaryStats.setMaxColLen(Long.parseLong(value));
      }
 else {
        throw new SemanticException("Unknown stat");
      }
    }
    statsData.setBinaryStats(binaryStats);
    statsObj.setStatsData(statsData);
  }
 else   if (columnType.equalsIgnoreCase("decimal")) {
    DecimalColumnStatsData decimalStats=new DecimalColumnStatsData();
    decimalStats.setNumNullsIsSet(false);
    decimalStats.setNumDVsIsSet(false);
    decimalStats.setLowValueIsSet(false);
    decimalStats.setHighValueIsSet(false);
    Map<String,String> mapProp=work.getMapProp();
    for (    Entry<String,String> entry : mapProp.entrySet()) {
      String fName=entry.getKey();
      String value=entry.getValue();
      if (fName.equals("numNulls")) {
        decimalStats.setNumNulls(Long.parseLong(value));
      }
 else       if (fName.equals("numDVs")) {
        decimalStats.setNumDVs(Long.parseLong(value));
      }
 else       if (fName.equals("lowValue")) {
        BigDecimal d=new BigDecimal(value);
        decimalStats.setLowValue(new Decimal(ByteBuffer.wrap(d.unscaledValue().toByteArray()),(short)d.scale()));
      }
 else       if (fName.equals("highValue")) {
        BigDecimal d=new BigDecimal(value);
        decimalStats.setHighValue(new Decimal(ByteBuffer.wrap(d.unscaledValue().toByteArray()),(short)d.scale()));
      }
 else {
        throw new SemanticException("Unknown stat");
      }
    }
    statsData.setDecimalStats(decimalStats);
    statsObj.setStatsData(statsData);
  }
 else {
    throw new SemanticException("Unsupported type");
  }
  String[] names=Utilities.getDbTableName(dbName,tableName);
  ColumnStatisticsDesc statsDesc=getColumnStatsDesc(names[0],names[1],partName,partName == null);
  ColumnStatistics colStat=new ColumnStatistics();
  colStat.setStatsDesc(statsDesc);
  colStat.addToStatsObj(statsObj);
  return colStat;
}
