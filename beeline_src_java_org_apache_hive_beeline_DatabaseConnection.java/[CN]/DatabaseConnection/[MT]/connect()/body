{
  try {
    if (driver != null && driver.length() != 0) {
      Class.forName(driver);
    }
  }
 catch (  ClassNotFoundException cnfe) {
    return beeLine.error(cnfe);
  }
  boolean isDriverRegistered=false;
  try {
    isDriverRegistered=DriverManager.getDriver(getUrl()) != null;
  }
 catch (  Exception e) {
  }
  try {
    close();
  }
 catch (  Exception e) {
    return beeLine.error(e);
  }
  Map<String,String> hiveVars=beeLine.getOpts().getHiveVariables();
  if (hiveVars != null) {
    for (    Map.Entry<String,String> var : hiveVars.entrySet()) {
      info.put(HIVE_VAR_PREFIX + var.getKey(),var.getValue());
    }
  }
  Map<String,String> hiveConfVars=beeLine.getOpts().getHiveConfVariables();
  if (hiveConfVars != null) {
    for (    Map.Entry<String,String> var : hiveConfVars.entrySet()) {
      info.put(HIVE_CONF_PREFIX + var.getKey(),var.getValue());
    }
  }
  if (isDriverRegistered) {
    setConnection(DriverManager.getConnection(getUrl(),info));
  }
 else {
    beeLine.debug("Use the driver from local added jar file.");
    setConnection(getConnectionFromLocalDriver(getUrl(),info));
  }
  setDatabaseMetaData(getConnection().getMetaData());
  try {
    beeLine.info(beeLine.loc("connected",new Object[]{getDatabaseMetaData().getDatabaseProductName(),getDatabaseMetaData().getDatabaseProductVersion()}));
  }
 catch (  Exception e) {
    beeLine.handleException(e);
  }
  try {
    beeLine.info(beeLine.loc("driver",new Object[]{getDatabaseMetaData().getDriverName(),getDatabaseMetaData().getDriverVersion()}));
  }
 catch (  Exception e) {
    beeLine.handleException(e);
  }
  try {
    getConnection().setAutoCommit(beeLine.getOpts().getAutoCommit());
  }
 catch (  Exception e) {
    beeLine.handleException(e);
  }
  try {
    beeLine.getCommands().isolation("isolation: " + beeLine.getOpts().getIsolation());
  }
 catch (  Exception e) {
    beeLine.handleException(e);
  }
  return true;
}
