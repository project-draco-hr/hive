{
  super.write(out);
  int flags=(hasBase ? BASE_FLAG : 0) | (isOriginal ? ORIGINAL_FLAG : 0) | (hasFooter ? FOOTER_FLAG : 0)| (fileId != null ? HAS_FILEID_FLAG : 0);
  out.writeByte(flags);
  out.writeInt(deltas.size());
  for (  AcidInputFormat.DeltaMetaData delta : deltas) {
    delta.write(out);
  }
  if (hasFooter) {
    Text.writeString(out,fileMetaInfo.compressionType);
    WritableUtils.writeVInt(out,fileMetaInfo.bufferSize);
    WritableUtils.writeVInt(out,fileMetaInfo.metadataSize);
    ByteBuffer footerBuff=fileMetaInfo.footerBuffer;
    footerBuff.reset();
    WritableUtils.writeVInt(out,footerBuff.limit() - footerBuff.position());
    out.write(footerBuff.array(),footerBuff.position(),footerBuff.limit() - footerBuff.position());
    WritableUtils.writeVInt(out,fileMetaInfo.writerVersion.getId());
  }
  if (fileId != null) {
    out.writeLong(fileId.longValue());
  }
}
