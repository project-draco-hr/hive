{
  List<? extends StructField> fieldRefs=((StructObjectInspector)oi).getAllStructFieldRefs();
  int num=fieldRefs.size();
  fields=new LazyObject[num];
  cachedByteArrayRef=new ByteArrayRef[num];
  rawBytesField=new BytesRefWritable[num];
  fieldSkipped=new boolean[num];
  inited=new boolean[num];
  if (notSkippedColumnIDs == null || notSkippedColumnIDs.size() == 0) {
    for (int i=0; i < num; i++)     notSkippedColumnIDs.add(i);
  }
  for (int i=0; i < num; i++) {
    fields[i]=LazyFactory.createLazyObject(fieldRefs.get(i).getFieldObjectInspector());
    cachedByteArrayRef[i]=new ByteArrayRef();
    if (!notSkippedColumnIDs.contains(i)) {
      fieldSkipped[i]=true;
      inited[i]=true;
    }
 else     inited[i]=false;
  }
  int min=notSkippedColumnIDs.size() > num ? num : notSkippedColumnIDs.size();
  prjColIDs=new int[min];
  for (int i=0, index=0; i < notSkippedColumnIDs.size(); ++i) {
    int readCol=notSkippedColumnIDs.get(i).intValue();
    if (readCol < num) {
      prjColIDs[index]=readCol;
      index++;
    }
  }
}
