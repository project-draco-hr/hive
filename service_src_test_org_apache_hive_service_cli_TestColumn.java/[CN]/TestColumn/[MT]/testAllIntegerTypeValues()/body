{
  Map<Type,List<Object>> integerTypesAndValues=new LinkedHashMap<Type,List<Object>>();
  integerTypesAndValues.put(Type.TINYINT_TYPE,Arrays.<Object>asList(Byte.MIN_VALUE,Byte.MAX_VALUE));
  integerTypesAndValues.put(Type.SMALLINT_TYPE,Arrays.<Object>asList(Short.MIN_VALUE,Short.MIN_VALUE));
  integerTypesAndValues.put(Type.INT_TYPE,Arrays.<Object>asList(Integer.MIN_VALUE,Integer.MAX_VALUE));
  integerTypesAndValues.put(Type.BIGINT_TYPE,Arrays.<Object>asList(Long.MIN_VALUE,Long.MAX_VALUE));
  for (  Map.Entry entry : integerTypesAndValues.entrySet()) {
    Type type=(Type)entry.getKey();
    List<Object> values=(List)entry.getValue();
    Column c=new Column(type);
    for (    Object v : values) {
      c.addValue(type,v);
    }
    assertEquals(type,c.getType());
    assertEquals(values.size(),c.size());
    for (int i=0; i < c.size(); i++) {
      assertEquals(values.get(i),c.get(i));
    }
  }
}
