{
  ParseContext tempParseContext=getParseContext(pCtx,rootTasks);
  GenMRProcContext procCtx=new GenMRProcContext(conf,new LinkedHashMap<Operator<? extends OperatorDesc>,Task<? extends Serializable>>(),tempParseContext,mvTask,rootTasks,new LinkedHashMap<Operator<? extends OperatorDesc>,GenMapRedCtx>(),inputs,outputs);
  Map<Rule,NodeProcessor> opRules=new LinkedHashMap<Rule,NodeProcessor>();
  opRules.put(new RuleRegExp(new String("R1"),TableScanOperator.getOperatorName() + "%"),new GenMRTableScan1());
  opRules.put(new RuleRegExp(new String("R2"),TableScanOperator.getOperatorName() + "%.*" + ReduceSinkOperator.getOperatorName()+ "%"),new GenMRRedSink1());
  opRules.put(new RuleRegExp(new String("R3"),ReduceSinkOperator.getOperatorName() + "%.*" + ReduceSinkOperator.getOperatorName()+ "%"),new GenMRRedSink2());
  opRules.put(new RuleRegExp(new String("R4"),FileSinkOperator.getOperatorName() + "%"),new GenMRFileSink1());
  opRules.put(new RuleRegExp(new String("R5"),UnionOperator.getOperatorName() + "%"),new GenMRUnion1());
  opRules.put(new RuleRegExp(new String("R6"),UnionOperator.getOperatorName() + "%.*" + ReduceSinkOperator.getOperatorName()+ "%"),new GenMRRedSink3());
  opRules.put(new RuleRegExp(new String("R7"),MapJoinOperator.getOperatorName() + "%"),MapJoinFactory.getTableScanMapJoin());
  Dispatcher disp=new DefaultRuleDispatcher(new GenMROperator(),opRules,procCtx);
  GraphWalker ogw=new GenMapRedWalker(disp);
  ArrayList<Node> topNodes=new ArrayList<Node>();
  topNodes.addAll(pCtx.getTopOps().values());
  ogw.startWalking(topNodes,null);
}
