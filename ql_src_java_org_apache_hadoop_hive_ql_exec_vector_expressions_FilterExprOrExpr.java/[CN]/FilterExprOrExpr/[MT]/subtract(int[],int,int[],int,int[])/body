{
  Preconditions.checkState((all != remove) && (remove != difference) && (difference != all));
  if (!verifyMonotonicallyIncreasing(all,allSize)) {
    throw new RuntimeException("all is not in sort order and unique");
  }
  if (!verifyMonotonicallyIncreasing(remove,removeSize)) {
    throw new RuntimeException("remove is not in sort order and unique");
  }
  int differenceCount=0;
  int removeIndex=0;
  for (int i=0; i < allSize; i++) {
    int candidateIndex=all[i];
    if (removeIndex < removeSize && candidateIndex == remove[removeIndex]) {
      removeIndex++;
    }
 else {
      difference[differenceCount++]=candidateIndex;
    }
  }
  if (removeIndex != removeSize) {
    throw new RuntimeException("Not all batch indices removed");
  }
  if (!verifyMonotonicallyIncreasing(difference,differenceCount)) {
    throw new RuntimeException("difference is not in sort order and unique");
  }
  return differenceCount;
}
