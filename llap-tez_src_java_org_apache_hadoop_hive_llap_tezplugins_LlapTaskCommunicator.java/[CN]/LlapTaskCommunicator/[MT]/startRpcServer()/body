{
  Configuration conf=getConf();
  try {
    JobTokenSecretManager jobTokenSecretManager=new JobTokenSecretManager();
    jobTokenSecretManager.addTokenForJob(tokenIdentifier,sessionToken);
    int numHandlers=conf.getInt(TezConfiguration.TEZ_AM_TASK_LISTENER_THREAD_COUNT,TezConfiguration.TEZ_AM_TASK_LISTENER_THREAD_COUNT_DEFAULT);
    server=new RPC.Builder(conf).setProtocol(LlapTaskUmbilicalProtocol.class).setBindAddress("0.0.0.0").setPort(0).setInstance(umbilical).setNumHandlers(numHandlers).setSecretManager(jobTokenSecretManager).build();
    if (conf.getBoolean(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION,false)) {
      server.refreshServiceAcl(conf,new LlapUmbilicalPolicyProvider());
    }
    server.start();
    this.address=NetUtils.getConnectAddress(server);
    this.amHost=LlapUtil.getAmHostNameFromAddress(address,conf);
    LOG.info("Started LlapUmbilical: " + umbilical.getClass().getName() + " at address: "+ address+ " with numHandlers="+ numHandlers+ " using the host name "+ amHost);
  }
 catch (  IOException e) {
    throw new TezUncheckedException(e);
  }
}
