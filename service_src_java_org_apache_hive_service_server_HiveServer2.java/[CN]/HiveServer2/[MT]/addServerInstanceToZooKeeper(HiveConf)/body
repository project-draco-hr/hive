{
  String zooKeeperEnsemble=ZooKeeperHiveHelper.getQuorumServers(hiveConf);
  String rootNamespace=hiveConf.getVar(HiveConf.ConfVars.HIVE_SERVER2_ZOOKEEPER_NAMESPACE);
  String instanceURI=getServerInstanceURI(hiveConf);
  byte[] znodeDataUTF8=instanceURI.getBytes(Charset.forName("UTF-8"));
  setUpZooKeeperAuth(hiveConf);
  zooKeeperClient=CuratorFrameworkFactory.builder().connectString(zooKeeperEnsemble).aclProvider(zooKeeperAclProvider).retryPolicy(new ExponentialBackoffRetry(1000,3)).build();
  zooKeeperClient.start();
  try {
    zooKeeperClient.create().creatingParentsIfNeeded().withMode(CreateMode.PERSISTENT).forPath(ZooKeeperHiveHelper.ZOOKEEPER_PATH_SEPARATOR + rootNamespace);
    LOG.info("Created the root name space: " + rootNamespace + " on ZooKeeper for HiveServer2");
  }
 catch (  KeeperException e) {
    if (e.code() != KeeperException.Code.NODEEXISTS) {
      LOG.fatal("Unable to create HiveServer2 namespace: " + rootNamespace + " on ZooKeeper",e);
      throw e;
    }
  }
  try {
    String pathPrefix=ZooKeeperHiveHelper.ZOOKEEPER_PATH_SEPARATOR + rootNamespace + ZooKeeperHiveHelper.ZOOKEEPER_PATH_SEPARATOR+ "serverUri="+ instanceURI+ ";"+ "version="+ HiveVersionInfo.getVersion()+ ";"+ "sequence=";
    znodePath=zooKeeperClient.create().creatingParentsIfNeeded().withMode(CreateMode.EPHEMERAL_SEQUENTIAL).forPath(pathPrefix,znodeDataUTF8);
    setRegisteredWithZooKeeper(true);
    if (zooKeeperClient.checkExists().usingWatcher(new DeRegisterWatcher()).forPath(znodePath) == null) {
      throw new Exception("Unable to create znode for this HiveServer2 instance on ZooKeeper.");
    }
    LOG.info("Created a znode on ZooKeeper for HiveServer2 uri: " + instanceURI);
  }
 catch (  KeeperException e) {
    LOG.fatal("Unable to create a znode for this server instance",e);
    throw (e);
  }
}
