{
  LlapDaemonConfiguration daemonConf=new LlapDaemonConfiguration();
  int rpcPort=HiveConf.getIntVar(daemonConf,ConfVars.LLAP_DAEMON_RPC_PORT);
  int numHandlers=HiveConf.getIntVar(daemonConf,ConfVars.LLAP_DAEMON_RPC_NUM_HANDLERS);
  ContainerRunner containerRunnerMock=mock(ContainerRunner.class);
  LlapProtocolServerImpl server=new LlapProtocolServerImpl(null,numHandlers,containerRunnerMock,new AtomicReference<InetSocketAddress>(),new AtomicReference<InetSocketAddress>(),rpcPort,rpcPort + 1,null);
  when(containerRunnerMock.submitWork(any(SubmitWorkRequestProto.class))).thenReturn(SubmitWorkResponseProto.newBuilder().setSubmissionState(SubmissionStateProto.ACCEPTED).build());
  try {
    server.init(new Configuration());
    server.start();
    InetSocketAddress serverAddr=server.getBindAddress();
    LlapProtocolBlockingPB client=new LlapProtocolClientImpl(new Configuration(),serverAddr.getHostName(),serverAddr.getPort(),null,null,null);
    SubmitWorkResponseProto responseProto=client.submitWork(null,SubmitWorkRequestProto.newBuilder().setAmHost("amhost").setAmPort(2000).build());
    assertEquals(responseProto.getSubmissionState().name(),SubmissionStateProto.ACCEPTED.name());
  }
  finally {
    server.stop();
  }
}
