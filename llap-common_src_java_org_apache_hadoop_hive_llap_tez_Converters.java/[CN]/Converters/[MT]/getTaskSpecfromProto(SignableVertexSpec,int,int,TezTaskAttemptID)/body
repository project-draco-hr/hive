{
  TezTaskAttemptID taskAttemptID=attemptId != null ? attemptId : createTaskAttemptId(vectorProto.getQueryIdentifier(),vectorProto.getVertexIndex(),fragmentNum,attemptNum);
  ProcessorDescriptor processorDescriptor=null;
  if (vectorProto.hasProcessorDescriptor()) {
    processorDescriptor=convertProcessorDescriptorFromProto(vectorProto.getProcessorDescriptor());
  }
  List<InputSpec> inputSpecList=new ArrayList<InputSpec>(vectorProto.getInputSpecsCount());
  if (vectorProto.getInputSpecsCount() > 0) {
    for (    IOSpecProto inputSpecProto : vectorProto.getInputSpecsList()) {
      inputSpecList.add(getInputSpecFromProto(inputSpecProto));
    }
  }
  List<OutputSpec> outputSpecList=new ArrayList<OutputSpec>(vectorProto.getOutputSpecsCount());
  if (vectorProto.getOutputSpecsCount() > 0) {
    for (    IOSpecProto outputSpecProto : vectorProto.getOutputSpecsList()) {
      outputSpecList.add(getOutputSpecFromProto(outputSpecProto));
    }
  }
  List<GroupInputSpec> groupInputSpecs=new ArrayList<GroupInputSpec>(vectorProto.getGroupedInputSpecsCount());
  if (vectorProto.getGroupedInputSpecsCount() > 0) {
    for (    GroupInputSpecProto groupInputSpecProto : vectorProto.getGroupedInputSpecsList()) {
      groupInputSpecs.add(getGroupInputSpecFromProto(groupInputSpecProto));
    }
  }
  TaskSpec taskSpec=new TaskSpec(taskAttemptID,vectorProto.getDagName(),vectorProto.getVertexName(),vectorProto.getVertexParallelism(),processorDescriptor,inputSpecList,outputSpecList,groupInputSpecs);
  return taskSpec;
}
