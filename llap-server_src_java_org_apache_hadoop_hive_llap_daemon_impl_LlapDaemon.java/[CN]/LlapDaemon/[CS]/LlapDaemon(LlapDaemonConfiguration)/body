{
  super("LlapDaemon");
  this.numExecutors=daemonConf.getInt(LlapDaemonConfiguration.LLAP_DAEMON_NUM_EXECUTORS,LlapDaemonConfiguration.LLAP_DAEMON_NUM_EXECUTORS_DEFAULT);
  this.rpcPort=daemonConf.getInt(LlapDaemonConfiguration.LLAP_DAEMON_RPC_PORT,LlapDaemonConfiguration.LLAP_DAEMON_RPC_PORT_DEFAULT);
  this.daemonConf=daemonConf;
  this.localDirs=daemonConf.getTrimmedStrings(LlapDaemonConfiguration.LLAP_DAEMON_WORK_DIRS);
  this.shufflePort=daemonConf.getInt(LlapDaemonConfiguration.LLAP_DAEMON_YARN_SHUFFLE_PORT,-1);
  memoryPerInstance=this.daemonConf.getInt(LlapDaemonConfiguration.LLAP_DAEMON_MEMORY_PER_INSTANCE_MB,LlapDaemonConfiguration.LLAP_DAEMON_MEMORY_PER_INSTANCE_MB_DEFAULT) * 1024l * 1024l;
  maxJvmMemory=Runtime.getRuntime().maxMemory();
  LOG.info("LlapDaemon started with the following configuration: " + "numExecutors=" + numExecutors + ", rpcListenerPort="+ rpcPort+ ", workDirs="+ Arrays.toString(localDirs)+ ", shufflePort="+ shufflePort+ ", memoryConfigured="+ memoryPerInstance+ ", jvmAvailableMemory="+ maxJvmMemory);
  Preconditions.checkArgument(this.numExecutors > 0);
  Preconditions.checkArgument(this.rpcPort > 1024 && this.rpcPort < 65536,"RPC Port must be between 1025 and 65534");
  Preconditions.checkArgument(this.localDirs != null && this.localDirs.length > 0,"Work dirs must be specified");
  Preconditions.checkArgument(this.shufflePort > 0,"ShufflePort must be specified");
  Preconditions.checkState(maxJvmMemory >= memoryPerInstance,"Invalid configuration. Xmx value too small. maxAvailable=" + maxJvmMemory + ", configured="+ memoryPerInstance);
  LlapMetricsSystem.initialize("LlapDaemon");
  this.pauseMonitor=new JvmPauseMonitor(daemonConf);
  pauseMonitor.start();
  String displayName="LlapDaemonExecutorMetrics-" + MetricsUtils.getHostName();
  String sessionId=MetricsUtils.getUUID();
  this.metrics=LlapDaemonExecutorMetrics.create(displayName,sessionId,numExecutors);
  metrics.getJvmMetrics().setPauseMonitor(pauseMonitor);
  this.llapDaemonInfoBean=MBeans.register("LlapDaemon","LlapDaemonInfo",this);
  LOG.info("Started LlapMetricsSystem with displayName: " + displayName + " sessionId: "+ sessionId);
  this.server=new LlapDaemonProtocolServerImpl(daemonConf,this,address);
  this.containerRunner=new ContainerRunnerImpl(numExecutors,localDirs,shufflePort,address,memoryPerInstance,metrics);
}
