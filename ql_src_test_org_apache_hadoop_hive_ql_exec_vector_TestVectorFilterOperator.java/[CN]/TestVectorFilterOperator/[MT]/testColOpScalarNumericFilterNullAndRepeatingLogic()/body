{
  FilterLongColGreaterLongScalar f=new FilterLongColGreaterLongScalar(0,1);
  VectorizedRowBatch batch=getSimpleLongBatch();
  batch.cols[0].noNulls=true;
  batch.cols[0].isRepeating=false;
  f.evaluate(batch);
  Assert.assertEquals(2,batch.size);
  Assert.assertTrue(batch.selectedInUse);
  Assert.assertEquals(2,batch.selected[0]);
  Assert.assertEquals(3,batch.selected[1]);
  f=new FilterLongColGreaterLongScalar(0,-1);
  batch=getSimpleLongBatch();
  f.evaluate(batch);
  Assert.assertFalse(batch.selectedInUse);
  Assert.assertEquals(4,batch.size);
  batch=getSimpleLongBatch();
  f=new FilterLongColGreaterLongScalar(0,1);
  batch.cols[0].noNulls=false;
  batch.cols[0].isRepeating=false;
  batch.cols[0].isNull[3]=true;
  f.evaluate(batch);
  Assert.assertTrue(batch.selectedInUse);
  Assert.assertEquals(1,batch.size);
  Assert.assertEquals(2,batch.selected[0]);
  batch=getSimpleLongBatch();
  f=new FilterLongColGreaterLongScalar(0,-1);
  batch.cols[0].noNulls=true;
  batch.cols[0].isRepeating=true;
  f.evaluate(batch);
  Assert.assertFalse(batch.selectedInUse);
  Assert.assertEquals(4,batch.size);
  batch=getSimpleLongBatch();
  batch.cols[0].noNulls=false;
  batch.cols[0].isRepeating=true;
  batch.cols[0].isNull[0]=true;
  f.evaluate(batch);
  Assert.assertEquals(0,batch.size);
}
