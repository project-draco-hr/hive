{
  miniHiveKdc.loginUser(MiniHiveKdc.HIVE_TEST_USER_1);
  hs2Conn=DriverManager.getConnection(miniHS2.getJdbcURL());
  Statement stmt=hs2Conn.createStatement();
  stmt.executeQuery("show databases");
  stmt.executeQuery("show tables");
  Throwable error=PostExecHook.error;
  if (error != null) {
    throw error;
  }
  error=PreExecHook.error;
  if (error != null) {
    throw error;
  }
  Assert.assertNotNull(PostExecHook.ipAddress,"ipaddress is null");
  Assert.assertNotNull(PostExecHook.userName,"userName is null");
  Assert.assertNotNull(PostExecHook.operation,"operation is null");
  Assert.assertEquals(MiniHiveKdc.HIVE_TEST_USER_1,PostExecHook.userName);
  Assert.assertTrue(PostExecHook.ipAddress,PostExecHook.ipAddress.contains("127.0.0.1"));
  Assert.assertEquals("SHOWTABLES",PostExecHook.operation);
  Assert.assertNotNull(PreExecHook.ipAddress,"ipaddress is null");
  Assert.assertNotNull(PreExecHook.userName,"userName is null");
  Assert.assertNotNull(PreExecHook.operation,"operation is null");
  Assert.assertEquals(MiniHiveKdc.HIVE_TEST_USER_1,PreExecHook.userName);
  Assert.assertTrue(PreExecHook.ipAddress,PreExecHook.ipAddress.contains("127.0.0.1"));
  Assert.assertEquals("SHOWTABLES",PreExecHook.operation);
  error=SemanticAnalysisHook.preAnalyzeError;
  if (error != null) {
    throw error;
  }
  error=SemanticAnalysisHook.postAnalyzeError;
  if (error != null) {
    throw error;
  }
  Assert.assertNotNull(SemanticAnalysisHook.ipAddress,"semantic hook context ipaddress is null");
  Assert.assertNotNull(SemanticAnalysisHook.userName,"semantic hook context userName is null");
  Assert.assertNotNull(SemanticAnalysisHook.command,"semantic hook context command is null");
  Assert.assertTrue(SemanticAnalysisHook.ipAddress,SemanticAnalysisHook.ipAddress.contains("127.0.0.1"));
  Assert.assertEquals("show tables",SemanticAnalysisHook.command);
}
