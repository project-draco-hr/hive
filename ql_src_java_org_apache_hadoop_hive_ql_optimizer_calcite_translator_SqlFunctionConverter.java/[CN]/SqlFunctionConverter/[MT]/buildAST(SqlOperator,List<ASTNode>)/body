{
  HiveToken hToken=calciteToHiveToken.get(op);
  ASTNode node;
  if (hToken != null) {
    node=(ASTNode)ParseDriver.adaptor.create(hToken.type,hToken.text);
  }
 else {
    node=(ASTNode)ParseDriver.adaptor.create(HiveParser.TOK_FUNCTION,"TOK_FUNCTION");
    if (op.kind != SqlKind.CAST) {
      if (op.kind == SqlKind.MINUS_PREFIX) {
        node=(ASTNode)ParseDriver.adaptor.create(HiveParser.MINUS,"MINUS");
      }
 else       if (op.kind == SqlKind.PLUS_PREFIX) {
        node=(ASTNode)ParseDriver.adaptor.create(HiveParser.PLUS,"PLUS");
      }
 else {
        if (op.getName().toUpperCase().equals(SqlStdOperatorTable.COUNT.getName()) && children.size() == 0) {
          node=(ASTNode)ParseDriver.adaptor.create(HiveParser.TOK_FUNCTIONSTAR,"TOK_FUNCTIONSTAR");
        }
        node.addChild((ASTNode)ParseDriver.adaptor.create(HiveParser.Identifier,op.getName()));
      }
    }
  }
  for (  ASTNode c : children) {
    ParseDriver.adaptor.addChild(node,c);
  }
  return node;
}
