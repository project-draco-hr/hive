{
  registerFunction("+",SqlStdOperatorTable.PLUS,hToken(HiveParser.PLUS,"+"));
  registerFunction("-",SqlStdOperatorTable.MINUS,hToken(HiveParser.MINUS,"-"));
  registerFunction("*",SqlStdOperatorTable.MULTIPLY,hToken(HiveParser.STAR,"*"));
  registerFunction("/",SqlStdOperatorTable.DIVIDE,hToken(HiveParser.DIVIDE,"/"));
  registerFunction("%",SqlStdOperatorTable.MOD,hToken(HiveParser.Identifier,"%"));
  registerFunction("and",SqlStdOperatorTable.AND,hToken(HiveParser.KW_AND,"and"));
  registerFunction("or",SqlStdOperatorTable.OR,hToken(HiveParser.KW_OR,"or"));
  registerFunction("=",SqlStdOperatorTable.EQUALS,hToken(HiveParser.EQUAL,"="));
  registerDuplicateFunction("==",SqlStdOperatorTable.EQUALS,hToken(HiveParser.EQUAL,"="));
  registerFunction("<",SqlStdOperatorTable.LESS_THAN,hToken(HiveParser.LESSTHAN,"<"));
  registerFunction("<=",SqlStdOperatorTable.LESS_THAN_OR_EQUAL,hToken(HiveParser.LESSTHANOREQUALTO,"<="));
  registerFunction(">",SqlStdOperatorTable.GREATER_THAN,hToken(HiveParser.GREATERTHAN,">"));
  registerFunction(">=",SqlStdOperatorTable.GREATER_THAN_OR_EQUAL,hToken(HiveParser.GREATERTHANOREQUALTO,">="));
  registerFunction("not",SqlStdOperatorTable.NOT,hToken(HiveParser.KW_NOT,"not"));
  registerDuplicateFunction("!",SqlStdOperatorTable.NOT,hToken(HiveParser.KW_NOT,"not"));
  registerFunction("<>",SqlStdOperatorTable.NOT_EQUALS,hToken(HiveParser.NOTEQUAL,"<>"));
  registerDuplicateFunction("!=",SqlStdOperatorTable.NOT_EQUALS,hToken(HiveParser.NOTEQUAL,"<>"));
  registerFunction("in",HiveIn.INSTANCE,hToken(HiveParser.Identifier,"in"));
  registerFunction("between",HiveBetween.INSTANCE,hToken(HiveParser.Identifier,"between"));
  registerFunction("struct",SqlStdOperatorTable.ROW,hToken(HiveParser.Identifier,"struct"));
  registerFunction("isnotnull",SqlStdOperatorTable.IS_NOT_NULL,hToken(HiveParser.TOK_ISNOTNULL,"TOK_ISNOTNULL"));
  registerFunction("isnull",SqlStdOperatorTable.IS_NULL,hToken(HiveParser.TOK_ISNULL,"TOK_ISNULL"));
  registerFunction("when",SqlStdOperatorTable.CASE,hToken(HiveParser.Identifier,"when"));
  registerDuplicateFunction("case",SqlStdOperatorTable.CASE,hToken(HiveParser.Identifier,"when"));
  registerFunction("floor_year",HiveDateGranularity.YEAR,hToken(HiveParser.Identifier,"floor_year"));
  registerFunction("floor_quarter",HiveDateGranularity.QUARTER,hToken(HiveParser.Identifier,"floor_quarter"));
  registerFunction("floor_month",HiveDateGranularity.MONTH,hToken(HiveParser.Identifier,"floor_month"));
  registerFunction("floor_week",HiveDateGranularity.WEEK,hToken(HiveParser.Identifier,"floor_week"));
  registerFunction("floor_day",HiveDateGranularity.DAY,hToken(HiveParser.Identifier,"floor_day"));
  registerFunction("floor_hour",HiveDateGranularity.HOUR,hToken(HiveParser.Identifier,"floor_hour"));
  registerFunction("floor_minute",HiveDateGranularity.MINUTE,hToken(HiveParser.Identifier,"floor_minute"));
  registerFunction("floor_second",HiveDateGranularity.SECOND,hToken(HiveParser.Identifier,"floor_second"));
}
