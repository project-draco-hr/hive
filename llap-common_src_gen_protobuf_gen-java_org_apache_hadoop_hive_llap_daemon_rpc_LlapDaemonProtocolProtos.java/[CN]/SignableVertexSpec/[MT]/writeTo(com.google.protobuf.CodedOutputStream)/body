{
  getSerializedSize();
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    output.writeBytes(1,getUserBytes());
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    output.writeInt64(2,signatureKeyId_);
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    output.writeMessage(3,queryIdentifier_);
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    output.writeBytes(4,getHiveQueryIdBytes());
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    output.writeBytes(5,getDagNameBytes());
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    output.writeBytes(6,getVertexNameBytes());
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    output.writeInt32(7,vertexIndex_);
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    output.writeBytes(8,getTokenIdentifierBytes());
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    output.writeMessage(9,processorDescriptor_);
  }
  for (int i=0; i < inputSpecs_.size(); i++) {
    output.writeMessage(10,inputSpecs_.get(i));
  }
  for (int i=0; i < outputSpecs_.size(); i++) {
    output.writeMessage(11,outputSpecs_.get(i));
  }
  for (int i=0; i < groupedInputSpecs_.size(); i++) {
    output.writeMessage(12,groupedInputSpecs_.get(i));
  }
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    output.writeInt32(13,vertexParallelism_);
  }
  getUnknownFields().writeTo(output);
}
