{
  if (memoizedHashCode != 0) {
    return memoizedHashCode;
  }
  int hash=41;
  hash=(19 * hash) + getDescriptorForType().hashCode();
  if (hasUser()) {
    hash=(37 * hash) + USER_FIELD_NUMBER;
    hash=(53 * hash) + getUser().hashCode();
  }
  if (hasSignatureKeyId()) {
    hash=(37 * hash) + SIGNATUREKEYID_FIELD_NUMBER;
    hash=(53 * hash) + hashLong(getSignatureKeyId());
  }
  if (hasVertexIdentifier()) {
    hash=(37 * hash) + VERTEXIDENTIFIER_FIELD_NUMBER;
    hash=(53 * hash) + getVertexIdentifier().hashCode();
  }
  if (hasDagName()) {
    hash=(37 * hash) + DAG_NAME_FIELD_NUMBER;
    hash=(53 * hash) + getDagName().hashCode();
  }
  if (hasVertexName()) {
    hash=(37 * hash) + VERTEX_NAME_FIELD_NUMBER;
    hash=(53 * hash) + getVertexName().hashCode();
  }
  if (hasTokenIdentifier()) {
    hash=(37 * hash) + TOKEN_IDENTIFIER_FIELD_NUMBER;
    hash=(53 * hash) + getTokenIdentifier().hashCode();
  }
  if (hasProcessorDescriptor()) {
    hash=(37 * hash) + PROCESSOR_DESCRIPTOR_FIELD_NUMBER;
    hash=(53 * hash) + getProcessorDescriptor().hashCode();
  }
  if (getInputSpecsCount() > 0) {
    hash=(37 * hash) + INPUT_SPECS_FIELD_NUMBER;
    hash=(53 * hash) + getInputSpecsList().hashCode();
  }
  if (getOutputSpecsCount() > 0) {
    hash=(37 * hash) + OUTPUT_SPECS_FIELD_NUMBER;
    hash=(53 * hash) + getOutputSpecsList().hashCode();
  }
  if (getGroupedInputSpecsCount() > 0) {
    hash=(37 * hash) + GROUPED_INPUT_SPECS_FIELD_NUMBER;
    hash=(53 * hash) + getGroupedInputSpecsList().hashCode();
  }
  if (hasVertexParallelism()) {
    hash=(37 * hash) + VERTEX_PARALLELISM_FIELD_NUMBER;
    hash=(53 * hash) + getVertexParallelism();
  }
  hash=(29 * hash) + getUnknownFields().hashCode();
  memoizedHashCode=hash;
  return hash;
}
