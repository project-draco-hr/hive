{
  validateDefaultFetchOrientation(orientation);
  assertState(new ArrayList<OperationState>(Arrays.asList(OperationState.FINISHED)));
  FetchTask fetchTask=driver.getFetchTask();
  boolean isBlobBased=false;
  if (fetchTask != null && fetchTask.getWork().isHiveServerQuery() && HiveConf.getBoolVar(queryState.getConf(),HiveConf.ConfVars.HIVE_SERVER2_THRIFT_RESULTSET_SERIALIZE_IN_TASKS) && (fetchTask.getTblDesc().getSerdeClassName().equalsIgnoreCase(ThriftJDBCBinarySerDe.class.getName()))) {
    maxRows=1;
    isBlobBased=true;
  }
  driver.setMaxRows((int)maxRows);
  RowSet rowSet=RowSetFactory.create(resultSchema,getProtocolVersion(),isBlobBased);
  try {
    if (orientation.equals(FetchOrientation.FETCH_FIRST) && fetchStarted) {
      driver.resetFetch();
    }
    fetchStarted=true;
    driver.setMaxRows((int)maxRows);
    if (driver.getResults(convey)) {
      return decode(convey,rowSet);
    }
    return rowSet;
  }
 catch (  IOException e) {
    throw new HiveSQLException(e);
  }
catch (  CommandNeedRetryException e) {
    throw new HiveSQLException(e);
  }
catch (  Exception e) {
    throw new HiveSQLException(e);
  }
 finally {
    convey.clear();
  }
}
