{
  getSerDe();
  StructObjectInspector soi=(StructObjectInspector)serde.getObjectInspector();
  List<? extends StructField> fieldRefs=soi.getAllStructFieldRefs();
  RowSet rowSet=new RowSet();
  Object[] deserializedFields=new Object[fieldRefs.size()];
  Object rowObj;
  ObjectInspector fieldOI;
  for (  Object rowString : rows) {
    rowObj=serde.deserialize(new BytesWritable(((String)rowString).getBytes()));
    for (int i=0; i < fieldRefs.size(); i++) {
      StructField fieldRef=fieldRefs.get(i);
      fieldOI=fieldRef.getFieldObjectInspector();
      Object fieldData=soi.getStructFieldData(rowObj,fieldRef);
      deserializedFields[i]=SerDeUtils.toThriftPayload(fieldData,fieldOI);
    }
    rowSet.addRow(resultSchema,deserializedFields);
  }
  return rowSet;
}
