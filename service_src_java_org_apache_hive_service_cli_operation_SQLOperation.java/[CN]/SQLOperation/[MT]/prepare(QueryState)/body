{
  setState(OperationState.RUNNING);
  try {
    driver=new Driver(queryState,getParentSession().getUserName());
    if (queryTimeout > 0) {
      timeoutExecutor=new ScheduledThreadPoolExecutor(1);
      Runnable timeoutTask=new Runnable(){
        @Override public void run(){
          try {
            LOG.info("Query timed out after: " + queryTimeout + " seconds. Cancelling the execution now.");
            SQLOperation.this.cancel(OperationState.TIMEDOUT);
          }
 catch (          HiveSQLException e) {
            LOG.error("Error cancelling the query after timeout: " + queryTimeout + " seconds",e);
          }
 finally {
            timeoutExecutor.shutdown();
          }
        }
      }
;
      timeoutExecutor.schedule(timeoutTask,queryTimeout,TimeUnit.SECONDS);
    }
    sqlOpDisplay.setQueryDisplay(driver.getQueryDisplay());
    String guid64=Base64.encodeBase64URLSafeString(getHandle().getHandleIdentifier().toTHandleIdentifier().getGuid()).trim();
    driver.setOperationId(guid64);
    driver.setTryCount(Integer.MAX_VALUE);
    response=driver.compileAndRespond(statement);
    if (0 != response.getResponseCode()) {
      throw toSQLException("Error while compiling statement",response);
    }
    mResultSchema=driver.getSchema();
    if (driver.getPlan().getFetchTask() != null) {
      if (mResultSchema == null || !mResultSchema.isSetFieldSchemas()) {
        throw new HiveSQLException("Error compiling query: Schema and FieldSchema " + "should be set when query plan has a FetchTask");
      }
      resultSchema=new TableSchema(mResultSchema);
      setHasResultSet(true);
    }
 else {
      setHasResultSet(false);
    }
    for (    Task<? extends Serializable> task : driver.getPlan().getRootTasks()) {
      if (task.getClass() == ExplainTask.class) {
        resultSchema=new TableSchema(mResultSchema);
        setHasResultSet(true);
        break;
      }
    }
  }
 catch (  HiveSQLException e) {
    setState(OperationState.ERROR);
    throw e;
  }
catch (  Throwable e) {
    setState(OperationState.ERROR);
    throw new HiveSQLException("Error running query: " + e.toString(),e);
  }
}
