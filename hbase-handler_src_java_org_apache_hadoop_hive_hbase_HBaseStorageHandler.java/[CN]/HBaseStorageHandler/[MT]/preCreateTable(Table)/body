{
  boolean isExternal=MetaStoreUtils.isExternalTable(tbl);
  if (tbl.getSd().getLocation() != null) {
    throw new MetaException("LOCATION may not be specified for HBase.");
  }
  HTable htable=null;
  try {
    String tableName=getHBaseTableName(tbl);
    Map<String,String> serdeParam=tbl.getSd().getSerdeInfo().getParameters();
    String hbaseColumnsMapping=serdeParam.get(HBaseSerDe.HBASE_COLUMNS_MAPPING);
    ColumnMappings columnMappings=HBaseSerDe.parseColumnsMapping(hbaseColumnsMapping);
    HTableDescriptor tableDesc;
    if (!getHBaseAdmin().tableExists(tableName)) {
      if (!isExternal) {
        tableDesc=new HTableDescriptor(tableName);
        Set<String> uniqueColumnFamilies=new HashSet<String>();
        for (        ColumnMapping colMap : columnMappings) {
          if (!colMap.hbaseRowKey && !colMap.hbaseTimestamp) {
            uniqueColumnFamilies.add(colMap.familyName);
          }
        }
        for (        String columnFamily : uniqueColumnFamilies) {
          tableDesc.addFamily(new HColumnDescriptor(Bytes.toBytes(columnFamily)));
        }
        getHBaseAdmin().createTable(tableDesc);
      }
 else {
        throw new MetaException("HBase table " + tableName + " doesn't exist while the table is declared as an external table.");
      }
    }
 else {
      if (!isExternal) {
        throw new MetaException("Table " + tableName + " already exists"+ " within HBase; use CREATE EXTERNAL TABLE instead to"+ " register it in Hive.");
      }
      tableDesc=getHBaseAdmin().getTableDescriptor(Bytes.toBytes(tableName));
      for (      ColumnMapping colMap : columnMappings) {
        if (colMap.hbaseRowKey || colMap.hbaseTimestamp) {
          continue;
        }
        if (!tableDesc.hasFamily(colMap.familyNameBytes)) {
          throw new MetaException("Column Family " + colMap.familyName + " is not defined in hbase table "+ tableName);
        }
      }
    }
    htable=new HTable(hbaseConf,tableDesc.getName());
  }
 catch (  Exception se) {
    throw new MetaException(StringUtils.stringifyException(se));
  }
 finally {
    if (htable != null) {
      IOUtils.closeQuietly(htable);
    }
  }
}
