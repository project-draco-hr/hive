{
  if (!clazz.isInstance(right)) {
    return;
  }
  if (!RexUtil.isConstant(right)) {
    return;
  }
  C constant=clazz.cast(right);
  if (excludeSet.contains(left)) {
    return;
  }
  final C existedValue=map.get(left);
  if (existedValue == null) {
switch (left.getKind()) {
case CAST:
      final RexNode operand=((RexCall)left).getOperands().get(0);
    if (canAssignFrom(left.getType(),operand.getType())) {
      final RexNode castRight=rexBuilder.makeCast(operand.getType(),constant);
      if (castRight instanceof RexLiteral) {
        left=operand;
        constant=clazz.cast(castRight);
      }
    }
}
map.put(left,constant);
}
 else {
if (existedValue instanceof RexLiteral && constant instanceof RexLiteral && !((RexLiteral)existedValue).getValue().equals(((RexLiteral)constant).getValue())) {
  map.remove(left);
  excludeSet.add(left);
}
}
}
