{
  int prec=decimalTypeInfo.precision();
  int scale=decimalTypeInfo.scale();
  byte[] decimalBytes=hiveDecimal.setScale(scale).unscaledValue().toByteArray();
  int precToBytes=ParquetHiveSerDe.PRECISION_TO_BYTE_COUNT[prec - 1];
  if (precToBytes == decimalBytes.length) {
    return Binary.fromByteArray(decimalBytes);
  }
  byte[] tgt=new byte[precToBytes];
  if (hiveDecimal.signum() == -1) {
    for (int i=0; i < precToBytes; i++) {
      tgt[i]|=0xFF;
    }
  }
  System.arraycopy(decimalBytes,0,tgt,precToBytes - decimalBytes.length,decimalBytes.length);
  return Binary.fromByteArray(tgt);
}
