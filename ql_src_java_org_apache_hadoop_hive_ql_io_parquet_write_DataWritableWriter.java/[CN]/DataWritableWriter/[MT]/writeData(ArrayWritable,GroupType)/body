{
  if (arr == null) {
    return;
  }
  final int fieldCount=type.getFieldCount();
  Writable[] values=arr.get();
  for (int field=0; field < fieldCount; ++field) {
    final Type fieldType=type.getType(field);
    final String fieldName=fieldType.getName();
    final Writable value=values[field];
    if (value == null) {
      continue;
    }
    recordConsumer.startField(fieldName,field);
    if (fieldType.isPrimitive()) {
      writePrimitive(value);
    }
 else {
      recordConsumer.startGroup();
      if (value instanceof ArrayWritable) {
        if (fieldType.asGroupType().getRepetition().equals(Type.Repetition.REPEATED)) {
          writeArray((ArrayWritable)value,fieldType.asGroupType());
        }
 else {
          writeData((ArrayWritable)value,fieldType.asGroupType());
        }
      }
 else       if (value != null) {
        throw new ParquetEncodingException("This should be an ArrayWritable or MapWritable: " + value);
      }
      recordConsumer.endGroup();
    }
    recordConsumer.endField(fieldName,field);
  }
}
