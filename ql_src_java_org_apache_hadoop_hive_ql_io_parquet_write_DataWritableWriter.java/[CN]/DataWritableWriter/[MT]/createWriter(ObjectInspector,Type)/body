{
  if (type.isPrimitive()) {
    checkInspectorCategory(inspector,ObjectInspector.Category.PRIMITIVE);
    PrimitiveObjectInspector primitiveInspector=(PrimitiveObjectInspector)inspector;
switch (primitiveInspector.getPrimitiveCategory()) {
case BOOLEAN:
      return new BooleanDataWriter((BooleanObjectInspector)inspector);
case BYTE:
    return new ByteDataWriter((ByteObjectInspector)inspector);
case SHORT:
  return new ShortDataWriter((ShortObjectInspector)inspector);
case INT:
return new IntDataWriter((IntObjectInspector)inspector);
case LONG:
return new LongDataWriter((LongObjectInspector)inspector);
case FLOAT:
return new FloatDataWriter((FloatObjectInspector)inspector);
case DOUBLE:
return new DoubleDataWriter((DoubleObjectInspector)inspector);
case STRING:
return new StringDataWriter((StringObjectInspector)inspector);
case CHAR:
return new CharDataWriter((HiveCharObjectInspector)inspector);
case VARCHAR:
return new VarcharDataWriter((HiveVarcharObjectInspector)inspector);
case BINARY:
return new BinaryDataWriter((BinaryObjectInspector)inspector);
case TIMESTAMP:
return new TimestampDataWriter((TimestampObjectInspector)inspector);
case DECIMAL:
return new DecimalDataWriter((HiveDecimalObjectInspector)inspector);
case DATE:
return new DateDataWriter((DateObjectInspector)inspector);
default :
throw new IllegalArgumentException("Unsupported primitive data type: " + primitiveInspector.getPrimitiveCategory());
}
}
 else {
GroupType groupType=type.asGroupType();
OriginalType originalType=type.getOriginalType();
if (originalType != null && originalType.equals(OriginalType.LIST)) {
checkInspectorCategory(inspector,ObjectInspector.Category.LIST);
return new ListDataWriter((ListObjectInspector)inspector,groupType);
}
 else if (originalType != null && originalType.equals(OriginalType.MAP)) {
checkInspectorCategory(inspector,ObjectInspector.Category.MAP);
return new MapDataWriter((MapObjectInspector)inspector,groupType);
}
 else {
checkInspectorCategory(inspector,ObjectInspector.Category.STRUCT);
return new StructDataWriter((StructObjectInspector)inspector,groupType);
}
}
}
