{
  LlapTaskCommunicatorWrapperForTest wrapper=null;
  Lock lock=new ReentrantLock();
  Condition condition=lock.newCondition();
  final AtomicBoolean opDone=new AtomicBoolean(false);
  LlapProtocolClientProxy proxy=mock(LlapProtocolClientProxy.class,new FinishableStatusUpdateTestAnswer(lock,condition,opDone));
  try {
    wrapper=new LlapTaskCommunicatorWrapperForTest(proxy);
    ContainerId cId11=wrapper.registerContainer(1,0);
    TaskSpec ts11=wrapper.registerRunningTaskAttemptWithSourceVertex(cId11,1);
    ContainerId cId12=wrapper.registerContainer(2,0);
    TaskSpec ts12=wrapper.registerRunningTaskAttemptWithSourceVertex(cId12,2);
    ContainerId cId21=wrapper.registerContainer(3,1);
    TaskSpec ts21=wrapper.registerRunningTaskAttemptWithSourceVertex(cId21,3);
    VertexStateUpdate vertexStateUpdate=new VertexStateUpdate(LlapTaskCommunicatorWrapperForTest.VERTEX_NAME1,VertexState.SUCCEEDED);
    wrapper.getTaskCommunicator().onVertexStateUpdated(vertexStateUpdate);
    lock.lock();
    try {
      while (!opDone.get()) {
        condition.await();
      }
    }
  finally {
      lock.unlock();
    }
    verify(wrapper.getTaskCommunicatorContext(),times(2)).taskKilled(any(TezTaskAttemptID.class),any(TaskAttemptEndReason.class),any(String.class));
    verify(wrapper.getTaskCommunicatorContext()).taskKilled(eq(ts11.getTaskAttemptID()),eq(TaskAttemptEndReason.NODE_FAILED),any(String.class));
    verify(wrapper.getTaskCommunicatorContext()).taskKilled(eq(ts12.getTaskAttemptID()),eq(TaskAttemptEndReason.NODE_FAILED),any(String.class));
    wrapper.getTaskCommunicator().sendStateUpdate(LlapNodeId.getInstance(LlapTaskCommunicatorWrapperForTest.HOSTS[1],LlapTaskCommunicatorWrapperForTest.RPC_PORT),LlapDaemonProtocolProtos.SourceStateUpdatedRequestProto.getDefaultInstance());
    verify(wrapper.getTaskCommunicatorContext(),times(2)).taskKilled(any(TezTaskAttemptID.class),any(TaskAttemptEndReason.class),any(String.class));
  }
  finally {
    if (wrapper != null) {
      wrapper.shutdown();
    }
  }
}
