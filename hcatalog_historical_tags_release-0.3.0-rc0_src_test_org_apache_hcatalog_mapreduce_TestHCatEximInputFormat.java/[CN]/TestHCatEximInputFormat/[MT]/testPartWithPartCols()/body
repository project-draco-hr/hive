{
  try {
    if (fs.exists(inputLocation)) {
      fs.delete(inputLocation,true);
    }
    List<HCatFieldSchema> partKeys=new ArrayList<HCatFieldSchema>(2);
    partKeys.add(new HCatFieldSchema("emp_country",HCatFieldSchema.Type.STRING,""));
    partKeys.add(new HCatFieldSchema("emp_state",HCatFieldSchema.Type.STRING,""));
    partSchema=new HCatSchema(partKeys);
    runPartExport("237,Krishna,01/01/1990,M,IN,TN","in","tn");
    setUp();
    runPartExport("238,Kalpana,01/01/2000,F,IN,KA\n","in","ka");
    setUp();
    runPartExport("239,Satya,01/01/2001,M,US,TN\n","us","tn");
    setUp();
    runPartExport("240,Kavya,01/01/2002,F,US,KA\n","us","ka");
    setUp();
    setupMRImport();
    HCatEximInputFormat.setInput(job,"tmp/exports",null);
    List<HCatFieldSchema> colsPlusPartKeys=new ArrayList<HCatFieldSchema>();
    colsPlusPartKeys.addAll(columns);
    colsPlusPartKeys.addAll(partKeys);
    HCatBaseInputFormat.setOutputSchema(job,new HCatSchema(colsPlusPartKeys));
    job.waitForCompletion(true);
    assertEquals(4,TestImport.empRecords.size());
    assertEmpDetail(TestImport.empRecords.get(237),"Krishna","01/01/1990","M","in","tn");
    assertEmpDetail(TestImport.empRecords.get(238),"Kalpana","01/01/2000","F","in","ka");
    assertEmpDetail(TestImport.empRecords.get(239),"Satya","01/01/2001","M","us","tn");
    assertEmpDetail(TestImport.empRecords.get(240),"Kavya","01/01/2002","F","us","ka");
  }
 catch (  Exception e) {
    System.out.println("Test failed with " + e.getMessage());
    e.printStackTrace();
    throw e;
  }
}
