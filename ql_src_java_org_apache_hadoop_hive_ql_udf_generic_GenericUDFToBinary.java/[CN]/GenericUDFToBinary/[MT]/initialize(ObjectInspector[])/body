{
  if (arguments.length < 1) {
    throw new UDFArgumentLengthException("The function BINARY requires at least one argument, got " + arguments.length);
  }
  try {
    argumentOI=(PrimitiveObjectInspector)arguments[0];
  }
 catch (  ClassCastException e) {
    throw new UDFArgumentException("The function BINARY takes only primitive types");
  }
  if (!((argumentOI instanceof BinaryObjectInspector) || (argumentOI instanceof HiveCharObjectInspector) || (argumentOI instanceof HiveVarcharObjectInspector)|| (argumentOI instanceof StringObjectInspector)|| (argumentOI instanceof VoidObjectInspector))) {
    throw new UDFArgumentException("Only string, char, varchar or binary data can be cast into binary " + "data types.");
  }
  baConverter=new BinaryConverter(argumentOI,PrimitiveObjectInspectorFactory.writableBinaryObjectInspector);
  return PrimitiveObjectInspectorFactory.writableBinaryObjectInspector;
}
