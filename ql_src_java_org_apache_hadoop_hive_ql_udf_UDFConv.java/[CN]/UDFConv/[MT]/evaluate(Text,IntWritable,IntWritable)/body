{
  if (n == null || fromBase == null || toBase == null) {
    return null;
  }
  int fromBs=fromBase.get();
  int toBs=toBase.get();
  if (fromBs < Character.MIN_RADIX || fromBs > Character.MAX_RADIX || Math.abs(toBs) < Character.MIN_RADIX || Math.abs(toBs) > Character.MAX_RADIX) {
    return null;
  }
  byte[] num=n.getBytes();
  boolean negative=(num[0] == '-');
  int first=0;
  if (negative) {
    first=1;
  }
  for (int i=1; i <= n.getLength() - first; i++) {
    value[value.length - i]=num[n.getLength() - i];
  }
  char2byte(fromBs,value.length - n.getLength() + first);
  long val=encode(fromBs,value.length - n.getLength() + first);
  if (negative && toBs > 0) {
    if (val < 0) {
      val=-1;
    }
 else {
      val=-val;
    }
  }
  if (toBs < 0 && val < 0) {
    val=-val;
    negative=true;
  }
  decode(val,Math.abs(toBs));
  for (first=0; first < value.length - 1 && value[first] == 0; first++) {
    ;
  }
  byte2char(Math.abs(toBs),first);
  if (negative && toBs < 0) {
    value[--first]='-';
  }
  result.set(value,first,value.length - first);
  return result;
}
