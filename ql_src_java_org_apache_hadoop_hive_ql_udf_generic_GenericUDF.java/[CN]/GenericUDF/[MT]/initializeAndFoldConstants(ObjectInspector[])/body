{
  ObjectInspector oi=initialize(arguments);
  if (getRequiredFiles() != null || getRequiredJars() != null) {
    return oi;
  }
  boolean allConstant=true;
  for (int ii=0; ii < arguments.length; ++ii) {
    if (!ObjectInspectorUtils.isConstantObjectInspector(arguments[ii])) {
      allConstant=false;
      break;
    }
  }
  if (allConstant && !ObjectInspectorUtils.isConstantObjectInspector(oi) && FunctionRegistry.isDeterministic(this)&& !FunctionRegistry.isStateful(this)&& ObjectInspectorUtils.supportsConstantObjectInspector(oi)) {
    DeferredObject[] argumentValues=new DeferredJavaObject[arguments.length];
    for (int ii=0; ii < arguments.length; ++ii) {
      argumentValues[ii]=new DeferredJavaObject(((ConstantObjectInspector)arguments[ii]).getWritableConstantValue());
    }
    try {
      Object constantValue=evaluate(argumentValues);
      oi=ObjectInspectorUtils.getConstantObjectInspector(oi,constantValue);
    }
 catch (    HiveException e) {
      throw new UDFArgumentException(e);
    }
  }
  return oi;
}
