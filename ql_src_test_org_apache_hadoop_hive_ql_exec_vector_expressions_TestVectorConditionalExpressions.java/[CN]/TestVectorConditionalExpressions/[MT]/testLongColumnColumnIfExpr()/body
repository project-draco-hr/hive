{
  VectorizedRowBatch batch=getBatch4LongVectors();
  VectorExpression expr=new IfExprLongColumnLongColumn(0,1,2,3);
  expr.evaluate(batch);
  LongColumnVector r=(LongColumnVector)batch.cols[3];
  assertEquals(1,r.vector[0]);
  assertEquals(2,r.vector[1]);
  assertEquals(-3,r.vector[2]);
  assertEquals(-4,r.vector[3]);
  assertEquals(true,r.noNulls);
  assertEquals(false,r.isRepeating);
  batch=getBatch4LongVectors();
  r=(LongColumnVector)batch.cols[3];
  batch.cols[0].isRepeating=true;
  expr.evaluate(batch);
  assertEquals(1,r.vector[0]);
  assertEquals(4,r.vector[3]);
  batch=getBatch4LongVectors();
  r=(LongColumnVector)batch.cols[3];
  batch.cols[1].isRepeating=true;
  expr.evaluate(batch);
  assertEquals(1,r.vector[0]);
  assertEquals(2,r.vector[1]);
  assertEquals(-1,r.vector[2]);
  assertEquals(-1,r.vector[3]);
  batch=getBatch4LongVectors();
  r=(LongColumnVector)batch.cols[3];
  batch.cols[2].isRepeating=true;
  expr.evaluate(batch);
  assertEquals(1,r.vector[0]);
  assertEquals(1,r.vector[1]);
  assertEquals(-3,r.vector[2]);
  assertEquals(-4,r.vector[3]);
  batch=getBatch4LongVectors();
  r=(LongColumnVector)batch.cols[3];
  batch.cols[0].noNulls=false;
  batch.cols[0].isNull[1]=true;
  batch.cols[0].isNull[2]=true;
  expr.evaluate(batch);
  assertEquals(1,r.vector[0]);
  assertEquals(2,r.vector[1]);
  assertEquals(3,r.vector[2]);
  assertEquals(-4,r.vector[3]);
  assertEquals(true,r.noNulls);
  assertEquals(false,r.isRepeating);
  batch=getBatch4LongVectors();
  r=(LongColumnVector)batch.cols[3];
  batch.cols[1].noNulls=false;
  batch.cols[1].isNull[1]=true;
  batch.cols[1].isNull[2]=true;
  expr.evaluate(batch);
  assertEquals(1,r.vector[0]);
  assertEquals(2,r.vector[1]);
  assertEquals(true,r.isNull[2]);
  assertEquals(-4,r.vector[3]);
  assertEquals(false,r.noNulls);
  assertEquals(false,r.isRepeating);
  batch=getBatch4LongVectors();
  r=(LongColumnVector)batch.cols[3];
  batch.cols[2].noNulls=false;
  batch.cols[2].isNull[1]=true;
  batch.cols[2].isNull[2]=true;
  expr.evaluate(batch);
  assertEquals(1,r.vector[0]);
  assertEquals(true,r.isNull[1]);
  assertEquals(-3,r.vector[2]);
  assertEquals(-4,r.vector[3]);
  assertEquals(false,r.noNulls);
  assertEquals(false,r.isRepeating);
  batch=getBatch4LongVectors();
  r=(LongColumnVector)batch.cols[3];
  batch.cols[1].noNulls=false;
  batch.cols[1].isNull[0]=true;
  batch.cols[1].isRepeating=true;
  expr.evaluate(batch);
  assertEquals(1,r.vector[0]);
  assertEquals(2,r.vector[1]);
  assertEquals(true,r.isNull[2]);
  assertEquals(true,r.isNull[3]);
  assertEquals(false,r.noNulls);
  assertEquals(false,r.isRepeating);
  batch=getBatch4LongVectors();
  r=(LongColumnVector)batch.cols[3];
  batch.cols[2].noNulls=false;
  batch.cols[2].isNull[0]=true;
  batch.cols[2].isRepeating=true;
  expr.evaluate(batch);
  assertEquals(true,r.isNull[0]);
  assertEquals(true,r.isNull[1]);
  assertEquals(-3,r.vector[2]);
  assertEquals(-4,r.vector[3]);
  assertEquals(false,r.noNulls);
  assertEquals(false,r.isRepeating);
}
