{
switch (Type.getPrimitiveHType(mapKeyType)) {
case INT:
    return Integer.valueOf(s);
case TINYINT:
  return Byte.valueOf(s);
case SMALLINT:
return Short.valueOf(s);
case BIGINT:
return Long.valueOf(s);
case BOOLEAN:
return (s.equalsIgnoreCase("true"));
case FLOAT:
return Float.valueOf(s);
case DOUBLE:
return Double.valueOf(s);
case STRING:
return s;
case BINARY:
throw new IOException("JsonSerDe does not support BINARY type");
case DATE:
return Date.valueOf(s);
case TIMESTAMP:
return Timestamp.valueOf(s);
case DECIMAL:
return HiveDecimal.create(s);
case VARCHAR:
return new HiveVarchar(s,((BaseCharTypeInfo)mapKeyType).getLength());
case CHAR:
return new HiveChar(s,((BaseCharTypeInfo)mapKeyType).getLength());
}
throw new IOException("Could not convert from string to map type " + mapKeyType.getTypeName());
}
