{
  Table table=partitionedTableBuilder.addPartition(ASIA_INDIA).create(metaStoreClient);
  MutatorClient client=new MutatorClientBuilder().addSinkTable(table.getDbName(),table.getTableName(),true).metaStoreUri(metaStoreUri).build();
  client.connect();
  Transaction transaction=client.newTransaction();
  List<AcidTable> destinations=client.getTables();
  transaction.begin();
  MutatorFactory mutatorFactory=new ReflectiveMutatorFactory(conf,MutableRecord.class,RECORD_ID_COLUMN,BUCKET_COLUMN_INDEXES);
  MutatorCoordinator coordinator=new MutatorCoordinatorBuilder().metaStoreUri(metaStoreUri).table(destinations.get(0)).mutatorFactory(mutatorFactory).build();
  BucketIdResolver bucketIdResolver=mutatorFactory.newBucketIdResolver(destinations.get(0).getTotalBuckets());
  MutableRecord record1=(MutableRecord)bucketIdResolver.attachBucketIdToRecord(new MutableRecord(1,"Hello streaming"));
  MutableRecord record2=(MutableRecord)bucketIdResolver.attachBucketIdToRecord(new MutableRecord(2,"Welcome to streaming"));
  coordinator.insert(ASIA_INDIA,record1);
  coordinator.insert(ASIA_INDIA,record2);
  coordinator.close();
  transaction.abort();
  assertThat(transaction.getState(),is(ABORTED));
  client.close();
  StreamingAssert streamingAssertions=assertionFactory.newStreamingAssert(table,ASIA_INDIA);
  streamingAssertions.assertNothingWritten();
}
