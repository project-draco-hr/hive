{
  AcidOutputFormat.Options result=new AcidOutputFormat.Options(conf);
  String filename=bucketFile.getName();
  if (ORIGINAL_PATTERN.matcher(filename).matches()) {
    int bucket=Integer.parseInt(filename.substring(0,filename.indexOf('_')));
    result.setOldStyle(true).minimumTransactionId(0).maximumTransactionId(0).bucket(bucket).writingBase(true);
  }
 else   if (filename.startsWith(BUCKET_PREFIX)) {
    int bucket=Integer.parseInt(filename.substring(filename.indexOf('_') + 1));
    if (bucketFile.getParent().getName().startsWith(BASE_PREFIX)) {
      result.setOldStyle(false).minimumTransactionId(0).maximumTransactionId(parseBase(bucketFile.getParent())).bucket(bucket).writingBase(true);
    }
 else     if (bucketFile.getParent().getName().startsWith(DELTA_PREFIX)) {
      ParsedDelta parsedDelta=parsedDelta(bucketFile.getParent(),DELTA_PREFIX);
      result.setOldStyle(false).minimumTransactionId(parsedDelta.minTransaction).maximumTransactionId(parsedDelta.maxTransaction).bucket(bucket);
    }
 else     if (bucketFile.getParent().getName().startsWith(DELETE_DELTA_PREFIX)) {
      ParsedDelta parsedDelta=parsedDelta(bucketFile.getParent(),DELETE_DELTA_PREFIX);
      result.setOldStyle(false).minimumTransactionId(parsedDelta.minTransaction).maximumTransactionId(parsedDelta.maxTransaction).bucket(bucket);
    }
  }
 else {
    result.setOldStyle(true).bucket(-1).minimumTransactionId(0).maximumTransactionId(0);
  }
  return result;
}
