{
  if (currentTree.size() != 1) {
    throw new IllegalArgumentException("Failed to end " + currentTree.size() + " operations.");
  }
  ExpressionTree optimized=pushDownNot(root);
  optimized=foldMaybe(optimized);
  optimized=flatten(optimized);
  optimized=convertToCNF(optimized);
  optimized=flatten(optimized);
  int leafReorder[]=new int[leaves.size()];
  Arrays.fill(leafReorder,-1);
  int newLeafCount=compactLeaves(optimized,0,leafReorder);
  optimized=rewriteLeaves(optimized,leafReorder);
  ArrayList<PredicateLeaf> leafList=new ArrayList<>(newLeafCount);
  for (int i=0; i < newLeafCount; ++i) {
    leafList.add(null);
  }
  for (  Map.Entry<PredicateLeaf,Integer> elem : leaves.entrySet()) {
    int newLoc=leafReorder[elem.getValue()];
    if (newLoc != -1) {
      leafList.set(newLoc,elem.getKey());
    }
  }
  return new SearchArgumentImpl(optimized,leafList);
}
