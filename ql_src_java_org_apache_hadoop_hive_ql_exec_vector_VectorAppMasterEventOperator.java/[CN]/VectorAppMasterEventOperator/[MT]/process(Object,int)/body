{
  if (hasReachedMaxSize) {
    return;
  }
  VectorizedRowBatch batch=(VectorizedRowBatch)data;
  if (firstBatch) {
    vectorExtractRowDynBatch=new VectorExtractRowDynBatch();
    vectorExtractRowDynBatch.init((StructObjectInspector)inputObjInspectors[0],vContext.getProjectedColumns());
    singleRow=new Object[vectorExtractRowDynBatch.getCount()];
    firstBatch=false;
  }
  vectorExtractRowDynBatch.setBatchOnEntry(batch);
  ObjectInspector rowInspector=inputObjInspectors[0];
  try {
    Writable writableRow;
    if (batch.selectedInUse) {
      int selected[]=batch.selected;
      for (int logical=0; logical < batch.size; logical++) {
        int batchIndex=selected[logical];
        vectorExtractRowDynBatch.extractRow(batchIndex,singleRow);
        writableRow=serializer.serialize(singleRow,rowInspector);
        writableRow.write(buffer);
        if (buffer.getLength() > MAX_SIZE) {
          LOG.info("Disabling AM events. Buffer size too large: " + buffer.getLength());
          hasReachedMaxSize=true;
          buffer=null;
          break;
        }
      }
    }
 else {
      for (int batchIndex=0; batchIndex < batch.size; batchIndex++) {
        vectorExtractRowDynBatch.extractRow(batchIndex,singleRow);
        writableRow=serializer.serialize(singleRow,rowInspector);
        writableRow.write(buffer);
        if (buffer.getLength() > MAX_SIZE) {
          LOG.info("Disabling AM events. Buffer size too large: " + buffer.getLength());
          hasReachedMaxSize=true;
          buffer=null;
          break;
        }
      }
    }
  }
 catch (  Exception e) {
    throw new HiveException(e);
  }
  forward(data,rowInspector);
  vectorExtractRowDynBatch.forgetBatchOnExit();
}
