{
  this.type=type;
  this.nulls=nulls;
  if (type == Type.BOOLEAN_TYPE) {
    boolVars=(boolean[])values;
    size=boolVars.length;
  }
 else   if (type == Type.TINYINT_TYPE) {
    byteVars=(byte[])values;
    size=byteVars.length;
  }
 else   if (type == Type.SMALLINT_TYPE) {
    shortVars=(short[])values;
    size=shortVars.length;
  }
 else   if (type == Type.INT_TYPE) {
    intVars=(int[])values;
    size=intVars.length;
  }
 else   if (type == Type.BIGINT_TYPE) {
    longVars=(long[])values;
    size=longVars.length;
  }
 else   if (type == Type.DOUBLE_TYPE || type == Type.FLOAT_TYPE) {
    doubleVars=(double[])values;
    size=doubleVars.length;
  }
 else   if (type == Type.BINARY_TYPE) {
    binaryVars=(List<ByteBuffer>)values;
    size=binaryVars.size();
  }
 else   if (type == Type.STRING_TYPE) {
    stringVars=(List<String>)values;
    size=stringVars.size();
  }
 else {
    throw new IllegalStateException("invalid union object");
  }
}
