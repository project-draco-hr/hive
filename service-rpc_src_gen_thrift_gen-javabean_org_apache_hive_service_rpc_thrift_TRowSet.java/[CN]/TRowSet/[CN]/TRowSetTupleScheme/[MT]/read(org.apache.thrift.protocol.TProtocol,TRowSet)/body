{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  struct.startRowOffset=iprot.readI64();
  struct.setStartRowOffsetIsSet(true);
{
    org.apache.thrift.protocol.TList _list128=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
    struct.rows=new ArrayList<TRow>(_list128.size);
    TRow _elem129;
    for (int _i130=0; _i130 < _list128.size; ++_i130) {
      _elem129=new TRow();
      _elem129.read(iprot);
      struct.rows.add(_elem129);
    }
  }
  struct.setRowsIsSet(true);
  BitSet incoming=iprot.readBitSet(3);
  if (incoming.get(0)) {
{
      org.apache.thrift.protocol.TList _list131=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.columns=new ArrayList<TColumn>(_list131.size);
      TColumn _elem132;
      for (int _i133=0; _i133 < _list131.size; ++_i133) {
        _elem132=new TColumn();
        _elem132.read(iprot);
        struct.columns.add(_elem132);
      }
    }
    struct.setColumnsIsSet(true);
  }
  if (incoming.get(1)) {
    struct.binaryColumns=iprot.readBinary();
    struct.setBinaryColumnsIsSet(true);
  }
  if (incoming.get(2)) {
    struct.columnCount=iprot.readI32();
    struct.setColumnCountIsSet(true);
  }
}
