{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetStartRowOffset()).compareTo(other.isSetStartRowOffset());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetStartRowOffset()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.startRowOffset,other.startRowOffset);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRows()).compareTo(other.isSetRows());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRows()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.rows,other.rows);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetColumns()).compareTo(other.isSetColumns());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetColumns()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.columns,other.columns);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetBinaryColumns()).compareTo(other.isSetBinaryColumns());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetBinaryColumns()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.binaryColumns,other.binaryColumns);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetColumnCount()).compareTo(other.isSetColumnCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetColumnCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.columnCount,other.columnCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
