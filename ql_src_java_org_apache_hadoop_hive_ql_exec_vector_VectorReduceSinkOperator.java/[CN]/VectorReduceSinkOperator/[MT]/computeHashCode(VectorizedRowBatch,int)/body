{
  int keyHashCode=0;
  if (partitionEval.length == 0) {
    if (random == null) {
      random=new Random(12345);
    }
    keyHashCode=random.nextInt();
  }
 else {
    for (int p=0; p < partitionEval.length; p++) {
      ColumnVector columnVector=vrg.cols[partitionEval[p].getOutputColumn()];
      Object partitionValue=partitionWriters[p].writeValue(columnVector,rowIndex);
      keyHashCode=keyHashCode * 31 + ObjectInspectorUtils.hashCode(partitionValue,partitionWriters[p].getObjectInspector());
    }
  }
  return bucketNumber < 0 ? keyHashCode : keyHashCode * 31 + bucketNumber;
}
