{
  try {
    int port=10000;
    int minWorkerThreads=100;
    if (args.length >= 1) {
      port=Integer.parseInt(args[0]);
    }
    if (args.length >= 2) {
      minWorkerThreads=Integer.parseInt(args[1]);
    }
    TServerTransport serverTransport=new TServerSocket(port);
    ThriftHiveProcessorFactory hfactory=new ThriftHiveProcessorFactory(null);
    TThreadPoolServer.Options options=new TThreadPoolServer.Options();
    options.minWorkerThreads=minWorkerThreads;
    TServer server=new TThreadPoolServer(hfactory,serverTransport,new TTransportFactory(),new TTransportFactory(),new TBinaryProtocol.Factory(),new TBinaryProtocol.Factory(),options);
    HiveServerHandler.LOG.info("Starting hive server on port " + port);
    server.serve();
  }
 catch (  Exception x) {
    x.printStackTrace();
  }
}
