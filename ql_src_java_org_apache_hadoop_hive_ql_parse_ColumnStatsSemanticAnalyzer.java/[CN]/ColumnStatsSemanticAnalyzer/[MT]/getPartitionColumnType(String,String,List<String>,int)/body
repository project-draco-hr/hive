{
  List<String> colTypes=new LinkedList<String>();
  String colName;
  Table tbl;
  try {
    tbl=db.getTable(tableName);
  }
 catch (  HiveException e) {
    throw new SemanticException(ErrorMsg.INVALID_TABLE.getMsg(tableName));
  }
  List<String> partNames=new ArrayList<String>();
  partNames.add(partName);
  List<Partition> partitionList;
  try {
    partitionList=db.getPartitionsByNames(tbl,partNames);
  }
 catch (  HiveException e) {
    throw new SemanticException(ErrorMsg.INVALID_PARTITION.getMsg(partName));
  }
  Partition part=partitionList.get(0);
  List<FieldSchema> cols=part.getCols();
  for (int i=0; i < numCols; i++) {
    colName=colNames.get(i);
    for (    FieldSchema col : cols) {
      if (colName.equalsIgnoreCase(col.getName())) {
        colTypes.add(i,new String(col.getType()));
      }
    }
  }
  return colTypes;
}
