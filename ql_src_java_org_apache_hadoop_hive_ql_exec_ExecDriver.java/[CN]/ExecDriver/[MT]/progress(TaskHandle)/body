{
  ExecDriverTaskHandle th=(ExecDriverTaskHandle)taskHandle;
  JobClient jc=th.getJobClient();
  RunningJob rj=th.getRunningJob();
  String lastReport="";
  SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss,SSS");
  long reportTime=System.currentTimeMillis();
  long maxReportInterval=60 * 1000;
  while (!rj.isComplete()) {
    try {
      Thread.sleep(1000);
    }
 catch (    InterruptedException e) {
    }
    th.setRunningJob(jc.getJob(rj.getJobID()));
    updateCounters(th);
    String report=" map = " + this.mapProgress + "%,  reduce = "+ this.reduceProgress+ "%";
    if (!report.equals(lastReport) || System.currentTimeMillis() >= reportTime + maxReportInterval) {
      String output=dateFormat.format(Calendar.getInstance().getTime()) + report;
      SessionState ss=SessionState.get();
      if (ss != null) {
        ss.getHiveHistory().setTaskCounters(SessionState.get().getQueryId(),getId(),rj);
        ss.getHiveHistory().setTaskProperty(SessionState.get().getQueryId(),getId(),Keys.TASK_HADOOP_PROGRESS,output);
        ss.getHiveHistory().progressTask(SessionState.get().getQueryId(),this);
        ss.getHiveHistory().logPlanProgress(queryPlan);
      }
      console.printInfo(output);
      lastReport=report;
      reportTime=System.currentTimeMillis();
    }
  }
  setDone();
  th.setRunningJob(jc.getJob(rj.getJobID()));
  updateCounters(th);
  SessionState ss=SessionState.get();
  if (ss != null) {
    ss.getHiveHistory().logPlanProgress(queryPlan);
  }
}
