{
  try {
    StringBuilder sb=new StringBuilder();
    Properties deltaP=hconf.getChangedProperties();
    boolean hadoopLocalMode=hconf.getVar(HiveConf.ConfVars.HADOOPJT).equals("local");
    String hadoopSysDir="mapred.system.dir";
    String hadoopWorkDir="mapred.local.dir";
    for (    Object one : deltaP.keySet()) {
      String oneProp=(String)one;
      if (hadoopLocalMode && (oneProp.equals(hadoopSysDir) || oneProp.equals(hadoopWorkDir))) {
        continue;
      }
      String oneValue=deltaP.getProperty(oneProp);
      sb.append("-jobconf ");
      sb.append(oneProp);
      sb.append("=");
      sb.append(URLEncoder.encode(oneValue,"UTF-8"));
      sb.append(" ");
    }
    if (hadoopLocalMode) {
      sb.append("-jobconf ");
      sb.append(hadoopSysDir);
      sb.append("=");
      sb.append(URLEncoder.encode(hconf.get(hadoopSysDir) + "/" + Utilities.randGen.nextInt(),"UTF-8"));
      sb.append(" ");
      sb.append("-jobconf ");
      sb.append(hadoopWorkDir);
      sb.append("=");
      sb.append(URLEncoder.encode(hconf.get(hadoopWorkDir) + "/" + Utilities.randGen.nextInt(),"UTF-8"));
    }
    return sb.toString();
  }
 catch (  UnsupportedEncodingException e) {
    throw new RuntimeException(e);
  }
}
