{
switch (inspector.getCategory()) {
case PRIMITIVE:
    PrimitiveObjectInspector poi=(PrimitiveObjectInspector)inspector;
switch (poi.getPrimitiveCategory()) {
case BOOLEAN:
case BYTE:
case SHORT:
case INT:
case LONG:
case TIMESTAMP:
case DATE:
case INTERVAL_YEAR_MONTH:
case INTERVAL_DAY_TIME:
    return new LongColumnVector(VectorizedRowBatch.DEFAULT_SIZE);
case FLOAT:
case DOUBLE:
  return new DoubleColumnVector(VectorizedRowBatch.DEFAULT_SIZE);
case BINARY:
case STRING:
case CHAR:
case VARCHAR:
return new BytesColumnVector(VectorizedRowBatch.DEFAULT_SIZE);
case DECIMAL:
DecimalTypeInfo tInfo=(DecimalTypeInfo)poi.getTypeInfo();
return new DecimalColumnVector(VectorizedRowBatch.DEFAULT_SIZE,tInfo.precision(),tInfo.scale());
default :
throw new HiveException("Vectorizaton is not supported for datatype:" + poi.getPrimitiveCategory());
}
case STRUCT:
{
StructObjectInspector soi=(StructObjectInspector)inspector;
List<? extends StructField> fieldList=soi.getAllStructFieldRefs();
ColumnVector[] children=new ColumnVector[fieldList.size()];
for (int i=0; i < children.length; ++i) {
children[i]=createColumnVector(fieldList.get(i).getFieldObjectInspector());
}
return new StructColumnVector(VectorizedRowBatch.DEFAULT_SIZE,children);
}
case UNION:
{
UnionObjectInspector uoi=(UnionObjectInspector)inspector;
List<ObjectInspector> fieldList=uoi.getObjectInspectors();
ColumnVector[] children=new ColumnVector[fieldList.size()];
for (int i=0; i < children.length; ++i) {
children[i]=createColumnVector(fieldList.get(i));
}
return new UnionColumnVector(VectorizedRowBatch.DEFAULT_SIZE,children);
}
case LIST:
{
ListObjectInspector loi=(ListObjectInspector)inspector;
return new ListColumnVector(VectorizedRowBatch.DEFAULT_SIZE,createColumnVector(loi.getListElementObjectInspector()));
}
case MAP:
{
MapObjectInspector moi=(MapObjectInspector)inspector;
return new MapColumnVector(VectorizedRowBatch.DEFAULT_SIZE,createColumnVector(moi.getMapKeyObjectInspector()),createColumnVector(moi.getMapValueObjectInspector()));
}
default :
throw new HiveException("Vectorization is not supported for datatype:" + inspector.getCategory());
}
}
