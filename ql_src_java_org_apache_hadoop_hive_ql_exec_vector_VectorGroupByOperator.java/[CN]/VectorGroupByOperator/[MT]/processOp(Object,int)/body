{
  VectorizedRowBatch batch=(VectorizedRowBatch)row;
  keyWrappersBatch.evaluateBatch(batch);
  prepareBatchAggregationBufferSets(batch);
  processAggregators(batch);
  int preFlushEntriesCount=numEntriesHashTable;
  while (shouldFlush(batch)) {
    flush(false);
    if (gcCanary.get() == null) {
      gcCanaryFlushes++;
      gcCanary=new SoftReference<Object>(new Object());
    }
    if (!(numEntriesHashTable < preFlushEntriesCount)) {
      if (LOG.isDebugEnabled()) {
        LOG.debug(String.format("Flush did not progress: %d entries before, %d entries after",preFlushEntriesCount,numEntriesHashTable));
      }
      break;
    }
    preFlushEntriesCount=numEntriesHashTable;
  }
  if (sumBatchSize == 0 && 0 != batch.size) {
    updateAvgVariableSize(batch);
  }
  sumBatchSize+=batch.size;
}
