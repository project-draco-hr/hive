{
  if (!aborted) {
    Object[] forwardCache=new Object[keyExpressions.length + aggregators.length];
    if (keyExpressions.length == 0 && mapKeysAggregationBuffers.isEmpty()) {
      VectorAggregationBufferRow emptyBuffers=allocateAggregationBuffer();
      for (int i=0; i < aggregators.length; ++i) {
        forwardCache[i]=aggregators[i].evaluateOutput(emptyBuffers.getAggregationBuffer(i));
      }
      forward(forwardCache,outputObjInspector);
    }
 else {
      for (      Map.Entry<KeyWrapper,VectorAggregationBufferRow> pair : mapKeysAggregationBuffers.entrySet()) {
        int fi=0;
        for (int i=0; i < keyExpressions.length; ++i) {
          VectorHashKeyWrapper kw=(VectorHashKeyWrapper)pair.getKey();
          forwardCache[fi++]=keyWrappersBatch.getWritableKeyValue(kw,i);
        }
        for (int i=0; i < aggregators.length; ++i) {
          forwardCache[fi++]=aggregators[i].evaluateOutput(pair.getValue().getAggregationBuffer(i));
        }
        LOG.debug(String.format("forwarding keys: %s: %s",pair.getKey().toString(),Arrays.toString(forwardCache)));
        forward(forwardCache,outputObjInspector);
      }
    }
  }
}
