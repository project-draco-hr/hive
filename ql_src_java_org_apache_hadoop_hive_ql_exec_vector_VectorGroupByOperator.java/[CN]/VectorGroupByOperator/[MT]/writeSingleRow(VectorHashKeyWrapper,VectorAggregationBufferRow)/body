{
  int fi=0;
  if (!isVectorOutput) {
    for (int i=0; i < outputKeyLength; ++i) {
      forwardCache[fi++]=keyWrappersBatch.getWritableKeyValue(kw,i,keyOutputWriters[i]);
    }
    for (int i=0; i < aggregators.length; ++i) {
      forwardCache[fi++]=aggregators[i].evaluateOutput(agg.getAggregationBuffer(i));
    }
    forward(forwardCache,outputObjInspector);
  }
 else {
    for (int i=0; i < outputKeyLength; ++i) {
      vectorAssignRowSameBatch.assignRowColumn(outputBatch.size,fi++,keyWrappersBatch.getWritableKeyValue(kw,i,keyOutputWriters[i]));
    }
    for (int i=0; i < aggregators.length; ++i) {
      vectorAssignRowSameBatch.assignRowColumn(outputBatch.size,fi++,aggregators[i].evaluateOutput(agg.getAggregationBuffer(i)));
    }
    ++outputBatch.size;
    if (outputBatch.size == VectorizedRowBatch.DEFAULT_SIZE) {
      flushOutput();
    }
  }
}
