{
  this();
  GroupByDesc desc=(GroupByDesc)conf;
  this.conf=desc;
  List<ExprNodeDesc> keysDesc=desc.getKeys();
  keyExpressions=vContext.getVectorExpressions(keysDesc);
  ArrayList<AggregationDesc> aggrDesc=desc.getAggregators();
  aggregators=new VectorAggregateExpression[aggrDesc.size()];
  for (int i=0; i < aggrDesc.size(); ++i) {
    AggregationDesc aggDesc=aggrDesc.get(i);
    aggregators[i]=vContext.getAggregatorExpression(aggDesc,desc.getVectorDesc().isReduce());
  }
  isVectorOutput=desc.getVectorDesc().isVectorOutput();
  List<String> outColNames=desc.getOutputColumnNames();
  Map<String,Integer> mapOutCols=new HashMap<String,Integer>(outColNames.size());
  int outColIndex=0;
  for (  String outCol : outColNames) {
    mapOutCols.put(outCol,outColIndex++);
  }
  vOutContext=new VectorizationContext(mapOutCols,outColIndex);
  vOutContext.setFileKey(vContext.getFileKey() + "/_GROUPBY_");
  fileKey=vOutContext.getFileKey();
}
