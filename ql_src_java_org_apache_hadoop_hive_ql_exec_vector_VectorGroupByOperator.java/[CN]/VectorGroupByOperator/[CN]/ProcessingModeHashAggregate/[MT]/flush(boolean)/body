{
  int entriesToFlush=all ? numEntriesHashTable : (int)(numEntriesHashTable * this.percentEntriesToFlush);
  int entriesFlushed=0;
  if (LOG.isDebugEnabled()) {
    LOG.debug(String.format("Flush %d %s entries:%d fixed:%d variable:%d (used:%dMb max:%dMb) gcCanary:%s",entriesToFlush,all ? "(all)" : "",numEntriesHashTable,fixedHashEntrySize,avgVariableSize,numEntriesHashTable * (fixedHashEntrySize + avgVariableSize) / 1024 / 1024,maxHashTblMemory / 1024 / 1024,gcCanary.get() == null ? "dead" : "alive"));
  }
  Iterator<Map.Entry<KeyWrapper,VectorAggregationBufferRow>> iter=mapKeysAggregationBuffers.entrySet().iterator();
  while (iter.hasNext()) {
    Map.Entry<KeyWrapper,VectorAggregationBufferRow> pair=iter.next();
    writeSingleRow((VectorHashKeyWrapper)pair.getKey(),pair.getValue());
    if (!all) {
      iter.remove();
      --numEntriesHashTable;
      if (++entriesFlushed >= entriesToFlush) {
        break;
      }
    }
  }
  if (all) {
    mapKeysAggregationBuffers.clear();
    numEntriesHashTable=0;
  }
  if (all && LOG.isDebugEnabled()) {
    LOG.debug(String.format("GC canary caused %d flushes",gcCanaryFlushes));
  }
}
