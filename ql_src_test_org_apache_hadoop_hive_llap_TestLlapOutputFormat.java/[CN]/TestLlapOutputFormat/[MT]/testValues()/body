{
  JobConf job=new JobConf();
  for (int k=0; k < 5; ++k) {
    String id="foobar" + k;
    job.set(LlapOutputFormat.LLAP_OF_ID_KEY,id);
    LlapOutputFormat format=new LlapOutputFormat();
    HiveConf conf=new HiveConf();
    Socket socket=new Socket("localhost",conf.getIntVar(HiveConf.ConfVars.LLAP_DAEMON_OUTPUT_SERVICE_PORT));
    LOG.debug("Socket connected");
    socket.getOutputStream().write(id.getBytes());
    socket.getOutputStream().write(0);
    socket.getOutputStream().flush();
    Thread.sleep(3000);
    LOG.debug("Data written");
    RecordWriter<NullWritable,Text> writer=format.getRecordWriter(null,job,null,null);
    Text text=new Text();
    LOG.debug("Have record writer");
    for (int i=0; i < 10; ++i) {
      text.set("" + i);
      writer.write(NullWritable.get(),text);
    }
    writer.close(null);
    InputStream in=socket.getInputStream();
    RecordReader reader=new LlapRecordReader(in,null,Text.class);
    LOG.debug("Have record reader");
    int count=0;
    while (reader.next(NullWritable.get(),text)) {
      LOG.debug(text.toString());
      count++;
    }
    reader.close();
    Assert.assertEquals(count,10);
  }
}
