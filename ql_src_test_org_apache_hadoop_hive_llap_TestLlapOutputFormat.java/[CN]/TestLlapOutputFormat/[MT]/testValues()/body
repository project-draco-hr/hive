{
  JobConf job=new JobConf();
  for (int k=0; k < 5; ++k) {
    String id="foobar" + k;
    job.set(LlapOutputFormat.LLAP_OF_ID_KEY,id);
    LlapOutputFormat format=new LlapOutputFormat();
    HiveConf conf=new HiveConf();
    Socket socket=new Socket("localhost",service.getPort());
    LOG.debug("Socket connected");
    OutputStream socketStream=socket.getOutputStream();
    LlapOutputSocketInitMessage.newBuilder().setFragmentId(id).build().writeDelimitedTo(socketStream);
    socketStream.flush();
    Thread.sleep(3000);
    LOG.debug("Data written");
    RecordWriter<NullWritable,Text> writer=format.getRecordWriter(null,job,null,null);
    Text text=new Text();
    LOG.debug("Have record writer");
    for (int i=0; i < 10; ++i) {
      text.set("" + i);
      writer.write(NullWritable.get(),text);
    }
    writer.close(null);
    InputStream in=socket.getInputStream();
    LlapBaseRecordReader reader=new LlapBaseRecordReader(in,null,Text.class,job,null);
    LOG.debug("Have record reader");
    reader.handleEvent(ReaderEvent.doneEvent());
    int count=0;
    while (reader.next(NullWritable.get(),text)) {
      LOG.debug(text.toString());
      count++;
    }
    reader.close();
    Assert.assertEquals(10,count);
  }
}
