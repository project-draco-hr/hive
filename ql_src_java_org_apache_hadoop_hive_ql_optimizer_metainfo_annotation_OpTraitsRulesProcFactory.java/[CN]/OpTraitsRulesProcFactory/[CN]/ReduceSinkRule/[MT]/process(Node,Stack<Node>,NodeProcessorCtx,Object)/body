{
  ReduceSinkOperator rs=(ReduceSinkOperator)nd;
  List<String> bucketCols=new ArrayList<String>();
  if (rs.getColumnExprMap() != null) {
    for (    ExprNodeDesc exprDesc : rs.getConf().getKeyCols()) {
      for (      Entry<String,ExprNodeDesc> entry : rs.getColumnExprMap().entrySet()) {
        if (exprDesc.isSame(entry.getValue())) {
          bucketCols.add(entry.getKey());
        }
      }
    }
  }
  List<List<String>> listBucketCols=new ArrayList<List<String>>();
  listBucketCols.add(bucketCols);
  int numBuckets=-1;
  OpTraits parentOpTraits=rs.getParentOperators().get(0).getConf().getTraits();
  if (parentOpTraits != null) {
    numBuckets=parentOpTraits.getNumBuckets();
  }
  OpTraits opTraits=new OpTraits(listBucketCols,numBuckets,listBucketCols);
  rs.setOpTraits(opTraits);
  return null;
}
