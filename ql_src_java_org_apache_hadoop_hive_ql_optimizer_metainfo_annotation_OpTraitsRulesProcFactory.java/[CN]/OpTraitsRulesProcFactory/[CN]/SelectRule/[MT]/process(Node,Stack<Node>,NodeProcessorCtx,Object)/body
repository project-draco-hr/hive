{
  SelectOperator selOp=(SelectOperator)nd;
  List<List<String>> parentBucketColNames=selOp.getParentOperators().get(0).getOpTraits().getBucketColNames();
  List<List<String>> listBucketCols=new ArrayList<List<String>>();
  if (selOp.getColumnExprMap() != null) {
    if (parentBucketColNames != null) {
      for (      List<String> colNames : parentBucketColNames) {
        List<String> bucketColNames=new ArrayList<String>();
        for (        String colName : colNames) {
          for (          Entry<String,ExprNodeDesc> entry : selOp.getColumnExprMap().entrySet()) {
            if (entry.getValue() instanceof ExprNodeColumnDesc) {
              if (((ExprNodeColumnDesc)(entry.getValue())).getColumn().equals(colName)) {
                bucketColNames.add(entry.getKey());
              }
            }
          }
        }
        listBucketCols.add(bucketColNames);
      }
    }
  }
  int numBuckets=-1;
  if (selOp.getParentOperators().get(0).getOpTraits() != null) {
    numBuckets=selOp.getParentOperators().get(0).getOpTraits().getNumBuckets();
  }
  OpTraits opTraits=new OpTraits(listBucketCols,numBuckets);
  selOp.setOpTraits(opTraits);
  return null;
}
