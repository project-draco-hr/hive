{
  Map<String,Object> props=new HashMap<String,Object>();
  props.put("comment","Table in default db");
  Map<String,Object> col=new HashMap<String,Object>();
  col.put("name","col1");
  col.put("type","string");
  List<Map<String,Object>> colList=new ArrayList<Map<String,Object>>(1);
  colList.add(col);
  props.put("columns",colList);
  Map<String,Object> format=new HashMap<String,Object>();
  format.put("storedAs","rcfile");
  props.put("format",format);
  MethodCallRetVal createTbl=doHttpCall(templetonBaseUrl + "/ddl/database/default/table/test_table",HTTP_METHOD_TYPE.PUT,props,null);
  Assert.assertEquals(createTbl.getAssertMsg(),HttpStatus.OK_200,createTbl.httpStatusCode);
  LOG.info("createTable() resp: " + createTbl.responseBody);
  MethodCallRetVal descTbl=doHttpCall(templetonBaseUrl + "/ddl/database/default/table/test_table",HTTP_METHOD_TYPE.GET);
  Assert.assertEquals(descTbl.getAssertMsg(),HttpStatus.OK_200,descTbl.httpStatusCode);
}
