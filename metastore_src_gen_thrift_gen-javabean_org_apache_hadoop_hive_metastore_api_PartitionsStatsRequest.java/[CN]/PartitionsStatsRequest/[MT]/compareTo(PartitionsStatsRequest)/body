{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  PartitionsStatsRequest typedOther=(PartitionsStatsRequest)other;
  lastComparison=Boolean.valueOf(isSetDbName()).compareTo(typedOther.isSetDbName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDbName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.dbName,typedOther.dbName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTblName()).compareTo(typedOther.isSetTblName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTblName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.tblName,typedOther.tblName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetColNames()).compareTo(typedOther.isSetColNames());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetColNames()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.colNames,typedOther.colNames);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetPartNames()).compareTo(typedOther.isSetPartNames());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetPartNames()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.partNames,typedOther.partNames);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
