{
  Map<String,List<Dependency>> result=new LinkedHashMap<String,List<Dependency>>();
  for (  Map.Entry<BaseWork,List<BaseWork>> entry : invertedWorkGraph.entrySet()) {
    List<Dependency> dependencies=new LinkedList<Dependency>();
    for (    BaseWork d : entry.getValue()) {
      Dependency dependency=new Dependency();
      dependency.w=d;
      dependency.prop=getEdgeProperty(d,entry.getKey());
      dependencies.add(dependency);
    }
    if (!dependencies.isEmpty()) {
      Collections.sort(dependencies);
      result.put(entry.getKey().getName(),dependencies);
    }
  }
  return result;
}
