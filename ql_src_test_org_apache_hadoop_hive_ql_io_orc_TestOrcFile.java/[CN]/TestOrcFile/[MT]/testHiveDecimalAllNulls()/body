{
  ObjectInspector inspector;
synchronized (TestOrcFile.class) {
    inspector=ObjectInspectorFactory.getReflectionObjectInspector(DecimalStruct.class,ObjectInspectorFactory.ObjectInspectorOptions.JAVA);
  }
  Writer writer=OrcFile.createWriter(testFilePath,OrcFile.writerOptions(conf).inspector(inspector).stripeSize(100000).bufferSize(10000));
  writer.addRow(new DecimalStruct(new HiveDecimalWritable("1.463040009E9".getBytes(),8)));
  writer.addRow(new DecimalStruct(null));
  writer.close();
  Reader reader=OrcFile.createReader(testFilePath,OrcFile.readerOptions(conf).filesystem(fs));
  StructObjectInspector readerInspector=(StructObjectInspector)reader.getObjectInspector();
  List<? extends StructField> fields=readerInspector.getAllStructFieldRefs();
  HiveDecimalObjectInspector doi=(HiveDecimalObjectInspector)readerInspector.getStructFieldRef("dec").getFieldObjectInspector();
  RecordReader rows=reader.rows(null);
  while (rows.hasNext()) {
    Object row=rows.next(null);
    assertEquals(null,doi.getPrimitiveWritableObject(readerInspector.getStructFieldData(row,fields.get(0))));
  }
  ColumnStatistics[] stats=reader.getStatistics();
  assertEquals(2,stats[0].getNumberOfValues());
  assertEquals(0,stats[1].getNumberOfValues());
  assertEquals(true,stats[1].hasNull());
}
