{
  ObjectInspector inspector;
synchronized (TestOrcFile.class) {
    inspector=ObjectInspectorFactory.getReflectionObjectInspector(Timestamp.class,ObjectInspectorFactory.ObjectInspectorOptions.JAVA);
  }
  Writer writer=OrcFile.createWriter(testFilePath,OrcFile.writerOptions(conf).inspector(inspector).stripeSize(100000).bufferSize(10000).version(OrcFile.Version.V_0_11));
  List<Timestamp> tslist=Lists.newArrayList();
  tslist.add(Timestamp.valueOf("9999-01-01 00:00:00.000999"));
  tslist.add(Timestamp.valueOf("2003-01-01 00:00:00.000000222"));
  tslist.add(Timestamp.valueOf("1999-01-01 00:00:00.999999999"));
  tslist.add(Timestamp.valueOf("1995-01-01 00:00:00.688888888"));
  tslist.add(Timestamp.valueOf("2002-01-01 00:00:00.1"));
  tslist.add(Timestamp.valueOf("2010-03-02 00:00:00.000009001"));
  tslist.add(Timestamp.valueOf("2005-01-01 00:00:00.000002229"));
  tslist.add(Timestamp.valueOf("2006-01-01 00:00:00.900203003"));
  tslist.add(Timestamp.valueOf("2003-01-01 00:00:00.800000007"));
  tslist.add(Timestamp.valueOf("1996-08-02 00:00:00.723100809"));
  tslist.add(Timestamp.valueOf("1998-11-02 00:00:00.857340643"));
  tslist.add(Timestamp.valueOf("2008-10-02 00:00:00"));
  for (  Timestamp ts : tslist) {
    writer.addRow(ts);
  }
  writer.close();
  Reader reader=OrcFile.createReader(testFilePath,OrcFile.readerOptions(conf).filesystem(fs));
  RecordReader rows=reader.rows(null);
  int idx=0;
  while (rows.hasNext()) {
    Object row=rows.next(null);
    assertEquals(tslist.get(idx++).getNanos(),((TimestampWritable)row).getNanos());
  }
  assertEquals(1,OrcUtils.getFlattenedColumnsCount(inspector));
  boolean[] expected=new boolean[]{false};
  boolean[] included=OrcUtils.includeColumns("","ts",inspector);
  assertEquals(true,Arrays.equals(expected,included));
}
