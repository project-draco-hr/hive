{
  ObjectInspector inspector;
synchronized (TestOrcFile.class) {
    inspector=ObjectInspectorFactory.getReflectionObjectInspector(InnerStruct.class,ObjectInspectorFactory.ObjectInspectorOptions.JAVA);
  }
  Writer writer=OrcFile.createWriter(testFilePath,OrcFile.writerOptions(conf).inspector(inspector).stripeSize(1000).compress(CompressionKind.SNAPPY).bufferSize(100));
  Random rand=new Random(12);
  for (int i=0; i < 10000; ++i) {
    writer.addRow(new InnerStruct(rand.nextInt(),Integer.toHexString(rand.nextInt())));
  }
  writer.close();
  Reader reader=OrcFile.createReader(testFilePath,OrcFile.readerOptions(conf).filesystem(fs));
  RecordReader rows=reader.rows();
  rand=new Random(12);
  OrcStruct row=null;
  for (int i=0; i < 10000; ++i) {
    assertEquals(true,rows.hasNext());
    row=(OrcStruct)rows.next(row);
    assertEquals(rand.nextInt(),((IntWritable)row.getFieldValue(0)).get());
    assertEquals(Integer.toHexString(rand.nextInt()),row.getFieldValue(1).toString());
  }
  assertEquals(false,rows.hasNext());
  rows.close();
}
