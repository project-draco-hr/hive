{
  ObjectInspector inspector;
synchronized (TestOrcFile.class) {
    inspector=ObjectInspectorFactory.getReflectionObjectInspector(InnerStruct.class,ObjectInspectorFactory.ObjectInspectorOptions.JAVA);
  }
  Writer writer=OrcFile.createWriter(testFilePath,OrcFile.writerOptions(conf).inspector(inspector).stripeSize(5000).compress(CompressionKind.SNAPPY).bufferSize(1000).rowIndexStride(0));
  Random rand=new Random(24);
  for (int i=0; i < 10000; ++i) {
    InnerStruct row=new InnerStruct(rand.nextInt(),Integer.toBinaryString(rand.nextInt()));
    for (int j=0; j < 5; ++j) {
      writer.addRow(row);
    }
  }
  writer.close();
  Reader reader=OrcFile.createReader(testFilePath,OrcFile.readerOptions(conf).filesystem(fs));
  assertEquals(50000,reader.getNumberOfRows());
  assertEquals(0,reader.getRowIndexStride());
  StripeInformation stripe=reader.getStripes().iterator().next();
  assertEquals(true,stripe.getDataLength() != 0);
  assertEquals(0,stripe.getIndexLength());
  RecordReader rows=reader.rows();
  rand=new Random(24);
  OrcStruct row=null;
  for (int i=0; i < 10000; ++i) {
    int intVal=rand.nextInt();
    String strVal=Integer.toBinaryString(rand.nextInt());
    for (int j=0; j < 5; ++j) {
      assertEquals(true,rows.hasNext());
      row=(OrcStruct)rows.next(row);
      assertEquals(intVal,((IntWritable)row.getFieldValue(0)).get());
      assertEquals(strVal,row.getFieldValue(1).toString());
    }
  }
  assertEquals(false,rows.hasNext());
  rows.close();
}
