{
  ObjectInspector inspector;
synchronized (TestOrcFile.class) {
    inspector=ObjectInspectorFactory.getReflectionObjectInspector(MyList.class,ObjectInspectorFactory.ObjectInspectorOptions.JAVA);
  }
  Writer writer=OrcFile.createWriter(testFilePath,OrcFile.writerOptions(conf).inspector(inspector));
  MyList row=new MyList();
  row.list.add(1);
  row.list.add(2);
  row.list.add(3);
  writer.addRow(row);
  row.list.clear();
  writer.addRow(row);
  row.list.add(11);
  row.list.add(12);
  writer.addRow(row);
  row.list=null;
  writer.addRow(row);
  row.list=new ArrayList<>();
  row.list.add(21);
  row.list.add(22);
  row.list.add(23);
  row.list.add(24);
  writer.addRow(row);
  writer.close();
  RecordReader reader=OrcFile.createReader(testFilePath,OrcFile.readerOptions(conf)).rows();
  assertEquals(true,reader.hasNext());
  OrcStruct orcrow=(OrcStruct)reader.next(null);
  assertEquals(3,((List<IntWritable>)orcrow.getFieldValue(0)).size());
  orcrow=(OrcStruct)reader.next(row);
  assertEquals(0,((List<IntWritable>)orcrow.getFieldValue(0)).size());
  orcrow=(OrcStruct)reader.next(row);
  assertEquals(2,((List<IntWritable>)orcrow.getFieldValue(0)).size());
  assertEquals(null,((OrcStruct)reader.next(row)).getFieldValue(0));
  orcrow=(OrcStruct)reader.next(row);
  assertEquals(4,((List<IntWritable>)orcrow.getFieldValue(0)).size());
  assertEquals(false,reader.hasNext());
  reader.close();
}
