{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetDb_patterns()).compareTo(other.isSetDb_patterns());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDb_patterns()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.db_patterns,other.db_patterns);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTbl_patterns()).compareTo(other.isSetTbl_patterns());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTbl_patterns()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.tbl_patterns,other.tbl_patterns);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTbl_types()).compareTo(other.isSetTbl_types());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTbl_types()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.tbl_types,other.tbl_types);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
