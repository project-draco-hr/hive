{
  org.apache.thrift.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift.protocol.TType.STRING) {
        this.db_name=iprot.readString();
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift.protocol.TType.STRING) {
    this.tbl_name=iprot.readString();
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift.protocol.TType.MAP) {
{
  org.apache.thrift.protocol.TMap _map262=iprot.readMapBegin();
  this.part_vals=new HashMap<String,String>(2 * _map262.size);
  for (int _i263=0; _i263 < _map262.size; ++_i263) {
    String _key264;
    String _val265;
    _key264=iprot.readString();
    _val265=iprot.readString();
    this.part_vals.put(_key264,_val265);
  }
  iprot.readMapEnd();
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 4:
if (field.type == org.apache.thrift.protocol.TType.I32) {
this.eventType=PartitionEventType.findByValue(iprot.readI32());
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
