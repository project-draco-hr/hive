{
  org.apache.thrift.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 0:
      if (field.type == org.apache.thrift.protocol.TType.LIST) {
{
          org.apache.thrift.protocol.TList _list247=iprot.readListBegin();
          this.success=new ArrayList<Index>(_list247.size);
          for (int _i248=0; _i248 < _list247.size; ++_i248) {
            Index _elem249;
            _elem249=new Index();
            _elem249.read(iprot);
            this.success.add(_elem249);
          }
          iprot.readListEnd();
        }
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 1:
  if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
    this.o1=new NoSuchObjectException();
    this.o1.read(iprot);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 2:
if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
this.o2=new MetaException();
this.o2.read(iprot);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
