{
  for (  taskTuple<? extends Serializable> t : taskvec) {
    if (t.workClass == workClass) {
      try {
        Task<T> ret=(Task<T>)t.taskClass.newInstance();
        ret.setId("Stage-" + Integer.toString(getAndIncrementId()));
        return ret;
      }
 catch (      Exception e) {
        throw new RuntimeException(e);
      }
    }
  }
  if (workClass == MapredWork.class) {
    boolean viachild=conf.getBoolVar(HiveConf.ConfVars.SUBMITVIACHILD);
    try {
      Task<T> ret=null;
      if (conf.getVar(HiveConf.ConfVars.HADOOPJT).equals("local") || viachild) {
        ret=(Task<T>)MapRedTask.class.newInstance();
      }
 else {
        ret=(Task<T>)ExecDriver.class.newInstance();
      }
      ret.setId("Stage-" + Integer.toString(getAndIncrementId()));
      return ret;
    }
 catch (    Exception e) {
      throw new RuntimeException(e.getMessage(),e);
    }
  }
  throw new RuntimeException("No task for work class " + workClass.getName());
}
