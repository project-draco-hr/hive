{
  if (childExpressions != null) {
    super.evaluateChildren(batch);
  }
  BytesColumnVector inputColVector1=(BytesColumnVector)batch.cols[colNum1];
  BytesColumnVector inputColVector2=(BytesColumnVector)batch.cols[colNum2];
  int[] sel=batch.selected;
  boolean[] nullPos1=inputColVector1.isNull;
  boolean[] nullPos2=inputColVector2.isNull;
  int n=batch.size;
  byte[][] vector1=inputColVector1.vector;
  byte[][] vector2=inputColVector2.vector;
  int[] start1=inputColVector1.start;
  int[] start2=inputColVector2.start;
  int[] length1=inputColVector1.length;
  int[] length2=inputColVector2.length;
  if (n == 0) {
    return;
  }
  if (inputColVector1.noNulls && inputColVector2.noNulls) {
    if (inputColVector1.isRepeating && inputColVector2.isRepeating) {
      if (!(StringExpr.compare(vector1[0],start1[0],length1[0],vector2[0],start2[0],length2[0]) != 0)) {
        batch.size=0;
      }
    }
 else     if (inputColVector1.isRepeating) {
      if (batch.selectedInUse) {
        int newSize=0;
        for (int j=0; j != n; j++) {
          int i=sel[j];
          if (StringExpr.compare(vector1[0],start1[0],length1[0],vector2[i],start2[i],length2[i]) != 0) {
            sel[newSize++]=i;
          }
        }
        batch.size=newSize;
      }
 else {
        int newSize=0;
        for (int i=0; i != n; i++) {
          if (StringExpr.compare(vector1[0],start1[0],length1[0],vector2[i],start2[i],length2[i]) != 0) {
            sel[newSize++]=i;
          }
        }
        if (newSize < batch.size) {
          batch.size=newSize;
          batch.selectedInUse=true;
        }
      }
    }
 else     if (inputColVector2.isRepeating) {
      if (batch.selectedInUse) {
        int newSize=0;
        for (int j=0; j != n; j++) {
          int i=sel[j];
          if (StringExpr.compare(vector1[i],start1[i],length1[i],vector2[0],start2[0],length2[0]) != 0) {
            sel[newSize++]=i;
          }
        }
        batch.size=newSize;
      }
 else {
        int newSize=0;
        for (int i=0; i != n; i++) {
          if (StringExpr.compare(vector1[i],start1[i],length1[i],vector2[0],start2[0],length2[0]) != 0) {
            sel[newSize++]=i;
          }
        }
        if (newSize < batch.size) {
          batch.size=newSize;
          batch.selectedInUse=true;
        }
      }
    }
 else     if (batch.selectedInUse) {
      int newSize=0;
      for (int j=0; j != n; j++) {
        int i=sel[j];
        if (StringExpr.compare(vector1[i],start1[i],length1[i],vector2[i],start2[i],length2[i]) != 0) {
          sel[newSize++]=i;
        }
      }
      batch.size=newSize;
    }
 else {
      int newSize=0;
      for (int i=0; i != n; i++) {
        if (StringExpr.compare(vector1[i],start1[i],length1[i],vector2[i],start2[i],length2[i]) != 0) {
          sel[newSize++]=i;
        }
      }
      if (newSize < batch.size) {
        batch.size=newSize;
        batch.selectedInUse=true;
      }
    }
  }
 else   if (inputColVector1.noNulls) {
    if (inputColVector1.isRepeating && inputColVector2.isRepeating) {
      if (nullPos2[0] || !(StringExpr.compare(vector1[0],start1[0],length1[0],vector2[0],start2[0],length2[0]) != 0)) {
        batch.size=0;
      }
    }
 else     if (inputColVector1.isRepeating) {
      if (batch.selectedInUse) {
        int newSize=0;
        for (int j=0; j != n; j++) {
          int i=sel[j];
          if (!nullPos2[i]) {
            if (StringExpr.compare(vector1[0],start1[0],length1[0],vector2[i],start2[i],length2[i]) != 0) {
              sel[newSize++]=i;
            }
          }
        }
        batch.size=newSize;
      }
 else {
        int newSize=0;
        for (int i=0; i != n; i++) {
          if (!nullPos2[i]) {
            if (StringExpr.compare(vector1[0],start1[0],length1[0],vector2[i],start2[i],length2[i]) != 0) {
              sel[newSize++]=i;
            }
          }
        }
        if (newSize < batch.size) {
          batch.size=newSize;
          batch.selectedInUse=true;
        }
      }
    }
 else     if (inputColVector2.isRepeating) {
      if (nullPos2[0]) {
        batch.size=0;
        return;
      }
      if (batch.selectedInUse) {
        int newSize=0;
        for (int j=0; j != n; j++) {
          int i=sel[j];
          if (StringExpr.compare(vector1[i],start1[i],length1[i],vector2[0],start2[0],length2[0]) != 0) {
            sel[newSize++]=i;
          }
        }
        batch.size=newSize;
      }
 else {
        int newSize=0;
        for (int i=0; i != n; i++) {
          if (StringExpr.compare(vector1[i],start1[i],length1[i],vector2[0],start2[0],length2[0]) != 0) {
            sel[newSize++]=i;
          }
        }
        if (newSize < batch.size) {
          batch.size=newSize;
          batch.selectedInUse=true;
        }
      }
    }
 else {
      if (batch.selectedInUse) {
        int newSize=0;
        for (int j=0; j != n; j++) {
          int i=sel[j];
          if (!nullPos2[i]) {
            if (StringExpr.compare(vector1[i],start1[i],length1[i],vector2[i],start2[i],length2[i]) != 0) {
              sel[newSize++]=i;
            }
          }
        }
        batch.size=newSize;
      }
 else {
        int newSize=0;
        for (int i=0; i != n; i++) {
          if (!nullPos2[i]) {
            if (StringExpr.compare(vector1[i],start1[i],length1[i],vector2[i],start2[i],length2[i]) != 0) {
              sel[newSize++]=i;
            }
          }
        }
        if (newSize < batch.size) {
          batch.size=newSize;
          batch.selectedInUse=true;
        }
      }
    }
  }
 else   if (inputColVector2.noNulls) {
    if (inputColVector1.isRepeating && inputColVector2.isRepeating) {
      if (nullPos1[0] || !(StringExpr.compare(vector1[0],start1[0],length1[0],vector2[0],start2[0],length2[0]) != 0)) {
        batch.size=0;
        return;
      }
    }
 else     if (inputColVector1.isRepeating) {
      if (nullPos1[0]) {
        batch.size=0;
        return;
      }
      if (batch.selectedInUse) {
        int newSize=0;
        for (int j=0; j != n; j++) {
          int i=sel[j];
          if (StringExpr.compare(vector1[0],start1[0],length1[0],vector2[i],start2[i],length2[i]) != 0) {
            sel[newSize++]=i;
          }
        }
        batch.size=newSize;
      }
 else {
        int newSize=0;
        for (int i=0; i != n; i++) {
          if (StringExpr.compare(vector1[0],start1[0],length1[0],vector2[i],start2[i],length2[i]) != 0) {
            sel[newSize++]=i;
          }
        }
        if (newSize < batch.size) {
          batch.size=newSize;
          batch.selectedInUse=true;
        }
      }
    }
 else     if (inputColVector2.isRepeating) {
      if (batch.selectedInUse) {
        int newSize=0;
        for (int j=0; j != n; j++) {
          int i=sel[j];
          if (!nullPos1[i]) {
            if (StringExpr.compare(vector1[i],start1[i],length1[i],vector2[0],start2[0],length2[0]) != 0) {
              sel[newSize++]=i;
            }
          }
        }
        batch.size=newSize;
      }
 else {
        int newSize=0;
        for (int i=0; i != n; i++) {
          if (!nullPos2[i]) {
            if (StringExpr.compare(vector1[i],start1[i],length1[i],vector2[0],start2[0],length2[0]) != 0) {
              sel[newSize++]=i;
            }
          }
        }
        if (newSize < batch.size) {
          batch.size=newSize;
          batch.selectedInUse=true;
        }
      }
    }
 else {
      if (batch.selectedInUse) {
        int newSize=0;
        for (int j=0; j != n; j++) {
          int i=sel[j];
          if (!nullPos1[i]) {
            if (StringExpr.compare(vector1[i],start1[i],length1[i],vector2[i],start2[i],length2[i]) != 0) {
              sel[newSize++]=i;
            }
          }
        }
        batch.size=newSize;
      }
 else {
        int newSize=0;
        for (int i=0; i != n; i++) {
          if (!nullPos1[i]) {
            if (StringExpr.compare(vector1[i],start1[i],length1[i],vector2[i],start2[i],length2[i]) != 0) {
              sel[newSize++]=i;
            }
          }
        }
        if (newSize < batch.size) {
          batch.size=newSize;
          batch.selectedInUse=true;
        }
      }
    }
  }
 else {
    if (inputColVector1.isRepeating && inputColVector2.isRepeating) {
      if (nullPos1[0] || nullPos2[0] || !(StringExpr.compare(vector1[0],start1[0],length1[0],vector2[0],start2[0],length2[0]) != 0)) {
        batch.size=0;
      }
    }
 else     if (inputColVector1.isRepeating) {
      if (nullPos1[0]) {
        batch.size=0;
        return;
      }
      if (batch.selectedInUse) {
        int newSize=0;
        for (int j=0; j != n; j++) {
          int i=sel[j];
          if (!nullPos2[i]) {
            if (StringExpr.compare(vector1[0],start1[0],length1[0],vector2[i],start2[i],length2[i]) != 0) {
              sel[newSize++]=i;
            }
          }
        }
        batch.size=newSize;
      }
 else {
        int newSize=0;
        for (int i=0; i != n; i++) {
          if (!nullPos2[i]) {
            if (StringExpr.compare(vector1[0],start1[0],length1[0],vector2[i],start2[i],length2[i]) != 0) {
              sel[newSize++]=i;
            }
          }
        }
        if (newSize < batch.size) {
          batch.size=newSize;
          batch.selectedInUse=true;
        }
      }
    }
 else     if (inputColVector2.isRepeating) {
      if (nullPos2[0]) {
        batch.size=0;
        return;
      }
      if (batch.selectedInUse) {
        int newSize=0;
        for (int j=0; j != n; j++) {
          int i=sel[j];
          if (!nullPos1[i]) {
            if (StringExpr.compare(vector1[i],start1[i],length1[i],vector2[0],start2[0],length2[0]) != 0) {
              sel[newSize++]=i;
            }
          }
        }
        batch.size=newSize;
      }
 else {
        int newSize=0;
        for (int i=0; i != n; i++) {
          if (!nullPos1[i]) {
            if (StringExpr.compare(vector1[i],start1[i],length1[i],vector2[0],start2[0],length2[0]) != 0) {
              sel[newSize++]=i;
            }
          }
        }
        if (newSize < batch.size) {
          batch.size=newSize;
          batch.selectedInUse=true;
        }
      }
    }
 else {
      if (batch.selectedInUse) {
        int newSize=0;
        for (int j=0; j != n; j++) {
          int i=sel[j];
          if (!nullPos1[i] && !nullPos2[i]) {
            if (StringExpr.compare(vector1[i],start1[i],length1[i],vector2[i],start2[i],length2[i]) != 0) {
              sel[newSize++]=i;
            }
          }
        }
        batch.size=newSize;
      }
 else {
        int newSize=0;
        for (int i=0; i != n; i++) {
          if (!nullPos1[i] && !nullPos2[i]) {
            if (StringExpr.compare(vector1[i],start1[i],length1[i],vector2[i],start2[i],length2[i]) != 0) {
              sel[newSize++]=i;
            }
          }
        }
        if (newSize < batch.size) {
          batch.size=newSize;
          batch.selectedInUse=true;
        }
      }
    }
  }
}
