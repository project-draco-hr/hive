{
  if (cache == null)   return null;
  OrcCacheKey key=new OrcCacheKey(internedFilePath,-1,-1,-1);
  @SuppressWarnings("unchecked") List<Integer>[] stripeColsNotInCache=new List[readState.length];
  for (int stripeIxMod=0; stripeIxMod < readState.length; ++stripeIxMod) {
    key.stripeIx=stripeIxFrom + stripeIxMod;
    boolean[][] cols=readState[stripeIxMod];
    boolean[] isMissingAnyRgs=new boolean[cols.length];
    int totalRgCount=getRgCount(stripes.get(key.stripeIx),rowIndexStride);
    for (int rgIx=0; rgIx < totalRgCount; ++rgIx) {
      EncodedColumnBatch<OrcBatchKey> col=new EncodedColumnBatch<OrcBatchKey>(new OrcBatchKey(internedFilePath,key.stripeIx,rgIx),cols.length,cols.length);
      boolean hasAnyCached=false;
      key.rgIx=rgIx;
      for (int colIxMod=0; colIxMod < cols.length; ++colIxMod) {
        boolean[] readMask=cols[colIxMod];
        if (readMask != null && (readMask.length <= rgIx || !readMask[rgIx]))         continue;
        key.colIx=columnIds.get(colIxMod);
        StreamBuffer[] cached=cache.get(key);
        if (cached == null) {
          isMissingAnyRgs[colIxMod]=true;
          continue;
        }
        col.setAllStreams(colIxMod,key.colIx,cached);
        hasAnyCached=true;
        if (readMask == null) {
          cols[colIxMod]=readMask=new boolean[totalRgCount];
          Arrays.fill(readMask,true);
        }
        readMask[rgIx]=false;
      }
      if (hasAnyCached) {
        consumer.consumeData(col);
      }
    }
    boolean makeStripeColList=false;
    for (int colIxMod=0; colIxMod < cols.length; ++colIxMod) {
      if (isMissingAnyRgs[colIxMod]) {
        if (makeStripeColList) {
          stripeColsNotInCache[stripeIxMod].add(columnIds.get(colIxMod));
        }
      }
 else       if (!makeStripeColList) {
        makeStripeColList=true;
        stripeColsNotInCache[stripeIxMod]=new ArrayList<Integer>(cols.length - 1);
        for (int i=0; i < colIxMod; ++i) {
          stripeColsNotInCache[stripeIxMod].add(columnIds.get(i));
        }
      }
    }
  }
  return stripeColsNotInCache;
}
