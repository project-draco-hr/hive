{
  String id=queryId + ":" + taskId;
  QueryInfo ji=queryInfoMap.get(queryId);
  StringBuilder sb1=new StringBuilder("");
  TaskInfo ti=taskInfoMap.get(id);
  if (ti == null)   return;
  StringBuilder sb=new StringBuilder("");
  try {
    boolean first=true;
    for (    Group group : rj.getCounters()) {
      for (      Counter counter : group) {
        if (first) {
          first=false;
        }
 else {
          sb.append(',');
        }
        sb.append(group.getDisplayName());
        sb.append('.');
        sb.append(counter.getDisplayName());
        sb.append(':');
        sb.append(counter.getCounter());
        String tab=getRowCountTableName(counter.getDisplayName());
        if (tab != null) {
          if (sb1.length() > 0)           sb1.append(",");
          sb1.append(tab);
          sb1.append('~');
          sb1.append(counter.getCounter());
          ji.rowCountMap.put(tab,counter.getCounter());
        }
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  if (sb1.length() > 0) {
    taskInfoMap.get(id).hm.put(Keys.ROWS_INSERTED.name(),sb1.toString());
    queryInfoMap.get(queryId).hm.put(Keys.ROWS_INSERTED.name(),sb1.toString());
  }
  if (sb.length() > 0)   taskInfoMap.get(id).hm.put(Keys.TASK_COUNTERS.name(),sb.toString());
}
