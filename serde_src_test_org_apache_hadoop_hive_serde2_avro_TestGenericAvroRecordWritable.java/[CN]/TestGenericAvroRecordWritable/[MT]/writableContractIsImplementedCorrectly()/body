{
  Schema schema=Schema.parse(schemaJSON);
  GenericRecord gr=new GenericData.Record(schema);
  gr.put("first","The");
  gr.put("last","Doctor");
  assertEquals("The",gr.get("first"));
  assertEquals("Doctor",gr.get("last"));
  AvroGenericRecordWritable garw=new AvroGenericRecordWritable(gr);
  garw.setFileSchema(gr.getSchema());
  garw.setRecordReaderID(new UID());
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  DataOutputStream daos=new DataOutputStream(baos);
  garw.write(daos);
  AvroGenericRecordWritable garw2=new AvroGenericRecordWritable(gr);
  garw.setFileSchema(gr.getSchema());
  garw2.setRecordReaderID(new UID());
  ByteArrayInputStream bais=new ByteArrayInputStream(baos.toByteArray());
  DataInputStream dais=new DataInputStream(bais);
  garw2.readFields(dais);
  GenericRecord gr2=garw2.getRecord();
  assertEquals("The",gr2.get("first").toString());
  assertEquals("Doctor",gr2.get("last").toString());
}
