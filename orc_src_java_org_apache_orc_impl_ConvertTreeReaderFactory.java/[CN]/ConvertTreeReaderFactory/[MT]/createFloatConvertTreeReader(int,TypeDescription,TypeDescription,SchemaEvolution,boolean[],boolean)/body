{
switch (readerType.getCategory()) {
case BOOLEAN:
case BYTE:
case SHORT:
case INT:
case LONG:
    return new AnyIntegerFromFloatTreeReader(columnId,readerType);
case FLOAT:
  throw new IllegalArgumentException("No conversion of type " + readerType.getCategory() + " to self needed");
case DOUBLE:
return new DoubleFromFloatTreeReader(columnId);
case DECIMAL:
return new DecimalFromFloatTreeReader(columnId,readerType);
case STRING:
case CHAR:
case VARCHAR:
return new StringGroupFromFloatTreeReader(columnId,readerType,skipCorrupt);
case TIMESTAMP:
return new TimestampFromFloatTreeReader(columnId,readerType,skipCorrupt);
case BINARY:
case DATE:
case STRUCT:
case LIST:
case MAP:
case UNION:
default :
throw new IllegalArgumentException("Unsupported type " + readerType.getCategory());
}
}
