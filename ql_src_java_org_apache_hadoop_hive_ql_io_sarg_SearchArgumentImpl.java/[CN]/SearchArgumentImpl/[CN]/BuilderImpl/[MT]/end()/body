{
  root=currentTree.removeFirst();
  if (root.getChildren().size() == 0) {
    throw new IllegalArgumentException("Can't create expression " + root + " with no children.");
  }
  if (root.getOperator() == ExpressionTree.Operator.NOT && root.getChildren().size() != 1) {
    throw new IllegalArgumentException("Can't create not expression " + root + " with more than 1 child.");
  }
  return this;
}
