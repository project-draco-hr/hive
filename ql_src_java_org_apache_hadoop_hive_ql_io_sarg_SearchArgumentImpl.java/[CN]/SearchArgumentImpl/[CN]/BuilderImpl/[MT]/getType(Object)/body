{
  if (literal instanceof Byte || literal instanceof Short || literal instanceof Integer) {
    return PredicateLeaf.Type.INTEGER;
  }
 else   if (literal instanceof Long) {
    return PredicateLeaf.Type.LONG;
  }
 else   if (literal instanceof HiveChar || literal instanceof HiveVarchar || literal instanceof String) {
    return PredicateLeaf.Type.STRING;
  }
 else   if (literal instanceof Float || literal instanceof Double) {
    return PredicateLeaf.Type.FLOAT;
  }
 else   if (literal instanceof DateWritable) {
    return PredicateLeaf.Type.DATE;
  }
 else   if (literal instanceof Timestamp) {
    return PredicateLeaf.Type.TIMESTAMP;
  }
 else   if (literal instanceof HiveDecimal || literal instanceof BigDecimal) {
    return PredicateLeaf.Type.DECIMAL;
  }
 else   if (literal instanceof Boolean) {
    return PredicateLeaf.Type.BOOLEAN;
  }
  throw new IllegalArgumentException("Unknown type for literal " + literal);
}
