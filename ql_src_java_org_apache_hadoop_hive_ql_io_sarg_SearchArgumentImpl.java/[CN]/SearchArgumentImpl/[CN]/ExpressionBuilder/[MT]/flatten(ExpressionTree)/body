{
  if (root.getChildren() != null) {
    for (int i=0; i < root.getChildren().size(); ++i) {
      ExpressionTree child=flatten(root.getChildren().get(i));
      if (child.getOperator() == root.getOperator() && child.getOperator() != ExpressionTree.Operator.NOT) {
        boolean first=true;
        for (        ExpressionTree grandkid : child.getChildren()) {
          if (first) {
            first=false;
            root.getChildren().set(i,grandkid);
          }
 else {
            root.getChildren().add(++i,grandkid);
          }
        }
      }
 else {
        root.getChildren().set(i,child);
      }
    }
    if ((root.getOperator() == ExpressionTree.Operator.OR || root.getOperator() == ExpressionTree.Operator.AND) && root.getChildren().size() == 1) {
      return root.getChildren().get(0);
    }
  }
  return root;
}
