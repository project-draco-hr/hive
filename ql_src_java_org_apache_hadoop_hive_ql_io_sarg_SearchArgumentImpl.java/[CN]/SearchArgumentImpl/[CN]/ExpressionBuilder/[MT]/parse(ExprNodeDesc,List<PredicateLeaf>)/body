{
  if (expression.getClass() != ExprNodeGenericFuncDesc.class) {
    return new ExpressionTree(TruthValue.YES_NO_NULL);
  }
  ExprNodeGenericFuncDesc expr=(ExprNodeGenericFuncDesc)expression;
  Class<?> op=expr.getGenericUDF().getClass();
  ExpressionTree result;
  if (op == GenericUDFOPOr.class) {
    result=new ExpressionTree(ExpressionTree.Operator.OR);
    addChildren(result,expr,leafCache);
  }
 else   if (op == GenericUDFOPAnd.class) {
    result=new ExpressionTree(ExpressionTree.Operator.AND);
    addChildren(result,expr,leafCache);
  }
 else   if (op == GenericUDFOPNot.class) {
    result=new ExpressionTree(ExpressionTree.Operator.NOT);
    addChildren(result,expr,leafCache);
  }
 else   if (op == GenericUDFOPEqual.class) {
    result=createLeaf(PredicateLeaf.Operator.EQUALS,expr,leafCache);
  }
 else   if (op == GenericUDFOPNotEqual.class) {
    result=negate(createLeaf(PredicateLeaf.Operator.EQUALS,expr,leafCache));
  }
 else   if (op == GenericUDFOPEqualNS.class) {
    result=createLeaf(PredicateLeaf.Operator.NULL_SAFE_EQUALS,expr,leafCache);
  }
 else   if (op == GenericUDFOPGreaterThan.class) {
    result=negate(createLeaf(PredicateLeaf.Operator.LESS_THAN_EQUALS,expr,leafCache));
  }
 else   if (op == GenericUDFOPEqualOrGreaterThan.class) {
    result=negate(createLeaf(PredicateLeaf.Operator.LESS_THAN,expr,leafCache));
  }
 else   if (op == GenericUDFOPLessThan.class) {
    result=createLeaf(PredicateLeaf.Operator.LESS_THAN,expr,leafCache);
  }
 else   if (op == GenericUDFOPEqualOrLessThan.class) {
    result=createLeaf(PredicateLeaf.Operator.LESS_THAN_EQUALS,expr,leafCache);
  }
 else   if (op == GenericUDFIn.class) {
    result=createLeaf(PredicateLeaf.Operator.IN,expr,leafCache,0);
  }
 else   if (op == GenericUDFBetween.class) {
    result=createLeaf(PredicateLeaf.Operator.BETWEEN,expr,leafCache,1);
  }
 else   if (op == GenericUDFOPNull.class) {
    result=createLeaf(PredicateLeaf.Operator.IS_NULL,expr,leafCache,0);
  }
 else   if (op == GenericUDFOPNotNull.class) {
    result=negate(createLeaf(PredicateLeaf.Operator.IS_NULL,expr,leafCache,0));
  }
 else {
    result=new ExpressionTree(TruthValue.YES_NO_NULL);
  }
  return result;
}
