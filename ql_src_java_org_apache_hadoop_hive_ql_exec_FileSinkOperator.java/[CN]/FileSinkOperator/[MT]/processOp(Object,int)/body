{
  if (counterNameToEnum != null) {
    ++outputRows;
    if (outputRows % 1000 == 0) {
      incrCounter(numOutputRowsCntr,outputRows);
      outputRows=0;
    }
  }
  try {
    if (reporter != null) {
      reporter.progress();
    }
    recordValue=serializer.serialize(row,inputObjInspectors[tag]);
    if (row_count != null) {
      row_count.set(row_count.get() + 1);
    }
    if (!multiFileSpray) {
      outWriters[0].write(recordValue);
    }
 else {
      int keyHashCode=0;
      for (int i=0; i < partitionEval.length; i++) {
        Object o=partitionEval[i].evaluate(row);
        keyHashCode=keyHashCode * 31 + ObjectInspectorUtils.hashCode(o,partitionObjectInspectors[i]);
      }
      key.setHashCode(keyHashCode);
      int bucketNum=prtner.getBucket(key,null,totalFiles);
      int idx=bucketMap.get(bucketNum);
      outWriters[bucketMap.get(bucketNum)].write(recordValue);
    }
  }
 catch (  IOException e) {
    throw new HiveException(e);
  }
catch (  SerDeException e) {
    throw new HiveException(e);
  }
}
