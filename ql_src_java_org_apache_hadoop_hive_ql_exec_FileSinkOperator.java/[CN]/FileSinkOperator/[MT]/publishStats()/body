{
  boolean isStatsReliable=conf.isStatsReliable();
  StatsPublisher statsPublisher=Utilities.getStatsPublisher(jc);
  if (statsPublisher == null) {
    LOG.error("StatsPublishing error: StatsPublisher is not initialized.");
    if (isStatsReliable) {
      throw new HiveException(ErrorMsg.STATSPUBLISHER_NOT_OBTAINED.getErrorCodedMsg());
    }
    return;
  }
  if (!statsPublisher.connect(hconf)) {
    LOG.error("StatsPublishing error: cannot connect to database");
    if (isStatsReliable) {
      throw new HiveException(ErrorMsg.STATSPUBLISHER_CONNECTION_ERROR.getErrorCodedMsg());
    }
    return;
  }
  String taskID=Utilities.getTaskIdFromFilename(Utilities.getTaskId(hconf));
  String spSpec=conf.getStaticSpec();
  int maxKeyLength=conf.getMaxStatsKeyPrefixLength();
  boolean taskIndependent=statsPublisher instanceof StatsCollectionTaskIndependent;
  for (  Map.Entry<String,FSPaths> entry : valToPaths.entrySet()) {
    String fspKey=entry.getKey();
    FSPaths fspValue=entry.getValue();
    String[] split=splitKey(fspKey);
    String dpSpec=split[0];
    String lbSpec=split[1];
    String prefix;
    String postfix=null;
    if (taskIndependent) {
      prefix=conf.getTableInfo().getTableName();
    }
 else {
      prefix=conf.getStatsAggPrefix();
      postfix=Utilities.join(lbSpec,taskID);
    }
    prefix=Utilities.join(prefix,spSpec,dpSpec);
    prefix=Utilities.getHashedStatsPrefix(prefix,maxKeyLength);
    String key=Utilities.join(prefix,postfix);
    Map<String,String> statsToPublish=new HashMap<String,String>();
    for (    String statType : fspValue.stat.getStoredStats()) {
      statsToPublish.put(statType,Long.toString(fspValue.stat.getStat(statType)));
    }
    if (!statsPublisher.publishStat(key,statsToPublish)) {
      if (isStatsReliable) {
        throw new HiveException(ErrorMsg.STATSPUBLISHER_PUBLISHING_ERROR.getErrorCodedMsg());
      }
    }
  }
  if (!statsPublisher.closeConnection()) {
    if (isStatsReliable) {
      throw new HiveException(ErrorMsg.STATSPUBLISHER_CLOSING_ERROR.getErrorCodedMsg());
    }
  }
}
