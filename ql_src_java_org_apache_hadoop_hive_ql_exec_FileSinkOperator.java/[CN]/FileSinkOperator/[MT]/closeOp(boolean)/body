{
  row_count.set(numRows);
  LOG.info(toString() + ": records written - " + numRows);
  if (!bDynParts && !filesCreated) {
    boolean skipFiles="tez".equalsIgnoreCase(HiveConf.getVar(hconf,ConfVars.HIVE_EXECUTION_ENGINE));
    if (skipFiles) {
      Class<?> clazz=conf.getTableInfo().getOutputFileFormatClass();
      skipFiles=!StreamingOutputFormat.class.isAssignableFrom(clazz);
    }
    if (!skipFiles) {
      createBucketFiles(fsp);
    }
  }
  lastProgressReport=System.currentTimeMillis();
  if (!abort) {
    if (conf.isHiveServerQuery() && HiveConf.getBoolVar(hconf,HiveConf.ConfVars.HIVE_SERVER2_THRIFT_RESULTSET_SERIALIZE_IN_TASKS) && serializer.getClass().getName().equalsIgnoreCase(ThriftJDBCBinarySerDe.class.getName())) {
      try {
        recordValue=serializer.serialize(null,inputObjInspectors[0]);
        rowOutWriters=fpaths.outWriters;
        rowOutWriters[0].write(recordValue);
      }
 catch (      SerDeException|IOException e) {
        throw new HiveException(e);
      }
    }
    for (    FSPaths fsp : valToPaths.values()) {
      fsp.closeWriters(abort);
      if (conf.isGatherStats() && isCollectRWStats) {
        if (conf.getWriteType() == AcidUtils.Operation.NOT_ACID) {
          for (int idx=0; idx < fsp.outWriters.length; idx++) {
            RecordWriter outWriter=fsp.outWriters[idx];
            if (outWriter != null) {
              SerDeStats stats=((StatsProvidingRecordWriter)outWriter).getStats();
              if (stats != null) {
                fsp.stat.addToStat(StatsSetupConst.RAW_DATA_SIZE,stats.getRawDataSize());
                fsp.stat.addToStat(StatsSetupConst.ROW_COUNT,stats.getRowCount());
              }
            }
          }
        }
 else {
          for (int i=0; i < fsp.updaters.length; i++) {
            if (fsp.updaters[i] != null) {
              SerDeStats stats=fsp.updaters[i].getStats();
              if (stats != null) {
                fsp.stat.addToStat(StatsSetupConst.RAW_DATA_SIZE,stats.getRawDataSize());
                fsp.stat.addToStat(StatsSetupConst.ROW_COUNT,stats.getRowCount());
              }
            }
          }
        }
      }
      if (isNativeTable) {
        fsp.commit(fs);
      }
    }
    if (conf.isGatherStats()) {
      publishStats();
    }
  }
 else {
    for (    FSPaths fsp : valToPaths.values()) {
      fsp.abortWriters(fs,abort,!autoDelete && isNativeTable);
    }
  }
  fsp=prevFsp=null;
}
