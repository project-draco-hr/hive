{
  List<FieldSchema> parts=new ArrayList<FieldSchema>();
  parts.add(new FieldSchema("year","int",null));
  parts.add(new FieldSchema("month","int",null));
  parts.add(new FieldSchema("state","string",null));
  ExpressionTree exprTree=PartFilterExprUtil.getFilterParser("year = 2015 and state = 'CA'").tree;
  PlanResult planRes=HBaseFilterPlanUtil.getFilterPlan(exprTree,parts);
  Assert.assertEquals(planRes.plan.getPlans().size(),1);
  ScanPlan sp=planRes.plan.getPlans().get(0);
  byte[] startRowSuffix=sp.getStartRowSuffix("testdb","testtb",parts);
  byte[] endRowSuffix=sp.getEndRowSuffix("testdb","testtb",parts);
  RowFilter filter=(RowFilter)sp.getFilter(parts);
  Assert.assertTrue(Bytes.contains(startRowSuffix,Shorts.toByteArray((short)2015)));
  Assert.assertTrue(Bytes.contains(endRowSuffix,Shorts.toByteArray((short)2016)));
  PartitionKeyComparator comparator=(PartitionKeyComparator)filter.getComparator();
  Assert.assertEquals(comparator.ranges.size(),1);
  Assert.assertEquals(comparator.ranges.get(0).keyName,"state");
}
