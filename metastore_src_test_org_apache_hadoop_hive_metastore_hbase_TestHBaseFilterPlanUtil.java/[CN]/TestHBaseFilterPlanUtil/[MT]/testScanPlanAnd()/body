{
  ScanPlan l=new ScanPlan();
  ScanPlan r=new ScanPlan();
  l.setStartMarker(new ScanMarker(new byte[]{10},INCLUSIVE));
  r.setStartMarker(new ScanMarker(new byte[]{10},INCLUSIVE));
  ScanPlan res;
  res=l.and(r).getPlans().get(0);
  Assert.assertEquals(new ScanMarker(new byte[]{10},INCLUSIVE),res.getStartMarker());
  l.setEndMarker(new ScanMarker(new byte[]{20},INCLUSIVE));
  r.setEndMarker(new ScanMarker(new byte[]{20},INCLUSIVE));
  res=l.and(r).getPlans().get(0);
  Assert.assertEquals(new ScanMarker(new byte[]{10},INCLUSIVE),res.getStartMarker());
  Assert.assertEquals(new ScanMarker(new byte[]{20},INCLUSIVE),res.getEndMarker());
  l.setEndMarker(new ScanMarker(null,INCLUSIVE));
  r.setStartMarker(new ScanMarker(null,!INCLUSIVE));
  Assert.assertEquals(l.getStartMarker(),res.getStartMarker());
  Assert.assertEquals(r.getEndMarker(),res.getEndMarker());
  l.setStartMarker(new ScanMarker(new byte[]{10,11},!INCLUSIVE));
  l.setEndMarker(new ScanMarker(new byte[]{20,21},INCLUSIVE));
  r.setStartMarker(new ScanMarker(new byte[]{10,10},INCLUSIVE));
  r.setEndMarker(new ScanMarker(new byte[]{15},INCLUSIVE));
  res=l.and(r).getPlans().get(0);
  Assert.assertEquals(l.getStartMarker(),res.getStartMarker());
  Assert.assertEquals(r.getEndMarker(),res.getEndMarker());
}
