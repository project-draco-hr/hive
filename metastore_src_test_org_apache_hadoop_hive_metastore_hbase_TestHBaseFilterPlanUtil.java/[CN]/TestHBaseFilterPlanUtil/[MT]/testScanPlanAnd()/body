{
  ScanPlan l=new ScanPlan();
  ScanPlan r=new ScanPlan();
  l.setStartMarker("a","int","10",INCLUSIVE);
  r.setStartMarker("a","int","10",INCLUSIVE);
  ScanPlan res;
  res=l.and(r).getPlans().get(0);
  Assert.assertEquals(new ScanMarker("10",INCLUSIVE,"int"),res.markers.get("a").startMarker);
  l.setEndMarker("a","int","20",INCLUSIVE);
  r.setEndMarker("a","int","20",INCLUSIVE);
  res=l.and(r).getPlans().get(0);
  Assert.assertEquals(new ScanMarker("10",INCLUSIVE,"int"),res.markers.get("a").startMarker);
  Assert.assertEquals(new ScanMarker("20",INCLUSIVE,"int"),res.markers.get("a").endMarker);
  l.setStartMarker("a","int","10",!INCLUSIVE);
  l.setEndMarker("a","int","20",INCLUSIVE);
  r.setStartMarker("a","int","10",INCLUSIVE);
  r.setEndMarker("a","int","15",INCLUSIVE);
  res=l.and(r).getPlans().get(0);
  Assert.assertEquals(l.markers.get("a").startMarker,res.markers.get("a").startMarker);
  Assert.assertEquals(r.markers.get("a").endMarker,res.markers.get("a").endMarker);
}
