{
  final String KEY="k1";
  final String VAL="v1";
  final byte[] VAL_BYTES=PartitionFilterGenerator.toBytes(VAL);
  LeafNode l=new LeafNode();
  l.keyName=KEY;
  l.value=VAL;
  final ScanMarker DEFAULT_SCANMARKER=new ScanMarker(null,false);
  l.operator=Operator.EQUALS;
  verifyPlan(l,KEY,new ScanMarker(VAL_BYTES,INCLUSIVE),new ScanMarker(VAL_BYTES,INCLUSIVE));
  l.operator=Operator.GREATERTHAN;
  verifyPlan(l,KEY,new ScanMarker(VAL_BYTES,!INCLUSIVE),DEFAULT_SCANMARKER);
  l.operator=Operator.GREATERTHANOREQUALTO;
  verifyPlan(l,KEY,new ScanMarker(VAL_BYTES,INCLUSIVE),DEFAULT_SCANMARKER);
  l.operator=Operator.LESSTHAN;
  verifyPlan(l,KEY,DEFAULT_SCANMARKER,new ScanMarker(VAL_BYTES,!INCLUSIVE));
  l.operator=Operator.LESSTHANOREQUALTO;
  verifyPlan(l,KEY,DEFAULT_SCANMARKER,new ScanMarker(VAL_BYTES,INCLUSIVE));
  l.operator=Operator.NOTEQUALS;
  verifyPlan(l,KEY,DEFAULT_SCANMARKER,DEFAULT_SCANMARKER,true);
  l.operator=Operator.NOTEQUALS2;
  verifyPlan(l,KEY,DEFAULT_SCANMARKER,DEFAULT_SCANMARKER,true);
  l.operator=Operator.LIKE;
  verifyPlan(l,KEY,DEFAULT_SCANMARKER,DEFAULT_SCANMARKER,true);
  l.operator=Operator.EQUALS;
  verifyPlan(l,"NOT_FIRST_PART",DEFAULT_SCANMARKER,DEFAULT_SCANMARKER,true);
  l.operator=Operator.NOTEQUALS;
  verifyPlan(l,"NOT_FIRST_PART",DEFAULT_SCANMARKER,DEFAULT_SCANMARKER,true);
  verifyPlan(null,KEY,DEFAULT_SCANMARKER,DEFAULT_SCANMARKER,true);
}
