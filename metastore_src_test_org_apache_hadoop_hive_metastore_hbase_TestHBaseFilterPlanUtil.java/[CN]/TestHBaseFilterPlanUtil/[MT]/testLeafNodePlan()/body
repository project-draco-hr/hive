{
  final String KEY="k1";
  final String VAL="v1";
  final String OTHERKEY="k2";
  LeafNode l=new LeafNode();
  l.keyName=KEY;
  l.value=VAL;
  final ScanMarker DEFAULT_SCANMARKER=null;
  List<FieldSchema> parts=new ArrayList<FieldSchema>();
  parts.add(new FieldSchema(KEY,"int",null));
  parts.add(new FieldSchema(OTHERKEY,"int",null));
  l.operator=Operator.EQUALS;
  verifyPlan(l,parts,KEY,new ScanMarker(VAL,INCLUSIVE,"int"),new ScanMarker(VAL,INCLUSIVE,"int"));
  l.operator=Operator.GREATERTHAN;
  verifyPlan(l,parts,KEY,new ScanMarker(VAL,!INCLUSIVE,"int"),DEFAULT_SCANMARKER);
  l.operator=Operator.GREATERTHANOREQUALTO;
  verifyPlan(l,parts,KEY,new ScanMarker(VAL,INCLUSIVE,"int"),DEFAULT_SCANMARKER);
  l.operator=Operator.LESSTHAN;
  verifyPlan(l,parts,KEY,DEFAULT_SCANMARKER,new ScanMarker(VAL,!INCLUSIVE,"int"));
  l.operator=Operator.LESSTHANOREQUALTO;
  verifyPlan(l,parts,KEY,DEFAULT_SCANMARKER,new ScanMarker(VAL,INCLUSIVE,"int"));
  l.operator=Operator.EQUALS;
  verifyPlan(l,parts,OTHERKEY,DEFAULT_SCANMARKER,DEFAULT_SCANMARKER,false);
  verifyPlan(null,parts,KEY,DEFAULT_SCANMARKER,DEFAULT_SCANMARKER,true);
}
