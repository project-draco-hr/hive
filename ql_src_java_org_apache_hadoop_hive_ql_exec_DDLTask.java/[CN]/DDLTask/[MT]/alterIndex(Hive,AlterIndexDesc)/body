{
  String dbName=alterIndex.getDbName();
  String baseTableName=alterIndex.getBaseTableName();
  String indexName=alterIndex.getIndexName();
  Index idx=db.getIndex(dbName,baseTableName,indexName);
switch (alterIndex.getOp()) {
case ADDPROPS:
    idx.getParameters().putAll(alterIndex.getProps());
  break;
case UPDATETIMESTAMP:
try {
  Map<String,String> props=new HashMap<String,String>();
  Map<Map<String,String>,Long> basePartTs=new HashMap<Map<String,String>,Long>();
  Table baseTbl=db.getTable(SessionState.get().getCurrentDatabase(),baseTableName);
  if (baseTbl.isPartitioned()) {
    List<Partition> baseParts;
    if (alterIndex.getSpec() != null) {
      baseParts=db.getPartitions(baseTbl,alterIndex.getSpec());
    }
 else {
      baseParts=db.getPartitions(baseTbl);
    }
    if (baseParts != null) {
      for (      Partition p : baseParts) {
        FileSystem fs=p.getDataLocation().getFileSystem(db.getConf());
        FileStatus fss=fs.getFileStatus(p.getDataLocation());
        basePartTs.put(p.getSpec(),fss.getModificationTime());
      }
    }
  }
 else {
    FileSystem fs=baseTbl.getPath().getFileSystem(db.getConf());
    FileStatus fss=fs.getFileStatus(baseTbl.getPath());
    basePartTs.put(null,fss.getModificationTime());
  }
  for (  Map<String,String> spec : basePartTs.keySet()) {
    if (spec != null) {
      props.put(spec.toString(),basePartTs.get(spec).toString());
    }
 else {
      props.put("base_timestamp",basePartTs.get(null).toString());
    }
  }
  idx.getParameters().putAll(props);
}
 catch (HiveException e) {
  throw new HiveException("ERROR: Failed to update index timestamps");
}
catch (IOException e) {
  throw new HiveException("ERROR: Failed to look up timestamps on filesystem");
}
break;
default :
console.printError("Unsupported Alter commnad");
return 1;
}
if (!updateModifiedParameters(idx.getParameters(),conf)) {
return 1;
}
try {
db.alterIndex(dbName,baseTableName,indexName,idx);
}
 catch (InvalidOperationException e) {
console.printError("Invalid alter operation: " + e.getMessage());
LOG.info("alter index: " + stringifyException(e));
return 1;
}
catch (HiveException e) {
console.printError("Invalid alter operation: " + e.getMessage());
return 1;
}
return 0;
}
