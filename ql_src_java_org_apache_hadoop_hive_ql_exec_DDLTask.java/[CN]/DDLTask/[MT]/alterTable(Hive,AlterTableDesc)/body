{
  Table tbl=db.getTable(alterTbl.getOldName());
  List<Partition> allPartitions=null;
  if (alterTbl.getPartSpec() != null) {
    Map<String,String> partSpec=alterTbl.getPartSpec();
    if (DDLSemanticAnalyzer.isFullSpec(tbl,partSpec)) {
      allPartitions=new ArrayList<Partition>();
      Partition part=db.getPartition(tbl,partSpec,false);
      if (part == null) {
        throw new HiveException(ErrorMsg.INVALID_PARTITION,StringUtils.join(alterTbl.getPartSpec().keySet(),',') + " for table " + alterTbl.getOldName());
      }
      allPartitions.add(part);
    }
 else {
      allPartitions=db.getPartitions(tbl,alterTbl.getPartSpec());
    }
  }
  Table oldTbl=tbl.copy();
  if (allPartitions != null) {
    for (    Partition part : allPartitions) {
      alterTableOrSinglePartition(alterTbl,tbl,part);
    }
  }
 else {
    alterTableOrSinglePartition(alterTbl,tbl,null);
  }
  if (allPartitions == null) {
    updateModifiedParameters(tbl.getTTable().getParameters(),conf);
    tbl.checkValidity();
  }
 else {
    for (    Partition tmpPart : allPartitions) {
      updateModifiedParameters(tmpPart.getParameters(),conf);
    }
  }
  try {
    if (allPartitions == null) {
      db.alterTable(alterTbl.getOldName(),tbl,alterTbl.getIsCascade());
    }
 else {
      db.alterPartitions(tbl.getTableName(),allPartitions);
    }
  }
 catch (  InvalidOperationException e) {
    LOG.error("alter table: " + stringifyException(e));
    throw new HiveException(e,ErrorMsg.GENERIC_ERROR);
  }
  if (allPartitions != null) {
    for (    Partition tmpPart : allPartitions) {
      work.getInputs().add(new ReadEntity(tmpPart));
      work.getOutputs().add(new WriteEntity(tmpPart,WriteEntity.WriteType.DDL_NO_LOCK));
    }
  }
 else {
    work.getInputs().add(new ReadEntity(oldTbl));
    work.getOutputs().add(new WriteEntity(tbl,WriteEntity.WriteType.DDL_NO_LOCK));
  }
  return 0;
}
