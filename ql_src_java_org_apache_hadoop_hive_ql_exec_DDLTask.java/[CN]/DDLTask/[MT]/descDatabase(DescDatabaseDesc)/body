{
  DataOutput outStream=null;
  try {
    Path resFile=new Path(descDatabase.getResFile());
    FileSystem fs=resFile.getFileSystem(conf);
    outStream=fs.create(resFile);
    Database database=db.getDatabase(descDatabase.getDatabaseName());
    if (database != null) {
      outStream.writeBytes(database.getName());
      outStream.write(separator);
      if (database.getDescription() != null) {
        outStream.writeBytes(database.getDescription());
      }
      outStream.write(separator);
      if (database.getLocationUri() != null) {
        outStream.writeBytes(database.getLocationUri());
      }
      outStream.write(separator);
      if (descDatabase.isExt() && database.getParametersSize() > 0) {
        Map<String,String> params=database.getParameters();
        outStream.writeBytes(params.toString());
      }
    }
 else {
      outStream.writeBytes("No such database: " + descDatabase.getDatabaseName());
    }
    outStream.write(terminator);
    ((FSDataOutputStream)outStream).close();
    outStream=null;
  }
 catch (  FileNotFoundException e) {
    LOG.warn("describe database: " + stringifyException(e));
    return 1;
  }
catch (  IOException e) {
    LOG.warn("describe database: " + stringifyException(e));
    return 1;
  }
catch (  Exception e) {
    throw new HiveException(e.toString());
  }
 finally {
    IOUtils.closeStream((FSDataOutputStream)outStream);
  }
  return 0;
}
