{
  String colPath=descTbl.getColumnPath();
  String tableName=descTbl.getTableName();
  Table tbl=db.getTable(tableName,false);
  Partition part=null;
  DataOutputStream outStream=null;
  try {
    Path resFile=new Path(descTbl.getResFile());
    if (tbl == null) {
      FileSystem fs=resFile.getFileSystem(conf);
      outStream=fs.create(resFile);
      String errMsg="Table " + tableName + " does not exist";
      formatter.error(outStream,errMsg,formatter.MISSING);
      ((FSDataOutputStream)outStream).close();
      outStream=null;
      return 0;
    }
    if (descTbl.getPartSpec() != null) {
      part=db.getPartition(tbl,descTbl.getPartSpec(),false);
      if (part == null) {
        FileSystem fs=resFile.getFileSystem(conf);
        outStream=fs.create(resFile);
        String errMsg="Partition " + descTbl.getPartSpec() + " for table "+ tableName+ " does not exist";
        formatter.error(outStream,errMsg,formatter.MISSING);
        ((FSDataOutputStream)outStream).close();
        outStream=null;
        return 0;
      }
      tbl=part.getTable();
    }
  }
 catch (  FileNotFoundException e) {
    formatter.logInfo(outStream,"describe table: " + stringifyException(e),formatter.ERROR);
    return 1;
  }
catch (  IOException e) {
    formatter.logInfo(outStream,"describe table: " + stringifyException(e),formatter.ERROR);
    return 1;
  }
 finally {
    IOUtils.closeStream((FSDataOutputStream)outStream);
  }
  try {
    LOG.info("DDLTask: got data for " + tbl.getTableName());
    Path resFile=new Path(descTbl.getResFile());
    FileSystem fs=resFile.getFileSystem(conf);
    outStream=fs.create(resFile);
    List<FieldSchema> cols=null;
    if (colPath.equals(tableName)) {
      cols=(part == null || tbl.getTableType() == TableType.VIRTUAL_VIEW) ? tbl.getCols() : part.getCols();
      if (!descTbl.isFormatted()) {
        if (tableName.equals(colPath)) {
          cols.addAll(tbl.getPartCols());
        }
      }
    }
 else {
      cols=Hive.getFieldsFromDeserializer(colPath,tbl.getDeserializer());
    }
    formatter.describeTable(outStream,colPath,tableName,tbl,part,cols,descTbl.isFormatted(),descTbl.isExt(),descTbl.isPretty());
    LOG.info("DDLTask: written data for " + tbl.getTableName());
    ((FSDataOutputStream)outStream).close();
    outStream=null;
  }
 catch (  FileNotFoundException e) {
    formatter.logInfo(outStream,"describe table: " + stringifyException(e),formatter.ERROR);
    return 1;
  }
catch (  IOException e) {
    formatter.logInfo(outStream,"describe table: " + stringifyException(e),formatter.ERROR);
    return 1;
  }
catch (  Exception e) {
    throw new HiveException(e);
  }
 finally {
    IOUtils.closeStream((FSDataOutputStream)outStream);
  }
  return 0;
}
