{
  Table tbl=db.getTable(addPartitionDesc.getDbName(),addPartitionDesc.getTableName());
  Partition checkPart=db.getPartition(tbl,addPartitionDesc.getPartSpec(),false);
  if (checkPart != null && addPartitionDesc.getIfNotExists()) {
    return 0;
  }
  if (addPartitionDesc.getLocation() == null) {
    db.createPartition(tbl,addPartitionDesc.getPartSpec(),null,addPartitionDesc.getPartParams(),addPartitionDesc.getInputFormat(),addPartitionDesc.getOutputFormat(),addPartitionDesc.getNumBuckets(),addPartitionDesc.getCols(),addPartitionDesc.getSerializationLib(),addPartitionDesc.getSerdeParams(),addPartitionDesc.getBucketCols(),addPartitionDesc.getSortCols());
  }
 else {
    if (tbl.isView()) {
      throw new HiveException("LOCATION clause illegal for view partition");
    }
    db.createPartition(tbl,addPartitionDesc.getPartSpec(),new Path(tbl.getPath(),addPartitionDesc.getLocation()),addPartitionDesc.getPartParams(),addPartitionDesc.getInputFormat(),addPartitionDesc.getOutputFormat(),addPartitionDesc.getNumBuckets(),addPartitionDesc.getCols(),addPartitionDesc.getSerializationLib(),addPartitionDesc.getSerdeParams(),addPartitionDesc.getBucketCols(),addPartitionDesc.getSortCols());
  }
  Partition part=db.getPartition(tbl,addPartitionDesc.getPartSpec(),false);
  work.getOutputs().add(new WriteEntity(part));
  return 0;
}
