{
  if (privileges == null || privileges.isEmpty()) {
    return "";
  }
  StringBuilder builder=new StringBuilder();
  for (  HiveObjectPrivilege privilege : privileges) {
    PrivilegeGrantInfo grantInfo=privilege.getGrantInfo();
    HiveObjectRef resource=privilege.getHiveObject();
    String privName=grantInfo.getPrivilege();
    long unixTimestamp=grantInfo.getCreateTime() * 1000L;
    Date createTime=new Date(unixTimestamp);
    String grantor=grantInfo.getGrantor();
switch (resource.getObjectType()) {
case DATABASE:
      writeKeyValuePair(builder,"database",resource.getDbName());
    break;
case TABLE:
  writeKeyValuePair(builder,"database",resource.getDbName());
writeKeyValuePair(builder,"table",resource.getObjectName());
break;
case PARTITION:
writeKeyValuePair(builder,"database",resource.getDbName());
writeKeyValuePair(builder,"table",resource.getObjectName());
writeKeyValuePair(builder,"partition",String.valueOf(resource.getPartValues()));
break;
case COLUMN:
writeKeyValuePair(builder,"database",resource.getDbName());
writeKeyValuePair(builder,"table",resource.getObjectName());
if (resource.getPartValues() != null && !resource.getPartValues().isEmpty()) {
writeKeyValuePair(builder,"partition",String.valueOf(resource.getPartValues()));
}
writeKeyValuePair(builder,"columnName",resource.getColumnName());
break;
}
writeKeyValuePair(builder,"principalName",privilege.getPrincipalName());
writeKeyValuePair(builder,"principalType","" + privilege.getPrincipalType());
writeKeyValuePair(builder,"privilege",privName);
writeKeyValuePair(builder,"grantTime","" + createTime);
if (grantor != null) {
writeKeyValuePair(builder,"grantor",grantor);
}
}
return builder.toString();
}
