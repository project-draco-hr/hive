{
  Table tbl=new Table(crtTbl.getTableName());
  StorageDescriptor tblStorDesc=tbl.getTTable().getSd();
  if (crtTbl.getBucketCols() != null)   tblStorDesc.setBucketCols(crtTbl.getBucketCols());
  if (crtTbl.getSortCols() != null)   tbl.setSortCols(crtTbl.getSortCols());
  if (crtTbl.getPartCols() != null)   tbl.setPartCols(crtTbl.getPartCols());
  if (crtTbl.getNumBuckets() != -1)   tblStorDesc.setNumBuckets(crtTbl.getNumBuckets());
  if (crtTbl.getSerName() != null) {
    tbl.setSerializationLib(crtTbl.getSerName());
    if (crtTbl.getMapProp() != null) {
      Iterator<Map.Entry<String,String>> iter=crtTbl.getMapProp().entrySet().iterator();
      while (iter.hasNext()) {
        Map.Entry<String,String> m=(Map.Entry<String,String>)iter.next();
        tbl.setSerdeParam(m.getKey(),m.getValue());
      }
    }
  }
 else {
    if (crtTbl.getFieldDelim() != null) {
      tbl.setSerdeParam(Constants.FIELD_DELIM,crtTbl.getFieldDelim());
      tbl.setSerdeParam(Constants.SERIALIZATION_FORMAT,crtTbl.getFieldDelim());
    }
    if (crtTbl.getCollItemDelim() != null)     tbl.setSerdeParam(Constants.COLLECTION_DELIM,crtTbl.getCollItemDelim());
    if (crtTbl.getMapKeyDelim() != null)     tbl.setSerdeParam(Constants.MAPKEY_DELIM,crtTbl.getMapKeyDelim());
    if (crtTbl.getLineDelim() != null)     tbl.setSerdeParam(Constants.LINE_DELIM,crtTbl.getLineDelim());
  }
  if (crtTbl.getSerName() == null) {
    boolean useDynamicSerDe=false;
    if (crtTbl.getCols() != null) {
      for (      FieldSchema field : crtTbl.getCols()) {
        if (!Constants.STRING_TYPE_NAME.equalsIgnoreCase(field.getType())) {
          useDynamicSerDe=true;
        }
      }
    }
    if (useDynamicSerDe) {
      LOG.info("Default to DynamicSerDe for table " + crtTbl.getTableName());
      tbl.setSerializationLib(org.apache.hadoop.hive.serde2.dynamic_type.DynamicSerDe.class.getName());
      tbl.setSerdeParam(org.apache.hadoop.hive.serde.Constants.SERIALIZATION_FORMAT,org.apache.hadoop.hive.serde2.thrift.TCTLSeparatedProtocol.class.getName());
    }
  }
  if (crtTbl.getComment() != null)   tbl.setProperty("comment",crtTbl.getComment());
  if (crtTbl.getLocation() != null)   tblStorDesc.setLocation(crtTbl.getLocation());
  tbl.setInputFormatClass(crtTbl.getInputFormat());
  tbl.setOutputFormatClass(crtTbl.getOutputFormat());
  if (crtTbl.isExternal())   tbl.setProperty("EXTERNAL","TRUE");
  if ((tbl.getBucketCols() != null) && (tbl.getSortCols() != null)) {
    List<String> bucketCols=tbl.getBucketCols();
    List<Order> sortCols=tbl.getSortCols();
    if ((sortCols.size() > 0) && (sortCols.size() >= bucketCols.size())) {
      boolean found=true;
      Iterator<String> iterBucketCols=bucketCols.iterator();
      while (iterBucketCols.hasNext()) {
        String bucketCol=iterBucketCols.next();
        boolean colFound=false;
        for (int i=0; i < bucketCols.size(); i++) {
          if (bucketCol.equals(sortCols.get(i).getCol())) {
            colFound=true;
            break;
          }
        }
        if (colFound == false) {
          found=false;
          break;
        }
      }
      if (found)       tbl.setProperty("SORTBUCKETCOLSPREFIX","TRUE");
    }
  }
  tbl.setOwner(System.getProperty("user.name"));
  tbl.getTTable().setCreateTime((int)(System.currentTimeMillis() / 1000));
  if (crtTbl.getCols() != null) {
    tbl.setFields(crtTbl.getCols());
  }
  db.createTable(tbl,crtTbl.getIfNotExists());
  return 0;
}
