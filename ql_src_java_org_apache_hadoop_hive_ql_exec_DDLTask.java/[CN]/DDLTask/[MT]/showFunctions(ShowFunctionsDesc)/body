{
  Set<String> funcs=null;
  if (showFuncs.getPattern() != null) {
    LOG.info("pattern: " + showFuncs.getPattern());
    funcs=FunctionRegistry.getFunctionNames(showFuncs.getPattern());
    LOG.info("results : " + funcs.size());
  }
 else {
    funcs=FunctionRegistry.getFunctionNames();
  }
  DataOutputStream outStream=null;
  try {
    Path resFile=new Path(showFuncs.getResFile());
    FileSystem fs=resFile.getFileSystem(conf);
    outStream=fs.create(resFile);
    SortedSet<String> sortedFuncs=new TreeSet<String>(funcs);
    sortedFuncs.removeAll(serdeConstants.PrimitiveTypes);
    Iterator<String> iterFuncs=sortedFuncs.iterator();
    while (iterFuncs.hasNext()) {
      outStream.writeBytes(iterFuncs.next());
      outStream.write(terminator);
    }
    outStream.close();
    outStream=null;
  }
 catch (  FileNotFoundException e) {
    LOG.warn("show function: " + stringifyException(e));
    return 1;
  }
catch (  IOException e) {
    LOG.warn("show function: " + stringifyException(e));
    return 1;
  }
catch (  Exception e) {
    throw new HiveException(e);
  }
 finally {
    IOUtils.closeStream((FSDataOutputStream)outStream);
  }
  return 0;
}
