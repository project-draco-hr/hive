{
  List<String> databases=null;
  if (showDatabasesDesc.getPattern() != null) {
    LOG.info("pattern: " + showDatabasesDesc.getPattern());
    databases=db.getDatabasesByPattern(showDatabasesDesc.getPattern());
  }
 else {
    databases=db.getAllDatabases();
  }
  LOG.info("results : " + databases.size());
  DataOutputStream outStream=null;
  try {
    Path resFile=new Path(showDatabasesDesc.getResFile());
    FileSystem fs=resFile.getFileSystem(conf);
    outStream=fs.create(resFile);
    formatter.showDatabases(outStream,databases);
    ((FSDataOutputStream)outStream).close();
    outStream=null;
  }
 catch (  FileNotFoundException e) {
    formatter.logWarn(outStream,"show databases: " + stringifyException(e),formatter.ERROR);
    return 1;
  }
catch (  IOException e) {
    formatter.logWarn(outStream,"show databases: " + stringifyException(e),formatter.ERROR);
    return 1;
  }
catch (  Exception e) {
    throw new HiveException(e.toString());
  }
 finally {
    IOUtils.closeStream((FSDataOutputStream)outStream);
  }
  return 0;
}
