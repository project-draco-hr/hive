{
  String tableName=showTblPrpt.getTableName();
  Table tbl=db.getTable(tableName,false);
  DataOutput outStream=null;
  try {
    Path resFile=new Path(showTblPrpt.getResFile());
    FileSystem fs=resFile.getFileSystem(conf);
    outStream=fs.create(resFile);
    if (tbl == null) {
      String errMsg="Table " + tableName + " does not exist";
      outStream.write(errMsg.getBytes("UTF-8"));
      ((FSDataOutputStream)outStream).close();
      outStream=null;
      return 0;
    }
    LOG.info("DDLTask: show properties for " + tbl.getTableName());
    String propertyName=showTblPrpt.getPropertyName();
    if (propertyName != null) {
      String propertyValue=tbl.getProperty(propertyName);
      if (propertyValue == null) {
        String errMsg="Table " + tableName + " does not have property: "+ propertyName;
        outStream.write(errMsg.getBytes("UTF-8"));
      }
 else {
        outStream.writeBytes(propertyValue);
      }
    }
 else {
      Map<String,String> properties=tbl.getParameters();
      for (      String key : properties.keySet()) {
        writeKeyValuePair(outStream,key,properties.get(key));
      }
    }
    LOG.info("DDLTask: written data for showing properties of " + tbl.getTableName());
    ((FSDataOutputStream)outStream).close();
    outStream=null;
  }
 catch (  FileNotFoundException e) {
    LOG.info("show table properties: " + stringifyException(e));
    return 1;
  }
catch (  IOException e) {
    LOG.info("show table properties: " + stringifyException(e));
    return 1;
  }
catch (  Exception e) {
    throw new HiveException(e);
  }
 finally {
    IOUtils.closeStream((FSDataOutputStream)outStream);
  }
  return 0;
}
