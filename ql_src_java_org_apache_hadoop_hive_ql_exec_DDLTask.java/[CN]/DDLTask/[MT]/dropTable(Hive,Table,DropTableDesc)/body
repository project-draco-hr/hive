{
  if (tbl != null) {
    if (tbl.isView()) {
      if (!dropTbl.getExpectView()) {
        if (dropTbl.getIfExists()) {
          return;
        }
        throw new HiveException("Cannot drop a view with DROP TABLE");
      }
    }
 else {
      if (dropTbl.getExpectView()) {
        if (dropTbl.getIfExists()) {
          return;
        }
        throw new HiveException("Cannot drop a base table with DROP VIEW");
      }
    }
  }
  ReplicationSpec replicationSpec=dropTbl.getReplicationSpec();
  if ((tbl != null) && replicationSpec.isInReplicationScope()) {
    if (!replicationSpec.allowEventReplacementInto(tbl)) {
      if (tbl.isPartitioned()) {
        PartitionIterable partitions=new PartitionIterable(db,tbl,null,conf.getIntVar(HiveConf.ConfVars.METASTORE_BATCH_RETRIEVE_MAX));
        for (        Partition p : Iterables.filter(partitions,replicationSpec.allowEventReplacementInto())) {
          db.dropPartition(tbl.getDbName(),tbl.getTableName(),p.getValues(),true);
        }
      }
      return;
    }
  }
  int partitionBatchSize=HiveConf.getIntVar(conf,ConfVars.METASTORE_BATCH_RETRIEVE_OBJECTS_MAX);
  db.dropTable(dropTbl.getTableName(),dropTbl.getIfPurge());
  if (tbl != null) {
    work.getOutputs().add(new WriteEntity(tbl,WriteEntity.WriteType.DDL_NO_LOCK));
  }
}
