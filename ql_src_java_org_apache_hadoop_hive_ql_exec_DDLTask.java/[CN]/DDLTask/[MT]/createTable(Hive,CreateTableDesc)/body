{
  Table tbl=crtTbl.toTable(conf);
  List<SQLPrimaryKey> primaryKeys=crtTbl.getPrimaryKeys();
  List<SQLForeignKey> foreignKeys=crtTbl.getForeignKeys();
  LOG.info("creating table " + tbl.getDbName() + "."+ tbl.getTableName()+ " on "+ tbl.getDataLocation());
  if (crtTbl.getReplaceMode()) {
    try {
      db.alterTable(tbl.getDbName() + "." + tbl.getTableName(),tbl,null);
    }
 catch (    InvalidOperationException e) {
      throw new HiveException("Unable to alter table. " + e.getMessage(),e);
    }
  }
 else {
    if ((foreignKeys != null && foreignKeys.size() > 0) || (primaryKeys != null && primaryKeys.size() > 0)) {
      db.createTable(tbl,crtTbl.getIfNotExists(),primaryKeys,foreignKeys);
    }
 else {
      db.createTable(tbl,crtTbl.getIfNotExists());
    }
    if (crtTbl.isCTAS()) {
      Table createdTable=db.getTable(tbl.getDbName(),tbl.getTableName());
      DataContainer dc=new DataContainer(createdTable.getTTable());
      SessionState.get().getLineageState().setLineage(createdTable.getPath(),dc,createdTable.getCols());
    }
  }
  work.getOutputs().add(new WriteEntity(tbl,WriteEntity.WriteType.DDL_NO_LOCK));
  return 0;
}
