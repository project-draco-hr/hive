{
  String tabName=showParts.getTabName();
  Table tbl=null;
  List<String> parts=null;
  tbl=db.getTable(tabName);
  if (!tbl.isPartitioned()) {
    console.printError("Table " + tabName + " is not a partitioned table");
    return 1;
  }
  parts=db.getPartitionNames(MetaStoreUtils.DEFAULT_DATABASE_NAME,tbl.getName(),Short.MAX_VALUE);
  try {
    DataOutput outStream=(DataOutput)fs.create(showParts.getResFile());
    Iterator<String> iterParts=parts.iterator();
    boolean firstCol=true;
    while (iterParts.hasNext()) {
      if (!firstCol)       outStream.write(terminator);
      outStream.write(iterParts.next().getBytes("UTF-8"));
      firstCol=false;
    }
    ((FSDataOutputStream)outStream).close();
  }
 catch (  FileNotFoundException e) {
    LOG.info("show partitions: " + StringUtils.stringifyException(e));
    return 1;
  }
catch (  IOException e) {
    LOG.info("show partitions: " + StringUtils.stringifyException(e));
    return 1;
  }
  return 0;
}
