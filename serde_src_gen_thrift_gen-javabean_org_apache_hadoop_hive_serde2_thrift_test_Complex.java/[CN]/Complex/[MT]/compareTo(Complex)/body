{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  Complex typedOther=(Complex)other;
  lastComparison=Boolean.valueOf(isSetAint()).compareTo(typedOther.isSetAint());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAint()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.aint,typedOther.aint);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetAString()).compareTo(typedOther.isSetAString());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAString()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.aString,typedOther.aString);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetLint()).compareTo(typedOther.isSetLint());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetLint()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.lint,typedOther.lint);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetLString()).compareTo(typedOther.isSetLString());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetLString()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.lString,typedOther.lString);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetLintString()).compareTo(typedOther.isSetLintString());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetLintString()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.lintString,typedOther.lintString);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMStringString()).compareTo(typedOther.isSetMStringString());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMStringString()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.mStringString,typedOther.mStringString);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
