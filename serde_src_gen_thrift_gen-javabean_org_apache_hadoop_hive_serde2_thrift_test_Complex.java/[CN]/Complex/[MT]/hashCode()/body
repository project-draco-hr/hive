{
  HashCodeBuilder builder=new HashCodeBuilder();
  boolean present_aint=true;
  builder.append(present_aint);
  if (present_aint)   builder.append(aint);
  boolean present_aString=true && (isSetAString());
  builder.append(present_aString);
  if (present_aString)   builder.append(aString);
  boolean present_lint=true && (isSetLint());
  builder.append(present_lint);
  if (present_lint)   builder.append(lint);
  boolean present_lString=true && (isSetLString());
  builder.append(present_lString);
  if (present_lString)   builder.append(lString);
  boolean present_lintString=true && (isSetLintString());
  builder.append(present_lintString);
  if (present_lintString)   builder.append(lintString);
  boolean present_mStringString=true && (isSetMStringString());
  builder.append(present_mStringString);
  if (present_mStringString)   builder.append(mStringString);
  boolean present_attributes=true && (isSetAttributes());
  builder.append(present_attributes);
  if (present_attributes)   builder.append(attributes);
  boolean present_unionField1=true && (isSetUnionField1());
  builder.append(present_unionField1);
  if (present_unionField1)   builder.append(unionField1);
  boolean present_unionField2=true && (isSetUnionField2());
  builder.append(present_unionField2);
  if (present_unionField2)   builder.append(unionField2);
  boolean present_unionField3=true && (isSetUnionField3());
  builder.append(present_unionField3);
  if (present_unionField3)   builder.append(unionField3);
  return builder.toHashCode();
}
