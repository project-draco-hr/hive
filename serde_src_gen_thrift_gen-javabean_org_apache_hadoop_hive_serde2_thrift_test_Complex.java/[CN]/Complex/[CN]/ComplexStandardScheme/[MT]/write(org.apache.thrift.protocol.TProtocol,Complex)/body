{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  oprot.writeFieldBegin(AINT_FIELD_DESC);
  oprot.writeI32(struct.aint);
  oprot.writeFieldEnd();
  if (struct.aString != null) {
    oprot.writeFieldBegin(A_STRING_FIELD_DESC);
    oprot.writeString(struct.aString);
    oprot.writeFieldEnd();
  }
  if (struct.lint != null) {
    oprot.writeFieldBegin(LINT_FIELD_DESC);
{
      oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32,struct.lint.size()));
      for (      int _iter13 : struct.lint) {
        oprot.writeI32(_iter13);
      }
      oprot.writeListEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.lString != null) {
    oprot.writeFieldBegin(L_STRING_FIELD_DESC);
{
      oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,struct.lString.size()));
      for (      String _iter14 : struct.lString) {
        oprot.writeString(_iter14);
      }
      oprot.writeListEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.lintString != null) {
    oprot.writeFieldBegin(LINT_STRING_FIELD_DESC);
{
      oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,struct.lintString.size()));
      for (      IntString _iter15 : struct.lintString) {
        _iter15.write(oprot);
      }
      oprot.writeListEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.mStringString != null) {
    oprot.writeFieldBegin(M_STRING_STRING_FIELD_DESC);
{
      oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,struct.mStringString.size()));
      for (      Map.Entry<String,String> _iter16 : struct.mStringString.entrySet()) {
        oprot.writeString(_iter16.getKey());
        oprot.writeString(_iter16.getValue());
      }
      oprot.writeMapEnd();
    }
    oprot.writeFieldEnd();
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
