{
  Configuration conf=new Configuration();
  JobConf job=new JobConf(conf);
  TableDesc tblDesc=Utilities.defaultTd;
  tblDesc.setInputFileFormatClass(TestSkipCombineInputFormat.class);
  PartitionDesc partDesc=new PartitionDesc(tblDesc,null);
  LinkedHashMap<String,PartitionDesc> pt=new LinkedHashMap<String,PartitionDesc>();
  pt.put("/tmp/testfolder1",partDesc);
  pt.put("/tmp/testfolder2",partDesc);
  MapredWork mrwork=new MapredWork();
  mrwork.getMapWork().setPathToPartitionInfo(pt);
  Path mapWorkPath=new Path("/tmp/" + System.getProperty("user.name"),"hive");
  Utilities.setMapRedWork(conf,mrwork,mapWorkPath);
  try {
    Path[] paths=new Path[2];
    paths[0]=new Path("/tmp/testfolder1");
    paths[1]=new Path("/tmp/testfolder2");
    CombineHiveInputFormat combineInputFormat=ReflectionUtils.newInstance(CombineHiveInputFormat.class,conf);
    combineInputFormat.pathToPartitionInfo=Utilities.getMapWork(conf).getPathToPartitionInfo();
    Set results=combineInputFormat.getNonCombinablePathIndices(job,paths,2);
    assertEquals("Should have both path indices in the results set",2,results.size());
  }
  finally {
    FileSystem.get(conf).delete(mapWorkPath,true);
  }
}
