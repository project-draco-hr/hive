{
  int rc=1;
  boolean cleanContext=false;
  Context ctx=null;
  DAGClient client=null;
  TezSessionState session=null;
  try {
    ctx=driverContext.getCtx();
    if (ctx == null) {
      ctx=new Context(conf);
      cleanContext=true;
    }
    SessionState ss=SessionState.get();
    session=ss.getTezSession();
    session=TezSessionPoolManager.getInstance().getSession(session,conf,false);
    ss.setTezSession(session);
    JobConf jobConf=utils.createConfiguration(conf);
    String[] inputOutputJars=work.configureJobConfAndExtractJars(jobConf);
    Path scratchDir=ctx.getMRScratchDir();
    utils.createTezDir(scratchDir,conf);
    String hiveJarDir=utils.getHiveJarDirectory(conf);
    List<LocalResource> additionalLr=utils.localizeTempFilesFromConf(hiveJarDir,conf);
    List<LocalResource> handlerLr=utils.localizeTempFiles(hiveJarDir,conf,inputOutputJars);
    if (handlerLr != null) {
      additionalLr.addAll(handlerLr);
    }
    if (!session.hasResources(handlerLr)) {
      if (session.isOpen()) {
        LOG.info("Tez session being reopened to pass custom jars to AM");
        session.close(false);
        session=TezSessionPoolManager.getInstance().getSession(null,conf,false);
        ss.setTezSession(session);
      }
      session.open(conf,additionalLr);
    }
    if (!session.isOpen()) {
      LOG.info("Tez session hasn't been created yet. Opening session");
      session.open(conf);
    }
    LocalResource appJarLr=session.getAppJarLr();
    DAG dag=build(jobConf,work,scratchDir,appJarLr,additionalLr,ctx);
    client=submit(jobConf,dag,scratchDir,appJarLr,session);
    TezJobMonitor monitor=new TezJobMonitor();
    rc=monitor.monitorExecution(client,ctx.getHiveTxnManager(),conf);
    Set<StatusGetOpts> statusGetOpts=EnumSet.of(StatusGetOpts.GET_COUNTERS);
    counters=client.getDAGStatus(statusGetOpts).getDAGCounters();
    TezSessionPoolManager.getInstance().returnSession(session);
    if (LOG.isInfoEnabled()) {
      for (      CounterGroup group : counters) {
        LOG.info(group.getDisplayName() + ":");
        for (        TezCounter counter : group) {
          LOG.info("   " + counter.getDisplayName() + ": "+ counter.getValue());
        }
      }
    }
  }
 catch (  Exception e) {
    LOG.error("Failed to execute tez graph.",e);
  }
 finally {
    Utilities.clearWork(conf);
    if (cleanContext) {
      try {
        ctx.clear();
      }
 catch (      Exception e) {
        LOG.warn("Failed to clean up after tez job");
      }
    }
    if (client != null) {
      rc=close(work,rc);
    }
  }
  return rc;
}
