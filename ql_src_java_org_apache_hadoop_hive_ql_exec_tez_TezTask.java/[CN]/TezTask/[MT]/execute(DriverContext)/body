{
  int rc=1;
  boolean cleanContext=false;
  Context ctx=null;
  DAGClient client=null;
  TezSessionState session=null;
  try {
    ctx=driverContext.getCtx();
    if (ctx == null) {
      ctx=new Context(conf);
      cleanContext=true;
    }
    SessionState ss=SessionState.get();
    session=ss.getTezSession();
    session=TezSessionPoolManager.getInstance().getSession(session,conf,false,getWork().getLlapMode());
    ss.setTezSession(session);
    JobConf jobConf=utils.createConfiguration(conf);
    String[] inputOutputJars=work.configureJobConfAndExtractJars(jobConf);
    Path scratchDir=ctx.getMRScratchDir();
    scratchDir=utils.createTezDir(scratchDir,conf);
    Map<String,LocalResource> inputOutputLocalResources=getExtraLocalResources(jobConf,scratchDir,inputOutputJars);
    updateSession(session,jobConf,scratchDir,inputOutputJars,inputOutputLocalResources);
    List<LocalResource> additionalLr=session.getLocalizedResources();
    if (LOG.isDebugEnabled()) {
      if (additionalLr == null || additionalLr.size() == 0) {
        LOG.debug("No local resources to process (other than hive-exec)");
      }
 else {
        for (        LocalResource lr : additionalLr) {
          LOG.debug("Adding local resource: " + lr.getResource());
        }
      }
    }
    LocalResource appJarLr=session.getAppJarLr();
    DAG dag=build(jobConf,work,scratchDir,appJarLr,additionalLr,ctx);
    addExtraResourcesToDag(session,dag,inputOutputJars,inputOutputLocalResources);
    client=submit(jobConf,dag,scratchDir,appJarLr,session,additionalLr,inputOutputJars,inputOutputLocalResources);
    TezJobMonitor monitor=new TezJobMonitor(work.getWorkMap());
    rc=monitor.monitorExecution(client,ctx.getHiveTxnManager(),conf,dag);
    if (rc != 0) {
      this.setException(new HiveException(monitor.getDiagnostics()));
    }
    try {
      Set<StatusGetOpts> statusGetOpts=EnumSet.of(StatusGetOpts.GET_COUNTERS);
      counters=client.getDAGStatus(statusGetOpts).getDAGCounters();
    }
 catch (    Exception err) {
      LOG.error("Failed to get counters: " + err,err);
      counters=null;
    }
    TezSessionPoolManager.getInstance().returnSession(session,getWork().getLlapMode());
    if (LOG.isInfoEnabled() && counters != null && (conf.getBoolVar(conf,HiveConf.ConfVars.TEZ_EXEC_SUMMARY) || Utilities.isPerfOrAboveLogging(conf))) {
      for (      CounterGroup group : counters) {
        LOG.info(group.getDisplayName() + ":");
        for (        TezCounter counter : group) {
          LOG.info("   " + counter.getDisplayName() + ": "+ counter.getValue());
        }
      }
    }
  }
 catch (  Exception e) {
    LOG.error("Failed to execute tez graph.",e);
  }
 finally {
    Utilities.clearWork(conf);
    if (cleanContext) {
      try {
        ctx.clear();
      }
 catch (      Exception e) {
        LOG.warn("Failed to clean up after tez job");
      }
    }
    if (client != null) {
      rc=close(work,rc);
    }
  }
  return rc;
}
