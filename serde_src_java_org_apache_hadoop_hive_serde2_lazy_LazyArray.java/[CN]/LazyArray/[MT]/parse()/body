{
  parsed=true;
  byte separator=oi.getSeparator();
  boolean isEscaped=oi.isEscaped();
  byte escapeChar=oi.getEscapeChar();
  if (length == 0) {
    arrayLength=0;
    return;
  }
  byte[] bytes=this.bytes.getData();
  arrayLength=0;
  int arrayByteEnd=start + length;
  int elementByteBegin=start;
  int elementByteEnd=start;
  while (elementByteEnd <= arrayByteEnd) {
    if (elementByteEnd == arrayByteEnd || bytes[elementByteEnd] == separator) {
      if (startPosition == null || arrayLength + 1 == startPosition.length) {
        enlargeArrays();
      }
      startPosition[arrayLength]=elementByteBegin;
      arrayLength++;
      elementByteBegin=elementByteEnd + 1;
      elementByteEnd++;
    }
 else {
      if (isEscaped && bytes[elementByteEnd] == escapeChar && elementByteEnd + 1 < arrayByteEnd) {
        elementByteEnd+=2;
      }
 else {
        elementByteEnd++;
      }
    }
  }
  startPosition[arrayLength]=arrayByteEnd + 1;
  if (arrayLength > 0) {
    Arrays.fill(elementInited,0,arrayLength,false);
  }
}
