{
  do {
    if (id == null) {
      long sessionId=zookeeper.getSessionId();
      String prefix="x-" + sessionId + "-";
      findPrefixInChildren(prefix,zookeeper,dir);
      idName=new ZNodeName(id);
    }
    if (id != null) {
      List<String> names=zookeeper.getChildren(dir,false);
      if (names.isEmpty()) {
        LOG.warn("No children in: " + dir + " when we've just "+ "created one! Lets recreate it...");
        id=null;
      }
 else {
        SortedSet<ZNodeName> sortedNames=new TreeSet<ZNodeName>();
        for (        String name : names) {
          sortedNames.add(new ZNodeName(dir + "/" + name));
        }
        ownerId=sortedNames.first().getName();
        SortedSet<ZNodeName> lessThanMe=sortedNames.headSet(idName);
        if (!lessThanMe.isEmpty()) {
          ZNodeName lastChildName=lessThanMe.last();
          lastChildId=lastChildName.getName();
          if (LOG.isDebugEnabled()) {
            LOG.debug("watching less than me node: " + lastChildId);
          }
          Stat stat=zookeeper.exists(lastChildId,new LockWatcher());
          if (stat != null) {
            return Boolean.FALSE;
          }
 else {
            LOG.warn("Could not find the" + " stats for less than me: " + lastChildName.getName());
          }
        }
 else {
          if (isOwner()) {
            if (callback != null) {
              callback.lockAcquired();
            }
            return Boolean.TRUE;
          }
        }
      }
    }
  }
 while (id == null);
  return Boolean.FALSE;
}
