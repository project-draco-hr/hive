{
  correlationCtx.addWalked(op);
  correlation.addToAllReduceSinkOperators(op);
  Set<ReduceSinkOperator> reduceSinkOperators=new HashSet<ReduceSinkOperator>();
  boolean shouldDetect=true;
  List<ExprNodeDesc> keys=op.getConf().getKeyCols();
  Set<String> keyColumns=new HashSet<String>();
  for (  ExprNodeDesc key : keys) {
    if (!(key instanceof ExprNodeColumnDesc)) {
      shouldDetect=false;
    }
 else {
      keyColumns.add(((ExprNodeColumnDesc)key).getColumn());
    }
  }
  if (shouldDetect) {
    Set<ReduceSinkOperator> newReduceSinkOperators=new HashSet<ReduceSinkOperator>();
    for (    Operator<? extends OperatorDesc> parent : op.getParentOperators()) {
      LOG.info("Operator " + op.getIdentifier() + ": start detecting correlation from this operator");
      LOG.info("--keys of this operator: " + keyColumns.toString());
      Set<ReduceSinkOperator> correlatedReduceSinkOperators=findCorrelatedReduceSinkOperators(parent,keyColumns,correlation);
      if (correlatedReduceSinkOperators.size() == 0) {
        newReduceSinkOperators.add(op);
      }
 else {
        for (        ReduceSinkOperator rsop : correlatedReduceSinkOperators) {
          if (!correlation.getUp2downRSops().containsKey(op)) {
            correlation.getUp2downRSops().put(op,new ArrayList<ReduceSinkOperator>());
          }
          correlation.getUp2downRSops().get(op).add(rsop);
          if (!correlation.getDown2upRSops().containsKey(rsop)) {
            correlation.getDown2upRSops().put(rsop,new ArrayList<ReduceSinkOperator>());
          }
          correlation.getDown2upRSops().get(rsop).add(op);
          Set<ReduceSinkOperator> exploited=exploitJFC(rsop,correlationCtx,correlation);
          if (exploited.size() == 0) {
            newReduceSinkOperators.add(rsop);
          }
 else {
            newReduceSinkOperators.addAll(exploited);
          }
        }
      }
    }
    reduceSinkOperators.addAll(newReduceSinkOperators);
  }
  return reduceSinkOperators;
}
