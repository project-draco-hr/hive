{
  boolean success=false;
  List<MRoleMap> mRoleMember=null;
  try {
    openTransaction();
    LOG.debug("Executing listRoles");
    Query query=pm.newQuery(MRoleMap.class,"principalName == t1 && principalType == t2");
    query.declareParameters("java.lang.String t1, java.lang.String t2");
    query.setUnique(false);
    mRoleMember=(List<MRoleMap>)query.executeWithArray(principalName,principalType.toString());
    LOG.debug("Done executing query for listMSecurityUserRoleMap");
    pm.retrieveAll(mRoleMember);
    success=commitTransaction();
    LOG.debug("Done retrieving all objects for listMSecurityUserRoleMap");
  }
  finally {
    if (!success) {
      rollbackTransaction();
    }
  }
  if (principalType == PrincipalType.USER) {
    if (mRoleMember == null) {
      mRoleMember=new ArrayList<MRoleMap>();
    }
 else {
      mRoleMember=new ArrayList<MRoleMap>(mRoleMember);
    }
    MRole publicRole=new MRole(HiveMetaStore.PUBLIC,0,HiveMetaStore.PUBLIC);
    mRoleMember.add(new MRoleMap(principalName,principalType.toString(),publicRole,0,null,null,false));
  }
  return mRoleMember;
}
