{
  boolean committed=false;
  openTransaction();
  try {
    List<ColumnStatisticsObj> statsObjs=colStats.getStatsObj();
    ColumnStatisticsDesc statsDesc=colStats.getStatsDesc();
    Table table=ensureGetTable(statsDesc.getDbName(),statsDesc.getTableName());
    List<String> colNames=new ArrayList<>();
    for (    ColumnStatisticsObj statsObj : statsObjs) {
      colNames.add(statsObj.getColName());
    }
    Map<String,MTableColumnStatistics> oldStats=getPartitionColStats(table,colNames);
    for (    ColumnStatisticsObj statsObj : statsObjs) {
      MTableColumnStatistics mStatsObj=StatObjectConverter.convertToMTableColumnStatistics(ensureGetMTable(statsDesc.getDbName(),statsDesc.getTableName()),statsDesc,statsObj);
      writeMTableColumnStatistics(table,mStatsObj,oldStats.get(statsObj.getColName()));
      colNames.add(statsObj.getColName());
    }
    String dbname=table.getDbName();
    String name=table.getTableName();
    MTable oldt=getMTable(dbname,name);
    Map<String,String> parameters=table.getParameters();
    StatsSetupConst.setColumnStatsState(parameters,colNames);
    oldt.setParameters(parameters);
    committed=commitTransaction();
    return committed;
  }
  finally {
    if (!committed) {
      rollbackTransaction();
    }
  }
}
