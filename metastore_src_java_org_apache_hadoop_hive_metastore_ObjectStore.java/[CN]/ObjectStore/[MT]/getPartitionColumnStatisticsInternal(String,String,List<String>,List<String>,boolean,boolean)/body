{
  return new GetListHelper<ColumnStatistics>(dbName,tableName,allowSql,allowJdo){
    @Override protected List<ColumnStatistics> getSqlResult(    GetHelper<List<ColumnStatistics>> ctx) throws MetaException {
      return directSql.getPartitionStats(dbName,tblName,partNames,colNames);
    }
    @Override protected List<ColumnStatistics> getJdoResult(    GetHelper<List<ColumnStatistics>> ctx) throws MetaException, NoSuchObjectException {
      QueryWrapper queryWrapper=new QueryWrapper();
      try {
        List<MPartitionColumnStatistics> mStats=getMPartitionColumnStatistics(getTable(),partNames,colNames,queryWrapper);
        List<ColumnStatistics> result=new ArrayList<ColumnStatistics>(Math.min(mStats.size(),partNames.size()));
        String lastPartName=null;
        List<ColumnStatisticsObj> curList=null;
        ColumnStatisticsDesc csd=null;
        for (int i=0; i <= mStats.size(); ++i) {
          boolean isLast=i == mStats.size();
          MPartitionColumnStatistics mStatsObj=isLast ? null : mStats.get(i);
          String partName=isLast ? null : (String)mStatsObj.getPartitionName();
          if (isLast || !partName.equals(lastPartName)) {
            if (i != 0) {
              result.add(new ColumnStatistics(csd,curList));
            }
            if (isLast) {
              continue;
            }
            csd=StatObjectConverter.getPartitionColumnStatisticsDesc(mStatsObj);
            curList=new ArrayList<ColumnStatisticsObj>(colNames.size());
          }
          curList.add(StatObjectConverter.getPartitionColumnStatisticsObj(mStatsObj));
          lastPartName=partName;
          Deadline.checkTimeout();
        }
        return result;
      }
  finally {
        queryWrapper.close();
      }
    }
  }
.run(true);
}
