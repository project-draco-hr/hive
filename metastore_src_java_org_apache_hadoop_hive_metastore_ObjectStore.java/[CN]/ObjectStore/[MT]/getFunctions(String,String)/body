{
  boolean commited=false;
  Query query=null;
  List<String> funcs=null;
  try {
    openTransaction();
    dbName=HiveStringUtils.normalizeIdentifier(dbName);
    String[] subpatterns=pattern.trim().split("\\|");
    String queryStr="select functionName from org.apache.hadoop.hive.metastore.model.MFunction " + "where database.name == dbName && (";
    boolean first=true;
    for (    String subpattern : subpatterns) {
      subpattern="(?i)" + subpattern.replaceAll("\\*",".*");
      if (!first) {
        queryStr=queryStr + " || ";
      }
      queryStr=queryStr + " functionName.matches(\"" + subpattern+ "\")";
      first=false;
    }
    queryStr=queryStr + ")";
    query=pm.newQuery(queryStr);
    query.declareParameters("java.lang.String dbName");
    query.setResult("functionName");
    query.setOrdering("functionName ascending");
    Collection<?> names=(Collection<?>)query.execute(dbName);
    funcs=new ArrayList<String>();
    for (Iterator<?> i=names.iterator(); i.hasNext(); ) {
      funcs.add((String)i.next());
    }
    commited=commitTransaction();
  }
  finally {
    if (!commited) {
      rollbackTransaction();
    }
    if (query != null) {
      query.closeAll();
    }
  }
  return funcs;
}
