{
  List<MConstraint> mpkfks=new ArrayList<MConstraint>();
  String currentConstraintName=null;
  for (int i=0; i < fks.size(); i++) {
    MTable parentTable=getMTable(fks.get(i).getPktable_db(),fks.get(i).getPktable_name());
    MTable childTable=getMTable(fks.get(i).getFktable_db(),fks.get(i).getFktable_name());
    MColumnDescriptor parentColumn=getColumnFromTable(parentTable,fks.get(i).getPkcolumn_name());
    MColumnDescriptor childColumn=getColumnFromTable(childTable,fks.get(i).getFkcolumn_name());
    if (parentTable == null) {
      throw new InvalidObjectException("Parent table not found: " + fks.get(i).getPktable_name());
    }
    if (childTable == null) {
      throw new InvalidObjectException("Child table not found: " + fks.get(i).getFktable_name());
    }
    if (parentColumn == null) {
      throw new InvalidObjectException("Parent column not found: " + fks.get(i).getPkcolumn_name());
    }
    if (childColumn == null) {
      throw new InvalidObjectException("Child column not found" + fks.get(i).getFkcolumn_name());
    }
    if (fks.get(i).getFk_name() == null) {
      if (fks.get(i).getKey_seq() == 1) {
        currentConstraintName=generateConstraintName(fks.get(i).getFktable_db(),fks.get(i).getFktable_name(),fks.get(i).getPktable_db(),fks.get(i).getPktable_name(),fks.get(i).getPkcolumn_name(),fks.get(i).getFkcolumn_name(),"fk");
      }
    }
 else {
      currentConstraintName=fks.get(i).getFk_name();
    }
    Integer updateRule=fks.get(i).getUpdate_rule();
    Integer deleteRule=fks.get(i).getDelete_rule();
    int enableValidateRely=(fks.get(i).isEnable_cstr() ? 4 : 0) + (fks.get(i).isValidate_cstr() ? 2 : 0) + (fks.get(i).isRely_cstr() ? 1 : 0);
    MConstraint mpkfk=new MConstraint(currentConstraintName,MConstraint.FOREIGN_KEY_CONSTRAINT,fks.get(i).getKey_seq(),deleteRule,updateRule,enableValidateRely,parentTable,childTable,parentColumn,childColumn);
    mpkfks.add(mpkfk);
  }
  pm.makePersistentAll(mpkfks);
}
