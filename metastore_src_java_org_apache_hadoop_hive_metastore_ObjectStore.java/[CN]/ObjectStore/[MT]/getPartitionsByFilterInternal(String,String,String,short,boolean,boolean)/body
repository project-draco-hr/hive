{
  final ExpressionTree tree=(filter != null && !filter.isEmpty()) ? PartFilterExprUtil.getFilterParser(filter).tree : ExpressionTree.EMPTY_TREE;
  return new GetListHelper<Partition>(dbName,tblName,allowSql,allowJdo){
    private SqlFilterForPushdown filter=new SqlFilterForPushdown();
    @Override protected boolean canUseDirectSql(    GetHelper<List<Partition>> ctx) throws MetaException {
      return directSql.generateSqlFilterForPushdown(ctx.getTable(),tree,filter);
    }
    @Override protected List<Partition> getSqlResult(    GetHelper<List<Partition>> ctx) throws MetaException {
      return directSql.getPartitionsViaSqlFilter(filter,(maxParts < 0) ? null : (int)maxParts);
    }
    @Override protected List<Partition> getJdoResult(    GetHelper<List<Partition>> ctx) throws MetaException, NoSuchObjectException {
      return getPartitionsViaOrmFilter(ctx.getTable(),tree,maxParts,true);
    }
  }
.run(true);
}
