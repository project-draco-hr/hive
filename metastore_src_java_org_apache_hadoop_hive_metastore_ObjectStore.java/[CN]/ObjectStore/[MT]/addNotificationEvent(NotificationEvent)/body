{
  boolean commited=false;
  try {
    openTransaction();
    Query query=pm.newQuery(MNotificationNextId.class);
    Collection<MNotificationNextId> ids=(Collection)query.execute();
    MNotificationNextId id=null;
    boolean needToPersistId;
    if (ids == null || ids.size() == 0) {
      id=new MNotificationNextId(1L);
      needToPersistId=true;
    }
 else {
      id=ids.iterator().next();
      needToPersistId=false;
    }
    entry.setEventId(id.getNextEventId());
    id.incrementEventId();
    if (needToPersistId)     pm.makePersistent(id);
    pm.makePersistent(translateThriftToDb(entry));
    commited=commitTransaction();
  }
  finally {
    if (!commited) {
      rollbackTransaction();
    }
  }
}
