{
  if (TXN_STATUS.ROLLBACK == transactionStatus) {
    debugLog("Commit transaction: rollback");
    return false;
  }
  if (openTrasactionCalls <= 0) {
    RuntimeException e=new RuntimeException("commitTransaction was called but openTransactionCalls = " + openTrasactionCalls + ". This probably indicates that there are unbalanced "+ "calls to openTransaction/commitTransaction");
    LOG.error("Unbalanced calls to open/commit Transaction",e);
    throw e;
  }
  if (!currentTransaction.isActive()) {
    RuntimeException e=new RuntimeException("commitTransaction was called but openTransactionCalls = " + openTrasactionCalls + ". This probably indicates that there are unbalanced "+ "calls to openTransaction/commitTransaction");
    LOG.error("Unbalanced calls to open/commit Transaction",e);
    throw e;
  }
  openTrasactionCalls--;
  debugLog("Commit transaction: count = " + openTrasactionCalls + ", isactive "+ currentTransaction.isActive());
  if ((openTrasactionCalls == 0) && currentTransaction.isActive()) {
    transactionStatus=TXN_STATUS.COMMITED;
    currentTransaction.commit();
  }
  incrementMetricsCount(MetricsConstant.JDO_COMMIT_TRANSACTIONS);
  return true;
}
