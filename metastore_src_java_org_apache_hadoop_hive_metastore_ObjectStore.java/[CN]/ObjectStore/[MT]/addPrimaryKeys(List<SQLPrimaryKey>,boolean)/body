{
  List<MConstraint> mpks=new ArrayList<MConstraint>();
  String constraintName=null;
  for (int i=0; i < pks.size(); i++) {
    AttachedMTableInfo nParentTable=getMTable(pks.get(i).getTable_db(),pks.get(i).getTable_name(),retrieveCD);
    MTable parentTable=nParentTable.mtbl;
    if (parentTable == null) {
      throw new InvalidObjectException("Parent table not found: " + pks.get(i).getTable_name());
    }
    MColumnDescriptor parentCD=retrieveCD ? nParentTable.mcd : parentTable.getSd().getCD();
    int parentIntegerIndex=getColumnIndexFromTableColumns(parentCD.getCols(),pks.get(i).getColumn_name());
    if (parentIntegerIndex == -1) {
      throw new InvalidObjectException("Parent column not found: " + pks.get(i).getColumn_name());
    }
    if (getPrimaryKeyConstraintName(parentTable.getDatabase().getName(),parentTable.getTableName()) != null) {
      throw new MetaException(" Primary key already exists for: " + parentTable.getDatabase().getName() + "."+ pks.get(i).getTable_name());
    }
    if (pks.get(i).getPk_name() == null) {
      if (pks.get(i).getKey_seq() == 1) {
        constraintName=generateConstraintName(pks.get(i).getTable_db(),pks.get(i).getTable_name(),pks.get(i).getColumn_name(),"pk");
      }
    }
 else {
      constraintName=pks.get(i).getPk_name();
    }
    int enableValidateRely=(pks.get(i).isEnable_cstr() ? 4 : 0) + (pks.get(i).isValidate_cstr() ? 2 : 0) + (pks.get(i).isRely_cstr() ? 1 : 0);
    MConstraint mpk=new MConstraint(constraintName,MConstraint.PRIMARY_KEY_CONSTRAINT,pks.get(i).getKey_seq(),null,null,enableValidateRely,parentTable,null,parentCD,null,null,parentIntegerIndex);
    mpks.add(mpk);
  }
  pm.makePersistentAll(mpks);
}
