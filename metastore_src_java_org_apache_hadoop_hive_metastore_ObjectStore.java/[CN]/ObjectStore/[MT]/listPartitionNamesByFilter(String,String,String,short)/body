{
  boolean success=false;
  List<String> partNames=new ArrayList<String>();
  try {
    openTransaction();
    LOG.debug("Executing listMPartitionNamesByFilter");
    dbName=HiveStringUtils.normalizeIdentifier(dbName);
    tableName=HiveStringUtils.normalizeIdentifier(tableName);
    MTable mtable=getMTable(dbName,tableName);
    if (mtable == null) {
      return partNames;
    }
    Map<String,Object> params=new HashMap<String,Object>();
    String queryFilterString=makeQueryFilterString(dbName,mtable,filter,params);
    Query query=pm.newQuery("select partitionName from org.apache.hadoop.hive.metastore.model.MPartition " + "where " + queryFilterString);
    if (maxParts >= 0) {
      query.setRange(0,maxParts);
    }
    LOG.debug("Filter specified is " + filter + ","+ " JDOQL filter is "+ queryFilterString);
    LOG.debug("Parms is " + params);
    String parameterDeclaration=makeParameterDeclarationStringObj(params);
    query.declareParameters(parameterDeclaration);
    query.setOrdering("partitionName ascending");
    query.setResult("partitionName");
    Collection names=(Collection)query.executeWithMap(params);
    partNames=new ArrayList<String>();
    for (Iterator i=names.iterator(); i.hasNext(); ) {
      partNames.add((String)i.next());
    }
    LOG.debug("Done executing query for listMPartitionNamesByFilter");
    success=commitTransaction();
    LOG.debug("Done retrieving all objects for listMPartitionNamesByFilter");
  }
  finally {
    if (!success) {
      rollbackTransaction();
    }
  }
  return partNames;
}
