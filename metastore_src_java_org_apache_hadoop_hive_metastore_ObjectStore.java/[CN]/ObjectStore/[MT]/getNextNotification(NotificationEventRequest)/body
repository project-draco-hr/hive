{
  boolean commited=false;
  try {
    openTransaction();
    long lastEvent=rqst.getLastEvent();
    Query query=pm.newQuery(MNotificationLog.class,"eventId > lastEvent");
    query.declareParameters("java.lang.Long lastEvent");
    query.setOrdering("eventId ascending");
    Collection<MNotificationLog> events=(Collection)query.execute(lastEvent);
    commited=commitTransaction();
    if (events == null) {
      return null;
    }
    Iterator<MNotificationLog> i=events.iterator();
    NotificationEventResponse result=new NotificationEventResponse();
    int maxEvents=rqst.getMaxEvents() > 0 ? rqst.getMaxEvents() : Integer.MAX_VALUE;
    int numEvents=0;
    while (i.hasNext() && numEvents++ < maxEvents) {
      result.addToEvents(translateDbToThrift(i.next()));
    }
    return result;
  }
  finally {
    if (!commited) {
      rollbackTransaction();
      return null;
    }
  }
}
