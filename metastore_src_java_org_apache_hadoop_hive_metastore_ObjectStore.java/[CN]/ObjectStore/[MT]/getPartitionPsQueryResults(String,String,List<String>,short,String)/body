{
  dbName=dbName.toLowerCase().trim();
  tableName=tableName.toLowerCase().trim();
  Table table=getTable(dbName,tableName);
  List<FieldSchema> partCols=table.getPartitionKeys();
  int numPartKeys=partCols.size();
  if (part_vals.size() > numPartKeys) {
    throw new MetaException("Incorrect number of partition values");
  }
  partCols=partCols.subList(0,part_vals.size());
  String partNameMatcher=Warehouse.makePartName(partCols,part_vals,".*");
  if (part_vals.size() < numPartKeys) {
    partNameMatcher+=".*";
  }
  Query q=pm.newQuery(MPartition.class);
  StringBuilder queryFilter=new StringBuilder("table.database.name == dbName");
  queryFilter.append(" && table.tableName == tableName");
  queryFilter.append(" && partitionName.matches(partialRegex)");
  q.setFilter(queryFilter.toString());
  q.declareParameters("java.lang.String dbName, " + "java.lang.String tableName, java.lang.String partialRegex");
  if (max_parts >= 0) {
    q.setRange(0,max_parts);
  }
  if (resultsCol != null && !resultsCol.isEmpty()) {
    q.setResult(resultsCol);
  }
  return (Collection)q.execute(dbName,tableName,partNameMatcher);
}
