{
  final ExpressionTree tree=(filter != null && !filter.isEmpty()) ? PartFilterExprUtil.getFilterParser(filter).tree : ExpressionTree.EMPTY_TREE;
  return new GetHelper<Integer>(dbName,tblName,allowSql,allowJdo){
    private SqlFilterForPushdown filter=new SqlFilterForPushdown();
    @Override protected String describeResult(){
      return "Partition count";
    }
    protected boolean canUseDirectSql(    GetHelper<Integer> ctx) throws MetaException {
      return directSql.generateSqlFilterForPushdown(ctx.getTable(),tree,filter);
    }
    @Override protected Integer getSqlResult(    GetHelper<Integer> ctx) throws MetaException {
      return directSql.getNumPartitionsViaSqlFilter(filter);
    }
    @Override protected Integer getJdoResult(    GetHelper<Integer> ctx) throws MetaException, NoSuchObjectException {
      return getNumPartitionsViaOrmFilter(ctx.getTable(),tree,true);
    }
  }
.run(true);
}
