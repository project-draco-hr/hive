{
  boolean success=false;
  List<MPartition> mparts=null;
  try {
    openTransaction();
    LOG.debug("Executing listMPartitionsByFilter");
    dbName=dbName.toLowerCase();
    tableName=tableName.toLowerCase();
    MTable mtable=getMTable(dbName,tableName);
    if (mtable == null) {
      throw new NoSuchObjectException("Specified database/table does not exist : " + dbName + "."+ tableName);
    }
    StringBuilder queryBuilder=new StringBuilder("table.tableName == t1 && table.database.name == t2");
    Map<String,String> params=new HashMap<String,String>();
    if (filter != null) {
      Table table=convertToTable(mtable);
      CharStream cs=new ANTLRNoCaseStringStream(filter);
      FilterLexer lexer=new FilterLexer(cs);
      CommonTokenStream tokens=new CommonTokenStream();
      tokens.setTokenSource(lexer);
      FilterParser parser=new FilterParser(tokens);
      try {
        parser.filter();
      }
 catch (      RecognitionException re) {
        throw new MetaException("Error parsing partition filter : " + re);
      }
      String jdoFilter=parser.tree.generateJDOFilter(table,params);
      if (jdoFilter.trim().length() > 0) {
        queryBuilder.append(" && ( ");
        queryBuilder.append(jdoFilter.trim());
        queryBuilder.append(" )");
      }
    }
    Query query=pm.newQuery(MPartition.class,queryBuilder.toString());
    if (maxParts >= 0) {
      query.setRange(0,maxParts);
    }
    StringBuilder paramDecl=new StringBuilder("java.lang.String t1, java.lang.String t2");
    for (    String key : params.keySet()) {
      paramDecl.append(", java.lang.String  " + key);
    }
    LOG.debug("Filter specified is " + filter + ","+ " JDOQL filter is "+ queryBuilder.toString());
    params.put("t1",tableName.trim());
    params.put("t2",dbName.trim());
    query.declareParameters(paramDecl.toString());
    query.setOrdering("partitionName ascending");
    mparts=(List<MPartition>)query.executeWithMap(params);
    LOG.debug("Done executing query for listMPartitionsByFilter");
    pm.retrieveAll(mparts);
    success=commitTransaction();
    LOG.debug("Done retrieving all objects for listMPartitionsByFilter");
  }
  finally {
    if (!success) {
      rollbackTransaction();
    }
  }
  return mparts;
}
