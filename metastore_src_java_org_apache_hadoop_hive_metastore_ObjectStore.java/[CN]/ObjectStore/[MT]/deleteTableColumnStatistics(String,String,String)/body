{
  boolean ret=false;
  if (dbName == null) {
    dbName=MetaStoreUtils.DEFAULT_DATABASE_NAME;
  }
  if (tableName == null) {
    throw new InvalidInputException("Table name is null.");
  }
  try {
    openTransaction();
    MTable mTable=getMTable(dbName,tableName);
    MTableColumnStatistics mStatsObj;
    List<MTableColumnStatistics> mStatsObjColl;
    if (mTable == null) {
      throw new NoSuchObjectException("Table " + tableName + "  for which stats deletion is requested doesn't exist");
    }
    Query query=pm.newQuery(MTableColumnStatistics.class);
    String filter;
    String parameters;
    if (colName != null) {
      filter="table.tableName == t1 && dbName == t2 && colName == t3";
      parameters="java.lang.String t1, java.lang.String t2, java.lang.String t3";
    }
 else {
      filter="table.tableName == t1 && dbName == t2";
      parameters="java.lang.String t1, java.lang.String t2";
    }
    query.setFilter(filter);
    query.declareParameters(parameters);
    if (colName != null) {
      query.setUnique(true);
      mStatsObj=(MTableColumnStatistics)query.execute(tableName.trim(),dbName.trim(),colName.trim());
      pm.retrieve(mStatsObj);
      if (mStatsObj != null) {
        pm.deletePersistent(mStatsObj);
      }
 else {
        throw new NoSuchObjectException("Column stats doesn't exist for db=" + dbName + " table="+ tableName+ " col="+ colName);
      }
    }
 else {
      mStatsObjColl=(List<MTableColumnStatistics>)query.execute(tableName.trim(),dbName.trim());
      pm.retrieveAll(mStatsObjColl);
      if (mStatsObjColl != null) {
        pm.deletePersistentAll(mStatsObjColl);
      }
 else {
        throw new NoSuchObjectException("Column stats doesn't exist for db=" + dbName + " table="+ tableName);
      }
    }
    ret=commitTransaction();
  }
 catch (  NoSuchObjectException e) {
    rollbackTransaction();
    throw e;
  }
 finally {
    if (!ret) {
      rollbackTransaction();
    }
  }
  return ret;
}
