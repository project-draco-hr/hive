{
  if (vector.isRepeating) {
    row=0;
  }
  if (vector.noNulls || !vector.isNull[row]) {
    ArrayList<Object> result;
    if (previous == null || previous.getClass() != ArrayList.class) {
      result=new ArrayList<>();
    }
 else {
      result=(ArrayList<Object>)previous;
    }
    ListColumnVector list=(ListColumnVector)vector;
    int length=(int)list.lengths[row];
    int offset=(int)list.offsets[row];
    result.ensureCapacity(length);
    int oldLength=result.size();
    int idx=0;
    TypeDescription childType=schema.getChildren().get(0);
    while (idx < length && idx < oldLength) {
      result.set(idx,nextValue(list.child,offset + idx,childType,result.get(idx)));
      idx+=1;
    }
    if (length < oldLength) {
      result.subList(length,result.size()).clear();
    }
 else     if (oldLength < length) {
      while (idx < length) {
        result.add(nextValue(list.child,offset + idx,childType,null));
        idx+=1;
      }
    }
    return result;
  }
 else {
    return null;
  }
}
