{
  LinkedList<DiskRange> result=new LinkedList<DiskRange>();
  long offset=0;
  boolean[] hasNull=findPresentStreamsByColumn(streamList,types);
  DiskRange lastRange=null;
  for (  OrcProto.Stream stream : streamList) {
    long length=stream.getLength();
    int column=stream.getColumn();
    OrcProto.Stream.Kind streamKind=stream.getKind();
    if (StreamName.getArea(streamKind) == StreamName.Area.DATA && includedColumns[column]) {
      if (includedRowGroups == null || isDictionary(streamKind,encodings.get(column))) {
        lastRange=addEntireStreamToResult(offset,length,lastRange,result);
      }
 else {
        lastRange=addRgFilteredStreamToResult(stream,includedRowGroups,isCompressed,indexes[column],encodings.get(column),types.get(column),compressionSize,hasNull[column],offset,length,lastRange,result);
      }
    }
    offset+=length;
  }
  return result;
}
