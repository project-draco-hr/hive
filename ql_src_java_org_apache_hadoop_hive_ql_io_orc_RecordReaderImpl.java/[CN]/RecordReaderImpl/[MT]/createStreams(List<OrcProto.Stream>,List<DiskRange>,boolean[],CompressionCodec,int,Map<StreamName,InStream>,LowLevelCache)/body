{
  long streamOffset=0;
  for (  OrcProto.Stream streamDesc : streamDescriptions) {
    int column=streamDesc.getColumn();
    if ((includeColumn != null && !includeColumn[column]) || StreamName.getArea(streamDesc.getKind()) != StreamName.Area.DATA) {
      streamOffset+=streamDesc.getLength();
      continue;
    }
    long streamEnd=streamOffset + streamDesc.getLength();
    ArrayList<DiskRange> buffers=new ArrayList<DiskRange>();
    boolean inRange=false;
    for (int i=0; i < ranges.size(); ++i) {
      DiskRange range=ranges.get(i);
      boolean isLast=range.end >= streamEnd;
      if (!inRange) {
        if (range.end >= streamOffset)         continue;
        inRange=true;
        if (range.offset < streamOffset) {
          buffers.add(range.slice(Math.max(range.offset,streamOffset),Math.min(streamEnd,range.end)));
          if (isLast)           break;
          continue;
        }
      }
      if (range.end > streamEnd) {
        buffers.add(range.slice(range.offset,Math.min(streamEnd,range.end)));
        break;
      }
      buffers.add(range);
    }
    StreamName name=new StreamName(column,streamDesc.getKind());
    streams.put(name,InStream.create(fileName,name.toString(),buffers,streamEnd - streamOffset,codec,bufferSize,cache));
    streamOffset+=streamDesc.getLength();
  }
}
