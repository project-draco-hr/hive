{
  long nextRowInStripe=nextRow - rowBaseInStripe;
  if (rowIndexStride != 0 && includedRowGroups != null && nextRowInStripe < rowCountInStripe) {
    int rowGroup=(int)(nextRowInStripe / rowIndexStride);
    if (!includedRowGroups[rowGroup]) {
      while (rowGroup < includedRowGroups.length && !includedRowGroups[rowGroup]) {
        rowGroup+=1;
      }
      if (rowGroup >= includedRowGroups.length) {
        advanceStripe();
        return;
      }
      nextRowInStripe=Math.min(rowCountInStripe,rowGroup * rowIndexStride);
    }
  }
  if (nextRowInStripe < rowCountInStripe) {
    if (nextRowInStripe != rowInStripe) {
      if (rowIndexStride != 0) {
        int rowGroup=(int)(nextRowInStripe / rowIndexStride);
        seekToRowEntry(rowGroup);
        reader.skipRows(nextRowInStripe - rowGroup * rowIndexStride);
      }
 else {
        reader.skipRows(nextRowInStripe - rowInStripe);
      }
      rowInStripe=nextRowInStripe;
    }
  }
 else {
    advanceStripe();
  }
}
