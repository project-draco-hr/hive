{
  if (min == null) {
    if (predicate.getOperator() == PredicateLeaf.Operator.IS_NULL) {
      return TruthValue.YES;
    }
 else {
      return TruthValue.NULL;
    }
  }
 else   if (min == UNKNOWN_VALUE) {
    return TruthValue.YES_NO_NULL;
  }
  TruthValue result;
  Object baseObj=predicate.getLiteral();
  try {
    Object minValue=getBaseObjectForComparison(predicate.getType(),min);
    Object maxValue=getBaseObjectForComparison(predicate.getType(),max);
    Object predObj=getBaseObjectForComparison(predicate.getType(),baseObj);
    result=evaluatePredicateMinMax(predicate,predObj,minValue,maxValue,hasNull);
    if (shouldEvaluateBloomFilter(predicate,result,bloomFilter)) {
      result=evaluatePredicateBloomFilter(predicate,predObj,bloomFilter,hasNull);
    }
  }
 catch (  Exception e) {
    if (LOG.isWarnEnabled()) {
      final String statsType=min == null ? (max == null ? "null" : max.getClass().getSimpleName()) : min.getClass().getSimpleName();
      final String predicateType=baseObj == null ? "null" : baseObj.getClass().getSimpleName();
      final String reason=e.getClass().getSimpleName() + " when evaluating predicate." + " Skipping ORC PPD."+ " Exception: "+ e.getMessage()+ " StatsType: "+ statsType+ " PredicateType: "+ predicateType;
      LOG.warn(reason);
      LOG.debug(reason,e);
    }
    if (predicate.getOperator().equals(PredicateLeaf.Operator.NULL_SAFE_EQUALS) || !hasNull) {
      result=TruthValue.YES_NO;
    }
 else {
      result=TruthValue.YES_NO_NULL;
    }
  }
  return result;
}
