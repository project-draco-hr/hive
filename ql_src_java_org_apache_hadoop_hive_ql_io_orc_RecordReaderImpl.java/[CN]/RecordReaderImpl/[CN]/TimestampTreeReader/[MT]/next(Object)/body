{
  super.next(previous);
  TimestampWritable result=null;
  if (valuePresent) {
    if (previous == null) {
      result=new TimestampWritable();
    }
 else {
      result=(TimestampWritable)previous;
    }
    long millis=(data.next() + base_timestamp) * WriterImpl.MILLIS_PER_SECOND;
    int newNanos=parseNanos(nanos.next());
    if (millis >= 0) {
      millis+=newNanos / 1000000;
    }
 else {
      millis-=newNanos / 1000000;
    }
    long offset=0;
    if (!hasSameTZRules) {
      offset=writerTimeZone.getOffset(millis) - readerTimeZone.getOffset(millis);
    }
    long adjustedMillis=millis + offset;
    Timestamp ts=new Timestamp(adjustedMillis);
    if (!hasSameTZRules && (readerTimeZone.getOffset(millis) != readerTimeZone.getOffset(adjustedMillis))) {
      long newOffset=writerTimeZone.getOffset(millis) - readerTimeZone.getOffset(adjustedMillis);
      adjustedMillis=millis + newOffset;
      ts.setTime(adjustedMillis);
    }
    ts.setNanos(newNanos);
    result.set(ts);
  }
  return result;
}
