{
  LongColumnVector result=null;
  if (previousVector == null) {
    result=new LongColumnVector();
  }
 else {
    result=(LongColumnVector)previousVector;
  }
  super.nextVector(result,batchSize);
  data.nextVector(result,batchSize);
  nanoVector.isNull=result.isNull;
  nanos.nextVector(nanoVector,batchSize);
  if (result.isRepeating && nanoVector.isRepeating) {
    batchSize=1;
  }
  for (int i=0; i < batchSize; i++) {
    if (!result.isNull[i]) {
      long ms=(result.vector[result.isRepeating ? 0 : i] + WriterImpl.BASE_TIMESTAMP) * WriterImpl.MILLIS_PER_SECOND;
      long ns=parseNanos(nanoVector.vector[nanoVector.isRepeating ? 0 : i]);
      if (ms < 0 && ns != 0) {
        ms-=1000;
      }
      result.vector[i]=(ms * 1000000) + ns;
    }
  }
  if (!(result.isRepeating && nanoVector.isRepeating)) {
    result.isRepeating=false;
  }
  return result;
}
