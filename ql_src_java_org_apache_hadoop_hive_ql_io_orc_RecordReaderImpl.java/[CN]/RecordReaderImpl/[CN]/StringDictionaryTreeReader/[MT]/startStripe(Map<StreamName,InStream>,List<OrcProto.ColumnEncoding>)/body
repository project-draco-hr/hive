{
  super.startStripe(streams,encodings);
  int dictionarySize=encodings.get(columnId).getDictionarySize();
  StreamName name=new StreamName(columnId,OrcProto.Stream.Kind.DICTIONARY_DATA);
  InStream in=streams.get(name);
  if (in != null) {
    if (in.available() > 0) {
      dictionaryBuffer=new DynamicByteArray(64,in.available());
      dictionaryBuffer.readAll(in);
      dictionaryBufferInBytesCache=null;
    }
    in.close();
  }
 else {
    dictionaryBuffer=null;
  }
  name=new StreamName(columnId,OrcProto.Stream.Kind.LENGTH);
  in=streams.get(name);
  if (in != null) {
    IntegerReader lenReader=createIntegerReader(encodings.get(columnId).getKind(),in,false);
    int offset=0;
    if (dictionaryOffsets == null || dictionaryOffsets.length < dictionarySize + 1) {
      dictionaryOffsets=new int[dictionarySize + 1];
    }
    for (int i=0; i < dictionarySize; ++i) {
      dictionaryOffsets[i]=offset;
      offset+=(int)lenReader.next();
    }
    dictionaryOffsets[dictionarySize]=offset;
    in.close();
  }
  name=new StreamName(columnId,OrcProto.Stream.Kind.DATA);
  reader=createIntegerReader(encodings.get(columnId).getKind(),streams.get(name),false);
}
