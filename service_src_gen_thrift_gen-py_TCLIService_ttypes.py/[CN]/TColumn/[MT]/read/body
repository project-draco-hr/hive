def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.STRUCT):
                self.boolVal = TBoolColumn()
                self.boolVal.read(iprot)
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.STRUCT):
                self.byteVal = TByteColumn()
                self.byteVal.read(iprot)
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.STRUCT):
                self.i16Val = TI16Column()
                self.i16Val.read(iprot)
            else:
                iprot.skip(ftype)
        elif (fid == 4):
            if (ftype == TType.STRUCT):
                self.i32Val = TI32Column()
                self.i32Val.read(iprot)
            else:
                iprot.skip(ftype)
        elif (fid == 5):
            if (ftype == TType.STRUCT):
                self.i64Val = TI64Column()
                self.i64Val.read(iprot)
            else:
                iprot.skip(ftype)
        elif (fid == 6):
            if (ftype == TType.STRUCT):
                self.doubleVal = TDoubleColumn()
                self.doubleVal.read(iprot)
            else:
                iprot.skip(ftype)
        elif (fid == 7):
            if (ftype == TType.STRUCT):
                self.stringVal = TStringColumn()
                self.stringVal.read(iprot)
            else:
                iprot.skip(ftype)
        elif (fid == 8):
            if (ftype == TType.STRUCT):
                self.binaryVal = TBinaryColumn()
                self.binaryVal.read(iprot)
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
