def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.LIST):
                self.boolColumn = []
                (_etype44, _size41) = iprot.readListBegin()
                for _i45 in xrange(_size41):
                    _elem46 = TBoolValue()
                    _elem46.read(iprot)
                    self.boolColumn.append(_elem46)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.LIST):
                self.byteColumn = []
                (_etype50, _size47) = iprot.readListBegin()
                for _i51 in xrange(_size47):
                    _elem52 = TByteValue()
                    _elem52.read(iprot)
                    self.byteColumn.append(_elem52)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.LIST):
                self.i16Column = []
                (_etype56, _size53) = iprot.readListBegin()
                for _i57 in xrange(_size53):
                    _elem58 = TI16Value()
                    _elem58.read(iprot)
                    self.i16Column.append(_elem58)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 4):
            if (ftype == TType.LIST):
                self.i32Column = []
                (_etype62, _size59) = iprot.readListBegin()
                for _i63 in xrange(_size59):
                    _elem64 = TI32Value()
                    _elem64.read(iprot)
                    self.i32Column.append(_elem64)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 5):
            if (ftype == TType.LIST):
                self.i64Column = []
                (_etype68, _size65) = iprot.readListBegin()
                for _i69 in xrange(_size65):
                    _elem70 = TI64Value()
                    _elem70.read(iprot)
                    self.i64Column.append(_elem70)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 6):
            if (ftype == TType.LIST):
                self.doubleColumn = []
                (_etype74, _size71) = iprot.readListBegin()
                for _i75 in xrange(_size71):
                    _elem76 = TDoubleValue()
                    _elem76.read(iprot)
                    self.doubleColumn.append(_elem76)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 7):
            if (ftype == TType.LIST):
                self.stringColumn = []
                (_etype80, _size77) = iprot.readListBegin()
                for _i81 in xrange(_size77):
                    _elem82 = TStringValue()
                    _elem82.read(iprot)
                    self.stringColumn.append(_elem82)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
