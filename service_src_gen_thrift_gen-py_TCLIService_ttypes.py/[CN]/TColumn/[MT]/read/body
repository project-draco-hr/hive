def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.LIST):
                self.boolColumn = []
                (_etype35, _size32) = iprot.readListBegin()
                for _i36 in xrange(_size32):
                    _elem37 = TBoolValue()
                    _elem37.read(iprot)
                    self.boolColumn.append(_elem37)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.LIST):
                self.byteColumn = []
                (_etype41, _size38) = iprot.readListBegin()
                for _i42 in xrange(_size38):
                    _elem43 = TByteValue()
                    _elem43.read(iprot)
                    self.byteColumn.append(_elem43)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.LIST):
                self.i16Column = []
                (_etype47, _size44) = iprot.readListBegin()
                for _i48 in xrange(_size44):
                    _elem49 = TI16Value()
                    _elem49.read(iprot)
                    self.i16Column.append(_elem49)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 4):
            if (ftype == TType.LIST):
                self.i32Column = []
                (_etype53, _size50) = iprot.readListBegin()
                for _i54 in xrange(_size50):
                    _elem55 = TI32Value()
                    _elem55.read(iprot)
                    self.i32Column.append(_elem55)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 5):
            if (ftype == TType.LIST):
                self.i64Column = []
                (_etype59, _size56) = iprot.readListBegin()
                for _i60 in xrange(_size56):
                    _elem61 = TI64Value()
                    _elem61.read(iprot)
                    self.i64Column.append(_elem61)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 6):
            if (ftype == TType.LIST):
                self.doubleColumn = []
                (_etype65, _size62) = iprot.readListBegin()
                for _i66 in xrange(_size62):
                    _elem67 = TDoubleValue()
                    _elem67.read(iprot)
                    self.doubleColumn.append(_elem67)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 7):
            if (ftype == TType.LIST):
                self.stringColumn = []
                (_etype71, _size68) = iprot.readListBegin()
                for _i72 in xrange(_size68):
                    _elem73 = TStringValue()
                    _elem73.read(iprot)
                    self.stringColumn.append(_elem73)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
