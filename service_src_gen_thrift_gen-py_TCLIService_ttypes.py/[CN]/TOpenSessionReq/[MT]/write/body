def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('TOpenSessionReq')
    if (self.client_protocol is not None):
        oprot.writeFieldBegin('client_protocol', TType.I32, 1)
        oprot.writeI32(self.client_protocol)
        oprot.writeFieldEnd()
    if (self.username is not None):
        oprot.writeFieldBegin('username', TType.STRING, 2)
        oprot.writeString(self.username)
        oprot.writeFieldEnd()
    if (self.password is not None):
        oprot.writeFieldBegin('password', TType.STRING, 3)
        oprot.writeString(self.password)
        oprot.writeFieldEnd()
    if (self.configuration is not None):
        oprot.writeFieldBegin('configuration', TType.MAP, 4)
        oprot.writeMapBegin(TType.STRING, TType.STRING, len(self.configuration))
        for (kiter181, viter182) in self.configuration.items():
            oprot.writeString(kiter181)
            oprot.writeString(viter182)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
