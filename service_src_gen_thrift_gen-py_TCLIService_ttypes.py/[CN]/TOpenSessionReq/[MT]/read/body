def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.I32):
                self.client_protocol = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.STRING):
                self.username = iprot.readString()
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.STRING):
                self.password = iprot.readString()
            else:
                iprot.skip(ftype)
        elif (fid == 4):
            if (ftype == TType.MAP):
                self.configuration = {}
                (_ktype119, _vtype120, _size118) = iprot.readMapBegin()
                for _i122 in xrange(_size118):
                    _key123 = iprot.readString()
                    _val124 = iprot.readString()
                    self.configuration[_key123] = _val124
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
