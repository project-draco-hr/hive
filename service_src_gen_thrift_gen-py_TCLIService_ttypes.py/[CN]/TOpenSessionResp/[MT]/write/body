def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('TOpenSessionResp')
    if (self.status is not None):
        oprot.writeFieldBegin('status', TType.STRUCT, 1)
        self.status.write(oprot)
        oprot.writeFieldEnd()
    if (self.serverProtocolVersion is not None):
        oprot.writeFieldBegin('serverProtocolVersion', TType.I32, 2)
        oprot.writeI32(self.serverProtocolVersion)
        oprot.writeFieldEnd()
    if (self.sessionHandle is not None):
        oprot.writeFieldBegin('sessionHandle', TType.STRUCT, 3)
        self.sessionHandle.write(oprot)
        oprot.writeFieldEnd()
    if (self.configuration is not None):
        oprot.writeFieldBegin('configuration', TType.MAP, 4)
        oprot.writeMapBegin(TType.STRING, TType.STRING, len(self.configuration))
        for (kiter125, viter126) in self.configuration.items():
            oprot.writeString(kiter125)
            oprot.writeString(viter126)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
