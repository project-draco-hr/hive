def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('TGetInfoValue')
    if (self.stringValue is not None):
        oprot.writeFieldBegin('stringValue', TType.STRING, 1)
        oprot.writeString(self.stringValue)
        oprot.writeFieldEnd()
    if (self.smallIntValue is not None):
        oprot.writeFieldBegin('smallIntValue', TType.I16, 2)
        oprot.writeI16(self.smallIntValue)
        oprot.writeFieldEnd()
    if (self.integerBitmask is not None):
        oprot.writeFieldBegin('integerBitmask', TType.I32, 3)
        oprot.writeI32(self.integerBitmask)
        oprot.writeFieldEnd()
    if (self.integerFlag is not None):
        oprot.writeFieldBegin('integerFlag', TType.I32, 4)
        oprot.writeI32(self.integerFlag)
        oprot.writeFieldEnd()
    if (self.binaryValue is not None):
        oprot.writeFieldBegin('binaryValue', TType.I32, 5)
        oprot.writeI32(self.binaryValue)
        oprot.writeFieldEnd()
    if (self.lenValue is not None):
        oprot.writeFieldBegin('lenValue', TType.I64, 6)
        oprot.writeI64(self.lenValue)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
