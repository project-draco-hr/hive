def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('TExecuteStatementReq')
    if (self.sessionHandle is not None):
        oprot.writeFieldBegin('sessionHandle', TType.STRUCT, 1)
        self.sessionHandle.write(oprot)
        oprot.writeFieldEnd()
    if (self.statement is not None):
        oprot.writeFieldBegin('statement', TType.STRING, 2)
        oprot.writeString(self.statement)
        oprot.writeFieldEnd()
    if (self.confOverlay is not None):
        oprot.writeFieldBegin('confOverlay', TType.MAP, 3)
        oprot.writeMapBegin(TType.STRING, TType.STRING, len(self.confOverlay))
        for (kiter134, viter135) in self.confOverlay.items():
            oprot.writeString(kiter134)
            oprot.writeString(viter135)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
