{
  long value=taskValue(1,1,1L);
  Metrics metrics=new Metrics(value,value,value,value,value,value,value,Optional.<InputMetrics>absent(),Optional.<ShuffleReadMetrics>absent(),Optional.<ShuffleWriteMetrics>absent());
  MetricsCollection collection=new MetricsCollection();
  for (  int i : Arrays.asList(1,2)) {
    collection.addMetrics(i,1,1,metrics);
  }
  Metrics global=collection.getAllMetrics();
  assertFalse(global.inputMetrics.isPresent());
  assertFalse(global.shuffleReadMetrics.isPresent());
  assertFalse(global.shuffleWriteMetrics.isPresent());
  collection.addMetrics(3,1,1,makeMetrics(3,1,1));
  Metrics global2=collection.getAllMetrics();
  assertTrue(global2.inputMetrics.isPresent());
  assertEquals(taskValue(3,1,1),global2.inputMetrics.get().bytesRead);
  assertTrue(global2.shuffleReadMetrics.isPresent());
  assertTrue(global2.shuffleWriteMetrics.isPresent());
}
