{
  Map<TableDesc,StructObjectInspector> tableDescOI=new HashMap<TableDesc,StructObjectInspector>();
  Set<TableDesc> identityConverterTableDesc=new HashSet<TableDesc>();
  try {
    Map<ObjectInspector,Boolean> oiSettableProperties=new HashMap<ObjectInspector,Boolean>();
    for (    String onefile : conf.getPathToAliases().keySet()) {
      PartitionDesc pd=conf.getPathToPartitionInfo().get(onefile);
      TableDesc tableDesc=pd.getTableDesc();
      Properties tblProps=tableDesc.getProperties();
      Properties partProps=isPartitioned(pd) ? pd.getOverlayedProperties() : tblProps;
      Class sdclass=pd.getDeserializerClass();
      if (sdclass == null) {
        String className=checkSerdeClassName(pd.getSerdeClassName(),pd.getProperties().getProperty("name"));
        sdclass=hconf.getClassByName(className);
      }
      Deserializer partDeserializer=(Deserializer)sdclass.newInstance();
      partDeserializer.initialize(hconf,partProps);
      StructObjectInspector partRawRowObjectInspector=(StructObjectInspector)partDeserializer.getObjectInspector();
      StructObjectInspector tblRawRowObjectInspector=tableDescOI.get(tableDesc);
      if ((tblRawRowObjectInspector == null) || (identityConverterTableDesc.contains(tableDesc))) {
        sdclass=tableDesc.getDeserializerClass();
        if (sdclass == null) {
          String className=checkSerdeClassName(tableDesc.getSerdeClassName(),tableDesc.getProperties().getProperty("name"));
          sdclass=hconf.getClassByName(className);
        }
        Deserializer tblDeserializer=(Deserializer)sdclass.newInstance();
        tblDeserializer.initialize(hconf,tblProps);
        tblRawRowObjectInspector=(StructObjectInspector)ObjectInspectorConverters.getConvertedOI(partRawRowObjectInspector,tblDeserializer.getObjectInspector(),oiSettableProperties);
        if (identityConverterTableDesc.contains(tableDesc)) {
          if (!partRawRowObjectInspector.equals(tblRawRowObjectInspector)) {
            identityConverterTableDesc.remove(tableDesc);
          }
        }
 else         if (partRawRowObjectInspector.equals(tblRawRowObjectInspector)) {
          identityConverterTableDesc.add(tableDesc);
        }
        tableDescOI.put(tableDesc,tblRawRowObjectInspector);
      }
    }
  }
 catch (  Exception e) {
    throw new HiveException(e);
  }
  return tableDescOI;
}
