{
  state=State.INIT;
  List<Operator<? extends Serializable>> children=getChildOperators();
  for (  Entry<MapInputPath,MapOpCtx> entry : opCtxMap.entrySet()) {
    HiveConf.setVar(hconf,HiveConf.ConfVars.HIVETABLENAME,entry.getValue().tableName);
    HiveConf.setVar(hconf,HiveConf.ConfVars.HIVEPARTITIONNAME,entry.getValue().partName);
    MapInputPath input=entry.getKey();
    Operator<? extends Serializable> op=input.op;
    if (children.indexOf(op) == -1) {
      if (extraChildrenToClose == null) {
        extraChildrenToClose=new ArrayList<Operator<? extends Serializable>>();
      }
      extraChildrenToClose.add(op);
    }
    boolean shouldInit=true;
    List<String> paths=operatorToPaths.get(op);
    for (    String path : paths) {
      if (childrenPaths.contains(path) && !path.equals(input.path)) {
        shouldInit=false;
        break;
      }
    }
    if (shouldInit) {
      op.initialize(hconf,new ObjectInspector[]{entry.getValue().getRowObjectInspector()});
    }
  }
}
