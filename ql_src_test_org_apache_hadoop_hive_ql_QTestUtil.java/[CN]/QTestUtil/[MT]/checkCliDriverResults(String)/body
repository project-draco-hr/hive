{
  String[] cmdArray;
  assert(qMap.containsKey(tname));
  String outFileName=outPath(outDir,tname + ".out");
  cmdArray=new String[]{"diff","-a","-I","file:","-I","pfile:","-I","hdfs:","-I","/tmp/","-I","invalidscheme:","-I","lastUpdateTime","-I","lastAccessTime","-I","owner","-I","transient_lastDdlTime","-I","java.lang.RuntimeException","-I","at org","-I","at sun","-I","at java","-I","at junit","-I","Caused by:","-I","[.][.][.] [0-9]* more",(new File(logDir,tname + ".out")).getPath(),outFileName};
  System.out.println(org.apache.commons.lang.StringUtils.join(cmdArray,' '));
  Process executor=Runtime.getRuntime().exec(cmdArray);
  StreamPrinter outPrinter=new StreamPrinter(executor.getInputStream(),null,System.out);
  StreamPrinter errPrinter=new StreamPrinter(executor.getErrorStream(),null,System.err);
  outPrinter.start();
  errPrinter.start();
  int exitVal=executor.waitFor();
  if (exitVal != 0 && overWrite) {
    System.out.println("Overwriting results");
    cmdArray=new String[3];
    cmdArray[0]="cp";
    cmdArray[1]=(new File(logDir,tname + ".out")).getPath();
    cmdArray[2]=outFileName;
    executor=Runtime.getRuntime().exec(cmdArray);
    exitVal=executor.waitFor();
  }
  return exitVal;
}
