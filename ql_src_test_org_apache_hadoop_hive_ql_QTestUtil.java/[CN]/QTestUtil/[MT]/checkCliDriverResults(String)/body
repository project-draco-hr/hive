{
  String[] cmdArray;
  cmdArray=new String[12];
  cmdArray[0]="diff";
  cmdArray[1]="-a";
  cmdArray[2]="-I";
  cmdArray[3]="\\(file:\\)\\|\\(/tmp/.*\\)";
  cmdArray[4]="-I";
  cmdArray[5]="lastUpdateTime";
  cmdArray[6]="-I";
  cmdArray[7]="lastAccessTime";
  cmdArray[8]="-I";
  cmdArray[9]="owner";
  cmdArray[10]=(new File(logDir,tname + ".out")).getPath();
  cmdArray[11]=(new File(outDir,tname + ".out")).getPath();
  System.out.println(cmdArray[0] + " " + cmdArray[1]+ " "+ cmdArray[2]+ " "+ cmdArray[3]+ " "+ cmdArray[4]+ " "+ cmdArray[5]+ " "+ cmdArray[6]+ " "+ cmdArray[7]+ " "+ cmdArray[8]+ " "+ cmdArray[9]+ " "+ cmdArray[10]+ " "+ cmdArray[11]);
  Process executor=Runtime.getRuntime().exec(cmdArray);
  StreamPrinter outPrinter=new StreamPrinter(executor.getInputStream(),null,System.out);
  StreamPrinter errPrinter=new StreamPrinter(executor.getErrorStream(),null,System.err);
  outPrinter.start();
  errPrinter.start();
  int exitVal=executor.waitFor();
  if (exitVal != 0 && overWrite) {
    System.out.println("Overwriting results");
    cmdArray=new String[3];
    cmdArray[0]="cp";
    cmdArray[1]=(new File(logDir,tname + ".out")).getPath();
    cmdArray[2]=(new File(outDir,tname + ".out")).getPath();
    executor=Runtime.getRuntime().exec(cmdArray);
    exitVal=executor.waitFor();
  }
  return exitVal;
}
