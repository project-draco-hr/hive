{
  if (tasks != null) {
    File planDir=new File(outDir,"plan");
    String planFile=outPath(planDir.toString(),tname + ".xml");
    File outf=null;
    outf=new File(logDir);
    outf=new File(outf,tname.concat(".xml"));
    FileOutputStream ofs=new FileOutputStream(outf);
    for (    Task<? extends Serializable> plan : tasks) {
      Utilities.serializeObject(plan,ofs);
    }
    String[] patterns=new String[]{"<java version=\".*\" class=\"java.beans.XMLDecoder\">","<string>.*/tmp/.*</string>","<string>file:.*</string>","<string>pfile:.*</string>","<string>[0-9]{10}</string>","<string>/.*/warehouse/.*</string>"};
    fixXml4JDK7(outf.getPath());
    maskPatterns(patterns,outf.getPath());
    int exitVal=executeDiffCommand(outf.getPath(),planFile,true,false);
    if (exitVal != 0 && overWrite) {
      exitVal=overwriteResults(outf.getPath(),planFile);
    }
    return exitVal;
  }
 else {
    throw new Exception("Plan is null");
  }
}
