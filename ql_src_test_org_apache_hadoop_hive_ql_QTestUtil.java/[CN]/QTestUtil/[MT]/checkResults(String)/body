{
  Path warehousePath=new Path(FileSystem.get(conf).getUri().getPath());
  warehousePath=new Path(warehousePath,(new URI(testWarehouse)).getPath());
  Path localPath=new Path(FileSystem.getLocal(conf).getUri().getPath());
  localPath=new Path(localPath,logDir);
  localPath=new Path(localPath,"warehouse_local_copy");
  System.out.println("warehousePath = " + warehousePath.toString() + " localPath = "+ localPath.toString());
  if (FileSystem.getLocal(conf).exists(localPath)) {
    FileSystem.getLocal(conf).delete(localPath);
  }
  copyDirectoryToLocal(warehousePath,localPath);
  normalizeNames(new File(localPath.toUri().getPath()));
  String[] cmdArray;
  if (overWrite == false) {
    cmdArray=new String[6];
    cmdArray[0]="diff";
    cmdArray[1]="-r";
    cmdArray[2]="--exclude=tmp";
    cmdArray[3]="--exclude=.svn";
    cmdArray[4]=localPath.toUri().getPath();
    cmdArray[5]=(new File(outDir,tname)).getPath() + "/warehouse";
    System.out.println(cmdArray[0] + " " + cmdArray[1]+ " "+ cmdArray[2]+ " "+ cmdArray[3]+ " "+ cmdArray[4]+ " "+ cmdArray[5]);
  }
 else {
    String[] cmdArray1=new String[5];
    cmdArray1[0]="rm";
    cmdArray1[1]="-rf";
    cmdArray1[2]=(new File(outDir,tname)).getPath();
    System.out.println(cmdArray1[0] + " " + cmdArray1[1]+ " "+ cmdArray1[2]);
    cmdArray=new String[5];
    cmdArray[0]="cp";
    cmdArray[1]="-r";
    cmdArray[2]=localPath.toUri().getPath();
    cmdArray[3]=(new File(outDir,tname)).getPath();
    System.out.println(cmdArray[0] + " " + cmdArray[1]+ " "+ cmdArray[2]+ " "+ cmdArray[3]);
  }
  Process executor=Runtime.getRuntime().exec(cmdArray);
  StreamPrinter outPrinter=new StreamPrinter(executor.getInputStream(),null,System.out);
  StreamPrinter errPrinter=new StreamPrinter(executor.getErrorStream(),null,System.err);
  outPrinter.start();
  errPrinter.start();
  int exitVal=executor.waitFor();
  return exitVal;
}
