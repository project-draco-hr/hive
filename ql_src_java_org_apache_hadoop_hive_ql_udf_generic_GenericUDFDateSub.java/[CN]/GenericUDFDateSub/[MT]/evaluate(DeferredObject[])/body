{
  IntWritable toBeSubed=(IntWritable)intWritableConverter.convert(arguments[1].get());
switch (inputType1) {
case STRING:
    String dateString=textConverter.convert(arguments[0].get()).toString();
  try {
    calendar.setTime(formatter.parse(dateString.toString()));
    calendar.add(Calendar.DAY_OF_MONTH,-toBeSubed.get());
  }
 catch (  ParseException e) {
    return null;
  }
break;
case TIMESTAMP:
Timestamp ts=((TimestampWritable)timestampConverter.convert(arguments[0].get())).getTimestamp();
calendar.setTime(ts);
calendar.add(Calendar.DAY_OF_MONTH,-toBeSubed.get());
break;
case DATE:
DateWritable dw=(DateWritable)dateWritableConverter.convert(arguments[0].get());
calendar.setTime(dw.get());
calendar.add(Calendar.DAY_OF_MONTH,-toBeSubed.get());
break;
default :
throw new UDFArgumentException("DATE_SUB() only takes STRING/TIMESTAMP/DATEWRITABLE types, got " + inputType1);
}
Date newDate=calendar.getTime();
output.set(formatter.format(newDate));
return output;
}
