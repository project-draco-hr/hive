{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetNode()).compareTo(other.isSetNode());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetNode()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.node,other.node);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetChildren()).compareTo(other.isSetChildren());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetChildren()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.children,other.children);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetAdjacencyType()).compareTo(other.isSetAdjacencyType());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAdjacencyType()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.adjacencyType,other.adjacencyType);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
