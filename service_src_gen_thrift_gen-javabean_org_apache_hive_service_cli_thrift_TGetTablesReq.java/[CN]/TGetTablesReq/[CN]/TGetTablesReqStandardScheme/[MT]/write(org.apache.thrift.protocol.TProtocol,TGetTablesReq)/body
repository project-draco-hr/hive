{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.sessionHandle != null) {
    oprot.writeFieldBegin(SESSION_HANDLE_FIELD_DESC);
    struct.sessionHandle.write(oprot);
    oprot.writeFieldEnd();
  }
  if (struct.catalogName != null) {
    if (struct.isSetCatalogName()) {
      oprot.writeFieldBegin(CATALOG_NAME_FIELD_DESC);
      oprot.writeString(struct.catalogName);
      oprot.writeFieldEnd();
    }
  }
  if (struct.schemaName != null) {
    if (struct.isSetSchemaName()) {
      oprot.writeFieldBegin(SCHEMA_NAME_FIELD_DESC);
      oprot.writeString(struct.schemaName);
      oprot.writeFieldEnd();
    }
  }
  if (struct.tableName != null) {
    if (struct.isSetTableName()) {
      oprot.writeFieldBegin(TABLE_NAME_FIELD_DESC);
      oprot.writeString(struct.tableName);
      oprot.writeFieldEnd();
    }
  }
  if (struct.tableTypes != null) {
    if (struct.isSetTableTypes()) {
      oprot.writeFieldBegin(TABLE_TYPES_FIELD_DESC);
{
        oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,struct.tableTypes.size()));
        for (        String _iter175 : struct.tableTypes) {
          oprot.writeString(_iter175);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
