{
  try {
    silentDropDatabase(TEST_DB1_NAME);
    silentDropDatabase(TEST_DB2_NAME);
    Database db=new Database();
    db.setName(TEST_DB1_NAME);
    db.setOwnerName(SessionState.getUserFromAuthenticator());
    db.setOwnerType(PrincipalType.USER);
    client.createDatabase(db);
    db=client.getDatabase(TEST_DB1_NAME);
    assertEquals("name of returned db is different from that of inserted db",TEST_DB1_NAME,db.getName());
    assertEquals("location of the returned db is different from that of inserted db",warehouse.getDatabasePath(db).toString(),db.getLocationUri());
    assertEquals(db.getOwnerName(),SessionState.getUserFromAuthenticator());
    assertEquals(db.getOwnerType(),PrincipalType.USER);
    Database db2=new Database();
    db2.setName(TEST_DB2_NAME);
    client.createDatabase(db2);
    db2=client.getDatabase(TEST_DB2_NAME);
    assertEquals("name of returned db is different from that of inserted db",TEST_DB2_NAME,db2.getName());
    assertEquals("location of the returned db is different from that of inserted db",warehouse.getDatabasePath(db2).toString(),db2.getLocationUri());
    List<String> dbs=client.getDatabases(".*");
    assertTrue("first database is not " + TEST_DB1_NAME,dbs.contains(TEST_DB1_NAME));
    assertTrue("second database is not " + TEST_DB2_NAME,dbs.contains(TEST_DB2_NAME));
    client.dropDatabase(TEST_DB1_NAME);
    client.dropDatabase(TEST_DB2_NAME);
    silentDropDatabase(TEST_DB1_NAME);
    silentDropDatabase(TEST_DB2_NAME);
  }
 catch (  Throwable e) {
    System.err.println(StringUtils.stringifyException(e));
    System.err.println("testDatabase() failed.");
    throw e;
  }
}
