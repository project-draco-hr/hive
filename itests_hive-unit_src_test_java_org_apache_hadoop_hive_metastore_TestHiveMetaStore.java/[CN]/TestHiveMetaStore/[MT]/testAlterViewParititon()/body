{
  String dbName="compdb";
  String tblName="comptbl";
  String viewName="compView";
  client.dropTable(dbName,tblName);
  silentDropDatabase(dbName);
  Database db=new Database();
  db.setName(dbName);
  db.setDescription("Alter Partition Test database");
  client.createDatabase(db);
  ArrayList<FieldSchema> cols=new ArrayList<FieldSchema>(2);
  cols.add(new FieldSchema("name",serdeConstants.STRING_TYPE_NAME,""));
  cols.add(new FieldSchema("income",serdeConstants.INT_TYPE_NAME,""));
  Table tbl=new Table();
  tbl.setDbName(dbName);
  tbl.setTableName(tblName);
  StorageDescriptor sd=new StorageDescriptor();
  tbl.setSd(sd);
  sd.setCols(cols);
  sd.setCompressed(false);
  sd.setParameters(new HashMap<String,String>());
  sd.setSerdeInfo(new SerDeInfo());
  sd.getSerdeInfo().setName(tbl.getTableName());
  sd.getSerdeInfo().setParameters(new HashMap<String,String>());
  sd.getSerdeInfo().getParameters().put(serdeConstants.SERIALIZATION_FORMAT,"1");
  sd.getSerdeInfo().setSerializationLib(LazySimpleSerDe.class.getName());
  sd.setInputFormat(HiveInputFormat.class.getName());
  sd.setOutputFormat(HiveOutputFormat.class.getName());
  sd.setSortCols(new ArrayList<Order>());
  client.createTable(tbl);
  if (isThriftClient) {
    tbl=client.getTable(dbName,tblName);
  }
  ArrayList<FieldSchema> viewCols=new ArrayList<FieldSchema>(1);
  viewCols.add(new FieldSchema("income",serdeConstants.INT_TYPE_NAME,""));
  ArrayList<FieldSchema> viewPartitionCols=new ArrayList<FieldSchema>(1);
  viewPartitionCols.add(new FieldSchema("name",serdeConstants.STRING_TYPE_NAME,""));
  Table view=new Table();
  view.setDbName(dbName);
  view.setTableName(viewName);
  view.setTableType(TableType.VIRTUAL_VIEW.name());
  view.setPartitionKeys(viewPartitionCols);
  view.setViewOriginalText("SELECT income, name FROM " + tblName);
  view.setViewExpandedText("SELECT `" + tblName + "`.`income`, `"+ tblName+ "`.`name` FROM `"+ dbName+ "`.`"+ tblName+ "`");
  StorageDescriptor viewSd=new StorageDescriptor();
  view.setSd(viewSd);
  viewSd.setCols(viewCols);
  viewSd.setCompressed(false);
  viewSd.setParameters(new HashMap<String,String>());
  viewSd.setSerdeInfo(new SerDeInfo());
  viewSd.getSerdeInfo().setParameters(new HashMap<String,String>());
  client.createTable(view);
  if (isThriftClient) {
    view=client.getTable(dbName,viewName);
  }
  List<String> vals=new ArrayList<String>(1);
  vals.add("abc");
  Partition part=new Partition();
  part.setDbName(dbName);
  part.setTableName(viewName);
  part.setValues(vals);
  part.setParameters(new HashMap<String,String>());
  client.add_partition(part);
  Partition part2=client.getPartition(dbName,viewName,part.getValues());
  part2.getParameters().put("a","b");
  client.alter_partition(dbName,viewName,part2,null);
  Partition part3=client.getPartition(dbName,viewName,part.getValues());
  assertEquals("couldn't view alter partition",part3.getParameters().get("a"),"b");
  client.dropTable(dbName,viewName);
  client.dropTable(dbName,tblName);
  client.dropDatabase(dbName);
}
