{
  String dbName="compdb";
  String tblName="comptbl";
  String typeName="Person";
  cleanUp(dbName,tblName,typeName);
  List<List<String>> values=new ArrayList<List<String>>();
  for (int i=0; i < DEFAULT_LIMIT_PARTITION_REQUEST + 1; i++) {
    values.add(makeVals("2008-07-01 14:13:12",Integer.toString(i)));
  }
  createMultiPartitionTableSchema(dbName,tblName,typeName,values);
  List<Partition> partitions;
  short maxParts;
  try {
    maxParts=-1;
    partitions=client.listPartitions(dbName,tblName,maxParts);
    fail("should have thrown MetaException about partition limit");
  }
 catch (  MetaException e) {
    assertTrue(true);
  }
  try {
    maxParts=DEFAULT_LIMIT_PARTITION_REQUEST + 1;
    partitions=client.listPartitions(dbName,tblName,maxParts);
    fail("should have thrown MetaException about partition limit");
  }
 catch (  MetaException e) {
    assertTrue(true);
  }
  maxParts=DEFAULT_LIMIT_PARTITION_REQUEST / 2;
  partitions=client.listPartitions(dbName,tblName,maxParts);
  assertNotNull("should have returned partitions",partitions);
  assertEquals(" should have returned 50 partitions",maxParts,partitions.size());
}
