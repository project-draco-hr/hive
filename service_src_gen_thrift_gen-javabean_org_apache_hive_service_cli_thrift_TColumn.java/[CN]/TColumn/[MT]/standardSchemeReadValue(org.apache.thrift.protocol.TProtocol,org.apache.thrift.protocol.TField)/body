{
  _Fields setField=_Fields.findByThriftId(field.id);
  if (setField != null) {
switch (setField) {
case BOOL_VAL:
      if (field.type == BOOL_VAL_FIELD_DESC.type) {
        TBoolColumn boolVal;
        boolVal=new TBoolColumn();
        boolVal.read(iprot);
        return boolVal;
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
        return null;
      }
case BYTE_VAL:
    if (field.type == BYTE_VAL_FIELD_DESC.type) {
      TByteColumn byteVal;
      byteVal=new TByteColumn();
      byteVal.read(iprot);
      return byteVal;
    }
 else {
      org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
      return null;
    }
case I16_VAL:
  if (field.type == I16_VAL_FIELD_DESC.type) {
    TI16Column i16Val;
    i16Val=new TI16Column();
    i16Val.read(iprot);
    return i16Val;
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
    return null;
  }
case I32_VAL:
if (field.type == I32_VAL_FIELD_DESC.type) {
  TI32Column i32Val;
  i32Val=new TI32Column();
  i32Val.read(iprot);
  return i32Val;
}
 else {
  org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
  return null;
}
case I64_VAL:
if (field.type == I64_VAL_FIELD_DESC.type) {
TI64Column i64Val;
i64Val=new TI64Column();
i64Val.read(iprot);
return i64Val;
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
case DOUBLE_VAL:
if (field.type == DOUBLE_VAL_FIELD_DESC.type) {
TDoubleColumn doubleVal;
doubleVal=new TDoubleColumn();
doubleVal.read(iprot);
return doubleVal;
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
case STRING_VAL:
if (field.type == STRING_VAL_FIELD_DESC.type) {
TStringColumn stringVal;
stringVal=new TStringColumn();
stringVal.read(iprot);
return stringVal;
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
case BINARY_VAL:
if (field.type == BINARY_VAL_FIELD_DESC.type) {
TBinaryColumn binaryVal;
binaryVal=new TBinaryColumn();
binaryVal.read(iprot);
return binaryVal;
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
default :
throw new IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
}
