{
  _Fields setField=_Fields.findByThriftId(fieldID);
  if (setField != null) {
switch (setField) {
case BOOL_COLUMN:
      List<TBoolValue> boolColumn;
{
      org.apache.thrift.protocol.TList _list64=iprot.readListBegin();
      boolColumn=new ArrayList<TBoolValue>(_list64.size);
      for (int _i65=0; _i65 < _list64.size; ++_i65) {
        TBoolValue _elem66;
        _elem66=new TBoolValue();
        _elem66.read(iprot);
        boolColumn.add(_elem66);
      }
      iprot.readListEnd();
    }
  return boolColumn;
case BYTE_COLUMN:
List<TByteValue> byteColumn;
{
org.apache.thrift.protocol.TList _list67=iprot.readListBegin();
byteColumn=new ArrayList<TByteValue>(_list67.size);
for (int _i68=0; _i68 < _list67.size; ++_i68) {
  TByteValue _elem69;
  _elem69=new TByteValue();
  _elem69.read(iprot);
  byteColumn.add(_elem69);
}
iprot.readListEnd();
}
return byteColumn;
case I16_COLUMN:
List<TI16Value> i16Column;
{
org.apache.thrift.protocol.TList _list70=iprot.readListBegin();
i16Column=new ArrayList<TI16Value>(_list70.size);
for (int _i71=0; _i71 < _list70.size; ++_i71) {
TI16Value _elem72;
_elem72=new TI16Value();
_elem72.read(iprot);
i16Column.add(_elem72);
}
iprot.readListEnd();
}
return i16Column;
case I32_COLUMN:
List<TI32Value> i32Column;
{
org.apache.thrift.protocol.TList _list73=iprot.readListBegin();
i32Column=new ArrayList<TI32Value>(_list73.size);
for (int _i74=0; _i74 < _list73.size; ++_i74) {
TI32Value _elem75;
_elem75=new TI32Value();
_elem75.read(iprot);
i32Column.add(_elem75);
}
iprot.readListEnd();
}
return i32Column;
case I64_COLUMN:
List<TI64Value> i64Column;
{
org.apache.thrift.protocol.TList _list76=iprot.readListBegin();
i64Column=new ArrayList<TI64Value>(_list76.size);
for (int _i77=0; _i77 < _list76.size; ++_i77) {
TI64Value _elem78;
_elem78=new TI64Value();
_elem78.read(iprot);
i64Column.add(_elem78);
}
iprot.readListEnd();
}
return i64Column;
case DOUBLE_COLUMN:
List<TDoubleValue> doubleColumn;
{
org.apache.thrift.protocol.TList _list79=iprot.readListBegin();
doubleColumn=new ArrayList<TDoubleValue>(_list79.size);
for (int _i80=0; _i80 < _list79.size; ++_i80) {
TDoubleValue _elem81;
_elem81=new TDoubleValue();
_elem81.read(iprot);
doubleColumn.add(_elem81);
}
iprot.readListEnd();
}
return doubleColumn;
case STRING_COLUMN:
List<TStringValue> stringColumn;
{
org.apache.thrift.protocol.TList _list82=iprot.readListBegin();
stringColumn=new ArrayList<TStringValue>(_list82.size);
for (int _i83=0; _i83 < _list82.size; ++_i83) {
TStringValue _elem84;
_elem84=new TStringValue();
_elem84.read(iprot);
stringColumn.add(_elem84);
}
iprot.readListEnd();
}
return stringColumn;
default :
throw new IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
}
}
 else {
throw new TProtocolException("Couldn't find a field with field id " + fieldID);
}
}
