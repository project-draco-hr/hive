{
  _Fields setField=_Fields.findByThriftId(fieldID);
  if (setField != null) {
switch (setField) {
case BOOL_COLUMN:
      List<TBoolValue> boolColumn;
{
      org.apache.thrift.protocol.TList _list74=iprot.readListBegin();
      boolColumn=new ArrayList<TBoolValue>(_list74.size);
      for (int _i75=0; _i75 < _list74.size; ++_i75) {
        TBoolValue _elem76;
        _elem76=new TBoolValue();
        _elem76.read(iprot);
        boolColumn.add(_elem76);
      }
      iprot.readListEnd();
    }
  return boolColumn;
case BYTE_COLUMN:
List<TByteValue> byteColumn;
{
org.apache.thrift.protocol.TList _list77=iprot.readListBegin();
byteColumn=new ArrayList<TByteValue>(_list77.size);
for (int _i78=0; _i78 < _list77.size; ++_i78) {
  TByteValue _elem79;
  _elem79=new TByteValue();
  _elem79.read(iprot);
  byteColumn.add(_elem79);
}
iprot.readListEnd();
}
return byteColumn;
case I16_COLUMN:
List<TI16Value> i16Column;
{
org.apache.thrift.protocol.TList _list80=iprot.readListBegin();
i16Column=new ArrayList<TI16Value>(_list80.size);
for (int _i81=0; _i81 < _list80.size; ++_i81) {
TI16Value _elem82;
_elem82=new TI16Value();
_elem82.read(iprot);
i16Column.add(_elem82);
}
iprot.readListEnd();
}
return i16Column;
case I32_COLUMN:
List<TI32Value> i32Column;
{
org.apache.thrift.protocol.TList _list83=iprot.readListBegin();
i32Column=new ArrayList<TI32Value>(_list83.size);
for (int _i84=0; _i84 < _list83.size; ++_i84) {
TI32Value _elem85;
_elem85=new TI32Value();
_elem85.read(iprot);
i32Column.add(_elem85);
}
iprot.readListEnd();
}
return i32Column;
case I64_COLUMN:
List<TI64Value> i64Column;
{
org.apache.thrift.protocol.TList _list86=iprot.readListBegin();
i64Column=new ArrayList<TI64Value>(_list86.size);
for (int _i87=0; _i87 < _list86.size; ++_i87) {
TI64Value _elem88;
_elem88=new TI64Value();
_elem88.read(iprot);
i64Column.add(_elem88);
}
iprot.readListEnd();
}
return i64Column;
case DOUBLE_COLUMN:
List<TDoubleValue> doubleColumn;
{
org.apache.thrift.protocol.TList _list89=iprot.readListBegin();
doubleColumn=new ArrayList<TDoubleValue>(_list89.size);
for (int _i90=0; _i90 < _list89.size; ++_i90) {
TDoubleValue _elem91;
_elem91=new TDoubleValue();
_elem91.read(iprot);
doubleColumn.add(_elem91);
}
iprot.readListEnd();
}
return doubleColumn;
case STRING_COLUMN:
List<TStringValue> stringColumn;
{
org.apache.thrift.protocol.TList _list92=iprot.readListBegin();
stringColumn=new ArrayList<TStringValue>(_list92.size);
for (int _i93=0; _i93 < _list92.size; ++_i93) {
TStringValue _elem94;
_elem94=new TStringValue();
_elem94.read(iprot);
stringColumn.add(_elem94);
}
iprot.readListEnd();
}
return stringColumn;
default :
throw new IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
}
}
 else {
throw new TProtocolException("Couldn't find a field with field id " + fieldID);
}
}
