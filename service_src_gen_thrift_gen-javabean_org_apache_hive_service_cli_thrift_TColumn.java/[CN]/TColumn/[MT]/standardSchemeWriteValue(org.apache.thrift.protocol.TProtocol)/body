{
switch (setField_) {
case BOOL_COLUMN:
    List<TBoolValue> boolColumn=(List<TBoolValue>)value_;
{
    oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,boolColumn.size()));
    for (    TBoolValue _iter57 : boolColumn) {
      _iter57.write(oprot);
    }
    oprot.writeListEnd();
  }
return;
case BYTE_COLUMN:
List<TByteValue> byteColumn=(List<TByteValue>)value_;
{
oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,byteColumn.size()));
for (TByteValue _iter58 : byteColumn) {
_iter58.write(oprot);
}
oprot.writeListEnd();
}
return;
case I16_COLUMN:
List<TI16Value> i16Column=(List<TI16Value>)value_;
{
oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,i16Column.size()));
for (TI16Value _iter59 : i16Column) {
_iter59.write(oprot);
}
oprot.writeListEnd();
}
return;
case I32_COLUMN:
List<TI32Value> i32Column=(List<TI32Value>)value_;
{
oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,i32Column.size()));
for (TI32Value _iter60 : i32Column) {
_iter60.write(oprot);
}
oprot.writeListEnd();
}
return;
case I64_COLUMN:
List<TI64Value> i64Column=(List<TI64Value>)value_;
{
oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,i64Column.size()));
for (TI64Value _iter61 : i64Column) {
_iter61.write(oprot);
}
oprot.writeListEnd();
}
return;
case DOUBLE_COLUMN:
List<TDoubleValue> doubleColumn=(List<TDoubleValue>)value_;
{
oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,doubleColumn.size()));
for (TDoubleValue _iter62 : doubleColumn) {
_iter62.write(oprot);
}
oprot.writeListEnd();
}
return;
case STRING_COLUMN:
List<TStringValue> stringColumn=(List<TStringValue>)value_;
{
oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,stringColumn.size()));
for (TStringValue _iter63 : stringColumn) {
_iter63.write(oprot);
}
oprot.writeListEnd();
}
return;
default :
throw new IllegalStateException("Cannot write union with unknown field " + setField_);
}
}
