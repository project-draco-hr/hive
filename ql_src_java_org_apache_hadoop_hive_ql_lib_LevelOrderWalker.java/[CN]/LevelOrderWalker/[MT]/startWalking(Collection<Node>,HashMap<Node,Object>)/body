{
  toWalk.addAll(startNodes);
  HashSet<Node> addedNodes=new HashSet<Node>();
  for (  Node node : startNodes) {
    addedNodes.add(node);
  }
  int index=0;
  while (index < toWalk.size()) {
    if (toWalk.get(index).getChildren() != null) {
      for (      Node child : toWalk.get(index).getChildren()) {
        Operator<? extends OperatorDesc> childOP=(Operator<? extends OperatorDesc>)child;
        if (!addedNodes.contains(child) && (childOP.getParentOperators() == null || addedNodes.containsAll(childOP.getParentOperators()))) {
          toWalk.add(child);
          addedNodes.add(child);
        }
      }
    }
    ++index;
  }
  for (  Node nd : toWalk) {
    if (!nodeTypes.isEmpty() && !nodeTypes.contains(nd.getClass())) {
      continue;
    }
    opStack.clear();
    opStack.push(nd);
    walk(nd,0,opStack);
    if (nodeOutput != null && getDispatchedList().contains(nd)) {
      nodeOutput.put(nd,retMap.get(nd));
    }
  }
}
