{
  if (partial == null) {
    return;
  }
  ArrayList partialHistogram=(ArrayList)loi.getList(partial);
  StdAgg myagg=(StdAgg)agg;
  if (myagg.nbins == 0 || myagg.nusedbins == 0) {
    myagg.nbins=(int)((DoubleWritable)partialHistogram.get(0)).get();
    myagg.nusedbins=(partialHistogram.size() - 1) / 2;
    myagg.hist=new StdAgg.Coord[myagg.nbins + 1];
    for (int i=1; i < partialHistogram.size(); i+=2) {
      myagg.hist[(i - 1) / 2]=new StdAgg.Coord();
      myagg.hist[(i - 1) / 2].x=((DoubleWritable)partialHistogram.get(i)).get();
      myagg.hist[(i - 1) / 2].y=((DoubleWritable)partialHistogram.get(i + 1)).get();
    }
  }
 else {
    StdAgg.Coord[] tmp_histogram=new StdAgg.Coord[myagg.nusedbins + (partialHistogram.size() - 1) / 2];
    for (int j=0; j < tmp_histogram.length; j++) {
      tmp_histogram[j]=new StdAgg.Coord();
    }
    int i;
    for (i=0; i < myagg.nusedbins; i++) {
      tmp_histogram[i].x=myagg.hist[i].x;
      tmp_histogram[i].y=myagg.hist[i].y;
    }
    for (int j=1; j < partialHistogram.size(); j+=2, i++) {
      tmp_histogram[i].x=((DoubleWritable)partialHistogram.get(j)).get();
      tmp_histogram[i].y=((DoubleWritable)partialHistogram.get(j + 1)).get();
    }
    Arrays.sort(tmp_histogram);
    myagg.hist=tmp_histogram;
    myagg.nusedbins+=(partialHistogram.size() - 1) / 2;
    trim(myagg);
  }
}
