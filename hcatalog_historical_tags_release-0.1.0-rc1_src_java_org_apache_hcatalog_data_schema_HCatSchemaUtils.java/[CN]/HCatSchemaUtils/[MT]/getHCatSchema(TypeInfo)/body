{
  Category typeCategory=typeInfo.getCategory();
  if (Category.PRIMITIVE == typeCategory) {
    return getStructSchemaBuilder().addField(new HCatFieldSchema(null,getPrimitiveHType(typeInfo),null)).build();
  }
 else   if (Category.STRUCT == typeCategory) {
    HCatSchema subSchema=constructHCatSchema((StructTypeInfo)typeInfo);
    return getStructSchemaBuilder().addField(new HCatFieldSchema(null,Type.STRUCT,subSchema,null)).build();
  }
 else   if (Category.LIST == typeCategory) {
    CollectionBuilder builder=getStructSchemaBuilder();
    builder.addField(getHCatFieldSchema(null,((ListTypeInfo)typeInfo).getListElementTypeInfo()));
    return builder.build();
  }
 else   if (Category.MAP == typeCategory) {
    HCatFieldSchema.Type mapKeyType=getPrimitiveHType(((MapTypeInfo)typeInfo).getMapKeyTypeInfo());
    HCatSchema subSchema=getHCatSchema(((MapTypeInfo)typeInfo).getMapValueTypeInfo());
    MapBuilder builder=getMapSchemaBuilder();
    return builder.withKeyType(mapKeyType).withValueSchema(subSchema).build();
  }
 else {
    throw new TypeNotPresentException(typeInfo.getTypeName(),null);
  }
}
