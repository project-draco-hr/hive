{
  MessageType fileSchema=Types.buildMessage().repeated(INT32).named("list_of_ints").named("UnannotatedListOfPrimitives");
  Path test=writeDirect("UnannotatedListOfPrimitives",fileSchema,new DirectWriter(){
    @Override public void write(    RecordConsumer rc){
      rc.startMessage();
      rc.startField("list_of_ints",0);
      rc.addInteger(34);
      rc.addInteger(35);
      rc.addInteger(36);
      rc.endField("list_of_ints",0);
      rc.endMessage();
    }
  }
);
  ArrayWritable expected=list(new IntWritable(34),new IntWritable(35),new IntWritable(36));
  List<ArrayWritable> records=read(test);
  Assert.assertEquals("Should have only one record",1,records.size());
  assertEquals("Should match expected record",expected,records.get(0));
}
