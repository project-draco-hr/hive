{
  Path test=writeDirect("ThriftPrimitiveInList",Types.buildMessage().requiredGroup().as(LIST).repeated(INT32).named("list_of_ints_tuple").named("list_of_ints").named("ThriftPrimitiveInList"),new DirectWriter(){
    @Override public void write(    RecordConsumer rc){
      rc.startMessage();
      rc.startField("list_of_ints",0);
      rc.startGroup();
      rc.startField("list_of_ints_tuple",0);
      rc.addInteger(34);
      rc.addInteger(35);
      rc.addInteger(36);
      rc.endField("list_of_ints_tuple",0);
      rc.endGroup();
      rc.endField("list_of_ints",0);
      rc.endMessage();
    }
  }
);
  ObjectArrayWritable expected=record(list(new Integer(34),new Integer(35),new Integer(36)));
  List<ObjectArrayWritable> records=read(test);
  Assert.assertEquals("Should have only one record",1,records.size());
  assertEquals("Should match expected record",expected,records.get(0));
}
