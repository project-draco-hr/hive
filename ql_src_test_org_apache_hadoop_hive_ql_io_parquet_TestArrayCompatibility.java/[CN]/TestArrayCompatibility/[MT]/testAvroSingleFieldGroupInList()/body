{
  Path test=writeDirect("AvroSingleFieldGroupInList",Types.buildMessage().optionalGroup().as(LIST).repeatedGroup().required(INT64).named("count").named("array").named("single_element_groups").named("AvroSingleFieldGroupInList"),new DirectWriter(){
    @Override public void write(    RecordConsumer rc){
      rc.startMessage();
      rc.startField("single_element_groups",0);
      rc.startGroup();
      rc.startField("array",0);
      rc.startGroup();
      rc.startField("count",0);
      rc.addLong(1234L);
      rc.endField("count",0);
      rc.endGroup();
      rc.startGroup();
      rc.startField("count",0);
      rc.addLong(2345L);
      rc.endField("count",0);
      rc.endGroup();
      rc.endField("array",0);
      rc.endGroup();
      rc.endField("single_element_groups",0);
      rc.endMessage();
    }
  }
);
  ArrayWritable expected=record(list(record(new LongWritable(1234L)),record(new LongWritable(2345L))));
  List<ArrayWritable> records=read(test);
  Assert.assertEquals("Should have only one record",1,records.size());
  assertEquals("Should match expected record",expected,records.get(0));
}
