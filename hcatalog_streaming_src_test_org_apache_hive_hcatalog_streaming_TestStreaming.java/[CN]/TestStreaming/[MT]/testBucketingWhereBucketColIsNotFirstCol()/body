{
  List<String> partitionVals=new ArrayList<String>();
  partitionVals.add("2015");
  HiveEndPoint endPt=new HiveEndPoint(metaStoreURI,"testing5","store_sales",partitionVals);
  StreamingConnection connection=endPt.newConnection(false,"UT_" + Thread.currentThread().getName());
  DelimitedInputWriter writer=new DelimitedInputWriter(new String[]{"ss_sold_date_sk","ss_sold_time_sk","ss_item_sk","ss_customer_sk","ss_cdemo_sk","ss_hdemo_sk","ss_addr_sk","ss_store_sk","ss_promo_sk","ss_ticket_number","ss_quantity","ss_wholesale_cost","ss_list_price","ss_sales_price","ss_ext_discount_amt","ss_ext_sales_price","ss_ext_wholesale_cost","ss_ext_list_price","ss_ext_tax","ss_coupon_amt","ss_net_paid","ss_net_paid_inc_tax","ss_net_profit"},",",endPt,connection);
  TransactionBatch txnBatch=connection.fetchTransactionBatch(2,writer);
  txnBatch.beginNextTransaction();
  StringBuilder row=new StringBuilder();
  for (int i=0; i < 10; i++) {
    for (int ints=0; ints < 11; ints++) {
      row.append(ints).append(',');
    }
    for (int decs=0; decs < 12; decs++) {
      row.append(i + 0.1).append(',');
    }
    row.setLength(row.length() - 1);
    txnBatch.write(row.toString().getBytes());
  }
  txnBatch.commit();
  txnBatch.close();
  connection.close();
  ArrayList<String> res=queryTable(driver,"select row__id.bucketid, * from testing5.store_sales");
  for (  String re : res) {
    System.out.println(re);
  }
}
