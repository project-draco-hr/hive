{
  runCmdOnDriver("create database testErrors");
  runCmdOnDriver("use testErrors");
  runCmdOnDriver("create table T(a int, b int) clustered by (b) into 2 buckets stored as orc TBLPROPERTIES ('transactional'='true')");
  HiveEndPoint endPt=new HiveEndPoint(metaStoreURI,"testErrors","T",null);
  DelimitedInputWriter innerWriter=new DelimitedInputWriter("a,b".split(","),",",endPt);
  FaultyWriter writer=new FaultyWriter(innerWriter);
  StreamingConnection connection=endPt.newConnection(false);
  TransactionBatch txnBatch=connection.fetchTransactionBatch(2,writer);
  txnBatch.close();
  txnBatch.heartbeat();
  txnBatch.abort();
  GetOpenTxnsInfoResponse r=msClient.showTxns();
  Assert.assertEquals("HWM didn't match",2,r.getTxn_high_water_mark());
  List<TxnInfo> ti=r.getOpen_txns();
  Assert.assertEquals("wrong status ti(0)",TxnState.ABORTED,ti.get(0).getState());
  Assert.assertEquals("wrong status ti(1)",TxnState.ABORTED,ti.get(1).getState());
  Exception expectedEx=null;
  try {
    txnBatch.beginNextTransaction();
  }
 catch (  IllegalStateException ex) {
    expectedEx=ex;
  }
  Assert.assertTrue("beginNextTransaction() should have failed",expectedEx != null && expectedEx.getMessage().contains("has been closed()"));
  expectedEx=null;
  try {
    txnBatch.write("name0,1,Hello streaming".getBytes());
  }
 catch (  IllegalStateException ex) {
    expectedEx=ex;
  }
  Assert.assertTrue("write()  should have failed",expectedEx != null && expectedEx.getMessage().contains("has been closed()"));
  expectedEx=null;
  try {
    txnBatch.commit();
  }
 catch (  IllegalStateException ex) {
    expectedEx=ex;
  }
  Assert.assertTrue("commit() should have failed",expectedEx != null && expectedEx.getMessage().contains("has been closed()"));
  txnBatch=connection.fetchTransactionBatch(2,writer);
  txnBatch.beginNextTransaction();
  txnBatch.write("name2,2,Welcome to streaming".getBytes());
  txnBatch.write("name4,2,more Streaming unlimited".getBytes());
  txnBatch.write("name5,2,even more Streaming unlimited".getBytes());
  txnBatch.commit();
  expectedEx=null;
  txnBatch.beginNextTransaction();
  writer.enableErrors();
  try {
    txnBatch.write("name6,2,Doh!".getBytes());
  }
 catch (  StreamingIOFailure ex) {
    expectedEx=ex;
  }
  Assert.assertTrue("Wrong exception: " + (expectedEx != null ? expectedEx.getMessage() : "?"),expectedEx != null && expectedEx.getMessage().contains("Simulated fault occurred"));
  expectedEx=null;
  try {
    txnBatch.commit();
  }
 catch (  IllegalStateException ex) {
    expectedEx=ex;
  }
  Assert.assertTrue("commit() should have failed",expectedEx != null && expectedEx.getMessage().contains("has been closed()"));
  r=msClient.showTxns();
  Assert.assertEquals("HWM didn't match",4,r.getTxn_high_water_mark());
  ti=r.getOpen_txns();
  Assert.assertEquals("wrong status ti(0)",TxnState.ABORTED,ti.get(0).getState());
  Assert.assertEquals("wrong status ti(1)",TxnState.ABORTED,ti.get(1).getState());
  Assert.assertEquals("wrong status ti(2)",TxnState.ABORTED,ti.get(2).getState());
  writer.disableErrors();
  txnBatch=connection.fetchTransactionBatch(2,writer);
  txnBatch.beginNextTransaction();
  txnBatch.write("name2,2,Welcome to streaming".getBytes());
  writer.enableErrors();
  expectedEx=null;
  try {
    txnBatch.commit();
  }
 catch (  StreamingIOFailure ex) {
    expectedEx=ex;
  }
  Assert.assertTrue("Wrong exception: " + (expectedEx != null ? expectedEx.getMessage() : "?"),expectedEx != null && expectedEx.getMessage().contains("Simulated fault occurred"));
  r=msClient.showTxns();
  Assert.assertEquals("HWM didn't match",6,r.getTxn_high_water_mark());
  ti=r.getOpen_txns();
  Assert.assertEquals("wrong status ti(3)",TxnState.ABORTED,ti.get(3).getState());
  Assert.assertEquals("wrong status ti(4)",TxnState.ABORTED,ti.get(4).getState());
  txnBatch.abort();
}
