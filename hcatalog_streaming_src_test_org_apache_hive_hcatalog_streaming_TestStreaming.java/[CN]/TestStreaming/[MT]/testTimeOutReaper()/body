{
  HiveEndPoint endPt=new HiveEndPoint(metaStoreURI,dbName2,tblName2,null);
  DelimitedInputWriter writer=new DelimitedInputWriter(fieldNames2,",",endPt);
  StreamingConnection connection=endPt.newConnection(false,"UT_" + Thread.currentThread().getName());
  TransactionBatch txnBatch=connection.fetchTransactionBatch(5,writer);
  txnBatch.beginNextTransaction();
  conf.setTimeVar(HiveConf.ConfVars.HIVE_TIMEDOUT_TXN_REAPER_START,0,TimeUnit.SECONDS);
  conf.setTimeVar(HiveConf.ConfVars.HIVE_TXN_TIMEOUT,1,TimeUnit.MILLISECONDS);
  AcidHouseKeeperService houseKeeperService=new AcidHouseKeeperService();
  houseKeeperService.start(conf);
  while (houseKeeperService.getIsAliveCounter() <= Integer.MIN_VALUE) {
    Thread.sleep(100);
  }
  houseKeeperService.stop();
  try {
    txnBatch.commit();
  }
 catch (  TransactionError e) {
    Assert.assertTrue("Expected aborted transaction",e.getCause() instanceof TxnAbortedException);
  }
  txnBatch.close();
  txnBatch=connection.fetchTransactionBatch(10,writer);
  txnBatch.beginNextTransaction();
  txnBatch.commit();
  txnBatch.beginNextTransaction();
  int lastCount=houseKeeperService.getIsAliveCounter();
  houseKeeperService.start(conf);
  while (houseKeeperService.getIsAliveCounter() <= lastCount) {
    Thread.sleep(100);
  }
  houseKeeperService.stop();
  try {
    txnBatch.commit();
  }
 catch (  TransactionError e) {
    Assert.assertTrue("Expected aborted transaction",e.getCause() instanceof TxnAbortedException);
  }
  txnBatch.close();
  connection.close();
}
