{
  ArrayList<Class<? extends UDAFEvaluator>> classList=new ArrayList<Class<? extends UDAFEvaluator>>();
  for (  Class<?> enclClass : udafClass.getClasses()) {
    if (UDAFEvaluator.class.isAssignableFrom(enclClass)) {
      classList.add((Class<? extends UDAFEvaluator>)enclClass);
    }
  }
  ArrayList<Method> mList=new ArrayList<Method>();
  ArrayList<Class<? extends UDAFEvaluator>> cList=new ArrayList<Class<? extends UDAFEvaluator>>();
  for (  Class<? extends UDAFEvaluator> evaluator : classList) {
    for (    Method m : evaluator.getMethods()) {
      if (m.getName().equalsIgnoreCase("iterate")) {
        mList.add(m);
        cList.add(evaluator);
      }
    }
  }
  Method m=FunctionRegistry.getMethodInternal(udafClass,mList,false,argClasses);
  int found=-1;
  for (int i=0; i < mList.size(); i++) {
    if (mList.get(i) == m) {
      if (found == -1) {
        found=i;
      }
 else {
        throw new AmbiguousMethodException(udafClass,null,null);
      }
    }
  }
  assert(found != -1);
  return cList.get(found);
}
