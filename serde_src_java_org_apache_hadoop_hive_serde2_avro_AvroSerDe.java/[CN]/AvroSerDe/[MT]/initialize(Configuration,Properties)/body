{
  if (schema != null) {
    LOG.info("Resetting already initialized AvroSerDe");
  }
  schema=null;
  oi=null;
  columnNames=null;
  columnTypes=null;
  final String columnNameProperty=properties.getProperty(serdeConstants.LIST_COLUMNS);
  final String columnTypeProperty=properties.getProperty(serdeConstants.LIST_COLUMN_TYPES);
  final String columnCommentProperty=properties.getProperty(LIST_COLUMN_COMMENTS,"");
  if (properties.getProperty(AvroSerdeUtils.AvroTableProperties.SCHEMA_LITERAL.getPropName()) != null || properties.getProperty(AvroSerdeUtils.AvroTableProperties.SCHEMA_URL.getPropName()) != null || columnNameProperty == null || columnNameProperty.isEmpty() || columnTypeProperty == null || columnTypeProperty.isEmpty()) {
    schema=determineSchemaOrReturnErrorSchema(properties);
  }
 else {
    columnNames=Arrays.asList(columnNameProperty.split(","));
    columnTypes=TypeInfoUtils.getTypeInfosFromTypeString(columnTypeProperty);
    schema=getSchemaFromCols(properties,columnNames,columnTypes,columnCommentProperty);
    properties.setProperty(AvroSerdeUtils.AvroTableProperties.SCHEMA_LITERAL.getPropName(),schema.toString());
  }
  LOG.info("Avro schema is " + schema);
  if (configuration == null) {
    LOG.info("Configuration null, not inserting schema");
  }
 else {
    configuration.set(AvroSerdeUtils.AvroTableProperties.AVRO_SERDE_SCHEMA.getPropName(),schema.toString(false));
  }
  badSchema=schema.equals(SchemaResolutionProblem.SIGNAL_BAD_SCHEMA);
  AvroObjectInspectorGenerator aoig=new AvroObjectInspectorGenerator(schema);
  this.columnNames=aoig.getColumnNames();
  this.columnTypes=aoig.getColumnTypes();
  this.oi=aoig.getObjectInspector();
}
