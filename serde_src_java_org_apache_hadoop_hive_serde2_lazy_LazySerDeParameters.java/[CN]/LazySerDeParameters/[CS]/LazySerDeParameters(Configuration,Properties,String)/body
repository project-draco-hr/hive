{
  this.tableProperties=tbl;
  this.serdeName=serdeName;
  nullString=tbl.getProperty(serdeConstants.SERIALIZATION_NULL_FORMAT,"\\N");
  nullSequence=new Text(nullString);
  String lastColumnTakesRestString=tbl.getProperty(serdeConstants.SERIALIZATION_LAST_COLUMN_TAKES_REST);
  lastColumnTakesRest=(lastColumnTakesRestString != null && lastColumnTakesRestString.equalsIgnoreCase("true"));
  extractColumnInfo();
  rowTypeInfo=TypeInfoFactory.getStructTypeInfo(columnNames,columnTypes);
  collectSeparators(tbl);
  String escapeProperty=tbl.getProperty(serdeConstants.ESCAPE_CHAR);
  escaped=(escapeProperty != null);
  if (escaped) {
    escapeChar=LazyUtils.getByte(escapeProperty,(byte)'\\');
    needsEscape[escapeChar & 0xFF]=true;
    for (    byte b : separators) {
      needsEscape[b & 0xFF]=true;
    }
  }
  extendedBooleanLiteral=(job == null ? false : job.getBoolean(ConfVars.HIVE_LAZYSIMPLE_EXTENDED_BOOLEAN_LITERAL.varname,false));
  String[] timestampFormatsArray=HiveStringUtils.splitAndUnEscape(tbl.getProperty(serdeConstants.TIMESTAMP_FORMATS));
  if (timestampFormatsArray != null) {
    timestampFormats=Arrays.asList(timestampFormatsArray);
  }
}
