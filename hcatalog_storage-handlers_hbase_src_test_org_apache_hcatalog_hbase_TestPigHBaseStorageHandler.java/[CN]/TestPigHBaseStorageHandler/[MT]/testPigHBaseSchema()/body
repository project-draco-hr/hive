{
  Initialize();
  String tableName=newTableName("MyTable");
  String databaseName=newTableName("MyDatabase");
  String hbaseTableName="testTable";
  String db_dir=getTestDir() + "/hbasedb";
  String dbQuery="CREATE DATABASE IF NOT EXISTS " + databaseName + " LOCATION '"+ db_dir+ "'";
  String deleteQuery="DROP TABLE " + databaseName + "."+ tableName;
  String tableQuery="CREATE TABLE " + databaseName + "."+ tableName+ "(key float, testqualifier1 string, testqualifier2 int) STORED BY "+ "'org.apache.hadoop.hive.hbase.HBaseStorageHandler'"+ " WITH SERDEPROPERTIES ('hbase.columns.mapping'=':key,testFamily:testQualifier1,testFamily:testQualifier2')"+ " TBLPROPERTIES ('hbase.table.name'='"+ hbaseTableName+ "')";
  CommandProcessorResponse responseOne=driver.run(deleteQuery);
  assertEquals(0,responseOne.getResponseCode());
  CommandProcessorResponse responseTwo=driver.run(dbQuery);
  assertEquals(0,responseTwo.getResponseCode());
  CommandProcessorResponse responseThree=driver.run(tableQuery);
  HBaseAdmin hAdmin=new HBaseAdmin(getHbaseConf());
  boolean doesTableExist=hAdmin.tableExists(hbaseTableName);
  assertTrue(doesTableExist);
  PigServer server=new PigServer(ExecType.LOCAL,hcatConf.getAllProperties());
  server.registerQuery("A = load '" + databaseName + "."+ tableName+ "' using org.apache.hive.hcatalog.pig.HCatLoader();");
  Schema dumpedASchema=server.dumpSchema("A");
  List<FieldSchema> fields=dumpedASchema.getFields();
  assertEquals(3,fields.size());
  assertEquals(DataType.FLOAT,fields.get(0).type);
  assertEquals("key",fields.get(0).alias.toLowerCase());
  assertEquals(DataType.CHARARRAY,fields.get(1).type);
  assertEquals("testQualifier1".toLowerCase(),fields.get(1).alias.toLowerCase());
  assertEquals(DataType.INTEGER,fields.get(2).type);
  assertEquals("testQualifier2".toLowerCase(),fields.get(2).alias.toLowerCase());
}
