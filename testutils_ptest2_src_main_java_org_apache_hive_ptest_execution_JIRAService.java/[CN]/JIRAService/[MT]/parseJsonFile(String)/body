{
  JsonFactory jsonFactory=new JsonFactory();
  JsonParser jsonParser=jsonFactory.createJsonParser(new File(jsonFile));
  Map<String,Object> values=new HashMap<String,Object>();
  while (jsonParser.nextToken() != JsonToken.END_OBJECT) {
    String fieldName=jsonParser.getCurrentName();
    if (supportedJsonFields.containsKey(fieldName)) {
      jsonParser.nextToken();
      Class clazz=supportedJsonFields.get(fieldName);
      if (clazz == String.class) {
        values.put(fieldName,jsonParser.getText());
      }
 else       if (clazz == Integer.class) {
        values.put(fieldName,Integer.valueOf(jsonParser.getText()));
      }
 else       if (clazz == SortedSet.class) {
        SortedSet<String> failedTests=new TreeSet<String>();
        while (jsonParser.nextToken() != JsonToken.END_ARRAY) {
          failedTests.add(jsonParser.getText());
        }
        values.put(fieldName,failedTests);
      }
 else       if (clazz == List.class) {
        List<String> messages=new ArrayList<String>();
        while (jsonParser.nextToken() != JsonToken.END_ARRAY) {
          messages.add(jsonParser.getText());
        }
        values.put(fieldName,messages);
      }
    }
  }
  jsonParser.close();
  return values;
}
