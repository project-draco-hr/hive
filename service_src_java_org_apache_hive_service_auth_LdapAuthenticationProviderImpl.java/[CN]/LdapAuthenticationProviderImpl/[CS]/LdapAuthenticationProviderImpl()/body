{
  HiveConf conf=new HiveConf();
  ldapURL=conf.getVar(HiveConf.ConfVars.HIVE_SERVER2_PLAIN_LDAP_URL);
  baseDN=conf.getVar(HiveConf.ConfVars.HIVE_SERVER2_PLAIN_LDAP_BASEDN);
  ldapDomain=conf.getVar(HiveConf.ConfVars.HIVE_SERVER2_PLAIN_LDAP_DOMAIN);
  customQuery=conf.getVar(HiveConf.ConfVars.HIVE_SERVER2_PLAIN_LDAP_CUSTOMLDAPQUERY);
  if (customQuery == null) {
    groupBases=new ArrayList<String>();
    userBases=new ArrayList<String>();
    String groupDNPatterns=conf.getVar(HiveConf.ConfVars.HIVE_SERVER2_PLAIN_LDAP_GROUPDNPATTERN);
    String groupFilterVal=conf.getVar(HiveConf.ConfVars.HIVE_SERVER2_PLAIN_LDAP_GROUPFILTER);
    String userDNPatterns=conf.getVar(HiveConf.ConfVars.HIVE_SERVER2_PLAIN_LDAP_USERDNPATTERN);
    String userFilterVal=conf.getVar(HiveConf.ConfVars.HIVE_SERVER2_PLAIN_LDAP_USERFILTER);
    if (groupDNPatterns != null && groupDNPatterns.trim().length() > 0) {
      String[] groupTokens=groupDNPatterns.split(":");
      for (int i=0; i < groupTokens.length; i++) {
        if (groupTokens[i].contains(",") && groupTokens[i].contains("=")) {
          groupBases.add(groupTokens[i]);
        }
 else {
          LOG.warn("Unexpected format for groupDNPattern..ignoring " + groupTokens[i]);
        }
      }
    }
 else {
      groupBases.add("CN=%s," + baseDN);
    }
    if (groupFilterVal != null && groupFilterVal.trim().length() > 0) {
      groupFilter=new ArrayList<String>();
      String[] groups=groupFilterVal.split(",");
      for (int i=0; i < groups.length; i++) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Filtered group: " + groups[i]);
        }
        groupFilter.add(groups[i]);
      }
    }
    if (userDNPatterns != null && userDNPatterns.trim().length() > 0) {
      String[] userTokens=userDNPatterns.split(":");
      for (int i=0; i < userTokens.length; i++) {
        if (userTokens[i].contains(",") && userTokens[i].contains("=")) {
          userBases.add(userTokens[i]);
        }
 else {
          LOG.warn("Unexpected format for userDNPattern..ignoring " + userTokens[i]);
        }
      }
    }
 else {
      userBases.add("CN=%s," + baseDN);
    }
    if (userFilterVal != null && userFilterVal.trim().length() > 0) {
      userFilter=new ArrayList<String>();
      String[] users=userFilterVal.split(",");
      for (int i=0; i < users.length; i++) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Filtered user: " + users[i]);
        }
        userFilter.add(users[i]);
      }
    }
  }
}
