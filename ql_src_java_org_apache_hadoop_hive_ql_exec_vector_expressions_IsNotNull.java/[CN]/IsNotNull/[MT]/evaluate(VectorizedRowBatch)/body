{
  if (childExpressions != null) {
    super.evaluateChildren(batch);
  }
  ColumnVector inputColVector=batch.cols[colNum];
  int[] sel=batch.selected;
  boolean[] nullPos=inputColVector.isNull;
  int n=batch.size;
  long[] outputVector=((LongColumnVector)batch.cols[outputColumn]).vector;
  if (n <= 0) {
    return;
  }
  if (inputColVector.isRepeating) {
    if (nullPos[0]) {
      outputVector[0]=0;
    }
 else {
      outputVector[0]=1;
    }
  }
 else   if (batch.selectedInUse) {
    for (int j=0; j != n; j++) {
      int i=sel[j];
      if (nullPos[i]) {
        outputVector[i]=0;
      }
 else {
        outputVector[i]=1;
      }
    }
  }
 else {
    for (int i=0; i != n; i++) {
      if (nullPos[i]) {
        outputVector[i]=0;
      }
 else {
        outputVector[i]=1;
      }
    }
  }
}
