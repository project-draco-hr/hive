{
  MockRequest r1=new MockRequest(createRequest(1,2),false,100000);
  MockRequest r2=new MockRequest(createRequest(2,4),false,100000);
  MockRequest r3=new MockRequest(createRequest(3,6),false,1000000);
  MockRequest r4=new MockRequest(createRequest(4,8),false,1000000);
  MockRequest r5=new MockRequest(createRequest(5,10),false,1000000);
  EvictingPriorityBlockingQueue queue=new EvictingPriorityBlockingQueue(new TaskExecutorService.WaitQueueComparator(),4);
  assertNull(queue.offer(r1));
  assertEquals(r1,queue.peek());
  assertNull(queue.offer(r2));
  assertEquals(r1,queue.peek());
  assertNull(queue.offer(r3));
  assertEquals(r1,queue.peek());
  assertNull(queue.offer(r4));
  assertEquals(r1,queue.peek());
  assertEquals(r5,queue.offer(r5));
  assertEquals(r1,queue.take());
  assertEquals(r2,queue.take());
  assertEquals(r3,queue.take());
  assertEquals(r4,queue.take());
  r1=new MockRequest(createRequest(1,2),true,100000);
  r2=new MockRequest(createRequest(2,4),true,100000);
  r3=new MockRequest(createRequest(3,6),true,1000000);
  r4=new MockRequest(createRequest(4,8),true,1000000);
  r5=new MockRequest(createRequest(5,10),true,1000000);
  queue=new EvictingPriorityBlockingQueue(new TaskExecutorService.WaitQueueComparator(),4);
  assertNull(queue.offer(r1));
  assertEquals(r1,queue.peek());
  assertNull(queue.offer(r2));
  assertEquals(r1,queue.peek());
  assertNull(queue.offer(r3));
  assertEquals(r1,queue.peek());
  assertNull(queue.offer(r4));
  assertEquals(r1,queue.peek());
  assertEquals(r5,queue.offer(r5));
  assertEquals(r1,queue.take());
  assertEquals(r2,queue.take());
  assertEquals(r3,queue.take());
  assertEquals(r4,queue.take());
  r1=new MockRequest(createRequest(1,1),true,100000);
  r2=new MockRequest(createRequest(2,1),false,100000);
  r3=new MockRequest(createRequest(3,1),true,1000000);
  r4=new MockRequest(createRequest(4,1),false,1000000);
  r5=new MockRequest(createRequest(5,10),true,1000000);
  queue=new EvictingPriorityBlockingQueue(new TaskExecutorService.WaitQueueComparator(),4);
  assertNull(queue.offer(r1));
  assertEquals(r1,queue.peek());
  assertNull(queue.offer(r2));
  assertEquals(r1,queue.peek());
  assertNull(queue.offer(r3));
  assertEquals(r3,queue.peek());
  assertNull(queue.offer(r4));
  assertEquals(r3,queue.peek());
  assertEquals(r2,queue.offer(r5));
  assertEquals(r3,queue.take());
  assertEquals(r1,queue.take());
  assertEquals(r5,queue.take());
  assertEquals(r4,queue.take());
  r1=new MockRequest(createRequest(1,2),true,100000);
  r2=new MockRequest(createRequest(2,4),false,100000);
  r3=new MockRequest(createRequest(3,6),true,1000000);
  r4=new MockRequest(createRequest(4,8),false,1000000);
  r5=new MockRequest(createRequest(5,10),true,1000000);
  queue=new EvictingPriorityBlockingQueue(new TaskExecutorService.WaitQueueComparator(),4);
  assertNull(queue.offer(r1));
  assertEquals(r1,queue.peek());
  assertNull(queue.offer(r2));
  assertEquals(r1,queue.peek());
  assertNull(queue.offer(r3));
  assertEquals(r1,queue.peek());
  assertNull(queue.offer(r4));
  assertEquals(r1,queue.peek());
  assertEquals(r4,queue.offer(r5));
  assertEquals(r1,queue.take());
  assertEquals(r3,queue.take());
  assertEquals(r5,queue.take());
  assertEquals(r2,queue.take());
  r1=new MockRequest(createRequest(1,2),true,100000);
  r2=new MockRequest(createRequest(2,4),false,100000);
  r3=new MockRequest(createRequest(3,6),false,1000000);
  r4=new MockRequest(createRequest(4,8),false,1000000);
  r5=new MockRequest(createRequest(5,10),true,1000000);
  queue=new EvictingPriorityBlockingQueue(new TaskExecutorService.WaitQueueComparator(),4);
  assertNull(queue.offer(r1));
  assertEquals(r1,queue.peek());
  assertNull(queue.offer(r2));
  assertEquals(r1,queue.peek());
  assertNull(queue.offer(r3));
  assertEquals(r1,queue.peek());
  assertNull(queue.offer(r4));
  assertEquals(r1,queue.peek());
  assertEquals(r4,queue.offer(r5));
  assertEquals(r1,queue.take());
  assertEquals(r5,queue.take());
  assertEquals(r2,queue.take());
  assertEquals(r3,queue.take());
  r1=new MockRequest(createRequest(1,2),false,100000);
  r2=new MockRequest(createRequest(2,4),true,100000);
  r3=new MockRequest(createRequest(3,6),true,1000000);
  r4=new MockRequest(createRequest(4,8),true,1000000);
  r5=new MockRequest(createRequest(5,10),true,1000000);
  queue=new EvictingPriorityBlockingQueue(new TaskExecutorService.WaitQueueComparator(),4);
  assertNull(queue.offer(r1));
  assertEquals(r1,queue.peek());
  assertNull(queue.offer(r2));
  assertEquals(r2,queue.peek());
  assertNull(queue.offer(r3));
  assertEquals(r2,queue.peek());
  assertNull(queue.offer(r4));
  assertEquals(r2,queue.peek());
  assertEquals(r1,queue.offer(r5));
  assertEquals(r2,queue.take());
  assertEquals(r3,queue.take());
  assertEquals(r4,queue.take());
  assertEquals(r5,queue.take());
}
