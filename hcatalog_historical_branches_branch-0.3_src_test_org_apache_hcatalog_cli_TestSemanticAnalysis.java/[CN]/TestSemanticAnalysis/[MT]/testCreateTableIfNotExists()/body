{
  hcatDriver.run("drop table " + tblName);
  hcatDriver.run("create table junit_sem_analysis (a int) stored as RCFILE");
  Table tbl=msc.getTable(MetaStoreUtils.DEFAULT_DATABASE_NAME,tblName);
  List<FieldSchema> cols=tbl.getSd().getCols();
  assertEquals(1,cols.size());
  assertTrue(cols.get(0).equals(new FieldSchema("a","int",null)));
  assertEquals(RCFileInputFormat.class.getName(),tbl.getSd().getInputFormat());
  assertEquals(RCFileOutputFormat.class.getName(),tbl.getSd().getOutputFormat());
  Map<String,String> tblParams=tbl.getParameters();
  assertEquals(RCFileInputDriver.class.getName(),tblParams.get(HCatConstants.HCAT_ISD_CLASS));
  assertEquals(RCFileOutputDriver.class.getName(),tblParams.get(HCatConstants.HCAT_OSD_CLASS));
  CommandProcessorResponse resp=hcatDriver.run("create table if not exists junit_sem_analysis (a int) stored as RCFILE");
  assertEquals(0,resp.getResponseCode());
  assertNull(resp.getErrorMessage());
  tbl=msc.getTable(MetaStoreUtils.DEFAULT_DATABASE_NAME,tblName);
  cols=tbl.getSd().getCols();
  assertEquals(1,cols.size());
  assertTrue(cols.get(0).equals(new FieldSchema("a","int",null)));
  assertEquals(RCFileInputFormat.class.getName(),tbl.getSd().getInputFormat());
  assertEquals(RCFileOutputFormat.class.getName(),tbl.getSd().getOutputFormat());
  tblParams=tbl.getParameters();
  assertEquals(RCFileInputDriver.class.getName(),tblParams.get(HCatConstants.HCAT_ISD_CLASS));
  assertEquals(RCFileOutputDriver.class.getName(),tblParams.get(HCatConstants.HCAT_OSD_CLASS));
  hcatDriver.run("drop table junit_sem_analysis");
}
