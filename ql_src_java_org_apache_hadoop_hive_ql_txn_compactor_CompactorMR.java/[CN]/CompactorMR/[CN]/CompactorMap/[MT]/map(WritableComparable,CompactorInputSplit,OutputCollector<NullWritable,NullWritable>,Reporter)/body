{
  @SuppressWarnings("unchecked") AcidInputFormat<WritableComparable,V> aif=instantiate(AcidInputFormat.class,jobConf.get(INPUT_FORMAT_CLASS_NAME));
  ValidTxnList txnList=new ValidCompactorTxnList(jobConf.get(ValidTxnList.VALID_TXNS_KEY));
  boolean isMajor=jobConf.getBoolean(IS_MAJOR,false);
  AcidInputFormat.RawReader<V> reader=aif.getRawReader(jobConf,isMajor,split.getBucket(),txnList,split.getBaseDir(),split.getDeltaDirs());
  RecordIdentifier identifier=reader.createKey();
  V value=reader.createValue();
  getWriter(reporter,reader.getObjectInspector(),split.getBucket());
  AcidUtils.AcidOperationalProperties acidOperationalProperties=AcidUtils.getAcidOperationalProperties(jobConf);
  if (!isMajor && acidOperationalProperties.isSplitUpdate()) {
    getDeleteEventWriter(reporter,reader.getObjectInspector(),split.getBucket());
  }
  while (reader.next(identifier,value)) {
    boolean sawDeleteRecord=reader.isDelete(value);
    if (isMajor && sawDeleteRecord)     continue;
    if (sawDeleteRecord && deleteEventWriter != null) {
      deleteEventWriter.write(value);
      reporter.progress();
    }
 else {
      writer.write(value);
      reporter.progress();
    }
  }
}
