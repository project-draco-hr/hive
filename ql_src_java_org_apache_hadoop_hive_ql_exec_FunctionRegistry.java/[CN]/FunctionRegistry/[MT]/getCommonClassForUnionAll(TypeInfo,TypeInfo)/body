{
  if (a.equals(b)) {
    return a;
  }
  if (a.getCategory() != Category.PRIMITIVE || b.getCategory() != Category.PRIMITIVE) {
    return null;
  }
  PrimitiveCategory pcA=((PrimitiveTypeInfo)a).getPrimitiveCategory();
  PrimitiveCategory pcB=((PrimitiveTypeInfo)b).getPrimitiveCategory();
  if (pcA == pcB) {
    return getTypeInfoForPrimitiveCategory((PrimitiveTypeInfo)a,(PrimitiveTypeInfo)b,pcA);
  }
  PrimitiveGrouping pgA=PrimitiveObjectInspectorUtils.getPrimitiveGrouping(pcA);
  PrimitiveGrouping pgB=PrimitiveObjectInspectorUtils.getPrimitiveGrouping(pcB);
  if (pgA != pgB) {
    return null;
  }
switch (pgA) {
case STRING_GROUP:
    return getTypeInfoForPrimitiveCategory((PrimitiveTypeInfo)a,(PrimitiveTypeInfo)b,PrimitiveCategory.STRING);
case NUMERIC_GROUP:
  return TypeInfoUtils.implicitConvertible(a,b) ? b : a;
case DATE_GROUP:
return TypeInfoFactory.timestampTypeInfo;
default :
return null;
}
}
