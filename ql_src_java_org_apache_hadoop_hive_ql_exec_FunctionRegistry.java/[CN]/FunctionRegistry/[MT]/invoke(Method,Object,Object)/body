{
  Object o;
  try {
    o=m.invoke(thisObject,arguments);
  }
 catch (  Exception e) {
    String thisObjectString="" + thisObject + " of class "+ (thisObject == null ? "null" : thisObject.getClass().getName());
    StringBuilder argumentString=new StringBuilder();
    if (arguments == null) {
      argumentString.append("null");
    }
 else {
      argumentString.append("{");
      for (int i=0; i < arguments.length; i++) {
        if (i > 0) {
          argumentString.append(", ");
        }
        if (arguments[i] == null) {
          argumentString.append("null");
        }
 else {
          argumentString.append("" + arguments[i] + ":"+ arguments[i].getClass().getName());
        }
      }
      argumentString.append("} of size " + arguments.length);
    }
    throw new HiveException("Unable to execute method " + m + " "+ " on object "+ thisObjectString+ " with arguments "+ argumentString.toString(),e);
  }
  return o;
}
