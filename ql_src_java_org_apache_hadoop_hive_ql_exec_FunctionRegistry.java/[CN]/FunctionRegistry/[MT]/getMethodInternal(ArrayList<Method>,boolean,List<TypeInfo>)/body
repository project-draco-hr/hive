{
  int leastImplicitConversions=Integer.MAX_VALUE;
  Method udfMethod=null;
  for (  Method m : mlist) {
    List<TypeInfo> argumentsAccepted=TypeInfoUtils.getParameterTypeInfos(m);
    boolean match=(argumentsAccepted.size() == argumentsPassed.size());
    int implicitConversions=0;
    for (int i=0; i < argumentsPassed.size() && match; i++) {
      TypeInfo argumentPassed=argumentsPassed.get(i);
      TypeInfo argumentAccepted=argumentsAccepted.get(i);
      if (argumentPassed.equals(TypeInfoFactory.voidTypeInfo)) {
        continue;
      }
      if (argumentAccepted.equals(TypeInfoFactory.unknownTypeInfo)) {
        continue;
      }
      if (argumentPassed.getCategory().equals(Category.LIST) && argumentAccepted.equals(TypeInfoFactory.unknownListTypeInfo)) {
        continue;
      }
      if (argumentPassed.getCategory().equals(Category.MAP) && argumentAccepted.equals(TypeInfoFactory.unknownMapTypeInfo)) {
        continue;
      }
      TypeInfo accepted=argumentsAccepted.get(i);
      if (accepted.equals(argumentsPassed.get(i))) {
      }
 else       if (!exact && implicitConvertable(argumentsPassed.get(i),accepted)) {
        implicitConversions++;
      }
 else {
        match=false;
      }
    }
    if (match) {
      if (implicitConversions < leastImplicitConversions) {
        udfMethod=m;
        leastImplicitConversions=implicitConversions;
        if (leastImplicitConversions == 0)         break;
      }
 else       if (implicitConversions == leastImplicitConversions) {
        udfMethod=null;
      }
 else {
      }
    }
  }
  return udfMethod;
}
