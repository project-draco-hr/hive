{
  int maxLength;
switch (typeCategory) {
case CHAR:
    maxLength=getCommonLength(TypeInfoUtils.getCharacterLengthForType(a),TypeInfoUtils.getCharacterLengthForType(b));
  return TypeInfoFactory.getCharTypeInfo(maxLength);
case VARCHAR:
maxLength=getCommonLength(TypeInfoUtils.getCharacterLengthForType(a),TypeInfoUtils.getCharacterLengthForType(b));
return TypeInfoFactory.getVarcharTypeInfo(maxLength);
case DECIMAL:
int prec1=HiveDecimalUtils.getPrecisionForType(a);
int prec2=HiveDecimalUtils.getPrecisionForType(b);
int scale1=HiveDecimalUtils.getScaleForType(a);
int scale2=HiveDecimalUtils.getScaleForType(b);
int intPart=Math.max(prec1 - scale1,prec2 - scale2);
int decPart=Math.max(scale1,scale2);
int prec=Math.min(intPart + decPart,HiveDecimal.MAX_PRECISION);
int scale=Math.min(decPart,HiveDecimal.MAX_PRECISION - intPart);
return TypeInfoFactory.getDecimalTypeInfo(prec,scale);
default :
return TypeInfoFactory.getPrimitiveTypeInfo(PrimitiveObjectInspectorUtils.getTypeEntryFromPrimitiveCategory(typeCategory).typeName);
}
}
