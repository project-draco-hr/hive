{
  int leastImplicitConversions=Integer.MAX_VALUE;
  Method udfMethod=null;
  for (  Method m : Arrays.asList(udfClass.getMethods())) {
    if (m.getName().equals(methodName)) {
      Class<?>[] argumentTypeInfos=m.getParameterTypes();
      boolean match=(argumentTypeInfos.length == argumentClasses.size());
      int implicitConversions=0;
      for (int i=0; i < argumentClasses.size() && match; i++) {
        if (argumentClasses.get(i) == Void.class)         continue;
        Class<?> accepted=ObjectInspectorUtils.generalizePrimitive(argumentTypeInfos[i]);
        if (accepted.isAssignableFrom(argumentClasses.get(i))) {
        }
 else         if (!exact && implicitConvertable(argumentClasses.get(i),accepted)) {
          implicitConversions++;
        }
 else {
          match=false;
        }
      }
      if (match) {
        if (implicitConversions < leastImplicitConversions) {
          udfMethod=m;
          leastImplicitConversions=implicitConversions;
          if (leastImplicitConversions == 0)           break;
        }
 else         if (implicitConversions == leastImplicitConversions) {
          udfMethod=null;
        }
 else {
        }
      }
    }
  }
  return udfMethod;
}
