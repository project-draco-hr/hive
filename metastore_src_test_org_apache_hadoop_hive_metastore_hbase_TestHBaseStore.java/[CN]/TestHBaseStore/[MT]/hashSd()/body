{
  List<FieldSchema> cols=new ArrayList<FieldSchema>();
  cols.add(new FieldSchema("col1","int",""));
  SerDeInfo serde=new SerDeInfo("serde","seriallib",null);
  StorageDescriptor sd=new StorageDescriptor(cols,"file:/tmp","input","output",true,0,serde,null,null,emptyParameters);
  Map<List<String>,String> map=new HashMap<List<String>,String>();
  map.put(Arrays.asList("col3"),"col4");
  SkewedInfo skew=new SkewedInfo(Arrays.asList("col1"),Arrays.asList(Arrays.asList("col2")),map);
  sd.setSkewedInfo(skew);
  MessageDigest md=MessageDigest.getInstance("MD5");
  byte[] baseHash=HBaseUtils.hashStorageDescriptor(sd,md);
  StorageDescriptor changeSchema=new StorageDescriptor(sd);
  changeSchema.getCols().add(new FieldSchema("col2","varchar(32)","a comment"));
  byte[] schemaHash=HBaseUtils.hashStorageDescriptor(changeSchema,md);
  Assert.assertFalse(Arrays.equals(baseHash,schemaHash));
  StorageDescriptor changeLocation=new StorageDescriptor(sd);
  changeLocation.setLocation("file:/somewhere/else");
  byte[] locationHash=HBaseUtils.hashStorageDescriptor(changeLocation,md);
  Assert.assertArrayEquals(baseHash,locationHash);
}
