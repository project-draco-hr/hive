{
  Reader readerByValue=null;
  Reader readerByReference=null;
  PrimitiveTypeInfo primitiveTypeInfo=primitiveTypeInfos[index];
  PrimitiveCategory primitiveCategory=primitiveTypeInfo.getPrimitiveCategory();
switch (primitiveCategory) {
case BOOLEAN:
    readerByValue=new BooleanReader(outputColumn);
  break;
case BYTE:
readerByValue=new ByteReader(outputColumn);
break;
case SHORT:
readerByValue=new ShortReader(outputColumn);
break;
case INT:
readerByValue=new IntReader(outputColumn);
break;
case LONG:
readerByValue=new LongReader(outputColumn);
break;
case DATE:
readerByValue=new DateReader(outputColumn);
break;
case TIMESTAMP:
readerByValue=new TimestampReader(outputColumn);
break;
case FLOAT:
readerByValue=new FloatReader(outputColumn);
break;
case DOUBLE:
readerByValue=new DoubleReader(outputColumn);
break;
case STRING:
readerByValue=new StringReaderByValue(outputColumn);
readerByReference=new StringReaderByReference(outputColumn);
break;
case CHAR:
{
CharTypeInfo charTypeInfo=(CharTypeInfo)primitiveTypeInfo;
readerByValue=new CharReaderByValue(charTypeInfo,outputColumn);
readerByReference=new CharReaderByReference(charTypeInfo,outputColumn);
}
break;
case VARCHAR:
{
VarcharTypeInfo varcharTypeInfo=(VarcharTypeInfo)primitiveTypeInfo;
readerByValue=new VarcharReaderByValue(varcharTypeInfo,outputColumn);
readerByReference=new VarcharReaderByReference(varcharTypeInfo,outputColumn);
}
break;
case BINARY:
readerByValue=new BinaryReaderByValue(outputColumn);
readerByReference=new BinaryReaderByReference(outputColumn);
break;
case DECIMAL:
readerByValue=new HiveDecimalReader(outputColumn);
break;
case INTERVAL_YEAR_MONTH:
readerByValue=new IntervalYearMonthReader(outputColumn);
break;
case INTERVAL_DAY_TIME:
readerByValue=new IntervalDayTimeReader(outputColumn);
break;
default :
throw new HiveException("Unexpected primitive type category " + primitiveCategory);
}
readersByValue[index]=readerByValue;
if (readerByReference == null) {
readersByReference[index]=readerByValue;
}
 else {
readersByReference[index]=readerByReference;
}
}
