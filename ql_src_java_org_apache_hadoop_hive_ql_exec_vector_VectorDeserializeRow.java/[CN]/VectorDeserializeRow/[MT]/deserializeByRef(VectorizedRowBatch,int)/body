{
  final int count=isConvert.length;
  if (!useReadField) {
    for (int i=0; i < count; i++) {
      final int projectionColumnNum=projectionColumnNums[i];
      if (projectionColumnNum == -1) {
        deserializeRead.skipNextField();
        continue;
      }
      if (!deserializeRead.readNextField()) {
        ColumnVector colVector=batch.cols[projectionColumnNum];
        colVector.isNull[batchIndex]=true;
        colVector.noNulls=false;
        continue;
      }
      if (isConvert[i]) {
        convertRowColumn(batch,batchIndex,i);
      }
 else {
        storeRowColumn(batch,batchIndex,i,true);
      }
    }
  }
 else {
    final int readFieldCount=readFieldLogicalIndices.length;
    for (int i=0; i < readFieldCount; i++) {
      final int logicalIndex=readFieldLogicalIndices[i];
      if (!deserializeRead.readField(logicalIndex)) {
        ColumnVector colVector=batch.cols[projectionColumnNums[logicalIndex]];
        colVector.isNull[batchIndex]=true;
        colVector.noNulls=false;
        continue;
      }
      if (isConvert[logicalIndex]) {
        convertRowColumn(batch,batchIndex,logicalIndex);
      }
 else {
        storeRowColumn(batch,batchIndex,logicalIndex,true);
      }
    }
  }
}
