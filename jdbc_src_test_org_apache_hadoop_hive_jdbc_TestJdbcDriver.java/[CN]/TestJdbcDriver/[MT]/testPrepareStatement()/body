{
  String sql="from (select count(1) from " + tableName + " where   'not?param?not?param' <> 'not_param??not_param' and ?=? "+ " and 1=? and 2=? and 3.0=? and 4.0=? and 'test\\'string\"'=? and 5=? and ?=? "+ " ) t  select '2011-03-25' ddate,'China',true bv, 10 num limit 10";
  try {
    PreparedStatement ps=createPreapredStatementUsingSetXXX(sql);
    ResultSet res=ps.executeQuery();
    assertPreparedStatementResultAsExpected(res);
    ps.close();
    ps=createPreapredStatementUsingSetObject(sql);
    res=ps.executeQuery();
    assertPreparedStatementResultAsExpected(res);
    ps.close();
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail(e.toString());
  }
  Exception expectedException=null;
  try {
    PreparedStatement ps=con.prepareStatement(sql);
    ps.executeQuery();
  }
 catch (  Exception e) {
    expectedException=e;
  }
  assertNotNull("Execute the un-setted sql statement should throw exception",expectedException);
  expectedException=null;
  try {
    PreparedStatement ps=con.prepareStatement(sql);
    ps.setBoolean(1,true);
    ps.setBoolean(2,true);
    ps.executeQuery();
  }
 catch (  Exception e) {
    expectedException=e;
  }
  assertNotNull("Execute the invalid setted sql statement should throw exception",expectedException);
  expectedException=null;
  try {
    PreparedStatement ps=con.prepareStatement(sql);
    ps.setString(1,"wrong");
    assertTrue(true);
    ResultSet res=ps.executeQuery();
    if (!res.next()) {
      throw new Exception("there must be a empty result set");
    }
  }
 catch (  Exception e) {
    expectedException=e;
  }
  assertNotNull("Execute the invalid setted sql statement should throw exception",expectedException);
  expectedException=null;
  try {
    PreparedStatement ps=con.prepareStatement(sql);
    ps.setObject(1,new Date());
    ps.executeQuery();
  }
 catch (  Exception e) {
    expectedException=e;
  }
  assertNotNull("Setting to an unknown type should throw an exception",expectedException);
}
