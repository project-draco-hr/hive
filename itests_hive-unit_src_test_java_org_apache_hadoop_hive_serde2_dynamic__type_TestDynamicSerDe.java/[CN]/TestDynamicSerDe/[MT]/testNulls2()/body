{
  try {
    ArrayList<String> bye=null;
    HashMap<String,Integer> another=null;
    ArrayList<Object> struct=new ArrayList<Object>();
    struct.add(null);
    struct.add(bye);
    struct.add(another);
    Properties schema=new Properties();
    schema.setProperty(serdeConstants.SERIALIZATION_FORMAT,org.apache.hadoop.hive.serde2.thrift.TCTLSeparatedProtocol.class.getName());
    schema.setProperty(org.apache.hadoop.hive.metastore.api.hive_metastoreConstants.META_TABLE_NAME,"test");
    schema.setProperty(serdeConstants.SERIALIZATION_DDL,"struct test { i32 hello, list<string> bye, map<string,i32> another}");
    schema.setProperty(serdeConstants.SERIALIZATION_LIB,new DynamicSerDe().getClass().toString());
    schema.setProperty(TCTLSeparatedProtocol.ReturnNullsKey,"true");
    DynamicSerDe serde=new DynamicSerDe();
    serde.initialize(new Configuration(),schema);
    ObjectInspector oi=serde.getObjectInspector();
    BytesWritable bytes=(BytesWritable)serde.serialize(struct,oi);
    hexString(bytes);
    Object o=serde.deserialize(bytes);
    List<?> olist=(List<?>)o;
    assertTrue(olist.size() == 3);
    assertEquals(null,olist.get(0));
    assertEquals(null,olist.get(1));
    assertEquals(null,olist.get(2));
  }
 catch (  Throwable e) {
    e.printStackTrace();
    throw e;
  }
}
