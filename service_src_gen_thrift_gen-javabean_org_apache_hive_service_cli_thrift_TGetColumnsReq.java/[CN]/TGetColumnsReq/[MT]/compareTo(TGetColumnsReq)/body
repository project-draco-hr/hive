{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  TGetColumnsReq typedOther=(TGetColumnsReq)other;
  lastComparison=Boolean.valueOf(isSetSessionHandle()).compareTo(typedOther.isSetSessionHandle());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSessionHandle()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.sessionHandle,typedOther.sessionHandle);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetCatalogName()).compareTo(typedOther.isSetCatalogName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetCatalogName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.catalogName,typedOther.catalogName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetSchemaName()).compareTo(typedOther.isSetSchemaName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSchemaName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.schemaName,typedOther.schemaName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTableName()).compareTo(typedOther.isSetTableName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTableName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.tableName,typedOther.tableName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetColumnName()).compareTo(typedOther.isSetColumnName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetColumnName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.columnName,typedOther.columnName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
