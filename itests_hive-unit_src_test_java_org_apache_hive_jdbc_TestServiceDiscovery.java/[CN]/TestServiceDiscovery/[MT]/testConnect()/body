{
  Map<String,String> confs=new HashMap<String,String>();
  confs.put("hive.server2.thrift.bind.host","host-1");
  confs.put("hive.server2.transport.mode","binary");
  confs.put("hive.server2.thrift.port","8000");
  confs.put("hive.server2.authentication","PLAIN");
  publishConfsToZk(confs,"uri1");
  confs.clear();
  confs.put("hive.server2.thrift.bind.host","host-2");
  confs.put("hive.server2.transport.mode","binary");
  confs.put("hive.server2.thrift.port","9000");
  confs.put("hive.server2.authentication","PLAIN");
  publishConfsToZk(confs,"uri2");
  confs.clear();
  confs.put("hive.server2.thrift.bind.host","host-3");
  confs.put("hive.server2.transport.mode","binary");
  confs.put("hive.server2.thrift.port","10000");
  confs.put("hive.server2.authentication","PLAIN");
  publishConfsToZk(confs,"uri3");
  Utils.JdbcConnectionParams connParams=new Utils.JdbcConnectionParams();
  connParams.setZooKeeperEnsemble(server.getConnectString());
  connParams.getSessionVars().put(Utils.JdbcConnectionParams.ZOOKEEPER_NAMESPACE,"hiveserver2");
  List<ConnParamInfo> allConnectParams=new ArrayList<>();
  while (true) {
    try {
      ZooKeeperHiveClientHelper.configureConnParams(connParams);
    }
 catch (    ZooKeeperHiveClientException e) {
      break;
    }
    connParams.getRejectedHostZnodePaths().add(connParams.getCurrentHostZnodePath());
    allConnectParams.add(new ConnParamInfo(connParams.getHost(),connParams.getPort(),connParams.getCurrentHostZnodePath()));
  }
  Collection<ConnParamInfo> cp1=Collections2.filter(allConnectParams,new ConnParamInfoPred("host-1",8000,"serverUri=uri1"));
  Collection<ConnParamInfo> cp2=Collections2.filter(allConnectParams,new ConnParamInfoPred("host-2",9000,"serverUri=uri2"));
  Collection<ConnParamInfo> cp3=Collections2.filter(allConnectParams,new ConnParamInfoPred("host-3",10000,"serverUri=uri3"));
  Assert.assertEquals(cp1.size(),1);
  Assert.assertEquals(cp2.size(),1);
  Assert.assertEquals(cp3.size(),1);
}
