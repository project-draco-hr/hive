{
  try {
    client.create().creatingParentsIfNeeded().withMode(CreateMode.PERSISTENT).forPath(ZooKeeperHiveHelper.ZOOKEEPER_PATH_SEPARATOR + rootNamespace);
  }
 catch (  KeeperException e) {
    Assert.assertTrue(e.code() == KeeperException.Code.NODEEXISTS);
  }
  String pathPrefix=ZooKeeperHiveHelper.ZOOKEEPER_PATH_SEPARATOR + rootNamespace + ZooKeeperHiveHelper.ZOOKEEPER_PATH_SEPARATOR+ "serverUri="+ uri+ ";"+ "sequence=";
  String znodeData="";
  znodeData=Joiner.on(';').withKeyValueSeparator("=").join(confs);
  byte[] znodeDataUTF8=znodeData.getBytes(Charset.forName("UTF-8"));
  PersistentEphemeralNode znode=new PersistentEphemeralNode(client,PersistentEphemeralNode.Mode.EPHEMERAL_SEQUENTIAL,pathPrefix,znodeDataUTF8);
  znode.start();
  long znodeCreationTimeout=120;
  if (!znode.waitForInitialCreate(znodeCreationTimeout,TimeUnit.SECONDS)) {
    throw new Exception("Max znode creation wait time: " + znodeCreationTimeout + "s exhausted");
  }
}
