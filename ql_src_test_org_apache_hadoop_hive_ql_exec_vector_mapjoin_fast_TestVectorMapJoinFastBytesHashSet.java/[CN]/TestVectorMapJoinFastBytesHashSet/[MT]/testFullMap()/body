{
  random=new Random(219);
  VectorMapJoinFastMultiKeyHashSet map=new VectorMapJoinFastMultiKeyHashSet(false,CAPACITY,1f,WB_SIZE);
  VerifyFastBytesHashSet verifyTable=new VerifyFastBytesHashSet();
  for (int i=0; i < CAPACITY; i++) {
    byte[] key;
    while (true) {
      key=new byte[random.nextInt(MAX_KEY_LENGTH)];
      random.nextBytes(key);
      if (!verifyTable.contains(key)) {
        break;
      }
    }
    map.testPutRow(key);
    verifyTable.add(key);
  }
  verifyTable.verify(map);
  byte[] anotherKey;
  while (true) {
    anotherKey=new byte[random.nextInt(MAX_KEY_LENGTH)];
    random.nextBytes(anotherKey);
    if (!verifyTable.contains(anotherKey)) {
      break;
    }
  }
  VectorMapJoinHashSetResult hashSetResult=map.createHashSetResult();
  JoinUtil.JoinResult joinResult=map.contains(anotherKey,0,anotherKey.length,hashSetResult);
  assertTrue(joinResult == JoinUtil.JoinResult.NOMATCH);
}
