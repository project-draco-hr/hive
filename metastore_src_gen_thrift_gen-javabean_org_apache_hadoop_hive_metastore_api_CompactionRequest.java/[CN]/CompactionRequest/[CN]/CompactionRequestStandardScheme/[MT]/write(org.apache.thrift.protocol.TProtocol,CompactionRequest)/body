{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.dbname != null) {
    oprot.writeFieldBegin(DBNAME_FIELD_DESC);
    oprot.writeString(struct.dbname);
    oprot.writeFieldEnd();
  }
  if (struct.tablename != null) {
    oprot.writeFieldBegin(TABLENAME_FIELD_DESC);
    oprot.writeString(struct.tablename);
    oprot.writeFieldEnd();
  }
  if (struct.partitionname != null) {
    if (struct.isSetPartitionname()) {
      oprot.writeFieldBegin(PARTITIONNAME_FIELD_DESC);
      oprot.writeString(struct.partitionname);
      oprot.writeFieldEnd();
    }
  }
  if (struct.type != null) {
    oprot.writeFieldBegin(TYPE_FIELD_DESC);
    oprot.writeI32(struct.type.getValue());
    oprot.writeFieldEnd();
  }
  if (struct.runas != null) {
    if (struct.isSetRunas()) {
      oprot.writeFieldBegin(RUNAS_FIELD_DESC);
      oprot.writeString(struct.runas);
      oprot.writeFieldEnd();
    }
  }
  if (struct.properties != null) {
    if (struct.isSetProperties()) {
      oprot.writeFieldBegin(PROPERTIES_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,struct.properties.size()));
        for (        Map.Entry<String,String> _iter528 : struct.properties.entrySet()) {
          oprot.writeString(_iter528.getKey());
          oprot.writeString(_iter528.getValue());
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
