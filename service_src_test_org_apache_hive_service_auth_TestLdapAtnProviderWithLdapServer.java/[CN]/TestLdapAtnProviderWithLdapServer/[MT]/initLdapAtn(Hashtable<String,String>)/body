{
  Set<String> keys=hiveProperties.keySet();
  Iterator<String> iter=keys.iterator();
  hiveConf=new HiveConf();
  try {
    boolean deleted=new File(hiveConf.getHiveSiteLocation().toURI()).delete();
  }
 catch (  Exception e) {
  }
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  hiveConf.writeXml(baos);
  baos.close();
  hiveConf.set("hive.root.logger","TRACE,console");
  hiveConf.set("hive.server2.authentication.ldap.url",ldapUrl);
  hiveConf.set("hive.server2.authentication.ldap.userDNPattern","cn=%s,ou=People,dc=example,dc=com");
  hiveConf.set("hive.server2.authentication.ldap.groupDNPattern","cn=%s,ou=Groups,dc=example,dc=com");
  String key;
  String value;
  while (iter.hasNext()) {
    key=iter.next();
    value=hiveProperties.get(key);
    hiveConf.set(key,value);
  }
  FileOutputStream fos=new FileOutputStream(new File(hiveConf.getHiveSiteLocation().toURI()));
  hiveConf.writeXml(fos);
  fos.close();
  ldapProvider=new LdapAuthenticationProviderImpl();
}
