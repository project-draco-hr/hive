{
  if (columnTypes == null) {
    throw new SQLException("Could not determine column type name for ResultSet");
  }
  if (column < 1 || column > columnTypes.size()) {
    throw new SQLException("Invalid column value: " + column);
  }
  String type=columnTypes.get(column - 1);
  if ("string".equalsIgnoreCase(type)) {
    return serdeConstants.STRING_TYPE_NAME;
  }
 else   if ("float".equalsIgnoreCase(type)) {
    return serdeConstants.FLOAT_TYPE_NAME;
  }
 else   if ("double".equalsIgnoreCase(type)) {
    return serdeConstants.DOUBLE_TYPE_NAME;
  }
 else   if ("boolean".equalsIgnoreCase(type)) {
    return serdeConstants.BOOLEAN_TYPE_NAME;
  }
 else   if ("tinyint".equalsIgnoreCase(type)) {
    return serdeConstants.TINYINT_TYPE_NAME;
  }
 else   if ("smallint".equalsIgnoreCase(type)) {
    return serdeConstants.SMALLINT_TYPE_NAME;
  }
 else   if ("int".equalsIgnoreCase(type)) {
    return serdeConstants.INT_TYPE_NAME;
  }
 else   if ("bigint".equalsIgnoreCase(type)) {
    return serdeConstants.BIGINT_TYPE_NAME;
  }
 else   if ("date".equalsIgnoreCase(type)) {
    return serdeConstants.DATE_TYPE_NAME;
  }
 else   if ("timestamp".equalsIgnoreCase(type)) {
    return serdeConstants.TIMESTAMP_TYPE_NAME;
  }
 else   if (type.startsWith("decimal")) {
    return serdeConstants.DECIMAL_TYPE_NAME;
  }
 else   if (type.startsWith("map<")) {
    return serdeConstants.STRING_TYPE_NAME;
  }
 else   if (type.startsWith("array<")) {
    return serdeConstants.STRING_TYPE_NAME;
  }
 else   if (type.startsWith("struct<")) {
    return serdeConstants.STRING_TYPE_NAME;
  }
  throw new SQLException("Unrecognized column type: " + type);
}
