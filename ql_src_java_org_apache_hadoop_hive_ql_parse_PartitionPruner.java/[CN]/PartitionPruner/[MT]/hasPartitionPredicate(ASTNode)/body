{
  int tokType=expr.getType();
  boolean hasPPred=false;
switch (tokType) {
case HiveParser.TOK_COLREF:
{
      assert(expr.getChildCount() == 2);
      String tabAlias=BaseSemanticAnalyzer.unescapeIdentifier(expr.getChild(0).getText());
      String colName=BaseSemanticAnalyzer.unescapeIdentifier(expr.getChild(1).getText());
      if (tabAlias.equalsIgnoreCase(tableAlias) && tab.isPartitionKey(colName)) {
        hasPPred=true;
      }
      break;
    }
default :
{
    boolean isFunction=(expr.getType() == HiveParser.TOK_FUNCTION);
    int childrenBegin=(isFunction ? 1 : 0);
    for (int ci=childrenBegin; ci < expr.getChildCount(); ci++) {
      hasPPred=(hasPPred || hasPartitionPredicate((ASTNode)expr.getChild(ci)));
    }
    break;
  }
}
return hasPPred;
}
