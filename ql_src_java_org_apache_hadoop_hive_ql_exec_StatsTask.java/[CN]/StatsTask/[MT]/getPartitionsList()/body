{
  if (work.getLoadFileDesc() != null) {
    return null;
  }
  List<Partition> list=new ArrayList<Partition>();
  if (work.getTableSpecs() != null) {
    TableSpec tblSpec=work.getTableSpecs();
    table=tblSpec.tableHandle;
    if (!table.isPartitioned()) {
      return null;
    }
    List<Partition> partitions=tblSpec.partitions;
    if (partitions != null) {
      for (      Partition partn : partitions) {
        list.add(partn);
      }
    }
  }
 else   if (work.getLoadTableDesc() != null) {
    LoadTableDesc tbd=work.getLoadTableDesc();
    table=db.getTable(tbd.getTable().getTableName());
    if (!table.isPartitioned()) {
      return null;
    }
    DynamicPartitionCtx dpCtx=tbd.getDPCtx();
    if (dpCtx != null && dpCtx.getNumDPCols() > 0) {
      if (dpPartSpecs != null) {
        for (        LinkedHashMap<String,String> partSpec : dpPartSpecs) {
          Partition partn=db.getPartition(table,partSpec,false);
          list.add(partn);
        }
      }
    }
 else {
      Partition partn=db.getPartition(table,tbd.getPartitionSpec(),false);
      list.add(partn);
    }
  }
  return list;
}
