{
  StatsAggregator statsAggregator=null;
  int ret=0;
  StatsCollectionContext scc=null;
  try {
    Warehouse wh=new Warehouse(conf);
    if (!getWork().getNoStatsAggregator() && !getWork().isNoScanAnalyzeCommand()) {
      try {
        scc=getContext();
        statsAggregator=createStatsAggregator(scc);
      }
 catch (      HiveException e) {
        if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_STATS_RELIABLE)) {
          throw e;
        }
        console.printError(ErrorMsg.STATS_SKIPPING_BY_ERROR.getErrorCodedMsg(e.toString()));
      }
    }
    List<Partition> partitions=getPartitionsList();
    boolean atomic=HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_STATS_ATOMIC);
    String tableFullName=table.getDbName() + "." + table.getTableName();
    if (partitions == null) {
      org.apache.hadoop.hive.metastore.api.Table tTable=table.getTTable();
      Map<String,String> parameters=tTable.getParameters();
      if (!existStats(parameters) && atomic) {
        return 0;
      }
      if (work.isClearAggregatorStats()) {
        clearStats(parameters);
      }
      if (statsAggregator != null) {
        String prefix=getAggregationPrefix(table,null);
        updateStats(statsAggregator,parameters,prefix,atomic);
      }
      updateQuickStats(wh,parameters,tTable.getSd());
      if (!getWork().getNoStatsAggregator()) {
        parameters.put(StatsSetupConst.STATS_GENERATED_VIA_STATS_TASK,StatsSetupConst.TRUE);
      }
      db.alterTable(tableFullName,new Table(tTable));
      if (conf.getBoolVar(ConfVars.TEZ_EXEC_SUMMARY)) {
        console.printInfo("Table " + tableFullName + " stats: ["+ toString(parameters)+ ']');
      }
      LOG.info("Table " + tableFullName + " stats: ["+ toString(parameters)+ ']');
    }
 else {
      List<Partition> updates=new ArrayList<Partition>();
      for (      Partition partn : partitions) {
        org.apache.hadoop.hive.metastore.api.Partition tPart=partn.getTPartition();
        Map<String,String> parameters=tPart.getParameters();
        if (!existStats(parameters) && atomic) {
          continue;
        }
        if (work.isClearAggregatorStats()) {
          clearStats(parameters);
        }
        if (statsAggregator != null) {
          String prefix=getAggregationPrefix(table,partn);
          updateStats(statsAggregator,parameters,prefix,atomic);
        }
        updateQuickStats(wh,parameters,tPart.getSd());
        if (!getWork().getNoStatsAggregator()) {
          parameters.put(StatsSetupConst.STATS_GENERATED_VIA_STATS_TASK,StatsSetupConst.TRUE);
        }
        updates.add(new Partition(table,tPart));
        if (conf.getBoolVar(ConfVars.TEZ_EXEC_SUMMARY)) {
          console.printInfo("Partition " + tableFullName + partn.getSpec()+ " stats: ["+ toString(parameters)+ ']');
        }
        LOG.info("Partition " + tableFullName + partn.getSpec()+ " stats: ["+ toString(parameters)+ ']');
      }
      if (!updates.isEmpty()) {
        db.alterPartitions(tableFullName,updates);
      }
    }
  }
 catch (  Exception e) {
    console.printInfo("[Warning] could not update stats.","Failed with exception " + e.getMessage() + "\n"+ StringUtils.stringifyException(e));
    if (work.isStatsReliable()) {
      ret=1;
    }
  }
 finally {
    if (statsAggregator != null) {
      statsAggregator.closeConnection(scc);
    }
  }
  return ret;
}
