{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  TColumnDesc typedOther=(TColumnDesc)other;
  lastComparison=Boolean.valueOf(isSetColumnName()).compareTo(typedOther.isSetColumnName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetColumnName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.columnName,typedOther.columnName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTypeDesc()).compareTo(typedOther.isSetTypeDesc());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTypeDesc()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.typeDesc,typedOther.typeDesc);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetPosition()).compareTo(typedOther.isSetPosition());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetPosition()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.position,typedOther.position);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetComment()).compareTo(typedOther.isSetComment());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetComment()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.comment,typedOther.comment);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
