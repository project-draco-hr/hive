{
  byte[] jsonData=Files.readAllBytes(Paths.get(jsonReportFile.getAbsolutePath()));
  ObjectMapper objectMapper=new ObjectMapper();
  JsonNode rootNode=objectMapper.readTree(jsonData);
  JsonNode countersNode=rootNode.path("counters");
  JsonNode openCnxNode=countersNode.path("open_connections");
  JsonNode openCnxCountNode=openCnxNode.path("count");
  Assert.assertTrue(openCnxCountNode.asInt() == 1);
  HiveMetaStoreClient msc=new HiveMetaStoreClient(hiveConf);
  HiveMetaStoreClient msc2=new HiveMetaStoreClient(hiveConf);
  Thread.sleep(2000);
  jsonData=Files.readAllBytes(Paths.get(jsonReportFile.getAbsolutePath()));
  rootNode=objectMapper.readTree(jsonData);
  countersNode=rootNode.path("counters");
  openCnxNode=countersNode.path("open_connections");
  openCnxCountNode=openCnxNode.path("count");
  Assert.assertTrue(openCnxCountNode.asInt() == 3);
  msc.close();
  Thread.sleep(2000);
  jsonData=Files.readAllBytes(Paths.get(jsonReportFile.getAbsolutePath()));
  rootNode=objectMapper.readTree(jsonData);
  countersNode=rootNode.path("counters");
  openCnxNode=countersNode.path("open_connections");
  openCnxCountNode=openCnxNode.path("count");
  Assert.assertTrue(openCnxCountNode.asInt() == 2);
  msc2.close();
  Thread.sleep(2000);
  jsonData=Files.readAllBytes(Paths.get(jsonReportFile.getAbsolutePath()));
  rootNode=objectMapper.readTree(jsonData);
  countersNode=rootNode.path("counters");
  openCnxNode=countersNode.path("open_connections");
  openCnxCountNode=openCnxNode.path("count");
  Assert.assertTrue(openCnxCountNode.asInt() == 1);
}
