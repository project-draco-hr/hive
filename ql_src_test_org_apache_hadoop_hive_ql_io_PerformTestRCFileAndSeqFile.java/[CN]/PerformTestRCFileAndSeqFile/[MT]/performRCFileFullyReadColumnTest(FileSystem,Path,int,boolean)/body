{
  byte[][] checkBytes=null;
  BytesRefArrayWritable checkRow=new BytesRefArrayWritable(allColumnsNumber);
  if (chechCorrect) {
    this.resetRandomGenerators();
    checkBytes=new byte[allColumnsNumber][];
  }
  int actualReadCount=0;
  RCFile.clearSkipColumnIDs(conf);
  RCFile.Reader reader=new RCFile.Reader(fs,file,conf);
  LongWritable rowID=new LongWritable();
  BytesRefArrayWritable cols=new BytesRefArrayWritable();
  while (reader.next(rowID)) {
    reader.getCurrentRow(cols);
    boolean ok=true;
    if (chechCorrect) {
      this.nextRandomRow(checkBytes,checkRow);
      ok=ok && checkRow.equals(cols);
    }
    if (!ok)     throw new IllegalStateException("Compare read and write error.");
    actualReadCount++;
  }
  return actualReadCount;
}
