{
  long start=System.currentTimeMillis();
  writeRCFileTest(fs,rowCount,testRCFile,columnNum,codec);
  long cost=System.currentTimeMillis() - start;
  long fileLen=fs.getFileStatus(testRCFile).getLen();
  System.out.println("Write RCFile with " + columnNum + " random string columns and "+ rowCount+ " rows cost "+ cost+ " milliseconds. And the file's on disk size is "+ fileLen);
  start=System.currentTimeMillis();
  writeSeqenceFileTest(fs,rowCount,this.testSeqFile,columnNum,codec);
  cost=System.currentTimeMillis() - start;
  fileLen=fs.getFileStatus(this.testSeqFile).getLen();
  System.out.println("Write SequenceFile with " + columnNum + " random string columns and "+ rowCount+ " rows cost "+ cost+ " milliseconds. And the file's on disk size is "+ fileLen);
  start=System.currentTimeMillis();
  int readRows=performRCFileReadFirstColumnTest(fs,testRCFile,columnNum,checkCorrect);
  cost=System.currentTimeMillis() - start;
  System.out.println("Read only one column of a RCFile with " + columnNum + " random string columns and "+ rowCount+ " rows cost "+ cost+ " milliseconds.");
  if (rowCount != readRows)   throw new IllegalStateException("Compare read and write row count error.");
  assertEquals("",rowCount,readRows);
  if (isLocalFileSystem() && !checkCorrect) {
    performSequenceFileRead(fs,rowCount,this.testSeqFile);
  }
  start=System.currentTimeMillis();
  readRows=performRCFileReadFirstAndLastColumnTest(fs,testRCFile,columnNum,checkCorrect);
  cost=System.currentTimeMillis() - start;
  System.out.println("Read only first and last columns of a RCFile with " + columnNum + " random string columns and "+ rowCount+ " rows cost "+ cost+ " milliseconds.");
  if (rowCount != readRows)   throw new IllegalStateException("Compare read and write row count error.");
  assertEquals("",rowCount,readRows);
  if (isLocalFileSystem() && !checkCorrect) {
    performSequenceFileRead(fs,rowCount,this.testSeqFile);
  }
  start=System.currentTimeMillis();
  performRCFileFullyReadColumnTest(fs,testRCFile,columnNum,checkCorrect);
  cost=System.currentTimeMillis() - start;
  System.out.println("Read all columns of a RCFile with " + columnNum + " random string columns and "+ rowCount+ " rows cost "+ cost+ " milliseconds.");
  if (rowCount != readRows)   throw new IllegalStateException("Compare read and write row count error.");
  assertEquals("",rowCount,readRows);
  start=System.currentTimeMillis();
  performSequenceFileRead(fs,rowCount,this.testSeqFile);
  cost=System.currentTimeMillis() - start;
  System.out.println("Read SequenceFile with " + columnNum + "  random string columns and "+ rowCount+ " rows cost "+ cost+ " milliseconds.");
}
