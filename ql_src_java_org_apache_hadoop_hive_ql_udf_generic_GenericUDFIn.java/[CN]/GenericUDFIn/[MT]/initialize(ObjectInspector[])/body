{
  if (arguments.length < 2) {
    throw new UDFArgumentLengthException("The function IN requires at least two arguments, got " + arguments.length);
  }
  argumentOIs=arguments;
  conversionHelper=new GenericUDFUtils.ReturnObjectInspectorResolver(true);
  for (  ObjectInspector oi : arguments) {
    if (!conversionHelper.update(oi)) {
      StringBuilder sb=new StringBuilder();
      sb.append("The arguments for IN should be the same type! Types are: {");
      sb.append(arguments[0].getTypeName());
      sb.append(" IN (");
      for (int i=1; i < arguments.length; i++) {
        if (i != 1) {
          sb.append(", ");
        }
        sb.append(arguments[i].getTypeName());
      }
      sb.append(")}");
      throw new UDFArgumentException(sb.toString());
    }
  }
  compareOI=conversionHelper.get();
  checkIfInSetConstant();
  return PrimitiveObjectInspectorFactory.writableBooleanObjectInspector;
}
