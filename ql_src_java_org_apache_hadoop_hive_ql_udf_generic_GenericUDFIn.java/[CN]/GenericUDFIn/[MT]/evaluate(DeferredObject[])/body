{
  bw.set(false);
  if (arguments[0].get() == null) {
    return null;
  }
  if (isInSetConstant) {
    if (constantInSet == null) {
      prepareInSet(arguments);
    }
switch (compareOI.getCategory()) {
case PRIMITIVE:
{
        if (constantInSet.contains(((PrimitiveObjectInspector)compareOI).getPrimitiveJavaObject(conversionHelper.convertIfNecessary(arguments[0].get(),argumentOIs[0])))) {
          bw.set(true);
          return bw;
        }
        break;
      }
case LIST:
{
      if (constantInSet.contains(((ListObjectInspector)compareOI).getList(conversionHelper.convertIfNecessary(arguments[0].get(),argumentOIs[0])))) {
        bw.set(true);
        return bw;
      }
      break;
    }
case MAP:
{
    if (constantInSet.contains(((MapObjectInspector)compareOI).getMap(conversionHelper.convertIfNecessary(arguments[0].get(),argumentOIs[0])))) {
      bw.set(true);
      return bw;
    }
    break;
  }
default :
throw new RuntimeException("Compare of unsupported constant type: " + compareOI.getCategory());
}
if (constantInSet.contains(null)) {
return null;
}
}
 else {
for (int i=1; i < arguments.length; i++) {
if (ObjectInspectorUtils.compare(conversionHelper.convertIfNecessary(arguments[0].get(),argumentOIs[0]),compareOI,conversionHelper.convertIfNecessary(arguments[i].get(),argumentOIs[i]),compareOI) == 0) {
bw.set(true);
return bw;
}
}
for (int i=1; i < arguments.length; i++) {
if (arguments[i].get() == null) {
return null;
}
}
}
return bw;
}
