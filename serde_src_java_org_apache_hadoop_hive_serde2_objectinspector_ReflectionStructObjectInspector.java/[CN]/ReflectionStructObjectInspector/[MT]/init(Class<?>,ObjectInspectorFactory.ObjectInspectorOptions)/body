{
  verifyObjectClassType(objectClass);
  this.objectClass=objectClass;
  final List<? extends ObjectInspector> structFieldObjectInspectors=extractFieldObjectInspectors(objectClass,options);
  Field[] reflectionFields=ObjectInspectorUtils.getDeclaredNonStaticFields(objectClass);
  fields=new ArrayList<MyField>(structFieldObjectInspectors.size());
  int used=0;
  for (int i=0; i < reflectionFields.length; i++) {
    if (!shouldIgnoreField(reflectionFields[i].getName())) {
      reflectionFields[i].setAccessible(true);
      fields.add(new MyField(i,reflectionFields[i],structFieldObjectInspectors.get(used++)));
    }
  }
  assert(fields.size() == structFieldObjectInspectors.size());
}
