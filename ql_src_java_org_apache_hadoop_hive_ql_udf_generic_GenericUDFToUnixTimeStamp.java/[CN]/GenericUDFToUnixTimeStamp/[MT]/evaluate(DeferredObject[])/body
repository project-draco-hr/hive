{
  if (arguments[0].get() == null) {
    return null;
  }
  if (inputTextConverter != null) {
    String textVal=(String)inputTextConverter.convert(arguments[0].get());
    if (textVal == null) {
      return null;
    }
    if (patternConverter != null) {
      if (arguments[1].get() == null) {
        return null;
      }
      String patternVal=(String)patternConverter.convert(arguments[1].get());
      if (patternVal == null) {
        return null;
      }
      if (!patternVal.equals(lasPattern)) {
        formatter.applyPattern(patternVal);
        lasPattern=patternVal;
      }
    }
    try {
      retValue.set(formatter.parse(textVal).getTime() / 1000);
      return retValue;
    }
 catch (    ParseException e) {
      return null;
    }
  }
 else   if (inputDateOI != null) {
    retValue.set(inputDateOI.getPrimitiveWritableObject(arguments[0].get()).getTimeInSeconds());
    return retValue;
  }
  Timestamp timestamp=inputTimestampOI.getPrimitiveJavaObject(arguments[0].get());
  retValue.set(timestamp.getTime() / 1000);
  return retValue;
}
