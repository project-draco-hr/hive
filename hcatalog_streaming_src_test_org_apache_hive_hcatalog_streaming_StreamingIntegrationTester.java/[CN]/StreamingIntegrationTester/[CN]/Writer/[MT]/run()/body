{
  StreamingConnection conn=null;
  try {
    conn=endPoint.newConnection(true,"UT_" + Thread.currentThread().getName());
    RecordWriter writer=new DelimitedInputWriter(cols,",",endPoint);
    for (int i=0; i < batches; i++) {
      long start=System.currentTimeMillis();
      LOG.info("Starting batch " + i);
      TransactionBatch batch=conn.fetchTransactionBatch(txnsPerBatch,writer);
      try {
        while (batch.remainingTransactions() > 0) {
          batch.beginNextTransaction();
          for (int j=0; j < recordsPerTxn; j++) {
            batch.write(generateRecord(cols,types));
          }
          if (rand.nextFloat() < abortPct)           batch.abort();
 else           batch.commit();
          if (pause) {
            System.out.println("Writer " + writerNumber + " committed... press Enter to continue. "+ Thread.currentThread().getId());
            System.in.read();
          }
        }
        long end=System.currentTimeMillis();
        if (end - start < frequency)         Thread.sleep(frequency - (end - start));
      }
  finally {
        batch.close();
        if (pause) {
          System.out.println("Writer " + writerNumber + " has closed a Batch.. press Enter to continue. "+ Thread.currentThread().getId());
          System.in.read();
        }
      }
    }
  }
 catch (  Throwable t) {
    System.err.println("Writer number " + writerNumber + " caught exception while testing: "+ StringUtils.stringifyException(t));
  }
 finally {
    if (conn != null)     conn.close();
  }
}
