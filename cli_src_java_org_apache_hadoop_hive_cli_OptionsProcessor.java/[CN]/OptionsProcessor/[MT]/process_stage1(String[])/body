{
  try {
    commandLine=new GnuParser().parse(options,argv);
    Properties confProps=commandLine.getOptionProperties("hiveconf");
    for (    String propKey : confProps.stringPropertyNames()) {
      if (propKey.equalsIgnoreCase("hive.root.logger")) {
        String propVal=confProps.getProperty(propKey);
        if (propVal.contains(",")) {
          String[] tokens=propVal.split(",");
          for (          String token : tokens) {
            if (Level.getLevel(token) == null) {
              System.setProperty("hive.root.logger",token);
            }
 else {
              System.setProperty("hive.log.level",token);
            }
          }
        }
 else {
          System.setProperty(propKey,confProps.getProperty(propKey));
        }
      }
 else {
        System.setProperty(propKey,confProps.getProperty(propKey));
      }
    }
    Properties hiveVars=commandLine.getOptionProperties("define");
    for (    String propKey : hiveVars.stringPropertyNames()) {
      hiveVariables.put(propKey,hiveVars.getProperty(propKey));
    }
    Properties hiveVars2=commandLine.getOptionProperties("hivevar");
    for (    String propKey : hiveVars2.stringPropertyNames()) {
      hiveVariables.put(propKey,hiveVars2.getProperty(propKey));
    }
  }
 catch (  ParseException e) {
    System.err.println(e.getMessage());
    printUsage();
    return false;
  }
  return true;
}
