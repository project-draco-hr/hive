{
  ObjectInspector inspector;
synchronized (TestOrcSerDeStats.class) {
    inspector=ObjectInspectorFactory.getReflectionObjectInspector(MapStruct.class,ObjectInspectorFactory.ObjectInspectorOptions.JAVA);
  }
  Writer writer=OrcFile.createWriter(testFilePath,OrcFile.writerOptions(conf).inspector(inspector).stripeSize(10000).bufferSize(10000));
  for (int row=0; row < 1000; row++) {
    Map<String,Double> test=new HashMap<String,Double>();
    for (int i=0; i < 10; i++) {
      test.put("hi" + i,2.0);
    }
    writer.addRow(new MapStruct(test));
  }
  writer.close();
  assertEquals(1000,writer.getNumberOfRows());
  assertEquals(950000,writer.getRawDataSize());
  Reader reader=OrcFile.createReader(testFilePath,OrcFile.readerOptions(conf).filesystem(fs));
  assertEquals(1000,reader.getNumberOfRows());
  assertEquals(950000,reader.getRawDataSize());
  assertEquals(950000,reader.getRawDataSizeOfColumns(Lists.newArrayList("map1")));
}
