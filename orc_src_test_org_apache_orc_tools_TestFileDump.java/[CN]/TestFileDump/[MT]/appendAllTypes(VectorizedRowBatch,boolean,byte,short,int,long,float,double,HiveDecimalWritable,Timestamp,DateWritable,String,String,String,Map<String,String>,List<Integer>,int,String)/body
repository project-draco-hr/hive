{
  int row=batch.size++;
  ((LongColumnVector)batch.cols[0]).vector[row]=b ? 1 : 0;
  ((LongColumnVector)batch.cols[1]).vector[row]=bt;
  ((LongColumnVector)batch.cols[2]).vector[row]=s;
  ((LongColumnVector)batch.cols[3]).vector[row]=i;
  ((LongColumnVector)batch.cols[4]).vector[row]=l;
  ((DoubleColumnVector)batch.cols[5]).vector[row]=f;
  ((DoubleColumnVector)batch.cols[6]).vector[row]=d;
  ((DecimalColumnVector)batch.cols[7]).vector[row].set(de);
  ((TimestampColumnVector)batch.cols[8]).set(row,t);
  ((LongColumnVector)batch.cols[9]).vector[row]=dt.getDays();
  ((BytesColumnVector)batch.cols[10]).setVal(row,str.getBytes());
  ((BytesColumnVector)batch.cols[11]).setVal(row,c.getBytes());
  ((BytesColumnVector)batch.cols[12]).setVal(row,vc.getBytes());
  MapColumnVector map=(MapColumnVector)batch.cols[13];
  int offset=map.childCount;
  map.offsets[row]=offset;
  map.lengths[row]=m.size();
  map.childCount+=map.lengths[row];
  for (  Map.Entry<String,String> entry : m.entrySet()) {
    ((BytesColumnVector)map.keys).setVal(offset,entry.getKey().getBytes());
    ((BytesColumnVector)map.values).setVal(offset++,entry.getValue().getBytes());
  }
  ListColumnVector list=(ListColumnVector)batch.cols[14];
  offset=list.childCount;
  list.offsets[row]=offset;
  list.lengths[row]=a.size();
  list.childCount+=list.lengths[row];
  for (int e=0; e < a.size(); ++e) {
    ((LongColumnVector)list.child).vector[offset + e]=a.get(e);
  }
  StructColumnVector struct=(StructColumnVector)batch.cols[15];
  ((LongColumnVector)struct.fields[0]).vector[row]=sti;
  ((BytesColumnVector)struct.fields[1]).setVal(row,sts.getBytes());
}
