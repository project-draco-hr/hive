{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
          org.apache.thrift.protocol.TList _list278=iprot.readListBegin();
          struct.colStats=new ArrayList<ColumnStatisticsObj>(_list278.size);
          for (int _i279=0; _i279 < _list278.size; ++_i279) {
            ColumnStatisticsObj _elem280;
            _elem280=new ColumnStatisticsObj();
            _elem280.read(iprot);
            struct.colStats.add(_elem280);
          }
          iprot.readListEnd();
        }
        struct.setColStatsIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
    struct.partsFound=iprot.readI64();
    struct.setPartsFoundIsSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
