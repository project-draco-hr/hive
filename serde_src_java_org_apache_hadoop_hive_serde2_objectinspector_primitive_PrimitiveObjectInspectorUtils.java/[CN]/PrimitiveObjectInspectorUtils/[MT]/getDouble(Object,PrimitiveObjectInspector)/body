{
  double result=0;
switch (oi.getPrimitiveCategory()) {
case VOID:
    result=0;
  break;
case BOOLEAN:
result=(((BooleanObjectInspector)oi).get(o) ? 1 : 0);
break;
case BYTE:
result=((ByteObjectInspector)oi).get(o);
break;
case SHORT:
result=((ShortObjectInspector)oi).get(o);
break;
case INT:
result=((IntObjectInspector)oi).get(o);
break;
case LONG:
result=((LongObjectInspector)oi).get(o);
break;
case FLOAT:
result=((FloatObjectInspector)oi).get(o);
break;
case DOUBLE:
result=((DoubleObjectInspector)oi).get(o);
break;
case STRING:
StringObjectInspector soi=(StringObjectInspector)oi;
String s=soi.getPrimitiveJavaObject(o);
result=Double.parseDouble(s);
break;
case TIMESTAMP:
result=((TimestampObjectInspector)oi).getPrimitiveWritableObject(o).getDouble();
break;
case DECIMAL:
result=((HiveDecimalObjectInspector)oi).getPrimitiveJavaObject(o).doubleValue();
break;
case DATE:
default :
throw new RuntimeException("Hive 2 Internal error: unsupported conversion from type: " + oi.getTypeName());
}
return result;
}
