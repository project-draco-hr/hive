{
  if (o == null) {
    return null;
  }
  Date result=null;
switch (oi.getPrimitiveCategory()) {
case VOID:
    result=null;
  break;
case STRING:
StringObjectInspector soi=(StringObjectInspector)oi;
String s=soi.getPrimitiveJavaObject(o).trim();
try {
result=Date.valueOf(s);
}
 catch (IllegalArgumentException e) {
result=null;
}
break;
case CHAR:
case VARCHAR:
{
try {
String val=getString(o,oi).trim();
result=Date.valueOf(val);
}
 catch (IllegalArgumentException e) {
result=null;
}
break;
}
case DATE:
result=((DateObjectInspector)oi).getPrimitiveWritableObject(o).get();
break;
case TIMESTAMP:
result=DateWritable.timeToDate(((TimestampObjectInspector)oi).getPrimitiveWritableObject(o).getSeconds());
break;
default :
throw new RuntimeException("Cannot convert to Date from: " + oi.getTypeName());
}
return result;
}
