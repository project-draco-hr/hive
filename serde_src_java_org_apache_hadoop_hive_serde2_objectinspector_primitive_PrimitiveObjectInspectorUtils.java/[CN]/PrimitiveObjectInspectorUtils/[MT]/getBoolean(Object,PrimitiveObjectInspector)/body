{
  boolean result=false;
switch (oi.getPrimitiveCategory()) {
case VOID:
    result=false;
  break;
case BOOLEAN:
result=((BooleanObjectInspector)oi).get(o);
break;
case BYTE:
result=((ByteObjectInspector)oi).get(o) != 0;
break;
case SHORT:
result=((ShortObjectInspector)oi).get(o) != 0;
break;
case INT:
result=((IntObjectInspector)oi).get(o) != 0;
break;
case LONG:
result=(int)((LongObjectInspector)oi).get(o) != 0;
break;
case FLOAT:
result=(int)((FloatObjectInspector)oi).get(o) != 0;
break;
case DOUBLE:
result=(int)((DoubleObjectInspector)oi).get(o) != 0;
break;
case STRING:
StringObjectInspector soi=(StringObjectInspector)oi;
if (soi.preferWritable()) {
Text t=soi.getPrimitiveWritableObject(o);
result=t.getLength() != 0;
}
 else {
String s=soi.getPrimitiveJavaObject(o);
result=s.length() != 0;
}
break;
case TIMESTAMP:
result=(((TimestampObjectInspector)oi).getPrimitiveWritableObject(o).getSeconds() != 0);
break;
case DECIMAL:
result=HiveDecimal.ZERO.compareTo(((HiveDecimalObjectInspector)oi).getPrimitiveJavaObject(o)) != 0;
break;
case DATE:
default :
throw new RuntimeException("Hive 2 Internal error: unsupported conversion from type: " + oi.getTypeName());
}
return result;
}
