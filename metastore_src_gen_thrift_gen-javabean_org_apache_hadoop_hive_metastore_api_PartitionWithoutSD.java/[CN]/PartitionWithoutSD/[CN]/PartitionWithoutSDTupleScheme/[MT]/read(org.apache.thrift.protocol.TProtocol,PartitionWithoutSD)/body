{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(6);
  if (incoming.get(0)) {
{
      org.apache.thrift.protocol.TList _list237=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.values=new ArrayList<String>(_list237.size);
      for (int _i238=0; _i238 < _list237.size; ++_i238) {
        String _elem239;
        _elem239=iprot.readString();
        struct.values.add(_elem239);
      }
    }
    struct.setValuesIsSet(true);
  }
  if (incoming.get(1)) {
    struct.createTime=iprot.readI32();
    struct.setCreateTimeIsSet(true);
  }
  if (incoming.get(2)) {
    struct.lastAccessTime=iprot.readI32();
    struct.setLastAccessTimeIsSet(true);
  }
  if (incoming.get(3)) {
    struct.relativePath=iprot.readString();
    struct.setRelativePathIsSet(true);
  }
  if (incoming.get(4)) {
{
      org.apache.thrift.protocol.TMap _map240=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.parameters=new HashMap<String,String>(2 * _map240.size);
      for (int _i241=0; _i241 < _map240.size; ++_i241) {
        String _key242;
        String _val243;
        _key242=iprot.readString();
        _val243=iprot.readString();
        struct.parameters.put(_key242,_val243);
      }
    }
    struct.setParametersIsSet(true);
  }
  if (incoming.get(5)) {
    struct.privileges=new PrincipalPrivilegeSet();
    struct.privileges.read(iprot);
    struct.setPrivilegesIsSet(true);
  }
}
