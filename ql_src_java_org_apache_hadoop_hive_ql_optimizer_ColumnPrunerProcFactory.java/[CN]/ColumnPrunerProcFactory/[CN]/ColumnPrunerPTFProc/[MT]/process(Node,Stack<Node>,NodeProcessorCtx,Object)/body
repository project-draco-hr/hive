{
  ColumnPrunerProcCtx cppCtx=(ColumnPrunerProcCtx)ctx;
  PTFOperator op=(PTFOperator)nd;
  PTFDesc conf=op.getConf();
  if (!conf.forWindowing() && !Noop.class.isInstance(conf.getFuncDef().getTFunction())) {
    return super.process(nd,stack,cppCtx,nodeOutputs);
  }
  List<String> prunedCols=cppCtx.getPrunedColList(op.getChildOperators().get(0));
  WindowTableFunctionDef def=null;
  if (conf.forWindowing()) {
    def=(WindowTableFunctionDef)conf.getFuncDef();
    prunedCols=prunedColumnsList(prunedCols,def);
  }
  RowSchema oldRS=op.getSchema();
  ArrayList<ColumnInfo> sig=buildPrunedRR(prunedCols,oldRS);
  op.getSchema().setSignature(sig);
  prunedCols=def == null ? prunedCols : prunedInputList(prunedCols,def);
  cppCtx.getPrunedColLists().put(op,prunedCols);
  return null;
}
