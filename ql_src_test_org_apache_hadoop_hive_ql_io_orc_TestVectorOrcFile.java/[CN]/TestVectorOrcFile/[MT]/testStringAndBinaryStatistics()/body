{
  TypeDescription schema=TypeDescription.createStruct().addField("bytes1",TypeDescription.createBinary()).addField("string1",TypeDescription.createString());
  Writer writer=OrcFile.createWriter(testFilePath,OrcFile.writerOptions(conf).setSchema(schema).stripeSize(100000).bufferSize(10000));
  VectorizedRowBatch batch=schema.createRowBatch();
  batch.size=4;
  BytesColumnVector field1=(BytesColumnVector)batch.cols[0];
  BytesColumnVector field2=(BytesColumnVector)batch.cols[1];
  field1.setVal(0,bytesArray(0,1,2,3,4));
  field1.setVal(1,bytesArray(0,1,2,3));
  field1.setVal(2,bytesArray(0,1,2,3,4,5));
  field1.noNulls=false;
  field1.isNull[3]=true;
  field2.setVal(0,"foo".getBytes());
  field2.setVal(1,"bar".getBytes());
  field2.noNulls=false;
  field2.isNull[2]=true;
  field2.setVal(3,"hi".getBytes());
  writer.addRowBatch(batch);
  writer.close();
  schema=writer.getSchema();
  assertEquals(2,schema.getMaximumId());
  Reader reader=OrcFile.createReader(testFilePath,OrcFile.readerOptions(conf).filesystem(fs));
  boolean[] expected=new boolean[]{false,false,true};
  boolean[] included=OrcUtils.includeColumns("string1",schema);
  assertEquals(true,Arrays.equals(expected,included));
  expected=new boolean[]{false,false,false};
  included=OrcUtils.includeColumns("",schema);
  assertEquals(true,Arrays.equals(expected,included));
  expected=new boolean[]{false,false,false};
  included=OrcUtils.includeColumns(null,schema);
  assertEquals(true,Arrays.equals(expected,included));
  ColumnStatistics[] stats=reader.getStatistics();
  assertEquals(4,stats[0].getNumberOfValues());
  assertEquals("count: 4 hasNull: false",stats[0].toString());
  assertEquals(3,stats[1].getNumberOfValues());
  assertEquals(15,((BinaryColumnStatistics)stats[1]).getSum());
  assertEquals("count: 3 hasNull: true sum: 15",stats[1].toString());
  assertEquals(3,stats[2].getNumberOfValues());
  assertEquals("bar",((StringColumnStatistics)stats[2]).getMinimum());
  assertEquals("hi",((StringColumnStatistics)stats[2]).getMaximum());
  assertEquals(8,((StringColumnStatistics)stats[2]).getSum());
  assertEquals("count: 3 hasNull: true min: bar max: hi sum: 8",stats[2].toString());
  batch=reader.getSchema().createRowBatch();
  BytesColumnVector bytes=(BytesColumnVector)batch.cols[0];
  BytesColumnVector strs=(BytesColumnVector)batch.cols[1];
  RecordReader rows=reader.rows();
  assertEquals(true,rows.nextBatch(batch));
  assertEquals(4,batch.size);
  assertEquals(bytes(0,1,2,3,4),getBinary(bytes,0));
  assertEquals("foo",strs.toString(0));
  assertEquals(bytes(0,1,2,3),getBinary(bytes,1));
  assertEquals("bar",strs.toString(1));
  assertEquals(bytes(0,1,2,3,4,5),getBinary(bytes,2));
  assertNull(strs.toString(2));
  assertNull(getBinary(bytes,3));
  assertEquals("hi",strs.toString(3));
  assertEquals(false,rows.hasNext());
  rows.close();
}
