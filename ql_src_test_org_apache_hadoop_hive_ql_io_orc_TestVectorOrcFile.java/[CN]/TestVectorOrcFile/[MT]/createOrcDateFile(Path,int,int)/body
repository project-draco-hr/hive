{
  TypeDescription schema=TypeDescription.createStruct().addField("time",TypeDescription.createTimestamp()).addField("date",TypeDescription.createDate());
  Writer writer=OrcFile.createWriter(file,OrcFile.writerOptions(conf).setSchema(schema).stripeSize(100000).bufferSize(10000).blockPadding(false));
  VectorizedRowBatch batch=schema.createRowBatch();
  batch.size=1000;
  for (int year=minYear; year < maxYear; ++year) {
    for (int ms=1000; ms < 2000; ++ms) {
      TimestampColumnVector timestampColVector=(TimestampColumnVector)batch.cols[0];
      timestampColVector.set(ms - 1000,new PisaTimestamp(Timestamp.valueOf(year + "-05-05 12:34:56." + ms)));
      ((LongColumnVector)batch.cols[1]).vector[ms - 1000]=new DateWritable(new Date(year - 1900,11,25)).getDays();
    }
    writer.addRowBatch(batch);
  }
  writer.close();
  Reader reader=OrcFile.createReader(file,OrcFile.readerOptions(conf));
  RecordReader rows=reader.rows();
  OrcStruct row=null;
  for (int year=minYear; year < maxYear; ++year) {
    for (int ms=1000; ms < 2000; ++ms) {
      row=(OrcStruct)rows.next(row);
      assertEquals(new TimestampWritable(Timestamp.valueOf(year + "-05-05 12:34:56." + ms)),row.getFieldValue(0));
      assertEquals(new DateWritable(new Date(year - 1900,11,25)),row.getFieldValue(1));
    }
  }
}
