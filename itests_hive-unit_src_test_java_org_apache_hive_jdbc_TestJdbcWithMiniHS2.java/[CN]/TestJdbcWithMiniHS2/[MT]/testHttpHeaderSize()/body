{
  if (miniHS2.isStarted()) {
    miniHS2.stop();
  }
  HiveConf conf=new HiveConf();
  conf.set("hive.server2.transport.mode","http");
  conf.setInt("hive.server2.thrift.http.request.header.size",1024);
  conf.setInt("hive.server2.thrift.http.response.header.size",1024);
  miniHS2=new MiniHS2(conf);
  Map<String,String> confOverlay=new HashMap<String,String>();
  miniHS2.start(confOverlay);
  String userName=StringUtils.leftPad("*",100);
  try {
    hs2Conn=getConnection(miniHS2.getJdbcURL(),userName,"password");
  }
 catch (  Exception e) {
    fail("Not expecting exception: " + e);
  }
 finally {
    if (hs2Conn != null) {
      hs2Conn.close();
    }
  }
  userName=StringUtils.leftPad("*",2000);
  try {
    hs2Conn=getConnection(miniHS2.getJdbcURL(),userName,"password");
  }
 catch (  Exception e) {
    assertTrue("Header exception thrown",e != null);
    assertTrue(e.getMessage().contains("HTTP Response code: 413"));
  }
 finally {
    if (hs2Conn != null) {
      hs2Conn.close();
    }
  }
  if (miniHS2.isStarted()) {
    miniHS2.stop();
  }
  conf.setInt("hive.server2.thrift.http.request.header.size",3000);
  conf.setInt("hive.server2.thrift.http.response.header.size",3000);
  miniHS2=new MiniHS2(conf);
  miniHS2.start(confOverlay);
  try {
    hs2Conn=getConnection(miniHS2.getJdbcURL(),userName,"password");
  }
 catch (  Exception e) {
    fail("Not expecting exception: " + e);
  }
 finally {
    if (hs2Conn != null) {
      hs2Conn.close();
    }
  }
}
