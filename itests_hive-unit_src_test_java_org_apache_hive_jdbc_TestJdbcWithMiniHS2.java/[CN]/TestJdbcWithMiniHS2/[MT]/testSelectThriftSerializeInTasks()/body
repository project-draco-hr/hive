{
  if (miniHS2.isStarted()) {
    miniHS2.stop();
  }
  HiveConf conf=new HiveConf();
  String userName;
  setSerializeInTasksInConf(conf);
  miniHS2=new MiniHS2(conf);
  Map<String,String> confOverlay=new HashMap<String,String>();
  miniHS2.start(confOverlay);
  userName=System.getProperty("user.name");
  hs2Conn=getConnection(miniHS2.getJdbcURL(),userName,"password");
  Statement stmt=hs2Conn.createStatement();
  stmt.execute("drop table if exists testSelectThriftOrders");
  stmt.execute("drop table if exists testSelectThriftCustomers");
  stmt.execute("create table testSelectThriftOrders (orderid int, orderdate string, customerid int)");
  stmt.execute("create table testSelectThriftCustomers (customerid int, customername string, customercountry string)");
  stmt.execute("insert into testSelectThriftOrders values (1, '2015-09-09', 123), (2, '2015-10-10', 246), (3, '2015-11-11', 356)");
  stmt.execute("insert into testSelectThriftCustomers values (123, 'David', 'America'), (246, 'John', 'Canada'), (356, 'Mary', 'CostaRica')");
  ResultSet countOrders=stmt.executeQuery("select count(*) from testSelectThriftOrders");
  while (countOrders.next()) {
    assertEquals(3,countOrders.getInt(1));
  }
  ResultSet maxOrders=stmt.executeQuery("select max(customerid) from testSelectThriftCustomers");
  while (maxOrders.next()) {
    assertEquals(356,maxOrders.getInt(1));
  }
  stmt.execute("drop table testSelectThriftOrders");
  stmt.execute("drop table testSelectThriftCustomers");
  stmt.close();
}
