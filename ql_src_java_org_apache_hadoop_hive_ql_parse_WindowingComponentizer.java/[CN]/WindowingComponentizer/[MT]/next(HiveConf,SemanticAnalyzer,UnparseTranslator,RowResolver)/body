{
  SemanticException originalException=null;
  Iterator<Map.Entry<PartitioningSpec,WindowingSpec>> grpIt=groups.entrySet().iterator();
  while (grpIt.hasNext()) {
    Map.Entry<PartitioningSpec,WindowingSpec> entry=grpIt.next();
    WindowingSpec wSpec=entry.getValue();
    try {
      PTFTranslator t=new PTFTranslator();
      t.translate(wSpec,semAly,hCfg,inputRR,unparseT);
      groups.remove(entry.getKey());
      return wSpec;
    }
 catch (    SemanticException se) {
      originalException=se;
    }
  }
  throw new SemanticException("Failed to breakup Windowing invocations into Groups. " + "At least 1 group must only depend on input columns. " + "Also check for circular dependencies.\n"+ "Underlying error: "+ originalException.getMessage());
}
