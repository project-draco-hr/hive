{
  StringBuilder builder=new StringBuilder();
  String hbaseColumnMapping=tableInfo.getStorerInfo().getProperties().getProperty(HBaseConstants.PROPERTY_COLUMN_MAPPING_KEY);
  if (outputColSchema == null) {
    String[] splits=hbaseColumnMapping.split("[,]");
    for (int i=0; i < splits.length; i++) {
      if (!splits[i].equals(HBaseSerDe.HBASE_KEY_COL))       builder.append(splits[i]).append(" ");
    }
  }
 else {
    HCatSchema outputSchema=(HCatSchema)HCatUtil.deserialize(outputColSchema);
    HCatSchema tableSchema=tableInfo.getDataColumns();
    List<String> outputFieldNames=outputSchema.getFieldNames();
    List<Integer> outputColumnMapping=new ArrayList<Integer>();
    for (    String fieldName : outputFieldNames) {
      int position=tableSchema.getPosition(fieldName);
      outputColumnMapping.add(position);
    }
    List<String> columnFamilies=new ArrayList<String>();
    List<String> columnQualifiers=new ArrayList<String>();
    HBaseUtil.parseColumnMapping(hbaseColumnMapping,columnFamilies,null,columnQualifiers,null);
    for (int i=0; i < outputColumnMapping.size(); i++) {
      int cfIndex=outputColumnMapping.get(i);
      String cf=columnFamilies.get(cfIndex);
      if (cf.equals(HBaseSerDe.HBASE_KEY_COL) == false) {
        String qualifier=columnQualifiers.get(i);
        builder.append(cf);
        builder.append(":");
        if (qualifier != null) {
          builder.append(qualifier);
        }
        builder.append(" ");
      }
    }
  }
  builder.deleteCharAt(builder.length() - 1);
  return builder.toString();
}
