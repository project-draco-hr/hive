{
  try {
    if (!exception) {
      FileStatus fss=fs.getFileStatus(outPath);
      if (!fs.rename(outPath,finalPath)) {
        throw new IOException("Unable to rename " + outPath + " to "+ finalPath);
      }
      LOG.info("renamed path " + outPath + " to "+ finalPath+ " . File"+ " size is "+ fss.getLen());
      if (!incompatFileSet.isEmpty()) {
        for (        Path incompatFile : incompatFileSet) {
          String fileName=incompatFile.getName();
          Path destFile=new Path(finalPath.getParent(),fileName);
          try {
            Utilities.renameOrMoveFiles(fs,incompatFile,destFile);
            LOG.info("Moved incompatible file " + incompatFile + " to "+ destFile);
          }
 catch (          HiveException e) {
            LOG.error("Unable to move " + incompatFile + " to "+ destFile);
            throw new IOException(e);
          }
        }
      }
    }
 else {
      if (!autoDelete) {
        fs.delete(outPath,true);
      }
    }
  }
 catch (  IOException e) {
    throw new HiveException("Failed to close AbstractFileMergeOperator",e);
  }
}
