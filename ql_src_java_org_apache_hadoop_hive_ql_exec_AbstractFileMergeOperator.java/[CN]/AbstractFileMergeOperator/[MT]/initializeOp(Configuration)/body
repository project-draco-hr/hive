{
  Collection<Future<?>> result=super.initializeOp(hconf);
  this.jc=new JobConf(hconf);
  incompatFileSet=new HashSet<Path>();
  autoDelete=false;
  exception=false;
  tmpPathFixed=false;
  tmpPathFixedConcatenate=false;
  outPath=null;
  finalPath=null;
  dpPath=null;
  tmpPath=null;
  taskTmpPath=null;
  dpCtx=conf.getDpCtx();
  hasDynamicPartitions=conf.hasDynamicPartitions();
  isListBucketingAlterTableConcatenate=conf.isListBucketingAlterTableConcatenate();
  listBucketingDepth=conf.getListBucketingDepth();
  Path specPath=conf.getOutputPath();
  updatePaths(Utilities.toTempPath(specPath),Utilities.toTaskTempPath(specPath));
  try {
    fs=specPath.getFileSystem(hconf);
    autoDelete=fs.deleteOnExit(outPath);
  }
 catch (  IOException e) {
    this.exception=true;
    throw new HiveException("Failed to initialize AbstractFileMergeOperator",e);
  }
  return result;
}
