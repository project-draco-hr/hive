{
  ReadWriteLock dagLock=getDagLock(queryIdentifier);
  dagLock.readLock().lock();
  try {
    if (completedDagMap.contains(queryIdentifier)) {
      dagSpecificLocks.remove(queryIdentifier);
      throw new RuntimeException("Dag " + dagName + " already complete. Rejecting fragment ["+ vertexName+ ", "+ fragmentNumber+ ", "+ attemptNumber+ "]");
    }
    if (tokenInfo == null) {
      tokenInfo=LlapTokenChecker.getTokenInfo(clusterId);
    }
    boolean isExistingQueryInfo=true;
    QueryInfo queryInfo=queryInfoMap.get(queryIdentifier);
    if (queryInfo == null) {
      if (UserGroupInformation.isSecurityEnabled()) {
        Preconditions.checkNotNull(tokenInfo.userName);
      }
      queryInfo=new QueryInfo(queryIdentifier,appIdString,dagIdString,dagName,hiveQueryIdString,dagIdentifier,user,getSourceCompletionMap(queryIdentifier),localDirsBase,localFs,tokenInfo.userName,tokenInfo.appId);
      QueryInfo old=queryInfoMap.putIfAbsent(queryIdentifier,queryInfo);
      if (old != null) {
        queryInfo=old;
      }
 else {
        isExistingQueryInfo=false;
      }
    }
    if (isExistingQueryInfo) {
      LlapTokenChecker.checkPermissions(tokenInfo,queryInfo.getTokenUserName(),queryInfo.getTokenAppId(),queryInfo.getQueryIdentifier());
    }
    queryIdentifierToHiveQueryId.putIfAbsent(queryIdentifier,hiveQueryIdString);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Registering request for {} with the ShuffleHandler",queryIdentifier);
    }
    ShuffleHandler.get().registerDag(appIdString,dagIdentifier,appToken,user,queryInfo.getLocalDirs());
    return queryInfo.registerFragment(vertexName,fragmentNumber,attemptNumber,vertex,fragmentIdString);
  }
  finally {
    dagLock.readLock().unlock();
  }
}
