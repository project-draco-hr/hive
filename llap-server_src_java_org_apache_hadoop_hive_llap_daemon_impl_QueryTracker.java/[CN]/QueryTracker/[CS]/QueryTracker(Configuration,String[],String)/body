{
  super("QueryTracker");
  this.localDirsBase=localDirsBase;
  this.clusterId=clusterId;
  try {
    localFs=FileSystem.getLocal(conf);
  }
 catch (  IOException e) {
    throw new RuntimeException("Failed to setup local filesystem instance",e);
  }
  this.defaultDeleteDelaySeconds=HiveConf.getTimeVar(conf,ConfVars.LLAP_FILE_CLEANUP_DELAY_SECONDS,TimeUnit.SECONDS);
  int numCleanerThreads=HiveConf.getIntVar(conf,ConfVars.LLAP_DAEMON_NUM_FILE_CLEANER_THREADS);
  this.executorService=Executors.newScheduledThreadPool(numCleanerThreads,new ThreadFactoryBuilder().setDaemon(true).setNameFormat("QueryFileCleaner %d").build());
  String logger=HiveConf.getVar(conf,ConfVars.LLAP_DAEMON_LOGGER);
  if (logger != null && (logger.equalsIgnoreCase(LogHelpers.LLAP_LOGGER_NAME_QUERY_ROUTING))) {
    routeBasedLoggingEnabled=true;
  }
 else {
    routeBasedLoggingEnabled=false;
  }
  LOG.info("QueryTracker setup with numCleanerThreads={}, defaultCleanupDelay(s)={}, routeBasedLogging={}",numCleanerThreads,defaultDeleteDelaySeconds,routeBasedLoggingEnabled);
}
