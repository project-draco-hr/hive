{
  long now=System.currentTimeMillis();
  String dbname="default";
  String tableName="statspart";
  String[] partNames={"ds=today","ds=yesterday"};
  String[] partVals={"today","yesterday"};
  String boolcol="boolcol";
  String longcol="longcol";
  String doublecol="doublecol";
  String stringcol="stringcol";
  String binarycol="bincol";
  String decimalcol="deccol";
  long trues=37;
  long falses=12;
  long booleanNulls=2;
  long strMaxLen=1234;
  double strAvgLen=32.3;
  long strNulls=987;
  long strDVs=906;
  List<FieldSchema> cols=new ArrayList<FieldSchema>();
  cols.add(new FieldSchema(boolcol,"boolean","nocomment"));
  cols.add(new FieldSchema(longcol,"long","nocomment"));
  cols.add(new FieldSchema(doublecol,"double","nocomment"));
  cols.add(new FieldSchema(stringcol,"varchar(32)","nocomment"));
  cols.add(new FieldSchema(binarycol,"binary","nocomment"));
  cols.add(new FieldSchema(decimalcol,"decimal(5, 3)","nocomment"));
  SerDeInfo serde=new SerDeInfo("serde","seriallib",null);
  StorageDescriptor sd=new StorageDescriptor(cols,"file:/tmp","input","output",false,0,serde,null,null,emptyParameters);
  List<FieldSchema> partCols=new ArrayList<FieldSchema>();
  partCols.add(new FieldSchema("ds","string",""));
  Table table=new Table(tableName,dbname,"me",(int)now / 1000,(int)now / 1000,0,sd,partCols,emptyParameters,null,null,null);
  store.createTable(table);
  for (int i=0; i < partNames.length; i++) {
    ColumnStatistics stats=new ColumnStatistics();
    ColumnStatisticsDesc desc=new ColumnStatisticsDesc();
    desc.setLastAnalyzed(now);
    desc.setDbName(dbname);
    desc.setTableName(tableName);
    desc.setIsTblLevel(false);
    desc.setPartName(partNames[i]);
    stats.setStatsDesc(desc);
    ColumnStatisticsObj obj=new ColumnStatisticsObj();
    obj.setColName(boolcol);
    obj.setColType("boolean");
    ColumnStatisticsData data=new ColumnStatisticsData();
    BooleanColumnStatsData boolData=new BooleanColumnStatsData();
    boolData.setNumTrues(trues);
    boolData.setNumFalses(falses);
    boolData.setNumNulls(booleanNulls);
    data.setBooleanStats(boolData);
    obj.setStatsData(data);
    stats.addToStatsObj(obj);
    store.updatePartitionColumnStatistics(stats,Arrays.asList(partVals[i]));
  }
  List<ColumnStatistics> statsList=store.getPartitionColumnStatistics(dbname,tableName,Arrays.asList(partNames),Arrays.asList(boolcol));
  Assert.assertEquals(2,statsList.size());
  for (int i=0; i < partNames.length; i++) {
    Assert.assertEquals(1,statsList.get(i).getStatsObjSize());
  }
  for (int i=0; i < partNames.length; i++) {
    ColumnStatistics stats=new ColumnStatistics();
    ColumnStatisticsDesc desc=new ColumnStatisticsDesc();
    desc.setLastAnalyzed(now);
    desc.setDbName(dbname);
    desc.setTableName(tableName);
    desc.setIsTblLevel(false);
    desc.setPartName(partNames[i]);
    stats.setStatsDesc(desc);
    ColumnStatisticsObj obj=new ColumnStatisticsObj();
    obj.setColName(stringcol);
    obj.setColType("string");
    ColumnStatisticsData data=new ColumnStatisticsData();
    StringColumnStatsData strData=new StringColumnStatsData();
    strData.setMaxColLen(strMaxLen);
    strData.setAvgColLen(strAvgLen);
    strData.setNumNulls(strNulls);
    strData.setNumDVs(strDVs);
    data.setStringStats(strData);
    obj.setStatsData(data);
    stats.addToStatsObj(obj);
    store.updatePartitionColumnStatistics(stats,Arrays.asList(partVals[i]));
  }
  statsList=store.getPartitionColumnStatistics(dbname,tableName,Arrays.asList(partNames),Arrays.asList(boolcol));
  Assert.assertEquals(2,statsList.size());
  for (int i=0; i < partNames.length; i++) {
    Assert.assertEquals(1,statsList.get(i).getStatsObjSize());
  }
  statsList=store.getPartitionColumnStatistics(dbname,tableName,Arrays.asList(partNames),Arrays.asList(boolcol,stringcol));
  Assert.assertEquals(2,statsList.size());
  for (int i=0; i < partNames.length; i++) {
    Assert.assertEquals(2,statsList.get(i).getStatsObjSize());
    Assert.assertEquals(booleanNulls,statsList.get(i).getStatsObj().get(0).getStatsData().getBooleanStats().getNumNulls());
    Assert.assertEquals(strDVs,statsList.get(i).getStatsObj().get(1).getStatsData().getStringStats().getNumDVs());
  }
}
