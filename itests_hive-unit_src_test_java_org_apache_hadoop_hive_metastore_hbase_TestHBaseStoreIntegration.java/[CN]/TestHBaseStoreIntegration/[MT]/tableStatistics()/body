{
  long now=System.currentTimeMillis();
  String dbname="default";
  String tableName="statstable";
  String boolcol="boolcol";
  String longcol="longcol";
  String doublecol="doublecol";
  String stringcol="stringcol";
  String binarycol="bincol";
  String decimalcol="deccol";
  long trues=37;
  long falses=12;
  long booleanNulls=2;
  long longHigh=120938479124L;
  long longLow=-12341243213412124L;
  long longNulls=23;
  long longDVs=213L;
  double doubleHigh=123423.23423;
  double doubleLow=0.00001234233;
  long doubleNulls=92;
  long doubleDVs=1234123421L;
  long strMaxLen=1234;
  double strAvgLen=32.3;
  long strNulls=987;
  long strDVs=906;
  long binMaxLen=123412987L;
  double binAvgLen=76.98;
  long binNulls=976998797L;
  Decimal decHigh=new Decimal();
  decHigh.setScale((short)3);
  decHigh.setUnscaled("3876".getBytes());
  Decimal decLow=new Decimal();
  decLow.setScale((short)3);
  decLow.setUnscaled("38".getBytes());
  long decNulls=13;
  long decDVs=923947293L;
  List<FieldSchema> cols=new ArrayList<FieldSchema>();
  cols.add(new FieldSchema(boolcol,"boolean","nocomment"));
  cols.add(new FieldSchema(longcol,"long","nocomment"));
  cols.add(new FieldSchema(doublecol,"double","nocomment"));
  cols.add(new FieldSchema(stringcol,"varchar(32)","nocomment"));
  cols.add(new FieldSchema(binarycol,"binary","nocomment"));
  cols.add(new FieldSchema(decimalcol,"decimal(5, 3)","nocomment"));
  SerDeInfo serde=new SerDeInfo("serde","seriallib",null);
  StorageDescriptor sd=new StorageDescriptor(cols,"file:/tmp","input","output",false,0,serde,null,null,emptyParameters);
  Table table=new Table(tableName,dbname,"me",(int)now / 1000,(int)now / 1000,0,sd,null,emptyParameters,null,null,null);
  store.createTable(table);
  ColumnStatistics stats=new ColumnStatistics();
  ColumnStatisticsDesc desc=new ColumnStatisticsDesc();
  desc.setLastAnalyzed(now);
  desc.setDbName(dbname);
  desc.setTableName(tableName);
  desc.setIsTblLevel(true);
  stats.setStatsDesc(desc);
  ColumnStatisticsObj obj=new ColumnStatisticsObj();
  obj.setColName(boolcol);
  obj.setColType("boolean");
  ColumnStatisticsData data=new ColumnStatisticsData();
  BooleanColumnStatsData boolData=new BooleanColumnStatsData();
  boolData.setNumTrues(trues);
  boolData.setNumFalses(falses);
  boolData.setNumNulls(booleanNulls);
  data.setBooleanStats(boolData);
  obj.setStatsData(data);
  stats.addToStatsObj(obj);
  obj=new ColumnStatisticsObj();
  obj.setColName(longcol);
  obj.setColType("long");
  data=new ColumnStatisticsData();
  LongColumnStatsData longData=new LongColumnStatsData();
  longData.setHighValue(longHigh);
  longData.setLowValue(longLow);
  longData.setNumNulls(longNulls);
  longData.setNumDVs(longDVs);
  data.setLongStats(longData);
  obj.setStatsData(data);
  stats.addToStatsObj(obj);
  obj=new ColumnStatisticsObj();
  obj.setColName(doublecol);
  obj.setColType("double");
  data=new ColumnStatisticsData();
  DoubleColumnStatsData doubleData=new DoubleColumnStatsData();
  doubleData.setHighValue(doubleHigh);
  doubleData.setLowValue(doubleLow);
  doubleData.setNumNulls(doubleNulls);
  doubleData.setNumDVs(doubleDVs);
  data.setDoubleStats(doubleData);
  obj.setStatsData(data);
  stats.addToStatsObj(obj);
  store.updateTableColumnStatistics(stats);
  stats=store.getTableColumnStatistics(dbname,tableName,Arrays.asList(boolcol,longcol,doublecol));
  Assert.assertEquals(3,stats.getStatsObjSize());
  stats=store.getTableColumnStatistics(dbname,tableName,Arrays.asList(boolcol));
  Assert.assertEquals(1,stats.getStatsObjSize());
  stats=new ColumnStatistics();
  stats.setStatsDesc(desc);
  obj=new ColumnStatisticsObj();
  obj.setColName(stringcol);
  obj.setColType("string");
  data=new ColumnStatisticsData();
  StringColumnStatsData strData=new StringColumnStatsData();
  strData.setMaxColLen(strMaxLen);
  strData.setAvgColLen(strAvgLen);
  strData.setNumNulls(strNulls);
  strData.setNumDVs(strDVs);
  data.setStringStats(strData);
  obj.setStatsData(data);
  stats.addToStatsObj(obj);
  obj=new ColumnStatisticsObj();
  obj.setColName(binarycol);
  obj.setColType("binary");
  data=new ColumnStatisticsData();
  BinaryColumnStatsData binData=new BinaryColumnStatsData();
  binData.setMaxColLen(binMaxLen);
  binData.setAvgColLen(binAvgLen);
  binData.setNumNulls(binNulls);
  data.setBinaryStats(binData);
  obj.setStatsData(data);
  stats.addToStatsObj(obj);
  obj=new ColumnStatisticsObj();
  obj.setColName(decimalcol);
  obj.setColType("decimal(5,3)");
  data=new ColumnStatisticsData();
  DecimalColumnStatsData decData=new DecimalColumnStatsData();
  LOG.debug("Setting decimal high value to " + decHigh.getScale() + " <"+ new String(decHigh.getUnscaled())+ ">");
  decData.setHighValue(decHigh);
  decData.setLowValue(decLow);
  decData.setNumNulls(decNulls);
  decData.setNumDVs(decDVs);
  data.setDecimalStats(decData);
  obj.setStatsData(data);
  stats.addToStatsObj(obj);
  store.updateTableColumnStatistics(stats);
  stats=store.getTableColumnStatistics(dbname,tableName,Arrays.asList(boolcol,longcol,doublecol,stringcol,binarycol,decimalcol));
  Assert.assertEquals(now,stats.getStatsDesc().getLastAnalyzed());
  Assert.assertEquals(dbname,stats.getStatsDesc().getDbName());
  Assert.assertEquals(tableName,stats.getStatsDesc().getTableName());
  Assert.assertTrue(stats.getStatsDesc().isIsTblLevel());
  Assert.assertEquals(6,stats.getStatsObjSize());
  ColumnStatisticsData colData=stats.getStatsObj().get(0).getStatsData();
  Assert.assertEquals(ColumnStatisticsData._Fields.BOOLEAN_STATS,colData.getSetField());
  boolData=colData.getBooleanStats();
  Assert.assertEquals(trues,boolData.getNumTrues());
  Assert.assertEquals(falses,boolData.getNumFalses());
  Assert.assertEquals(booleanNulls,boolData.getNumNulls());
  colData=stats.getStatsObj().get(1).getStatsData();
  Assert.assertEquals(ColumnStatisticsData._Fields.LONG_STATS,colData.getSetField());
  longData=colData.getLongStats();
  Assert.assertEquals(longHigh,longData.getHighValue());
  Assert.assertEquals(longLow,longData.getLowValue());
  Assert.assertEquals(longNulls,longData.getNumNulls());
  Assert.assertEquals(longDVs,longData.getNumDVs());
  colData=stats.getStatsObj().get(2).getStatsData();
  Assert.assertEquals(ColumnStatisticsData._Fields.DOUBLE_STATS,colData.getSetField());
  doubleData=colData.getDoubleStats();
  Assert.assertEquals(doubleHigh,doubleData.getHighValue(),0.01);
  Assert.assertEquals(doubleLow,doubleData.getLowValue(),0.01);
  Assert.assertEquals(doubleNulls,doubleData.getNumNulls());
  Assert.assertEquals(doubleDVs,doubleData.getNumDVs());
  colData=stats.getStatsObj().get(3).getStatsData();
  Assert.assertEquals(ColumnStatisticsData._Fields.STRING_STATS,colData.getSetField());
  strData=colData.getStringStats();
  Assert.assertEquals(strMaxLen,strData.getMaxColLen());
  Assert.assertEquals(strAvgLen,strData.getAvgColLen(),0.01);
  Assert.assertEquals(strNulls,strData.getNumNulls());
  Assert.assertEquals(strDVs,strData.getNumDVs());
  colData=stats.getStatsObj().get(4).getStatsData();
  Assert.assertEquals(ColumnStatisticsData._Fields.BINARY_STATS,colData.getSetField());
  binData=colData.getBinaryStats();
  Assert.assertEquals(binMaxLen,binData.getMaxColLen());
  Assert.assertEquals(binAvgLen,binData.getAvgColLen(),0.01);
  Assert.assertEquals(binNulls,binData.getNumNulls());
  colData=stats.getStatsObj().get(5).getStatsData();
  Assert.assertEquals(ColumnStatisticsData._Fields.DECIMAL_STATS,colData.getSetField());
  decData=colData.getDecimalStats();
  Assert.assertEquals(decHigh,decData.getHighValue());
  Assert.assertEquals(decLow,decData.getLowValue());
  Assert.assertEquals(decNulls,decData.getNumNulls());
  Assert.assertEquals(decDVs,decData.getNumDVs());
}
