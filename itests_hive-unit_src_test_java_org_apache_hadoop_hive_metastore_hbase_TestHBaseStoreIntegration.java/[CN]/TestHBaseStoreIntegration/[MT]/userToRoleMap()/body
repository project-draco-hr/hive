{
  String roleName1="utrm1";
  store.addRole(roleName1,"me");
  String roleName2="utrm2";
  store.addRole(roleName2,"me");
  String user1="wilma";
  String user2="betty";
  Role role1=store.getRole(roleName1);
  Role role2=store.getRole(roleName2);
  store.grantRole(role1,user1,PrincipalType.USER,"bob",PrincipalType.USER,false);
  store.grantRole(role1,roleName2,PrincipalType.ROLE,"admin",PrincipalType.ROLE,true);
  List<String> roles=HBaseReadWrite.getInstance(conf).getUserRoles(user1);
  Assert.assertEquals(2,roles.size());
  String[] roleNames=roles.toArray(new String[roles.size()]);
  Arrays.sort(roleNames);
  Assert.assertArrayEquals(new String[]{roleName1,roleName2},roleNames);
  store.grantRole(role2,user1,PrincipalType.USER,"admin",PrincipalType.ROLE,false);
  store.grantRole(role1,user2,PrincipalType.USER,"bob",PrincipalType.USER,false);
  roles=HBaseReadWrite.getInstance(conf).getUserRoles(user2);
  Assert.assertEquals(2,roles.size());
  roleNames=roles.toArray(new String[roles.size()]);
  Arrays.sort(roleNames);
  Assert.assertArrayEquals(new String[]{roleName1,roleName2},roleNames);
  store.revokeRole(role1,roleName2,PrincipalType.ROLE,false);
  roles=HBaseReadWrite.getInstance(conf).getUserRoles(user1);
  Assert.assertEquals(2,roles.size());
  roleNames=roles.toArray(new String[roles.size()]);
  Arrays.sort(roleNames);
  Assert.assertArrayEquals(new String[]{roleName1,roleName2},roleNames);
  roles=HBaseReadWrite.getInstance(conf).getUserRoles(user2);
  Assert.assertEquals(1,roles.size());
  Assert.assertEquals(roleName1,roles.get(0));
}
