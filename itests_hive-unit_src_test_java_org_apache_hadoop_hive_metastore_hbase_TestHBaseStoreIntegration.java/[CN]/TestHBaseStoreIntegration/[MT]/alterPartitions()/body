{
  String dbName="default";
  String tableName="alterParts";
  int startTime=(int)(System.currentTimeMillis() / 1000);
  List<FieldSchema> cols=new ArrayList<FieldSchema>();
  cols.add(new FieldSchema("col1","int","nocomment"));
  SerDeInfo serde=new SerDeInfo("serde","seriallib",null);
  StorageDescriptor sd=new StorageDescriptor(cols,"file:/tmp","input","output",false,0,serde,null,null,emptyParameters);
  List<FieldSchema> partCols=new ArrayList<FieldSchema>();
  partCols.add(new FieldSchema("pc","string",""));
  Table table=new Table(tableName,dbName,"me",startTime,startTime,0,sd,partCols,emptyParameters,null,null,null);
  store.createTable(table);
  List<String> partVals=Arrays.asList("alan","bob","carl","doug","ethan");
  List<Partition> partitions=new ArrayList<Partition>();
  List<List<String>> allVals=new ArrayList<List<String>>();
  for (  String val : partVals) {
    List<String> vals=new ArrayList<String>();
    allVals.add(vals);
    vals.add(val);
    StorageDescriptor psd=new StorageDescriptor(sd);
    psd.setLocation("file:/tmp/pc=" + val);
    Partition part=new Partition(vals,dbName,tableName,startTime,startTime,psd,emptyParameters);
    partitions.add(part);
  }
  store.addPartitions(dbName,tableName,partitions);
  for (  Partition p : partitions)   p.setLastAccessTime(startTime + 10);
  store.alterPartitions(dbName,tableName,allVals,partitions);
  partitions=store.getPartitions(dbName,tableName,-1);
  for (  Partition part : partitions) {
    Assert.assertEquals(startTime + 10,part.getLastAccessTime());
  }
}
