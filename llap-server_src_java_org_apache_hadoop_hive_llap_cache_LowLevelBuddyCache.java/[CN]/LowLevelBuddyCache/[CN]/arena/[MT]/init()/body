{
  data=ByteBuffer.allocateDirect(maxAllocation);
  int maxMinAllocs=1 << (arenaSizeLog2 - minAllocLog2);
  headers=new byte[maxMinAllocs];
  int allocLog2Diff=maxAllocLog2 - minAllocLog2;
  freeLists=new FreeList[allocLog2Diff];
  for (int i=0; i < maxAllocLog2; ++i) {
    freeLists[i]=new FreeList();
  }
  int maxMaxAllocs=1 << (arenaSizeLog2 - maxAllocLog2), headerIndex=0, headerIncrement=1 << allocLog2Diff;
  freeLists[maxAllocLog2 - 1].listHead=0;
  for (int i=0, offset=0; i < maxMaxAllocs; ++i, offset+=maxAllocation) {
    headers[headerIndex]=(byte)(allocLog2Diff << 1);
    data.putInt(offset,(i == 0) ? -1 : (headerIndex - headerIncrement));
    data.putInt(offset + 4,(i == maxMaxAllocs - 1) ? -1 : (headerIndex + headerIncrement));
    headerIndex+=headerIncrement;
  }
}
