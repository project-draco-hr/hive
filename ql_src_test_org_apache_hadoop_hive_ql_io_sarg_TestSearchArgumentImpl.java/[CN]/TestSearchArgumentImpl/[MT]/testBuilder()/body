{
  SearchArgument sarg=SearchArgumentFactory.newBuilder().startAnd().lessThan("x",PredicateLeaf.Type.LONG,10L).lessThanEquals("y",PredicateLeaf.Type.STRING,"hi").equals("z",PredicateLeaf.Type.FLOAT,1.0).end().build();
  assertEquals("leaf-0 = (LESS_THAN x 10)\n" + "leaf-1 = (LESS_THAN_EQUALS y hi)\n" + "leaf-2 = (EQUALS z 1.0)\n"+ "expr = (and leaf-0 leaf-1 leaf-2)",sarg.toString());
  sarg=SearchArgumentFactory.newBuilder().startNot().startOr().isNull("x",PredicateLeaf.Type.LONG).between("y",PredicateLeaf.Type.LONG,10L,20L).in("z",PredicateLeaf.Type.LONG,1L,2L,3L).nullSafeEquals("a",PredicateLeaf.Type.STRING,"stinger").end().end().build();
  assertEquals("leaf-0 = (IS_NULL x)\n" + "leaf-1 = (BETWEEN y 10 20)\n" + "leaf-2 = (IN z 1 2 3)\n"+ "leaf-3 = (NULL_SAFE_EQUALS a stinger)\n"+ "expr = (and (not leaf-0) (not leaf-1) (not leaf-2) (not leaf-3))",sarg.toString());
}
