{
  SearchArgument sarg=SearchArgumentFactory.newBuilder().startAnd().lessThan("x",new Short((short)22)).lessThan("x1",new Integer(22)).lessThanEquals("y",new HiveChar("hi",10)).equals("z",new Float("0.22")).equals("z1",new Double(0.22)).end().build();
  assertEquals("leaf-0 = (LESS_THAN x 22)\n" + "leaf-1 = (LESS_THAN x1 22)\n" + "leaf-2 = (LESS_THAN_EQUALS y hi)\n"+ "leaf-3 = (EQUALS z 0.22)\n"+ "leaf-4 = (EQUALS z1 0.22)\n"+ "expr = (and leaf-0 leaf-1 leaf-2 leaf-3 leaf-4)",sarg.toString());
  FilterPredicate p=sarg.toFilterPredicate();
  String expected="and(and(and(and(lt(x, 22), lt(x1, 22)), lteq(y, Binary{\"hi\"})), eq(z, " + "0.22)), eq(z1, 0.22))";
  assertEquals(expected,p.toString());
}
