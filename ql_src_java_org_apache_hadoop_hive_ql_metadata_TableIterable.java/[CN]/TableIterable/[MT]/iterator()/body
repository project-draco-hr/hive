{
  return new Iterator<Table>(){
    private final Iterator<String> tableNamesIter=tableNames.iterator();
    private Iterator<org.apache.hadoop.hive.metastore.api.Table> batchIter=null;
    @Override public boolean hasNext(){
      return ((batchIter != null) && batchIter.hasNext()) || tableNamesIter.hasNext();
    }
    @Override public Table next(){
      if ((batchIter == null) || !batchIter.hasNext()) {
        getNextBatch();
      }
      return batchIter.next();
    }
    private void getNextBatch(){
      List<String> nameBatch=new ArrayList<String>();
      int batch_counter=0;
      while (batch_counter < batch_size && tableNamesIter.hasNext()) {
        nameBatch.add(tableNamesIter.next());
        batch_counter++;
      }
      try {
        try {
          batchIter=msc.getTableObjectsByName(dbname,nameBatch).iterator();
        }
 catch (        TException e) {
          throw new HiveException(e);
        }
      }
 catch (      HiveException e) {
        throw new RuntimeException(e);
      }
    }
    @Override public void remove(){
      throw new IllegalStateException("TableIterable is a read-only iterable and remove() is unsupported");
    }
  }
;
}
