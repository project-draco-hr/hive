{
  Table newTable=context.getNewTable();
  Map<String,String> parameters=newTable.getParameters();
  if (parameters == null || parameters.isEmpty()) {
    return;
  }
  Set<String> keys=new HashSet<>(parameters.keySet());
  String transactionalValue=null;
  boolean transactionalValuePresent=false;
  for (  String key : keys) {
    if (hive_metastoreConstants.TABLE_IS_TRANSACTIONAL.equalsIgnoreCase(key)) {
      transactionalValuePresent=true;
      transactionalValue=parameters.get(key);
      parameters.remove(key);
    }
  }
  if (transactionalValuePresent) {
    parameters.put(hive_metastoreConstants.TABLE_IS_TRANSACTIONAL,transactionalValue);
  }
  if ("true".equalsIgnoreCase(transactionalValue)) {
    if (!conformToAcid(newTable)) {
      throw new MetaException("The table must be bucketed and stored using an ACID compliant" + " format (such as ORC)");
    }
    return;
  }
  Table oldTable=context.getOldTable();
  String oldTransactionalValue=null;
  for (  String key : oldTable.getParameters().keySet()) {
    if (hive_metastoreConstants.TABLE_IS_TRANSACTIONAL.equalsIgnoreCase(key)) {
      oldTransactionalValue=oldTable.getParameters().get(key);
    }
  }
  if (oldTransactionalValue == null ? transactionalValue == null : oldTransactionalValue.equalsIgnoreCase(transactionalValue)) {
    return;
  }
  throw new MetaException("TBLPROPERTIES with 'transactional'='true' cannot be unset");
}
