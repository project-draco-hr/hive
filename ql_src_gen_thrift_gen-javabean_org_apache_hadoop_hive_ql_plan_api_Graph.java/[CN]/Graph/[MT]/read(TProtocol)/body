{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == TType.I32) {
        this.nodeType=NodeType.findByValue(iprot.readI32());
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == TType.LIST) {
{
      TList _list4=iprot.readListBegin();
      this.roots=new ArrayList<String>(_list4.size);
      for (int _i5=0; _i5 < _list4.size; ++_i5) {
        String _elem6;
        _elem6=iprot.readString();
        this.roots.add(_elem6);
      }
      iprot.readListEnd();
    }
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == TType.LIST) {
{
  TList _list7=iprot.readListBegin();
  this.adjacencyList=new ArrayList<Adjacency>(_list7.size);
  for (int _i8=0; _i8 < _list7.size; ++_i8) {
    Adjacency _elem9;
    _elem9=new Adjacency();
    _elem9.read(iprot);
    this.adjacencyList.add(_elem9);
  }
  iprot.readListEnd();
}
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
default :
TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
