{
  try {
    OrcFileKeyWrapper k=null;
    if (key instanceof CombineHiveKey) {
      k=(OrcFileKeyWrapper)((CombineHiveKey)key).getKey();
    }
 else {
      k=(OrcFileKeyWrapper)key;
    }
    fixTmpPathAlterTable(k.getInputPath().getParent());
    if (prevPath == null) {
      prevPath=k.getInputPath();
      reader=OrcFile.createReader(fs,k.inputPath);
    }
    if (outWriter == null) {
      compression=k.getCompression();
      compressBuffSize=k.getCompressBufferSize();
      version=k.getVersionList();
      columnCount=k.getTypes().get(0).getSubtypesCount();
      rowIndexStride=k.getRowIndexStride();
      outWriter=OrcFile.createWriter(outPath,OrcFile.writerOptions(jc).compress(compression).inspector(reader.getObjectInspector()));
    }
    if (!checkCompatibility(k,value)) {
      incompatFileSet.add(k.getInputPath());
      return;
    }
    if (!k.getInputPath().equals(prevPath)) {
      reader=OrcFile.createReader(fs,k.inputPath);
    }
    buffer=new byte[(int)value.stripeInformation.getLength()];
    fdis=fs.open(k.inputPath);
    fdis.readFully(value.stripeInformation.getOffset(),buffer,0,(int)value.stripeInformation.getLength());
    ((WriterImpl)outWriter).appendStripe(buffer,value.getStripeInformation(),value.getStripeStatistics());
    LOG.info("Merged stripe from file " + k.inputPath + " [ offset : "+ value.getStripeInformation().getOffset()+ " length: "+ value.getStripeInformation().getLength()+ " ]");
    if (value.isLastStripeInFile()) {
      ((WriterImpl)outWriter).appendUserMetadata(value.getUserMetadata());
    }
  }
 catch (  Throwable e) {
    this.exception=true;
    close();
    throw new IOException(e);
  }
}
