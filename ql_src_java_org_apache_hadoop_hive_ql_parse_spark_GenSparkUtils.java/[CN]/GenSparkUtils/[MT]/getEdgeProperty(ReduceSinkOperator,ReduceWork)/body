{
  SparkEdgeProperty edgeProperty=new SparkEdgeProperty(SparkEdgeProperty.SHUFFLE_NONE);
  edgeProperty.setNumPartitions(reduceWork.getNumReduceTasks());
  String sortOrder=Strings.nullToEmpty(reduceSink.getConf().getOrder()).trim();
  if (hasGBYOperator(reduceSink)) {
    edgeProperty.setShuffleGroup();
    if (!sortOrder.isEmpty() && groupByNeedParLevelOrder(reduceSink)) {
      edgeProperty.setMRShuffle();
    }
  }
  if (reduceWork.getReducer() instanceof JoinOperator) {
    edgeProperty.setMRShuffle();
  }
  FileSinkOperator fso=getChildOperator(reduceWork.getReducer(),FileSinkOperator.class);
  if (fso != null) {
    String bucketCount=fso.getConf().getTableInfo().getProperties().getProperty(hive_metastoreConstants.BUCKET_COUNT);
    if (bucketCount != null && Integer.parseInt(bucketCount) > 1) {
      edgeProperty.setMRShuffle();
    }
  }
  if (edgeProperty.isShuffleNone() && !sortOrder.isEmpty()) {
    if ((reduceSink.getConf().getPartitionCols() == null || reduceSink.getConf().getPartitionCols().isEmpty() || isSame(reduceSink.getConf().getPartitionCols(),reduceSink.getConf().getKeyCols())) && reduceSink.getConf().hasOrderBy()) {
      edgeProperty.setShuffleSort();
    }
 else {
      edgeProperty.setMRShuffle();
    }
  }
  if (edgeProperty.isShuffleNone()) {
    edgeProperty.setShuffleGroup();
  }
  return edgeProperty;
}
