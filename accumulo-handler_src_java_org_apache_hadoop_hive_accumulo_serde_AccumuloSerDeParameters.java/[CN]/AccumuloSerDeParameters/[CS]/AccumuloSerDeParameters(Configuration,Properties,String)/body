{
  super(conf);
  this.tableProperties=tableProperties;
  this.serdeName=serdeName;
  lazySerDeParameters=LazySimpleSerDe.initSerdeParams(conf,tableProperties,serdeName);
  String defaultStorage=tableProperties.getProperty(DEFAULT_STORAGE_TYPE);
  columnMapper=new ColumnMapper(getColumnMappingValue(),defaultStorage,lazySerDeParameters.getColumnNames(),lazySerDeParameters.getColumnTypes());
  log.info("Constructed column mapping " + columnMapper);
  if (null == getColumnTypeValue()) {
    tableProperties.setProperty(serdeConstants.LIST_COLUMN_TYPES,columnMapper.getTypesString());
  }
  if (columnMapper.size() < lazySerDeParameters.getColumnNames().size()) {
    throw new TooManyHiveColumnsException("You have more " + COLUMN_MAPPINGS + " fields than hive columns");
  }
 else   if (columnMapper.size() > lazySerDeParameters.getColumnNames().size()) {
    throw new TooManyAccumuloColumnsException("You have more hive columns than fields mapped with " + COLUMN_MAPPINGS);
  }
  this.rowIdFactory=initRowIdFactory(conf,tableProperties);
}
