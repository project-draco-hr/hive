{
  Preconditions.checkArgument(numSchedulableTasksConf >= -1,"NumSchedulableTasks must be >=-1");
  this.serviceInstance=serviceInstance;
  this.blacklistConf=blacklistConf;
  this.clock=clock;
  this.metrics=metrics;
  if (numSchedulableTasksConf == 0) {
    int pendingQueueuCapacity=0;
    String pendingQueueCapacityString=serviceInstance.getProperties().get(ConfVars.LLAP_DAEMON_TASK_SCHEDULER_WAIT_QUEUE_SIZE.varname);
    LOG.info("Setting up node: {} with available capacity={}, pendingQueueSize={}, memory={}",serviceInstance,serviceInstance.getResource().getVirtualCores(),pendingQueueCapacityString,serviceInstance.getResource().getMemory());
    if (pendingQueueCapacityString != null) {
      pendingQueueuCapacity=Integer.parseInt(pendingQueueCapacityString);
    }
    this.numSchedulableTasks=serviceInstance.getResource().getVirtualCores() + pendingQueueuCapacity;
  }
 else {
    this.numSchedulableTasks=numSchedulableTasksConf;
    LOG.info("Setting up node: " + serviceInstance + " with schedulableCapacity="+ this.numSchedulableTasks);
  }
  if (metrics != null) {
    metrics.incrSchedulableTasksCount(numSchedulableTasks);
  }
}
