{
  int[][] tableData={{1,2},{3,4}};
  runStatementOnDriver("insert into " + Table.ACIDTBL + "(a,b) "+ makeValuesClause(tableData));
  runStatementOnDriver("alter table " + Table.ACIDTBL + " compact 'MAJOR'");
  Worker t=new Worker();
  t.setThreadId((int)t.getId());
  t.setHiveConf(hiveConf);
  AtomicBoolean stop=new AtomicBoolean();
  AtomicBoolean looped=new AtomicBoolean();
  stop.set(true);
  t.init(stop,looped);
  t.run();
  runStatementOnDriver("delete from " + Table.ACIDTBL + " where b = 4");
  runStatementOnDriver("update " + Table.ACIDTBL + " set b = -2 where b = 2");
  runStatementOnDriver("alter table " + Table.ACIDTBL + " compact 'MINOR'");
  t.run();
  TxnStore txnHandler=TxnUtils.getTxnStore(hiveConf);
  ShowCompactResponse resp=txnHandler.showCompact(new ShowCompactRequest());
  Assert.assertEquals("Unexpected number of compactions in history",2,resp.getCompactsSize());
  Assert.assertEquals("Unexpected 0 compaction state",TxnStore.CLEANING_RESPONSE,resp.getCompacts().get(0).getState());
  Assert.assertEquals("Unexpected 1 compaction state",TxnStore.CLEANING_RESPONSE,resp.getCompacts().get(1).getState());
}
