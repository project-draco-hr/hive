{
  String tblName="hive12352";
  runStatementOnDriver("drop table if exists " + tblName);
  runStatementOnDriver("CREATE TABLE " + tblName + "(a INT, b STRING) "+ " CLUSTERED BY(a) INTO 1 BUCKETS"+ " STORED AS ORC  TBLPROPERTIES ( "+ tblProperties+ " )");
  runStatementOnDriver("insert into " + tblName + " values(1, 'foo'),(2, 'bar'),(3, 'baz')");
  runStatementOnDriver("update " + tblName + " set b = 'blah' where a = 3");
  TxnStore txnHandler=TxnUtils.getTxnStore(hiveConf);
  txnHandler.compact(new CompactionRequest("default",tblName,CompactionType.MINOR));
  Worker t=new Worker();
  t.setThreadId((int)t.getId());
  t.setHiveConf(hiveConf);
  AtomicBoolean stop=new AtomicBoolean(true);
  AtomicBoolean looped=new AtomicBoolean();
  t.init(stop,looped);
  t.run();
  hiveConf.setBoolVar(HiveConf.ConfVars.HIVETESTMODEROLLBACKTXN,true);
  runStatementOnDriver("delete from " + tblName + " where a = 1");
  hiveConf.setBoolVar(HiveConf.ConfVars.HIVETESTMODEROLLBACKTXN,false);
  List<String> expected=new ArrayList<>();
  expected.add("1\tfoo");
  expected.add("2\tbar");
  expected.add("3\tblah");
  Assert.assertEquals("",expected,runStatementOnDriver("select a,b from " + tblName + " order by a"));
  Cleaner c=new Cleaner();
  c.setThreadId((int)c.getId());
  c.setHiveConf(hiveConf);
  c.init(stop,new AtomicBoolean());
  c.run();
  Initiator i=new Initiator();
  i.setThreadId((int)i.getId());
  i.setHiveConf(hiveConf);
  i.init(stop,new AtomicBoolean());
  i.run();
  Assert.assertEquals("",expected,runStatementOnDriver("select a,b from " + tblName + " order by a"));
}
