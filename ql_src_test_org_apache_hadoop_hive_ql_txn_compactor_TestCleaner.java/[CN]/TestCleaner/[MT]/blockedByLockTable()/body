{
  Table t=newTable("default","bblt",false);
  HiveConf conf=new HiveConf();
  addBaseFile(conf,t,null,20L,20);
  addDeltaFile(conf,t,null,21L,22L,2);
  addDeltaFile(conf,t,null,23L,24L,2);
  addDeltaFile(conf,t,null,21L,24L,4);
  burnThroughTransactions(25);
  CompactionRequest rqst=new CompactionRequest("default","bblt",CompactionType.MINOR);
  txnHandler.compact(rqst);
  CompactionInfo ci=txnHandler.findNextToCompact("fred");
  txnHandler.markCompacted(ci);
  txnHandler.setRunAs(ci.id,System.getProperty("user.name"));
  LockComponent comp=new LockComponent(LockType.SHARED_READ,LockLevel.TABLE,"default");
  comp.setTablename("bblt");
  List<LockComponent> components=new ArrayList<LockComponent>(1);
  components.add(comp);
  LockRequest req=new LockRequest(components,"me","localhost");
  LockResponse res=txnHandler.lock(req);
  startCleaner(conf);
  ShowCompactResponse rsp=txnHandler.showCompact(new ShowCompactRequest());
  List<ShowCompactResponseElement> compacts=rsp.getCompacts();
  Assert.assertEquals(1,compacts.size());
  Assert.assertEquals("ready for cleaning",compacts.get(0).getState());
  Assert.assertEquals("bblt",compacts.get(0).getTablename());
  Assert.assertEquals(CompactionType.MINOR,compacts.get(0).getType());
}
