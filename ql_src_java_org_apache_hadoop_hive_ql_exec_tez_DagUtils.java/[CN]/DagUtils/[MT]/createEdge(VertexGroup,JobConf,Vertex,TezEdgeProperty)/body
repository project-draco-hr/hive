{
  Class mergeInputClass;
  LOG.info("Creating Edge between " + group.getGroupName() + " and "+ w.getName());
  EdgeType edgeType=edgeProp.getEdgeType();
switch (edgeType) {
case BROADCAST_EDGE:
    mergeInputClass=ConcatenatedMergedKeyValueInput.class;
  break;
case CUSTOM_EDGE:
{
  mergeInputClass=ConcatenatedMergedKeyValueInput.class;
  int numBuckets=edgeProp.getNumBuckets();
  VertexManagerPluginDescriptor desc=VertexManagerPluginDescriptor.create(CustomPartitionVertex.class.getName());
  ByteBuffer userPayload=ByteBuffer.allocate(4).putInt(numBuckets);
  userPayload.flip();
  desc.setUserPayload(UserPayload.create(userPayload));
  w.setVertexManagerPlugin(desc);
  break;
}
case CUSTOM_SIMPLE_EDGE:
mergeInputClass=ConcatenatedMergedKeyValueInput.class;
break;
case SIMPLE_EDGE:
setupAutoReducerParallelism(edgeProp,w);
default :
mergeInputClass=TezMergedLogicalInput.class;
break;
}
return GroupInputEdge.create(group,w,createEdgeProperty(edgeProp,vConf),InputDescriptor.create(mergeInputClass.getName()));
}
