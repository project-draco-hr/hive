{
  Path planPath=Utilities.setReduceWork(conf,reduceWork,mrScratchDir.toUri().toString(),false);
  LocalResource planLr=createLocalResource(fs,planPath,LocalResourceType.FILE,LocalResourceVisibility.APPLICATION);
  Utilities.createTmpDirs(conf,reduceWork);
  MultiStageMRConfToTezTranslator.translateVertexConfToTez(conf,null);
  Vertex reducer=new Vertex(reduceWork.getName(),new ProcessorDescriptor(ReduceTezProcessor.class.getName()).setUserPayload(MRHelpers.createUserPayloadFromConf(conf)),reduceWork.getNumReduceTasks(),MRHelpers.getReduceResource(conf));
  Map<String,String> environment=new HashMap<String,String>();
  MRHelpers.updateEnvironmentForMRTasks(conf,environment,false);
  reducer.setTaskEnvironment(environment);
  reducer.setJavaOpts(MRHelpers.getReduceJavaOpts(conf));
  Map<String,LocalResource> localResources=new HashMap<String,LocalResource>();
  localResources.put(getBaseName(appJarLr),appJarLr);
  for (  LocalResource lr : additionalLr) {
    localResources.put(getBaseName(lr),lr);
  }
  localResources.put(FilenameUtils.getName(planPath.getName()),planLr);
  reducer.setTaskLocalResources(localResources);
  return reducer;
}
