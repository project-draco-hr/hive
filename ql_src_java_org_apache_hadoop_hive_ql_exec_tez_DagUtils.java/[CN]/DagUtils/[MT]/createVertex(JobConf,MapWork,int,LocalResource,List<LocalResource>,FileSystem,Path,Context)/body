{
  Path tezDir=getTezDir(mrScratchDir);
  Path hashTableArchive=createHashTables(mapWork,conf);
  LocalResource localWorkLr=null;
  if (hashTableArchive != null) {
    localWorkLr=createLocalResource(fs,hashTableArchive,LocalResourceType.ARCHIVE,LocalResourceVisibility.APPLICATION);
  }
  Path planPath=Utilities.setMapWork(conf,mapWork,mrScratchDir.toUri().toString(),false);
  LocalResource planLr=createLocalResource(fs,planPath,LocalResourceType.FILE,LocalResourceVisibility.APPLICATION);
  List<Path> inputPaths=Utilities.getInputPaths(conf,mapWork,mrScratchDir.toUri().toString(),ctx);
  Utilities.setInputPaths(conf,inputPaths);
  InputSplitInfo inputSplitInfo=MRHelpers.generateInputSplits(conf,new Path(tezDir,"" + seqNo));
  Utilities.createTmpDirs(conf,mapWork);
  MultiStageMRConfToTezTranslator.translateVertexConfToTez(conf,null);
  Vertex map=null;
  byte[] serializedConf=MRHelpers.createUserPayloadFromConf(conf);
  if (inputSplitInfo.getNumTasks() != 0) {
    map=new Vertex("Map " + seqNo,new ProcessorDescriptor(MapProcessor.class.getName()).setUserPayload(serializedConf),inputSplitInfo.getNumTasks(),MRHelpers.getMapResource(conf));
    Map<String,String> environment=new HashMap<String,String>();
    MRHelpers.updateEnvironmentForMRTasks(conf,environment,true);
    map.setTaskEnvironment(environment);
    map.setJavaOpts(MRHelpers.getMapJavaOpts(conf));
    map.addInput("in_" + seqNo,new InputDescriptor(MRInputLegacy.class.getName()).setUserPayload(serializedConf));
    map.setTaskLocationsHint(inputSplitInfo.getTaskLocationHints());
    Map<String,LocalResource> localResources=new HashMap<String,LocalResource>();
    if (localWorkLr != null) {
      localResources.put(hashTableArchive.getName(),localWorkLr);
    }
    localResources.put(getBaseName(appJarLr),appJarLr);
    for (    LocalResource lr : additionalLr) {
      localResources.put(getBaseName(lr),lr);
    }
    localResources.put(FilenameUtils.getName(planPath.getName()),planLr);
    MRHelpers.updateLocalResourcesForInputSplits(FileSystem.get(conf),inputSplitInfo,localResources);
    map.setTaskLocalResources(localResources);
  }
  return map;
}
