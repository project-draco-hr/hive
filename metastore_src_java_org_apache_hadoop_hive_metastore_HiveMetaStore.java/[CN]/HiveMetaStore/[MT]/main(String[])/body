{
  int port=9083;
  if (args.length > 0) {
    port=new Integer(args[0]);
  }
  try {
    HMSHandler handler=new HMSHandler("new db based metaserver");
    HiveConf conf=handler.getHiveConf();
    int minWorkerThreads=conf.getIntVar(HiveConf.ConfVars.METASTORESERVERMINTHREADS);
    int maxWorkerThreads=conf.getIntVar(HiveConf.ConfVars.METASTORESERVERMAXTHREADS);
    boolean tcpKeepAlive=conf.getBoolVar(HiveConf.ConfVars.METASTORE_TCP_KEEP_ALIVE);
    TServerTransport serverTransport=tcpKeepAlive ? new TServerSocketKeepAlive(port) : new TServerSocket(port);
    FacebookService.Processor processor=new ThriftHiveMetastore.Processor(handler);
    TThreadPoolServer.Options options=new TThreadPoolServer.Options();
    options.minWorkerThreads=minWorkerThreads;
    options.maxWorkerThreads=maxWorkerThreads;
    TServer server=new TThreadPoolServer(processor,serverTransport,new TTransportFactory(),new TTransportFactory(),new TBinaryProtocol.Factory(),new TBinaryProtocol.Factory(),options);
    HMSHandler.LOG.info("Started the new metaserver on port [" + port + "]...");
    HMSHandler.LOG.info("Options.minWorkerThreads = " + options.minWorkerThreads);
    HMSHandler.LOG.info("Options.maxWorkerThreads = " + options.maxWorkerThreads);
    HMSHandler.LOG.info("TCP keepalive = " + tcpKeepAlive);
    server.serve();
  }
 catch (  Throwable x) {
    x.printStackTrace();
    HMSHandler.LOG.error("Metastore Thrift Server threw an exception. Exiting...");
    HMSHandler.LOG.error(StringUtils.stringifyException(x));
    System.exit(1);
  }
}
