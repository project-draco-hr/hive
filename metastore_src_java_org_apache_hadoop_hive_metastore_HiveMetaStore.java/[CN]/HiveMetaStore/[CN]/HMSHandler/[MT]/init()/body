{
  rawStoreClassName=hiveConf.getVar(HiveConf.ConfVars.METASTORE_RAW_STORE_IMPL);
  checkForDefaultDb=hiveConf.getBoolean("hive.metastore.checkForDefaultDb",true);
  String alterHandlerName=hiveConf.get("hive.metastore.alter.impl",HiveAlterHandler.class.getName());
  alterHandler=(AlterHandler)ReflectionUtils.newInstance(MetaStoreUtils.getClass(alterHandlerName),hiveConf);
  wh=new Warehouse(hiveConf);
  createDefaultDB();
  if (hiveConf.getBoolean("hive.metastore.metrics.enabled",false)) {
    try {
      Metrics.init();
    }
 catch (    Exception e) {
      LOG.error("error in Metrics init: " + e.getClass().getName() + " "+ e.getMessage());
      MetaStoreUtils.printStackTrace(e);
    }
  }
  listeners=MetaStoreUtils.getMetaStoreListeners(MetaStoreEventListener.class,hiveConf,hiveConf.getVar(HiveConf.ConfVars.METASTORE_EVENT_LISTENERS));
  endFunctionListeners=MetaStoreUtils.getMetaStoreListeners(MetaStoreEndFunctionListener.class,hiveConf,hiveConf.getVar(HiveConf.ConfVars.METASTORE_END_FUNCTION_LISTENERS));
  long cleanFreq=hiveConf.getLongVar(ConfVars.METASTORE_EVENT_CLEAN_FREQ) * 1000L;
  if (cleanFreq > 0) {
    Timer cleaner=new Timer("Metastore Events Cleaner Thread",true);
    cleaner.schedule(new EventCleanerTask(this),cleanFreq,cleanFreq);
  }
  return true;
}
