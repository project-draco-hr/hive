{
  incrementCounter("get_principals_in_role");
  String role_name=request.getRoleName();
  List<RolePrincipalGrant> rolePrinGrantList=new ArrayList<RolePrincipalGrant>();
  Exception ex=null;
  try {
    List<MRoleMap> roleMaps=getMS().listRoleMembers(role_name);
    if (roleMaps != null) {
      for (      MRoleMap roleMap : roleMaps) {
        String mapRoleName=roleMap.getRole().getRoleName();
        if (!role_name.equals(mapRoleName)) {
          throw new AssertionError("Role name " + mapRoleName + " does not match role name arg "+ role_name);
        }
        RolePrincipalGrant rolePrinGrant=new RolePrincipalGrant(role_name,roleMap.getPrincipalName(),PrincipalType.valueOf(roleMap.getPrincipalType()),roleMap.getGrantOption(),roleMap.getAddTime(),roleMap.getGrantor(),PrincipalType.valueOf(roleMap.getGrantorType()));
        rolePrinGrantList.add(rolePrinGrant);
      }
    }
  }
 catch (  MetaException e) {
    throw e;
  }
catch (  Exception e) {
    ex=e;
    rethrowException(e);
  }
 finally {
    endFunction("get_principals_in_role",ex == null,ex);
  }
  return new GetPrincipalsInRoleResponse(rolePrinGrantList);
}
