{
  this.incrementCounter("get_fields");
  logStartFunction("get_fields: db=" + db + "tbl="+ tableName);
  ArrayList<FieldSchema> str_fields=new ArrayList<FieldSchema>();
  String[] names=tableName.split("\\.");
  String base_table_name=names[0];
  List<SerDeField> hive_fields=new ArrayList<SerDeField>();
  Table tbl;
  try {
    tbl=this.get_table(db,base_table_name);
  }
 catch (  NoSuchObjectException e) {
    throw new UnknownTableException(e.getMessage());
  }
  SerDeField hf=null;
  try {
    SerDe s=MetaStoreUtils.getSerDe(this.hiveConf,tbl);
    for (int i=1; i < names.length; i++) {
      hf=s.getFieldFromExpression(hf,names[i]);
    }
    if (hf != null && hf.isPrimitive()) {
      hive_fields.add(hf);
    }
 else     if (hf != null && hf.isList()) {
      try {
        hive_fields=s.getFields(hf);
      }
 catch (      Exception e) {
        hive_fields.add(hf);
      }
    }
 else     if (hf != null && hf.isMap()) {
      hive_fields.add(hf);
    }
 else {
      hive_fields=s.getFields(hf);
    }
    for (    SerDeField field : hive_fields) {
      String name=field.getName();
      String schema=this.hfToString(field);
      str_fields.add(new FieldSchema(name,schema,"automatically generated"));
    }
    return str_fields;
  }
 catch (  SerDeException e) {
    StringUtils.stringifyException(e);
    throw new MetaException(e.getMessage());
  }
}
