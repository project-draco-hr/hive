{
  if (defaultRolesCreated) {
    LOG.debug("Admin role already created previously.");
    return;
  }
  Class<?> authCls;
  Class<?> authIface;
  try {
    authCls=hiveConf.getClassByName(hiveConf.getVar(ConfVars.HIVE_AUTHORIZATION_MANAGER));
    authIface=Class.forName("org.apache.hadoop.hive.ql.security.authorization.plugin.HiveAuthorizerFactory");
  }
 catch (  ClassNotFoundException e) {
    LOG.debug("No auth manager specified",e);
    return;
  }
  if (!authIface.isAssignableFrom(authCls)) {
    LOG.warn("Configured auth manager " + authCls.getName() + " doesn't implement "+ ConfVars.HIVE_AUTHENTICATOR_MANAGER+ " admin role will not be created.");
    return;
  }
  RawStore ms=getMS();
  try {
    ms.addRole(ADMIN,ADMIN);
  }
 catch (  InvalidObjectException e) {
    LOG.debug(ADMIN + " role already exists",e);
  }
catch (  NoSuchObjectException e) {
    LOG.warn("Unexpected exception while adding " + ADMIN + " roles",e);
  }
  LOG.info("Added " + ADMIN + " role in metastore");
  try {
    ms.addRole(PUBLIC,PUBLIC);
  }
 catch (  InvalidObjectException e) {
    LOG.debug(PUBLIC + " role already exists",e);
  }
catch (  NoSuchObjectException e) {
    LOG.warn("Unexpected exception while adding " + PUBLIC + " roles",e);
  }
  LOG.info("Added " + PUBLIC + " role in metastore");
  PrivilegeBag privs=new PrivilegeBag();
  privs.addToPrivileges(new HiveObjectPrivilege(new HiveObjectRef(HiveObjectType.GLOBAL,null,null,null,null),ADMIN,PrincipalType.ROLE,new PrivilegeGrantInfo("All",0,ADMIN,PrincipalType.ROLE,true)));
  try {
    ms.grantPrivileges(privs);
  }
 catch (  InvalidObjectException e) {
    LOG.debug("Failed while granting global privs to admin",e);
  }
catch (  NoSuchObjectException e) {
    LOG.warn("Failed while granting global privs to admin",e);
  }
  String userStr=HiveConf.getVar(hiveConf,ConfVars.USERS_IN_ADMIN_ROLE,"").trim();
  if (userStr.isEmpty()) {
    LOG.info("No user is added in admin role, since config is empty");
    return;
  }
  Iterator<String> users=Splitter.on(",").trimResults().omitEmptyStrings().split(userStr).iterator();
  if (!users.hasNext()) {
    LOG.info("No user is added in admin role, since config value " + userStr + " is in incorrect format.");
    return;
  }
  LOG.info("Added " + userStr + " to admin role");
  Role adminRole;
  try {
    adminRole=ms.getRole(ADMIN);
  }
 catch (  NoSuchObjectException e) {
    LOG.error("Failed to retrieve just added admin role",e);
    return;
  }
  while (users.hasNext()) {
    String userName=users.next();
    try {
      ms.grantRole(adminRole,userName,PrincipalType.USER,ADMIN,PrincipalType.ROLE,true);
    }
 catch (    NoSuchObjectException e) {
      LOG.error("Failed to add " + userName + " in admin role",e);
    }
catch (    InvalidObjectException e) {
      LOG.debug(userName + " already in admin role",e);
    }
  }
  defaultRolesCreated=true;
}
