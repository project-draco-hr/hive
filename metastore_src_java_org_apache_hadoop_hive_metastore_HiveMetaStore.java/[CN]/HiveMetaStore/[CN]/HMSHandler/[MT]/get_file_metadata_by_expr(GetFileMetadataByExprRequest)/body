{
  GetFileMetadataByExprResult result=new GetFileMetadataByExprResult();
  RawStore ms=getMS();
  if (!ms.isFileMetadataSupported()) {
    result.setIsSupported(false);
    result.setMetadata(EMPTY_MAP_FM2);
    return result;
  }
  result.setIsSupported(true);
  List<Long> fileIds=req.getFileIds();
  boolean needMetadata=!req.isSetDoGetFooters() || req.isDoGetFooters();
  FileMetadataExprType type=req.isSetType() ? req.getType() : FileMetadataExprType.ORC_SARG;
  ByteBuffer[] metadatas=needMetadata ? new ByteBuffer[fileIds.size()] : null;
  ByteBuffer[] ppdResults=new ByteBuffer[fileIds.size()];
  boolean[] eliminated=new boolean[fileIds.size()];
  getMS().getFileMetadataByExpr(fileIds,type,req.getExpr(),metadatas,ppdResults,eliminated);
  for (int i=0; i < metadatas.length; ++i) {
    long fileId=fileIds.get(i);
    ByteBuffer metadata=metadatas[i];
    if (metadata == null)     continue;
    metadata=(eliminated[i] || !needMetadata) ? null : handleReadOnlyBufferForThrift(metadata);
    MetadataPpdResult mpr=new MetadataPpdResult();
    ByteBuffer bitset=eliminated[i] ? null : handleReadOnlyBufferForThrift(ppdResults[i]);
    mpr.setMetadata(metadata);
    mpr.setIncludeBitset(bitset);
    result.putToMetadata(fileId,mpr);
  }
  if (!result.isSetMetadata()) {
    result.setMetadata(EMPTY_MAP_FM2);
  }
  return result;
}
