{
  GetFileMetadataByExprResult result=new GetFileMetadataByExprResult();
  RawStore ms=getMS();
  if (!ms.isFileMetadataSupported()) {
    result.setIsSupported(false);
    result.setMetadata(EMPTY_MAP_FM2);
    return result;
  }
  result.setIsSupported(true);
  List<Long> fileIds=req.getFileIds();
  boolean needMetadata=!req.isSetDoGetFooters() || req.isDoGetFooters();
  FileMetadataExprType type=req.isSetType() ? req.getType() : FileMetadataExprType.ORC_SARG;
  ByteBuffer[] metadatas=needMetadata ? new ByteBuffer[fileIds.size()] : null;
  ByteBuffer[] ppdResults=new ByteBuffer[fileIds.size()];
  boolean[] eliminated=new boolean[fileIds.size()];
  getMS().getFileMetadataByExpr(fileIds,type,req.getExpr(),metadatas,ppdResults,eliminated);
  for (int i=0; i < fileIds.size(); ++i) {
    if (!eliminated[i] && ppdResults[i] == null)     continue;
    MetadataPpdResult mpr=new MetadataPpdResult();
    ByteBuffer ppdResult=eliminated[i] ? null : handleReadOnlyBufferForThrift(ppdResults[i]);
    mpr.setIncludeBitset(ppdResult);
    if (needMetadata) {
      ByteBuffer metadata=eliminated[i] ? null : handleReadOnlyBufferForThrift(metadatas[i]);
      mpr.setMetadata(metadata);
    }
    result.putToMetadata(fileIds.get(i),mpr);
  }
  if (!result.isSetMetadata()) {
    result.setMetadata(EMPTY_MAP_FM2);
  }
  return result;
}
