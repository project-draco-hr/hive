{
  if (inputSizeEstimated) {
    return;
  }
  MapWork mWork=work.getMapWork();
  totalInputFileSize=inputSummary.getLength();
  totalInputNumFiles=inputSummary.getFileCount();
  if (mWork.getNameToSplitSample() == null || mWork.getNameToSplitSample().isEmpty()) {
    inputSizeEstimated=true;
    return;
  }
  double highestSamplePercentage=0;
  boolean allSample=false;
  for (  String alias : mWork.getAliasToWork().keySet()) {
    if (mWork.getNameToSplitSample().containsKey(alias)) {
      allSample=true;
      Double rate=mWork.getNameToSplitSample().get(alias).getPercent();
      if (rate != null && rate > highestSamplePercentage) {
        highestSamplePercentage=rate;
      }
    }
 else {
      allSample=false;
      break;
    }
  }
  if (allSample) {
    totalInputFileSize=Math.min((long)(totalInputFileSize * highestSamplePercentage / 100D),totalInputFileSize);
    totalInputNumFiles=Math.min((long)(totalInputNumFiles * highestSamplePercentage / 100D),totalInputNumFiles);
  }
  inputSizeEstimated=true;
}
