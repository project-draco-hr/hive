{
  if (inputStream != null) {
    InputStream inputStreamAppendedNewline=new SequenceInputStream(inputStream,new ByteArrayInputStream((new String("\n")).getBytes()));
    consoleReader=new ConsoleReader(inputStreamAppendedNewline,getOutputStream());
  }
 else {
    consoleReader=new ConsoleReader();
  }
  consoleReader.setExpandEvents(false);
  ByteArrayOutputStream hist=new ByteArrayOutputStream();
  if (new File(getOpts().getHistoryFile()).isFile()) {
    try {
      try (FileInputStream historyIn=new FileInputStream(getOpts().getHistoryFile())){
        int n;
        while ((n=historyIn.read()) != -1) {
          hist.write(n);
        }
      }
     }
 catch (    Exception e) {
      handleException(e);
    }
  }
  try {
    consoleReader.setHistory(new FileHistory(new File(getOpts().getHistoryFile())));
  }
 catch (  Exception e) {
    handleException(e);
  }
  if (inputStream instanceof FileInputStream) {
    return consoleReader;
  }
  try {
    if (hist != null) {
      History h=consoleReader.getHistory();
      if (h instanceof FileHistory) {
        ((FileHistory)consoleReader.getHistory()).load(new ByteArrayInputStream(hist.toByteArray()));
      }
 else {
        consoleReader.getHistory().add(hist.toString());
      }
    }
  }
 catch (  Exception e) {
    handleException(e);
  }
  Runtime.getRuntime().addShutdownHook(new Thread(new Runnable(){
    @Override public void run(){
      History h=consoleReader.getHistory();
      if (h instanceof FileHistory) {
        try {
          ((FileHistory)h).flush();
        }
 catch (        IOException e) {
          error(e);
        }
      }
    }
  }
));
  consoleReader.addCompleter(new BeeLineCompleter(this));
  return consoleReader;
}
