{
  List<String> commands=new LinkedList<String>();
  List<String> files=new LinkedList<String>();
  String driver=null, user=null, pass=null, url=null, cmd=null;
  String auth=null;
  for (int i=0; i < args.length; i++) {
    if (args[i].equals("--help") || args[i].equals("-h")) {
      return false;
    }
    if (args[i].equals(HIVE_VAR_PREFIX)) {
      String[] parts=split(args[++i],"=");
      if (parts.length != 2) {
        return false;
      }
      getOpts().getHiveVariables().put(parts[0],parts[1]);
      continue;
    }
    if (args[i].equals(HIVE_CONF_PREFIX)) {
      String[] parts=split(args[++i],"=");
      if (parts.length != 2) {
        return false;
      }
      getOpts().getHiveConfVariables().put(parts[0],parts[1]);
      continue;
    }
    if (args[i].startsWith("--")) {
      String[] parts=split(args[i].substring(2),"=");
      debug(loc("setting-prop",Arrays.asList(parts)));
      if (parts.length > 0) {
        boolean ret;
        if (parts.length >= 2) {
          ret=getOpts().set(parts[0],parts[1],true);
        }
 else {
          ret=getOpts().set(parts[0],"true",true);
        }
        if (!ret) {
          return false;
        }
      }
      continue;
    }
    if (args[i].equals("-d")) {
      driver=args[i++ + 1];
    }
 else     if (args[i].equals("-n")) {
      user=args[i++ + 1];
    }
 else     if (args[i].equals("-a")) {
      auth=args[i++ + 1];
      getOpts().setAuthType(auth);
    }
 else     if (args[i].equals("-p")) {
      pass=args[i++ + 1];
    }
 else     if (args[i].equals("-u")) {
      url=args[i++ + 1];
    }
 else     if (args[i].equals("-e")) {
      commands.add(args[i++ + 1]);
    }
 else     if (args[i].equals("-f")) {
      getOpts().setScriptFile(args[i++ + 1]);
    }
 else {
      return error(loc("unrecognized-argument",args[i]));
    }
  }
  if (url != null) {
    String com="!connect " + url + " "+ (user == null || user.length() == 0 ? "''" : user)+ " "+ (pass == null || pass.length() == 0 ? "''" : pass)+ " "+ (driver == null ? "" : driver);
    debug("issuing: " + com);
    dispatch(com);
  }
  for (Iterator<String> i=files.iterator(); i.hasNext(); ) {
    dispatch("!properties " + i.next());
  }
  if (commands.size() > 0) {
    getOpts().setColor(false);
    getOpts().setHeaderInterval(-1);
    for (Iterator<String> i=commands.iterator(); i.hasNext(); ) {
      String command=i.next().toString();
      debug(loc("executing-command",command));
      dispatch(command);
    }
    exit=true;
  }
  return true;
}
