{
  List<? extends StructField> fields=((StructObjectInspector)valCtx.getSerDe().getObjectInspector()).getAllStructFieldRefs();
  List<String> colNames=new ArrayList<String>(fields.size());
  List<ObjectInspector> colOis=new ArrayList<ObjectInspector>(fields.size());
  for (int i=0; i < fields.size(); ++i) {
    StructField field=fields.get(i);
    colNames.add(field.getFieldName());
    TypeInfo typeInfo=TypeInfoUtils.getTypeInfoFromTypeString(field.getFieldObjectInspector().getTypeName());
    colOis.add(LazyBinaryUtils.getLazyBinaryObjectInspectorFromTypeInfo(typeInfo));
  }
  return LazyBinaryObjectInspectorFactory.getLazyBinaryStructObjectInspector(colNames,colOis);
}
