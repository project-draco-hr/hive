{
  if (childExpressions != null) {
    super.evaluateChildren(batch);
  }
  ColumnVector inputColVector=batch.cols[colNum];
  int[] sel=batch.selected;
  boolean[] nullPos=inputColVector.isNull;
  int n=batch.size;
  if (n <= 0) {
    return;
  }
  if (inputColVector.noNulls) {
    batch.size=0;
  }
 else   if (inputColVector.isRepeating) {
    if (nullPos[0]) {
      return;
    }
 else {
      batch.size=0;
      return;
    }
  }
 else   if (batch.selectedInUse) {
    int newSize=0;
    for (int j=0; j != n; j++) {
      int i=sel[j];
      if (nullPos[i]) {
        sel[newSize++]=i;
      }
    }
    batch.size=newSize;
  }
 else {
    int newSize=0;
    for (int i=0; i != n; i++) {
      if (nullPos[i]) {
        sel[newSize++]=i;
      }
    }
    if (newSize < n) {
      batch.selectedInUse=true;
      batch.size=newSize;
    }
  }
}
