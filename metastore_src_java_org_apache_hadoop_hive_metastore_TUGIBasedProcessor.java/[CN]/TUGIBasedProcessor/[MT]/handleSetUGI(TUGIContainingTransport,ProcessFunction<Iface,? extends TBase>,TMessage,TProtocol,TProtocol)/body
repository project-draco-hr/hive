{
  UserGroupInformation clientUgi=ugiTrans.getClientUGI();
  if (null != clientUgi) {
    throw new TException(new IllegalStateException("UGI is already set. Resetting is not " + "allowed. Current ugi is: " + clientUgi.getUserName()));
  }
  Method method=fn.getClass().getDeclaredMethod("getEmptyArgsInstance",new Class<?>[0]);
  method.setAccessible(true);
  set_ugi_args args=(set_ugi_args)method.invoke(fn,new Object[0]);
  try {
    args.read(iprot);
  }
 catch (  TProtocolException e) {
    iprot.readMessageEnd();
    TApplicationException x=new TApplicationException(TApplicationException.PROTOCOL_ERROR,e.getMessage());
    oprot.writeMessageBegin(new TMessage(msg.name,TMessageType.EXCEPTION,msg.seqid));
    x.write(oprot);
    oprot.writeMessageEnd();
    oprot.getTransport().flush();
    return;
  }
  iprot.readMessageEnd();
  method=fn.getClass().getDeclaredMethod("getResult",Iface.class,set_ugi_args.class);
  method.setAccessible(true);
  set_ugi_result result=(set_ugi_result)method.invoke(fn,iface,args);
  List<String> principals=result.getSuccess();
  ugiTrans.setClientUGI(shim.createRemoteUser(principals.remove(principals.size() - 1),principals));
  oprot.writeMessageBegin(new TMessage(msg.name,TMessageType.REPLY,msg.seqid));
  result.write(oprot);
  oprot.writeMessageEnd();
  oprot.getTransport().flush();
}
