{
  VectorizedRowBatch batch=getBatchThreeBooleanCols();
  ColAndCol expr=new ColAndCol(0,1,2);
  LongColumnVector outCol=(LongColumnVector)batch.cols[2];
  expr.evaluate(batch);
  Assert.assertEquals(0,outCol.vector[0]);
  Assert.assertEquals(0,outCol.vector[1]);
  Assert.assertEquals(0,outCol.vector[2]);
  Assert.assertEquals(1,outCol.vector[3]);
  Assert.assertEquals(0,outCol.vector[4]);
  Assert.assertFalse(outCol.isNull[4]);
  Assert.assertTrue(outCol.isNull[5]);
  Assert.assertEquals(0,outCol.vector[6]);
  Assert.assertFalse(outCol.isNull[6]);
  Assert.assertTrue(outCol.isNull[7]);
  Assert.assertTrue(outCol.isNull[8]);
  Assert.assertEquals(batch.size,9);
  Assert.assertFalse(outCol.noNulls);
  Assert.assertFalse(outCol.isRepeating);
  batch=getBatchThreeBooleanCols();
  batch.cols[0].noNulls=true;
  batch.cols[1].noNulls=true;
  batch.cols[2].noNulls=false;
  outCol=(LongColumnVector)batch.cols[2];
  expr.evaluate(batch);
  Assert.assertTrue(outCol.noNulls);
  Assert.assertEquals(0,outCol.vector[0]);
  Assert.assertEquals(0,outCol.vector[1]);
  Assert.assertEquals(0,outCol.vector[2]);
  Assert.assertEquals(1,outCol.vector[3]);
  batch=getBatchThreeBooleanCols();
  ((LongColumnVector)batch.cols[0]).vector[0]=1;
  batch.cols[0].noNulls=true;
  batch.cols[0].isRepeating=true;
  batch.cols[1].noNulls=true;
  batch.cols[1].isRepeating=false;
  batch.cols[2].noNulls=false;
  batch.cols[2].isRepeating=true;
  outCol=(LongColumnVector)batch.cols[2];
  expr.evaluate(batch);
  Assert.assertFalse(outCol.isRepeating);
  Assert.assertEquals(0,outCol.vector[0]);
  Assert.assertEquals(1,outCol.vector[1]);
  Assert.assertEquals(0,outCol.vector[2]);
  Assert.assertEquals(1,outCol.vector[3]);
}
