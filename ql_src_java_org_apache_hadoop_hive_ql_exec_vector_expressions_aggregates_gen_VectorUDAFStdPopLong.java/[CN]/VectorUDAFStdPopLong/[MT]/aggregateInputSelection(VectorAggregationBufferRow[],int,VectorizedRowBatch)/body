{
  inputExpression.evaluate(batch);
  LongColumnVector inputVector=(LongColumnVector)batch.cols[this.inputExpression.getOutputColumn()];
  int batchSize=batch.size;
  if (batchSize == 0) {
    return;
  }
  long[] vector=inputVector.vector;
  if (inputVector.isRepeating) {
    if (inputVector.noNulls || !inputVector.isNull[0]) {
      iterateRepeatingNoNullsWithAggregationSelection(aggregationBufferSets,aggregateIndex,vector[0],batchSize);
    }
  }
 else   if (!batch.selectedInUse && inputVector.noNulls) {
    iterateNoSelectionNoNullsWithAggregationSelection(aggregationBufferSets,aggregateIndex,vector,batchSize);
  }
 else   if (!batch.selectedInUse) {
    iterateNoSelectionHasNullsWithAggregationSelection(aggregationBufferSets,aggregateIndex,vector,batchSize,inputVector.isNull);
  }
 else   if (inputVector.noNulls) {
    iterateSelectionNoNullsWithAggregationSelection(aggregationBufferSets,aggregateIndex,vector,batchSize,batch.selected);
  }
 else {
    iterateSelectionHasNullsWithAggregationSelection(aggregationBufferSets,aggregateIndex,vector,batchSize,inputVector.isNull,batch.selected);
  }
}
