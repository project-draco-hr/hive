{
  Properties schema=(Properties)tblSchema.clone();
  String inputFormat=sd.getInputFormat();
  if (inputFormat == null || inputFormat.length() == 0) {
    String tblInput=schema.getProperty(org.apache.hadoop.hive.metastore.api.hive_metastoreConstants.FILE_INPUT_FORMAT);
    if (tblInput == null) {
      inputFormat=org.apache.hadoop.mapred.SequenceFileInputFormat.class.getName();
    }
 else {
      inputFormat=tblInput;
    }
  }
  schema.setProperty(org.apache.hadoop.hive.metastore.api.hive_metastoreConstants.FILE_INPUT_FORMAT,inputFormat);
  String outputFormat=sd.getOutputFormat();
  if (outputFormat == null || outputFormat.length() == 0) {
    String tblOutput=schema.getProperty(org.apache.hadoop.hive.metastore.api.hive_metastoreConstants.FILE_OUTPUT_FORMAT);
    if (tblOutput == null) {
      outputFormat=org.apache.hadoop.mapred.SequenceFileOutputFormat.class.getName();
    }
 else {
      outputFormat=tblOutput;
    }
  }
  schema.setProperty(org.apache.hadoop.hive.metastore.api.hive_metastoreConstants.FILE_OUTPUT_FORMAT,outputFormat);
  if (sd.getLocation() != null) {
    schema.setProperty(org.apache.hadoop.hive.metastore.api.hive_metastoreConstants.META_TABLE_LOCATION,sd.getLocation());
  }
  schema.setProperty(org.apache.hadoop.hive.metastore.api.hive_metastoreConstants.BUCKET_COUNT,Integer.toString(sd.getNumBuckets()));
  if (sd.getBucketCols() != null && sd.getBucketCols().size() > 0) {
    schema.setProperty(org.apache.hadoop.hive.metastore.api.hive_metastoreConstants.BUCKET_FIELD_NAME,sd.getBucketCols().get(0));
  }
  if (sd.getSerdeInfo() != null) {
    String cols=org.apache.hadoop.hive.metastore.api.hive_metastoreConstants.META_TABLE_COLUMNS;
    String colTypes=org.apache.hadoop.hive.metastore.api.hive_metastoreConstants.META_TABLE_COLUMN_TYPES;
    String parts=org.apache.hadoop.hive.metastore.api.hive_metastoreConstants.META_TABLE_PARTITION_COLUMNS;
    for (    Map.Entry<String,String> param : sd.getSerdeInfo().getParameters().entrySet()) {
      String key=param.getKey();
      if (schema.get(key) != null && (key.equals(cols) || key.equals(colTypes) || key.equals(parts))) {
        continue;
      }
      schema.put(key,(param.getValue() != null) ? param.getValue() : "");
    }
    if (sd.getSerdeInfo().getSerializationLib() != null) {
      schema.setProperty(org.apache.hadoop.hive.serde.serdeConstants.SERIALIZATION_LIB,sd.getSerdeInfo().getSerializationLib());
    }
  }
  if (parameters != null) {
    for (    Entry<String,String> e : parameters.entrySet()) {
      schema.setProperty(e.getKey(),e.getValue());
    }
  }
  return schema;
}
