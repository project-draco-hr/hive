{
  conf.set(HiveConf.ConfVars.HIVE_ORC_SPLIT_STRATEGY.varname,"ETL");
  conf.set(HiveConf.ConfVars.HIVE_ORC_SPLIT_DIRECTORY_BATCH_MS.varname,"1000000");
  OrcInputFormat.Context context=new OrcInputFormat.Context(conf);
  MockFileSystem fs=new MockFileSystem(conf,new MockFile("mock:/a/1/part-00",1000,new byte[0]),new MockFile("mock:/a/1/part-01",1000,new byte[0]),new MockFile("mock:/a/2/part-00",1000,new byte[0]),new MockFile("mock:/a/2/part-01",1000,new byte[0]),new MockFile("mock:/a/3/base_0/1",1000,new byte[0]),new MockFile("mock:/a/4/base_0/1",1000,new byte[0]),new MockFile("mock:/a/5/base_0/1",1000,new byte[0]),new MockFile("mock:/a/5/delta_0_25/1",1000,new byte[0]));
  OrcInputFormat.CombinedCtx combineCtx=new OrcInputFormat.CombinedCtx();
  SplitStrategy<?> ss=createOrCombineStrategy(context,fs,"mock:/a/1",combineCtx);
  assertNull(ss);
  assertTrue(combineCtx.combined instanceof OrcInputFormat.ETLSplitStrategy);
  OrcInputFormat.ETLSplitStrategy etlSs=(OrcInputFormat.ETLSplitStrategy)combineCtx.combined;
  assertEquals(2,etlSs.files.size());
  assertTrue(etlSs.isOriginal);
  assertEquals(1,etlSs.dirs.size());
  ss=createOrCombineStrategy(context,fs,"mock:/a/2",combineCtx);
  assertNull(ss);
  assertTrue(combineCtx.combined instanceof OrcInputFormat.ETLSplitStrategy);
  assertEquals(4,etlSs.files.size());
  assertEquals(2,etlSs.dirs.size());
  ss=createOrCombineStrategy(context,fs,"mock:/a/3",combineCtx);
  assertSame(etlSs,ss);
  assertEquals(4,etlSs.files.size());
  assertEquals(2,etlSs.dirs.size());
  assertTrue(combineCtx.combined instanceof OrcInputFormat.ETLSplitStrategy);
  etlSs=(OrcInputFormat.ETLSplitStrategy)combineCtx.combined;
  assertEquals(1,etlSs.files.size());
  assertFalse(etlSs.isOriginal);
  assertEquals(1,etlSs.dirs.size());
  ss=createOrCombineStrategy(context,fs,"mock:/a/1",combineCtx);
  assertTrue(ss instanceof OrcInputFormat.ETLSplitStrategy);
  assertNotSame(etlSs,ss);
  OrcInputFormat.ETLSplitStrategy rejectedEtlSs=(OrcInputFormat.ETLSplitStrategy)ss;
  assertEquals(2,rejectedEtlSs.files.size());
  assertEquals(1,rejectedEtlSs.dirs.size());
  assertTrue(rejectedEtlSs.isOriginal);
  assertEquals(1,etlSs.files.size());
  assertEquals(1,etlSs.dirs.size());
  ss=createOrCombineStrategy(context,fs,"mock:/a/4",combineCtx);
  assertNull(ss);
  assertTrue(combineCtx.combined instanceof OrcInputFormat.ETLSplitStrategy);
  assertEquals(2,etlSs.files.size());
  assertEquals(2,etlSs.dirs.size());
  ss=createOrCombineStrategy(context,fs,"mock:/a/5",combineCtx);
  assertTrue(ss instanceof OrcInputFormat.ETLSplitStrategy);
  assertNotSame(etlSs,ss);
  assertEquals(2,etlSs.files.size());
  assertEquals(2,etlSs.dirs.size());
}
