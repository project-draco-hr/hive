{
  MockFileSystem fs=new MockFileSystem(conf,new MockFile("mock:/a/file",500,createMockOrcFile(197,300,600,200,200,100,100,100,100,100),new MockBlock("host1-1","host1-2","host1-3"),new MockBlock("host2-1","host0","host2-3"),new MockBlock("host0","host3-2","host3-3"),new MockBlock("host4-1","host4-2","host4-3"),new MockBlock("host5-1","host5-2","host5-3")));
  OrcInputFormat.Context context=new OrcInputFormat.Context(conf);
  OrcInputFormat.SplitGenerator splitter=new OrcInputFormat.SplitGenerator(new OrcInputFormat.SplitInfo(context,fs,fs.getFileStatus(new Path("/a/file")),null,true,new ArrayList<AcidInputFormat.DeltaMetaData>(),true,null,null),null,true);
  OrcSplit result=splitter.createSplit(0,200,null);
  assertEquals(0,result.getStart());
  assertEquals(200,result.getLength());
  assertEquals("mock:/a/file",result.getPath().toString());
  String[] locs=result.getLocations();
  assertEquals(3,locs.length);
  assertEquals("host1-1",locs[0]);
  assertEquals("host1-2",locs[1]);
  assertEquals("host1-3",locs[2]);
  result=splitter.createSplit(500,600,null);
  locs=result.getLocations();
  assertEquals(3,locs.length);
  assertEquals("host2-1",locs[0]);
  assertEquals("host0",locs[1]);
  assertEquals("host2-3",locs[2]);
  result=splitter.createSplit(0,2500,null);
  locs=result.getLocations();
  assertEquals(1,locs.length);
  assertEquals("host0",locs[0]);
}
