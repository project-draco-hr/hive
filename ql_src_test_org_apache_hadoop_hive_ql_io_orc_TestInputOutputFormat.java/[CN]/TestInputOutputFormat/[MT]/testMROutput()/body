{
  Properties properties=new Properties();
  StructObjectInspector inspector;
synchronized (TestOrcFile.class) {
    inspector=(StructObjectInspector)ObjectInspectorFactory.getReflectionObjectInspector(NestedRow.class,ObjectInspectorFactory.ObjectInspectorOptions.JAVA);
  }
  SerDe serde=new OrcSerde();
  OutputFormat<?,?> outFormat=new OrcOutputFormat();
  RecordWriter writer=outFormat.getRecordWriter(fs,conf,testFilePath.toString(),Reporter.NULL);
  writer.write(NullWritable.get(),serde.serialize(new NestedRow(1,2,3),inspector));
  writer.write(NullWritable.get(),serde.serialize(new NestedRow(4,5,6),inspector));
  writer.write(NullWritable.get(),serde.serialize(new NestedRow(7,8,9),inspector));
  writer.close(Reporter.NULL);
  serde=new OrcSerde();
  properties.setProperty("columns","z,r");
  properties.setProperty("columns.types","int:struct<x:int,y:int>");
  SerDeUtils.initializeSerDe(serde,conf,properties,null);
  inspector=(StructObjectInspector)serde.getObjectInspector();
  InputFormat<?,?> in=new OrcInputFormat();
  FileInputFormat.setInputPaths(conf,testFilePath.toString());
  InputSplit[] splits=in.getSplits(conf,1);
  assertEquals(1,splits.length);
  ColumnProjectionUtils.appendReadColumns(conf,Collections.singletonList(1));
  conf.set("columns","z,r");
  conf.set("columns.types","int:struct<x:int,y:int>");
  org.apache.hadoop.mapred.RecordReader reader=in.getRecordReader(splits[0],conf,Reporter.NULL);
  Object key=reader.createKey();
  Object value=reader.createValue();
  int rowNum=0;
  List<? extends StructField> fields=inspector.getAllStructFieldRefs();
  StructObjectInspector inner=(StructObjectInspector)fields.get(1).getFieldObjectInspector();
  List<? extends StructField> inFields=inner.getAllStructFieldRefs();
  IntObjectInspector intInspector=(IntObjectInspector)fields.get(0).getFieldObjectInspector();
  while (reader.next(key,value)) {
    assertEquals(null,inspector.getStructFieldData(value,fields.get(0)));
    Object sub=inspector.getStructFieldData(value,fields.get(1));
    assertEquals(3 * rowNum + 1,intInspector.get(inner.getStructFieldData(sub,inFields.get(0))));
    assertEquals(3 * rowNum + 2,intInspector.get(inner.getStructFieldData(sub,inFields.get(1))));
    rowNum+=1;
  }
  assertEquals(3,rowNum);
  reader.close();
}
