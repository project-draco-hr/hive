{
  long[] stripeSizes=new long[]{200,200,200,200,100};
  MockFileSystem fs=new MockFileSystem(conf,new MockFile("mock:/a/file",500,createMockOrcFile(stripeSizes),new MockBlock("host1-1","host1-2","host1-3"),new MockBlock("host2-1","host0","host2-3"),new MockBlock("host0","host3-2","host3-3"),new MockBlock("host4-1","host4-2","host4-3"),new MockBlock("host5-1","host5-2","host5-3")));
  conf.setInt(OrcInputFormat.MAX_SPLIT_SIZE,300);
  conf.setInt(OrcInputFormat.MIN_SPLIT_SIZE,200);
  conf.setBoolean(ColumnProjectionUtils.READ_ALL_COLUMNS,false);
  conf.set(ColumnProjectionUtils.READ_COLUMN_IDS_CONF_STR,"0");
  OrcInputFormat.Context context=new OrcInputFormat.Context(conf);
  OrcInputFormat.SplitGenerator splitter=new OrcInputFormat.SplitGenerator(new OrcInputFormat.SplitInfo(context,fs,fs.getFileStatus(new Path("/a/file")),null,true,new ArrayList<AcidInputFormat.DeltaMetaData>(),true,null,null));
  List<OrcSplit> results=splitter.call();
  OrcSplit result=results.get(0);
  assertEquals(3,results.size());
  assertEquals(3,result.getStart());
  assertEquals(400,result.getLength());
  assertEquals(167468,result.getProjectedColumnsUncompressedSize());
  result=results.get(1);
  assertEquals(403,result.getStart());
  assertEquals(400,result.getLength());
  assertEquals(167468,result.getProjectedColumnsUncompressedSize());
  result=results.get(2);
  assertEquals(803,result.getStart());
  assertEquals(100,result.getLength());
  assertEquals(41867,result.getProjectedColumnsUncompressedSize());
  conf.setInt(OrcInputFormat.MIN_SPLIT_SIZE,0);
  conf.setInt(OrcInputFormat.MAX_SPLIT_SIZE,0);
  context=new OrcInputFormat.Context(conf);
  splitter=new OrcInputFormat.SplitGenerator(new OrcInputFormat.SplitInfo(context,fs,fs.getFileStatus(new Path("/a/file")),null,true,new ArrayList<AcidInputFormat.DeltaMetaData>(),true,null,null));
  results=splitter.call();
  assertEquals(5,results.size());
  for (int i=0; i < stripeSizes.length; ++i) {
    assertEquals("checking stripe " + i + " size",stripeSizes[i],results.get(i).getLength());
    if (i == stripeSizes.length - 1) {
      assertEquals(41867,results.get(i).getProjectedColumnsUncompressedSize());
    }
 else {
      assertEquals(83734,results.get(i).getProjectedColumnsUncompressedSize());
    }
  }
  conf.setInt(OrcInputFormat.MIN_SPLIT_SIZE,100000);
  conf.setInt(OrcInputFormat.MAX_SPLIT_SIZE,1000);
  context=new OrcInputFormat.Context(conf);
  splitter=new OrcInputFormat.SplitGenerator(new OrcInputFormat.SplitInfo(context,fs,fs.getFileStatus(new Path("/a/file")),null,true,new ArrayList<AcidInputFormat.DeltaMetaData>(),true,null,null));
  results=splitter.call();
  assertEquals(1,results.size());
  result=results.get(0);
  assertEquals(3,result.getStart());
  assertEquals(900,result.getLength());
  assertEquals(376804,result.getProjectedColumnsUncompressedSize());
}
