{
  SqlOperator optiqOp=SqlFunctionConverter.getOptiqOperator(func.getGenericUDF());
  List<RexNode> childRexNodeLst=new LinkedList<RexNode>();
  for (  ExprNodeDesc childExpr : func.getChildren()) {
    childRexNodeLst.add(convert(childExpr));
  }
  RexNode convertedFilterExpr=m_cluster.getRexBuilder().makeCall(optiqOp,childRexNodeLst);
  if (m_flattenExpr && convertedFilterExpr instanceof RexCall) {
    RexCall call=(RexCall)convertedFilterExpr;
    convertedFilterExpr=m_cluster.getRexBuilder().makeFlatCall(call.getOperator(),call.getOperands());
  }
  return convertedFilterExpr;
}
