{
  metrics.startStoredScope(scopeName);
  final LegacyMetrics.LegacyMetricsScope fooScope=(LegacyMetrics.LegacyMetricsScope)metrics.getStoredScope(scopeName);
  Long num=fooScope.getNumCounter();
  assertNull(num);
  Long time=fooScope.getTimeCounter();
  assertNull(time);
  assertSame(fooScope,metrics.getStoredScope(scopeName));
  Thread.sleep(periodMs + 1);
  metrics.endStoredScope(scopeName);
  assertEquals(Long.valueOf(1),fooScope.getNumCounter());
  final long t1=fooScope.getTimeCounter().longValue();
  assertTrue(t1 > periodMs);
  assertSame(fooScope,metrics.getStoredScope(scopeName));
  metrics.startStoredScope(scopeName);
  assertEquals(Long.valueOf(1),fooScope.getNumCounter());
  assertEquals(t1,fooScope.getTimeCounter().longValue());
  assertSame(fooScope,metrics.getStoredScope(scopeName));
  Thread.sleep(periodMs + 1);
  fooScope.reopen();
  assertEquals(Long.valueOf(2),fooScope.getNumCounter());
  assertTrue(fooScope.getTimeCounter().longValue() > 2 * periodMs);
  Thread.sleep(periodMs + 1);
  fooScope.close();
  assertEquals(Long.valueOf(3),fooScope.getNumCounter());
  assertTrue(fooScope.getTimeCounter().longValue() > 3 * periodMs);
  Double avgT=(Double)metrics.get("foo.avg_t");
  assertTrue(avgT.doubleValue() > periodMs);
}
