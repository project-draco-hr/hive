{
  GenericUDFUtils.ReturnObjectInspectorResolver returnOIResolver;
  returnOIResolver=new GenericUDFUtils.ReturnObjectInspectorResolver(true);
  if (arguments.length != 1) {
    throw new UDFArgumentLengthException("The function SORT_ARRAY(array(obj1, obj2,...)) needs one argument.");
  }
switch (arguments[0].getCategory()) {
case LIST:
    if (((ListObjectInspector)(arguments[0])).getListElementObjectInspector().getCategory().equals(Category.PRIMITIVE)) {
      break;
    }
default :
  throw new UDFArgumentTypeException(0,"Argument 1" + " of function SORT_ARRAY must be " + serdeConstants.LIST_TYPE_NAME + "<"+ Category.PRIMITIVE+ ">, but "+ arguments[0].getTypeName()+ " was found.");
}
ObjectInspector elementObjectInspector=((ListObjectInspector)(arguments[0])).getListElementObjectInspector();
argumentOIs=arguments;
converters=new Converter[arguments.length];
ObjectInspector returnOI=returnOIResolver.get(elementObjectInspector);
converters[0]=ObjectInspectorConverters.getConverter(elementObjectInspector,returnOI);
return ObjectInspectorFactory.getStandardListObjectInspector(returnOI);
}
