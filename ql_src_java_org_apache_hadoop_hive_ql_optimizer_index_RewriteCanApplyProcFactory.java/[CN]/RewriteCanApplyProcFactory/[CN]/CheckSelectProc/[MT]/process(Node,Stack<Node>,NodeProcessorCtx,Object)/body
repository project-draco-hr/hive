{
  SelectOperator operator=(SelectOperator)nd;
  canApplyCtx=(RewriteCanApplyCtx)ctx;
  List<Operator<? extends Serializable>> childrenList=operator.getChildOperators();
  Operator<? extends Serializable> child=childrenList.get(0);
  if (child instanceof FileSinkOperator) {
    Map<String,String> internalToAlias=new LinkedHashMap<String,String>();
    RowSchema rs=operator.getSchema();
    List<ColumnInfo> sign=rs.getSignature();
    for (    ColumnInfo columnInfo : sign) {
      internalToAlias.put(columnInfo.getInternalName(),columnInfo.getAlias());
    }
    Iterator<String> predItr=canApplyCtx.getPredicateColumnsList().iterator();
    while (predItr.hasNext()) {
      String predCol=predItr.next();
      String newPredCol="";
      if (internalToAlias.get(predCol) != null) {
        newPredCol=internalToAlias.get(predCol);
        canApplyCtx.getPredicateColumnsList().remove(predCol);
        canApplyCtx.getPredicateColumnsList().add(newPredCol);
      }
    }
  }
  return null;
}
