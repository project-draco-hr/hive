{
  CommandProcessorResponse cpr=driver.run("create database if not exists temp");
  checkCmdOnDriver(cpr);
  cpr=driver.run("create table if not exists temp.T7(a int, b int) clustered by(b) into 2 buckets stored as orc TBLPROPERTIES ('transactional'='true')");
  checkCmdOnDriver(cpr);
  cpr=driver.compileAndRespond("update temp.T7 set a = 5 where b = 6");
  checkCmdOnDriver(cpr);
  txnMgr.openTxn("Fifer");
  txnMgr.acquireLocks(driver.getPlan(),ctx,"Fifer");
  checkCmdOnDriver(driver.compileAndRespond("drop database if exists temp"));
  HiveTxnManager txnMgr2=TxnManagerFactory.getTxnManagerFactory().getTxnManager(conf);
  ((DbTxnManager)txnMgr2).acquireLocks(driver.getPlan(),ctx,"Fiddler",false);
  List<ShowLocksResponseElement> locks=getLocks();
  Assert.assertEquals("Unexpected lock count",2,locks.size());
  checkLock(LockType.SHARED_WRITE,LockState.ACQUIRED,"temp","T7",null,locks);
  checkLock(LockType.EXCLUSIVE,LockState.WAITING,"temp",null,null,locks);
  txnMgr.commitTxn();
  ((DbLockManager)txnMgr.getLockManager()).checkLock(locks.get(1).getLockid());
  locks=getLocks();
  Assert.assertEquals("Unexpected lock count",1,locks.size());
  checkLock(LockType.EXCLUSIVE,LockState.ACQUIRED,"temp",null,null,locks);
  List<HiveLock> xLock=new ArrayList<HiveLock>(0);
  xLock.add(new DbLockManager.DbHiveLock(locks.get(0).getLockid()));
  txnMgr2.getLockManager().releaseLocks(xLock);
}
