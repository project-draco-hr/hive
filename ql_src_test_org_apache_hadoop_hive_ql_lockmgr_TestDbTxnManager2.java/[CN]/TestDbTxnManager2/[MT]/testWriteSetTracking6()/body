{
  Assert.assertEquals(0,TxnDbUtil.countQueryAgent("select count(*) from WRITE_SET"));
  CommandProcessorResponse cpr=driver.run("create table if not exists TAB2(a int, b int) clustered " + "by (a) into 2  buckets stored as orc TBLPROPERTIES ('transactional'='true')");
  checkCmdOnDriver(cpr);
  checkCmdOnDriver(driver.compileAndRespond("select * from TAB2 where a = 113"));
  txnMgr.acquireLocks(driver.getPlan(),ctx,"Works");
  List<ShowLocksResponseElement> locks=getLocks(txnMgr);
  Assert.assertEquals("Unexpected lock count",1,locks.size());
  checkLock(LockType.SHARED_READ,LockState.ACQUIRED,"default","TAB2",null,locks.get(0));
  HiveTxnManager txnMgr2=TxnManagerFactory.getTxnManagerFactory().getTxnManager(conf);
  txnMgr2.openTxn("Horton");
  checkCmdOnDriver(driver.compileAndRespond("update TAB2 set b = 17 where a = 101"));
  txnMgr2.acquireLocks(driver.getPlan(),ctx,"Horton");
  Assert.assertEquals(0,TxnDbUtil.countQueryAgent("select count(*) from WRITE_SET"));
  locks=getLocks(txnMgr);
  Assert.assertEquals("Unexpected lock count",2,locks.size());
  checkLock(LockType.SHARED_READ,LockState.ACQUIRED,"default","TAB2",null,locks.get(0));
  checkLock(LockType.SHARED_WRITE,LockState.ACQUIRED,"default","TAB2",null,locks.get(1));
  txnMgr2.commitTxn();
  Assert.assertEquals(1,TxnDbUtil.countQueryAgent("select count(*) from WRITE_SET"));
  locks=getLocks(txnMgr);
  Assert.assertEquals("Unexpected lock count",1,locks.size());
  checkLock(LockType.SHARED_READ,LockState.ACQUIRED,"default","TAB2",null,locks.get(0));
  TestTxnCommands2.runHouseKeeperService(new AcidWriteSetService(),conf);
  Assert.assertEquals(0,TxnDbUtil.countQueryAgent("select count(*) from WRITE_SET"));
}
