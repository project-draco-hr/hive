{
  CommandProcessorResponse cpr=driver.run("create table if not exists T6(a int)");
  checkCmdOnDriver(cpr);
  cpr=driver.compileAndRespond("select a from T6");
  checkCmdOnDriver(cpr);
  txnMgr.acquireLocks(driver.getPlan(),ctx,"Fifer");
  List<HiveLock> selectLocks=ctx.getHiveLocks();
  cpr=driver.compileAndRespond("drop table if exists T6");
  checkCmdOnDriver(cpr);
  LockState lockState=((DbTxnManager)txnMgr).acquireLocks(driver.getPlan(),ctx,"Fiddler",false);
  List<ShowLocksResponseElement> locks=getLocks();
  Assert.assertEquals("Unexpected lock count",2,locks.size());
  checkLock(LockType.SHARED_READ,LockState.ACQUIRED,"default","T6",null,locks.get(0));
  checkLock(LockType.EXCLUSIVE,LockState.WAITING,"default","T6",null,locks.get(1));
  txnMgr.getLockManager().releaseLocks(selectLocks);
  lockState=((DbLockManager)txnMgr.getLockManager()).checkLock(locks.get(1).getLockid());
  locks=getLocks();
  Assert.assertEquals("Unexpected lock count",1,locks.size());
  checkLock(LockType.EXCLUSIVE,LockState.ACQUIRED,"default","T6",null,locks.get(0));
  List<HiveLock> xLock=new ArrayList<HiveLock>(0);
  xLock.add(new DbLockManager.DbHiveLock(locks.get(0).getLockid()));
  txnMgr.getLockManager().releaseLocks(xLock);
  cpr=driver.run("drop table if exists T6");
  locks=getLocks();
  Assert.assertEquals("Unexpected number of locks found",0,locks.size());
  checkCmdOnDriver(cpr);
}
