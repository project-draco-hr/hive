{
  CommandProcessorResponse cpr=driver.run("create table T8(a int, b int) clustered by(b) into 2 buckets stored as orc TBLPROPERTIES ('transactional'='true')");
  checkCmdOnDriver(cpr);
  cpr=driver.compileAndRespond("delete from T8 where b = 89");
  checkCmdOnDriver(cpr);
  txnMgr.acquireLocks(driver.getPlan(),ctx,"Fifer");
  List<HiveLock> deleteLocks=ctx.getHiveLocks();
  cpr=driver.compileAndRespond("select a from T8");
  checkCmdOnDriver(cpr);
  txnMgr.acquireLocks(driver.getPlan(),ctx,"Fiddler");
  cpr=driver.compileAndRespond("update T8 set a = 1 where b = 1");
  checkCmdOnDriver(cpr);
  LockState lockState=((DbTxnManager)txnMgr).acquireLocks(driver.getPlan(),ctx,"Practical",false);
  List<ShowLocksResponseElement> locks=getLocks();
  Assert.assertEquals("Unexpected lock count",3,locks.size());
  checkLock(LockType.SHARED_READ,LockState.ACQUIRED,"default","T8",null,locks.get(0));
  checkLock(LockType.SHARED_WRITE,LockState.ACQUIRED,"default","T8",null,locks.get(1));
  checkLock(LockType.SHARED_WRITE,LockState.WAITING,"default","T8",null,locks.get(2));
  txnMgr.getLockManager().releaseLocks(deleteLocks);
  lockState=((DbLockManager)txnMgr.getLockManager()).checkLock(locks.get(2).getLockid());
  locks=getLocks();
  Assert.assertEquals("Unexpected lock count",2,locks.size());
  checkLock(LockType.SHARED_READ,LockState.ACQUIRED,"default","T8",null,locks.get(0));
  checkLock(LockType.SHARED_WRITE,LockState.ACQUIRED,"default","T8",null,locks.get(1));
  List<HiveLock> relLocks=new ArrayList<HiveLock>(2);
  relLocks.add(new DbLockManager.DbHiveLock(locks.get(0).getLockid()));
  relLocks.add(new DbLockManager.DbHiveLock(locks.get(1).getLockid()));
  txnMgr.getLockManager().releaseLocks(relLocks);
  cpr=driver.run("drop table if exists T6");
  locks=getLocks();
  Assert.assertEquals("Unexpected number of locks found",0,locks.size());
  checkCmdOnDriver(cpr);
}
