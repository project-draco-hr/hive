{
  CommandProcessorResponse cpr=driver.run("create table if not exists TAB_PART (a int, b int) " + "partitioned by (p string) clustered by (a) into 2  buckets stored as orc TBLPROPERTIES ('transactional'='true')");
  checkCmdOnDriver(cpr);
  cpr=driver.run("create table if not exists TAB2 (a int, b int) partitioned by (p string) " + "clustered by (a) into 2  buckets stored as orc TBLPROPERTIES ('transactional'='true')");
  checkCmdOnDriver(cpr);
  HiveTxnManager txnMgr2=TxnManagerFactory.getTxnManagerFactory().getTxnManager(conf);
  txnMgr.openTxn("Peter");
  checkCmdOnDriver(driver.compileAndRespond("update TAB_PART set b = 7 where p = 'blah'"));
  txnMgr.acquireLocks(driver.getPlan(),ctx,"Peter");
  txnMgr2.openTxn("Catherine");
  List<ShowLocksResponseElement> locks=getLocks(txnMgr);
  Assert.assertEquals("Unexpected lock count",1,locks.size());
  checkLock(LockType.SHARED_WRITE,LockState.ACQUIRED,"default","TAB_PART",null,locks);
  txnMgr.commitTxn();
  checkCmdOnDriver(driver.compileAndRespond("update TAB2 set b = 9 where p = 'doh'"));
  txnMgr2.acquireLocks(driver.getPlan(),ctx,"Catherine");
  txnMgr2.commitTxn();
}
