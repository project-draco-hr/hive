def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('ThriftTestObj')
    if (self.field1 is not None):
        oprot.writeFieldBegin('field1', TType.I32, 1)
        oprot.writeI32(self.field1)
        oprot.writeFieldEnd()
    if (self.field2 is not None):
        oprot.writeFieldBegin('field2', TType.STRING, 2)
        oprot.writeString(self.field2)
        oprot.writeFieldEnd()
    if (self.field3 is not None):
        oprot.writeFieldBegin('field3', TType.LIST, 3)
        oprot.writeListBegin(TType.STRUCT, len(self.field3))
        for iter6 in self.field3:
            iter6.write(oprot)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
