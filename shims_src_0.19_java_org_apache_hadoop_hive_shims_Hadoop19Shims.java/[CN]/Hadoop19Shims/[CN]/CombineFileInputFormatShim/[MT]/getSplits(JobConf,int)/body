{
  long minSize=job.getLong("mapred.min.split.size",0);
  if (job.getLong("mapred.min.split.size.per.node",0) == 0) {
    super.setMinSplitSize(minSize);
  }
  if (job.getLong("mapred.min.split.size.per.rack",0) == 0) {
    super.setMinSplitSize(minSize);
  }
  numSplits=(int)job.getLong("mapred.multifileinputformat.splits",estimateNumSplits(job,numSplits));
  LOG.debug("Estimated splits (numSplits) = " + numSplits);
  MultiFileSplit[] splits=(MultiFileSplit[])super.getSplits(job,numSplits);
  LOG.debug("MultiFileSplit returned " + splits.length + " splits.");
  InputSplitShim[] isplits=new InputSplitShim[splits.length];
  for (int pos=0; pos < splits.length; pos++) {
    isplits[pos]=new InputSplitShim(job,splits[pos]);
  }
  return isplits;
}
