{
  if (rootTasks.size() == 0) {
    return;
  }
  CreateTableDesc desc=((DDLTask)rootTasks.get(rootTasks.size() - 1)).getWork().getCreateTblDesc();
  if (desc == null) {
    return;
  }
  Map<String,String> tblProps=desc.getTblProps();
  if (tblProps == null) {
    tblProps=new HashMap<String,String>();
  }
  String storageHandler=desc.getStorageHandler();
  if (StringUtils.isEmpty(storageHandler)) {
  }
 else {
    try {
      HCatStorageHandler storageHandlerInst=HCatUtil.getStorageHandler(context.getConf(),desc.getStorageHandler(),desc.getSerName(),desc.getInputFormat(),desc.getOutputFormat());
    }
 catch (    IOException e) {
      throw new SemanticException(e);
    }
  }
  if (desc != null) {
    try {
      Table table=context.getHive().newTable(desc.getTableName());
      if (desc.getLocation() != null) {
        table.setDataLocation(new Path(desc.getLocation()));
      }
      if (desc.getStorageHandler() != null) {
        table.setProperty(org.apache.hadoop.hive.metastore.api.hive_metastoreConstants.META_TABLE_STORAGE,desc.getStorageHandler());
      }
      for (      Map.Entry<String,String> prop : tblProps.entrySet()) {
        table.setProperty(prop.getKey(),prop.getValue());
      }
      for (      Map.Entry<String,String> prop : desc.getSerdeProps().entrySet()) {
        table.setSerdeParam(prop.getKey(),prop.getValue());
      }
      if (HiveConf.getBoolVar(context.getConf(),HiveConf.ConfVars.HIVE_AUTHORIZATION_ENABLED)) {
        authorize(table,Privilege.CREATE);
      }
    }
 catch (    HiveException ex) {
      throw new SemanticException(ex);
    }
  }
  desc.setTblProps(tblProps);
  context.getConf().set(HCatConstants.HCAT_CREATE_TBL_NAME,tableName);
}
