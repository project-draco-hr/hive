{
  for (  HiveObjectPrivilege priv : privileges.getPrivileges()) {
    PrivilegeInfo privilegeInfo=findPrivilegeToGrantOrRevoke(priv);
    for (    PrivilegeGrantInfo info : privilegeInfo.grants) {
      if (info.getPrivilege().equals(priv.getGrantInfo().getPrivilege())) {
        throw new InvalidObjectException(priv.getPrincipalName() + " already has " + priv.getGrantInfo().getPrivilege()+ " on "+ privilegeInfo.typeErrMsg);
      }
    }
    privilegeInfo.grants.add(priv.getGrantInfo());
    writeBackGrantOrRevoke(priv,privilegeInfo);
  }
  return true;
}
