{
  List<MRoleMap> maps=new ArrayList<MRoleMap>();
  try {
    Map<String,GrantInfoWritable> roles=getHBase().getPrincipalDirectRoles(principalName,principalType);
    for (    Map.Entry<String,GrantInfoWritable> e : roles.entrySet()) {
      maps.add(new MRoleMap(principalName,principalType.toString(),new MRole(e.getKey(),0,null),e.getValue().addTime,e.getValue().grantor,e.getValue().grantorType.toString(),e.getValue().grantOption));
    }
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  if (principalType == PrincipalType.USER) {
    maps.add(new MRoleMap(principalName,principalType.toString(),new MRole(HiveMetaStore.PUBLIC,0,null),0,null,null,false));
  }
  return maps;
}
