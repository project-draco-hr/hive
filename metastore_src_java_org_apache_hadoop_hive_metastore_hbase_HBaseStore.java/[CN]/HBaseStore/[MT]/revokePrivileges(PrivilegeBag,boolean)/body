{
  boolean commit=false;
  openTransaction();
  try {
    for (    HiveObjectPrivilege priv : privileges.getPrivileges()) {
      PrivilegeInfo privilegeInfo=findPrivilegeToGrantOrRevoke(priv);
      for (int i=0; i < privilegeInfo.grants.size(); i++) {
        if (privilegeInfo.grants.get(i).getPrivilege().equals(priv.getGrantInfo().getPrivilege())) {
          if (grantOption)           privilegeInfo.grants.get(i).setGrantOption(false);
 else           privilegeInfo.grants.remove(i);
          break;
        }
      }
      writeBackGrantOrRevoke(priv,privilegeInfo);
    }
    commit=true;
    return true;
  }
  finally {
    commitOrRoleBack(commit);
  }
}
