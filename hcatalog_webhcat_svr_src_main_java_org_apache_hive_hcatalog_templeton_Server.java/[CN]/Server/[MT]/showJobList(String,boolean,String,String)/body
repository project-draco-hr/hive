{
  verifyUser();
  boolean showDetails=false;
  if (fields != null && !fields.equals("*")) {
    throw new BadParam("fields value other than * is not supported");
  }
  if (fields != null && fields.equals("*")) {
    showDetails=true;
  }
  ListDelegator ld=new ListDelegator(appConf);
  List<String> list=ld.run(getDoAsUser(),showall);
  List<JobItemBean> detailList=new ArrayList<JobItemBean>();
  int currRecord=0;
  int numRecords;
  try {
    if (numrecords != null) {
      numRecords=Integer.parseInt(numrecords);
      if (numRecords <= 0) {
        throw new BadParam("numrecords should be an integer > 0");
      }
    }
 else {
      numRecords=-1;
    }
  }
 catch (  Exception e) {
    throw new BadParam("Invalid numrecords format: numrecords should be an integer > 0");
  }
  boolean isAscendingOrder=true;
switch (appConf.getListJobsOrder()) {
case lexicographicaldesc:
    Collections.sort(list,Collections.reverseOrder());
  isAscendingOrder=false;
break;
case lexicographicalasc:
default :
Collections.sort(list);
break;
}
for (String job : list) {
if (numRecords != -1) {
if (currRecord >= numRecords) {
break;
}
 else if (jobid == null || jobid.trim().length() == 0) {
currRecord++;
}
 else if (isAscendingOrder && job.compareTo(jobid) > 0 || !isAscendingOrder && job.compareTo(jobid) < 0) {
currRecord++;
}
 else {
continue;
}
}
JobItemBean jobItem=new JobItemBean();
jobItem.id=job;
if (showDetails) {
StatusDelegator sd=new StatusDelegator(appConf);
try {
jobItem.detail=sd.run(getDoAsUser(),job);
}
 catch (Exception ex) {
LOG.info("Failed to get status detail for jobId='" + job + "'",ex);
jobItem.detail=new QueueStatusBean(job,"Failed to retrieve status; see WebHCat logs");
}
}
detailList.add(jobItem);
}
return detailList;
}
