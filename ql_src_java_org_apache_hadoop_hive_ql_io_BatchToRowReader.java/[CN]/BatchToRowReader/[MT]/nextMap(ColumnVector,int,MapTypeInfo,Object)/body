{
  if (vector.isRepeating) {
    row=0;
  }
  if (vector.noNulls || !vector.isNull[row]) {
    MapColumnVector map=(MapColumnVector)vector;
    int length=(int)map.lengths[row];
    int offset=(int)map.offsets[row];
    TypeInfo keyType=schema.getMapKeyTypeInfo();
    TypeInfo valueType=schema.getMapValueTypeInfo();
    HashMap<Object,Object> result;
    if (previous == null || previous.getClass() != HashMap.class) {
      result=new HashMap<Object,Object>(length);
    }
 else {
      result=(HashMap<Object,Object>)previous;
      result.clear();
    }
    for (int e=0; e < length; ++e) {
      result.put(nextValue(map.keys,e + offset,keyType,null),nextValue(map.values,e + offset,valueType,null));
    }
    return result;
  }
 else {
    return null;
  }
}
