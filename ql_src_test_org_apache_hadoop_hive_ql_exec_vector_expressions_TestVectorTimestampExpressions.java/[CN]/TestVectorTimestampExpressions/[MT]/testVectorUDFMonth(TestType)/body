{
  VectorizedRowBatch batch=getVectorizedRowBatch(new long[]{0},VectorizedRowBatch.DEFAULT_SIZE,testType);
  Assert.assertTrue(((LongColumnVector)batch.cols[1]).noNulls);
  Assert.assertFalse(((LongColumnVector)batch.cols[1]).isRepeating);
  verifyUDFMonth(batch,testType);
  TestVectorizedRowBatch.addRandomNulls(batch.cols[0]);
  verifyUDFMonth(batch,testType);
  long[] boundaries=getAllBoundaries();
  batch=getVectorizedRowBatch(boundaries,boundaries.length,testType);
  verifyUDFMonth(batch,testType);
  TestVectorizedRowBatch.addRandomNulls(batch.cols[0]);
  verifyUDFMonth(batch,testType);
  TestVectorizedRowBatch.addRandomNulls(batch.cols[1]);
  verifyUDFMonth(batch,testType);
  batch=getVectorizedRowBatch(new long[]{0},1,testType);
  batch.cols[0].isRepeating=true;
  verifyUDFMonth(batch,testType);
  batch.cols[0].noNulls=false;
  batch.cols[0].isNull[0]=true;
  verifyUDFMonth(batch,testType);
  batch=getVectorizedRowBatch(new long[]{0},1,testType);
  batch.cols[0].isRepeating=true;
  batch.selectedInUse=true;
  batch.selected=new int[]{42};
  verifyUDFMonth(batch,testType);
  batch.cols[0].noNulls=false;
  batch.cols[0].isNull[0]=true;
  verifyUDFMonth(batch,testType);
  batch=getVectorizedRandomRowBatch(200,VectorizedRowBatch.DEFAULT_SIZE,testType);
  verifyUDFMonth(batch,testType);
  TestVectorizedRowBatch.addRandomNulls(batch.cols[0]);
  verifyUDFMonth(batch,testType);
  TestVectorizedRowBatch.addRandomNulls(batch.cols[1]);
  verifyUDFMonth(batch,testType);
}
