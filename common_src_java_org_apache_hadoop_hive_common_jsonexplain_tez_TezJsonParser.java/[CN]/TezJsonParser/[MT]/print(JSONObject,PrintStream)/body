{
  LOG.info("JsonParser is parsing:" + inputObject.toString());
  this.extractStagesAndPlans(inputObject);
  Printer printer=new Printer();
  if (inputObject.has("cboInfo")) {
    printer.println(inputObject.getString("cboInfo"));
    printer.println();
  }
  for (  Stage candidate : this.stages.values()) {
    if (candidate.tezStageDependency != null && candidate.tezStageDependency.size() > 0) {
      printer.println("Vertex dependency in root stage");
      for (      Entry<Vertex,List<Connection>> entry : candidate.tezStageDependency.entrySet()) {
        StringBuilder sb=new StringBuilder();
        sb.append(entry.getKey().name);
        sb.append(" <- ");
        boolean printcomma=false;
        for (        Connection connection : entry.getValue()) {
          if (printcomma) {
            sb.append(", ");
          }
 else {
            printcomma=true;
          }
          sb.append(connection.from.name + " (" + connection.type+ ")");
        }
        printer.println(sb.toString());
      }
      printer.println();
    }
  }
  List<Boolean> indentFlag=new ArrayList<>();
  for (  Stage candidate : this.stages.values()) {
    if (candidate.childStages.isEmpty()) {
      candidate.print(printer,indentFlag);
    }
  }
  outputStream.println(printer.toString());
}
