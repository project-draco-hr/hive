{
  GenericUDFOPDivide udf=new GenericUDFOPDivide();
  ByteWritable left=new ByteWritable((byte)4);
  ShortWritable right=new ShortWritable((short)6);
  ObjectInspector[] inputOIs={PrimitiveObjectInspectorFactory.writableByteObjectInspector,PrimitiveObjectInspectorFactory.writableShortObjectInspector};
  DeferredObject[] args={new DeferredJavaObject(left),new DeferredJavaObject(right)};
  PrimitiveObjectInspector oi=(PrimitiveObjectInspector)udf.initialize(inputOIs);
  Assert.assertEquals(oi.getTypeInfo(),TypeInfoFactory.getDecimalTypeInfo(21,18));
  HiveDecimalWritable res=(HiveDecimalWritable)udf.evaluate(args);
  Assert.assertEquals(HiveDecimal.create("0.666666666666666667"),res.getHiveDecimal());
}
