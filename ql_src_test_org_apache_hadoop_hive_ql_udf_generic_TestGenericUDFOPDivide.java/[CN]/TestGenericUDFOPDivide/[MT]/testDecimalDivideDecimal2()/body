{
  GenericUDFOPDivide udf=new GenericUDFOPDivide();
  HiveDecimalWritable left=new HiveDecimalWritable(HiveDecimal.create("5"));
  HiveDecimalWritable right=new HiveDecimalWritable(HiveDecimal.create("25"));
  ObjectInspector[] inputOIs={PrimitiveObjectInspectorFactory.getPrimitiveWritableObjectInspector(TypeInfoFactory.getDecimalTypeInfo(1,0)),PrimitiveObjectInspectorFactory.getPrimitiveWritableObjectInspector(TypeInfoFactory.getDecimalTypeInfo(2,0))};
  DeferredObject[] args={new DeferredJavaObject(left),new DeferredJavaObject(right)};
  PrimitiveObjectInspector oi=(PrimitiveObjectInspector)udf.initialize(inputOIs);
  Assert.assertEquals(TypeInfoFactory.getDecimalTypeInfo(19,18),oi.getTypeInfo());
  HiveDecimalWritable res=(HiveDecimalWritable)udf.evaluate(args);
  Assert.assertEquals(HiveDecimal.create("0.2"),res.getHiveDecimal());
}
