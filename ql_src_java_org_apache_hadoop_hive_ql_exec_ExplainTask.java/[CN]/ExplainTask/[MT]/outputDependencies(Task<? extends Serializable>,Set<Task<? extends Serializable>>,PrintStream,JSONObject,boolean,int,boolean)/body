{
  if (dependeciesTaskSet.contains(task)) {
    return null;
  }
  dependeciesTaskSet.add(task);
  boolean first=true;
  JSONObject json=jsonOutput ? new JSONObject() : null;
  if (out != null) {
    out.print(indentString(indent));
    out.printf("%s",task.getId());
  }
  if ((task.getParentTasks() == null || task.getParentTasks().isEmpty())) {
    if (rootTskCandidate) {
      if (out != null) {
        out.print(" is a root stage");
      }
      if (jsonOutput) {
        json.put("ROOT STAGE","TRUE");
      }
    }
  }
 else {
    StringBuffer s=new StringBuffer();
    first=true;
    for (    Task<? extends Serializable> parent : task.getParentTasks()) {
      if (!first) {
        s.append(", ");
      }
      first=false;
      s.append(parent.getId());
    }
    if (out != null) {
      out.print(" depends on stages: ");
      out.print(s.toString());
    }
    if (jsonOutput) {
      json.put("DEPENDENT STAGES",s.toString());
    }
  }
  Task<? extends Serializable> currBackupTask=task.getBackupTask();
  if (currBackupTask != null) {
    if (out != null) {
      out.print(" has a backup stage: ");
      out.print(currBackupTask.getId());
    }
    if (jsonOutput) {
      json.put("BACKUP STAGE",currBackupTask.getId());
    }
  }
  if (task instanceof ConditionalTask && ((ConditionalTask)task).getListTasks() != null) {
    StringBuffer s=new StringBuffer();
    first=true;
    for (    Task<? extends Serializable> con : ((ConditionalTask)task).getListTasks()) {
      if (!first) {
        s.append(", ");
      }
      first=false;
      s.append(con.getId());
    }
    if (out != null) {
      out.print(" , consists of ");
      out.print(s.toString());
    }
    if (jsonOutput) {
      json.put("CONDITIONAL CHILD TASKS",s.toString());
    }
  }
  if (out != null) {
    out.println();
  }
  if (task instanceof ConditionalTask && ((ConditionalTask)task).getListTasks() != null) {
    for (    Task<? extends Serializable> con : ((ConditionalTask)task).getListTasks()) {
      JSONObject jsonOut=outputDependencies(con,dependeciesTaskSet,out,parentJson,jsonOutput,jsonOutput ? 0 : indent,false);
      if (jsonOutput && (jsonOut != null)) {
        parentJson.put(con.getId(),jsonOut);
      }
    }
  }
  if (task.getChildTasks() != null) {
    for (    Task<? extends Serializable> child : task.getChildTasks()) {
      JSONObject jsonOut=outputDependencies(child,dependeciesTaskSet,out,parentJson,jsonOutput,jsonOutput ? 0 : indent,true);
      if (jsonOutput && (jsonOut != null)) {
        parentJson.put(child.getId(),jsonOut);
      }
    }
  }
  return jsonOutput ? json : null;
}
