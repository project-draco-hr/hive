{
  if (arguments.length < 2) {
    throw new UDFArgumentLengthException("The function CONCAT_WS(separator,[string | array(string)]+) " + "needs at least two arguments.");
  }
  for (int i=0; i < arguments.length; i++) {
switch (arguments[i].getCategory()) {
case LIST:
      if (((ListObjectInspector)arguments[i]).getListElementObjectInspector().getTypeName().equals(Constants.STRING_TYPE_NAME) || ((ListObjectInspector)arguments[i]).getListElementObjectInspector().getTypeName().equals(Constants.VOID_TYPE_NAME))       break;
case PRIMITIVE:
    if (arguments[i].getTypeName().equals(Constants.STRING_TYPE_NAME) || arguments[i].getTypeName().equals(Constants.VOID_TYPE_NAME))     break;
default :
  throw new UDFArgumentTypeException(i,"Argument " + (i + 1) + " of function CONCAT_WS must be \""+ Constants.STRING_TYPE_NAME+ " or "+ Constants.LIST_TYPE_NAME+ "<"+ Constants.STRING_TYPE_NAME+ ">\", but \""+ arguments[i].getTypeName()+ "\" was found.");
}
}
argumentOIs=arguments;
return PrimitiveObjectInspectorFactory.writableStringObjectInspector;
}
