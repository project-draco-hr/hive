{
  GenMRProcContext ctx=(GenMRProcContext)opProcCtx;
  Task<? extends Serializable> currTask=ctx.getCurrTask();
  Path dest=null;
  List<FileSinkOperator> seenFSOps=ctx.getSeenFileSinkOps();
  if (seenFSOps == null) {
    seenFSOps=new ArrayList<FileSinkOperator>();
  }
  if (!seenFSOps.contains(fsOp)) {
    seenFSOps.add(fsOp);
  }
  ctx.setSeenFileSinkOps(seenFSOps);
  dest=GenMapRedUtils.createMoveTask(ctx.getCurrTask(),chDir,fsOp,ctx.getParseCtx(),ctx.getMvTask(),ctx.getConf(),ctx.getDependencyTaskForMultiInsert());
  TableScanOperator currTopOp=ctx.getCurrTopOp();
  String currAliasId=ctx.getCurrAliasId();
  HashMap<Operator<? extends OperatorDesc>,Task<? extends Serializable>> opTaskMap=ctx.getOpTaskMap();
  if (currTopOp != null) {
    Task<? extends Serializable> mapTask=opTaskMap.get(null);
    if (mapTask == null) {
      if (!ctx.isSeenOp(currTask,currTopOp)) {
        GenMapRedUtils.setTaskPlan(currAliasId,currTopOp,currTask,false,ctx);
      }
      opTaskMap.put(null,currTask);
    }
 else {
      if (!ctx.isSeenOp(currTask,currTopOp)) {
        GenMapRedUtils.setTaskPlan(currAliasId,currTopOp,mapTask,false,ctx);
      }
 else {
        UnionOperator currUnionOp=ctx.getCurrUnionOp();
        if (currUnionOp != null) {
          opTaskMap.put(null,currTask);
          ctx.setCurrTopOp(null);
          GenMapRedUtils.initUnionPlan(ctx,currUnionOp,currTask,false);
          return dest;
        }
      }
    }
    return dest;
  }
  UnionOperator currUnionOp=ctx.getCurrUnionOp();
  if (currUnionOp != null) {
    opTaskMap.put(null,currTask);
    GenMapRedUtils.initUnionPlan(ctx,currUnionOp,currTask,false);
    return dest;
  }
  return dest;
}
