{
  GenMRProcContext ctx=(GenMRProcContext)opProcCtx;
  ParseContext parseCtx=ctx.getParseCtx();
  boolean chDir=false;
  Task<? extends Serializable> currTask=ctx.getCurrTask();
  if ((ctx.getMvTask() != null) && (!ctx.getMvTask().isEmpty())) {
    List<Task<? extends Serializable>> mvTasks=ctx.getMvTask();
    if ((ctx.getSeenFileSinkOps() == null) || (!ctx.getSeenFileSinkOps().contains(nd))) {
      MoveTask mvTask=(MoveTask)findMoveTask(mvTasks,(FileSinkOperator)nd);
      if ((mvTask != null) && !mvTask.isLocal()) {
        if ((parseCtx.getConf().getBoolVar(HiveConf.ConfVars.HIVEMERGEMAPFILES) && (((mapredWork)currTask.getWork()).getReducer() == null)) || (parseCtx.getConf().getBoolVar(HiveConf.ConfVars.HIVEMERGEMAPREDFILES) && (((mapredWork)currTask.getWork()).getReducer() != null))) {
          chDir=true;
        }
      }
    }
  }
  String finalName=processFS(nd,stack,opProcCtx,chDir);
  if (chDir && (finalName != null)) {
    createMergeJob((FileSinkOperator)nd,ctx,finalName);
  }
  return null;
}
