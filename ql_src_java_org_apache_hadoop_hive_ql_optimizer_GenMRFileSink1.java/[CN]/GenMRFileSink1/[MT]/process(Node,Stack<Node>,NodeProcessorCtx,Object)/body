{
  GenMRProcContext ctx=(GenMRProcContext)opProcCtx;
  ParseContext parseCtx=ctx.getParseCtx();
  boolean chDir=false;
  Task<? extends Serializable> currTask=ctx.getCurrTask();
  FileSinkOperator fsOp=(FileSinkOperator)nd;
  boolean isInsertTable=fsOp.getConf().getTableInfo().getTableName() != null && parseCtx.getQB().getParseInfo().isInsertToTable();
  HiveConf hconf=parseCtx.getConf();
  if ((ctx.getMvTask() != null) && (!ctx.getMvTask().isEmpty())) {
    List<Task<MoveWork>> mvTasks=ctx.getMvTask();
    if ((ctx.getSeenFileSinkOps() == null) || (!ctx.getSeenFileSinkOps().contains(nd))) {
      MoveTask mvTask=(MoveTask)findMoveTask(mvTasks,fsOp);
      if (isInsertTable && hconf.getBoolVar(HiveConf.ConfVars.HIVESTATSAUTOGATHER)) {
        addStatsTask(fsOp,mvTask,currTask,parseCtx.getConf());
      }
      if ((mvTask != null) && !mvTask.isLocal()) {
        MapredWork currWork=(MapredWork)currTask.getWork();
        boolean mergeMapOnly=hconf.getBoolVar(HiveConf.ConfVars.HIVEMERGEMAPFILES) && currWork.getReducer() == null;
        boolean mergeMapRed=hconf.getBoolVar(HiveConf.ConfVars.HIVEMERGEMAPREDFILES) && currWork.getReducer() != null;
        if (mergeMapOnly || mergeMapRed) {
          chDir=true;
        }
      }
    }
  }
  String finalName=processFS(nd,stack,opProcCtx,chDir);
  if (chDir && (finalName != null)) {
    createMergeJob((FileSinkOperator)nd,ctx,finalName);
  }
  return null;
}
