{
  Iterator<WriteEntity> outIter=outputs.iterator();
  while (outIter.hasNext()) {
switch (outIter.next().getType()) {
case DFS_DIR:
case LOCAL_DIR:
      outIter.remove();
    break;
default :
  break;
}
}
HashSet<Task<? extends Serializable>> leaves=new LinkedHashSet<Task<? extends Serializable>>();
getLeafTasks(rootTasks,leaves);
assert(leaves.size() > 0);
for (Task<? extends Serializable> task : leaves) {
if (task instanceof StatsTask) {
for (Task<? extends Serializable> parentOfStatsTask : task.getParentTasks()) {
  parentOfStatsTask.addDependentTask(createTask);
}
for (Task<? extends Serializable> parentOfCrtTblTask : createTask.getParentTasks()) {
  parentOfCrtTblTask.removeDependentTask(task);
}
createTask.addDependentTask(task);
}
 else {
task.addDependentTask(createTask);
}
}
}
