{
  String name=getTTable().getTableName();
  if (null == name || name.length() == 0 || !MetaStoreUtils.validateName(name)) {
    throw new HiveException("[" + name + "]: is not a valid table name");
  }
  if (0 == getCols().size()) {
    throw new HiveException("atleast one column must be specified for the table");
  }
  if (null == getDeserializer()) {
    throw new HiveException("must specify a non-null serDe");
  }
  if (null == getInputFormatClass()) {
    throw new HiveException("must specify an InputFormat class");
  }
  if (null == getOutputFormatClass()) {
    throw new HiveException("must specify an OutputFormat class");
  }
  Iterator<FieldSchema> iterCols=getCols().iterator();
  List<String> colNames=new ArrayList<String>();
  while (iterCols.hasNext()) {
    String colName=iterCols.next().getName();
    Iterator<String> iter=colNames.iterator();
    while (iter.hasNext()) {
      String oldColName=iter.next();
      if (colName.equalsIgnoreCase(oldColName))       throw new HiveException("Duplicate column name " + colName + " in the table definition.");
    }
    colNames.add(colName.toLowerCase());
  }
  if (getPartCols() != null) {
    Iterator<FieldSchema> partColsIter=getPartCols().iterator();
    while (partColsIter.hasNext()) {
      String partCol=partColsIter.next().getName();
      if (colNames.contains(partCol.toLowerCase()))       throw new HiveException("Partition column name " + partCol + " conflicts with table columns.");
    }
  }
  return;
}
