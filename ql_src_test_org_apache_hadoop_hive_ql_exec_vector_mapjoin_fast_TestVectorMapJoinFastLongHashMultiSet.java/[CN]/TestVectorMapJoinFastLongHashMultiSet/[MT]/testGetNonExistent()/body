{
  random=new Random(4000);
  VectorMapJoinFastLongHashMultiSet map=new VectorMapJoinFastLongHashMultiSet(false,false,HashTableKeyType.LONG,CAPACITY,LOAD_FACTOR,WB_SIZE);
  VerifyFastLongHashMultiSet verifyTable=new VerifyFastLongHashMultiSet();
  long key1=random.nextLong();
  map.testPutRow(key1);
  verifyTable.add(key1);
  verifyTable.verify(map);
  long key2=key1+=1;
  VectorMapJoinHashMultiSetResult hashMultiSetResult=map.createHashMultiSetResult();
  JoinUtil.JoinResult joinResult=map.contains(key2,hashMultiSetResult);
  assertTrue(joinResult == JoinUtil.JoinResult.NOMATCH);
  assertEquals(hashMultiSetResult.count(),0);
  map.testPutRow(key2);
  verifyTable.add(key2);
  verifyTable.verify(map);
  long key3=key2+=1;
  hashMultiSetResult=map.createHashMultiSetResult();
  joinResult=map.contains(key3,hashMultiSetResult);
  assertTrue(joinResult == JoinUtil.JoinResult.NOMATCH);
  assertEquals(hashMultiSetResult.count(),0);
}
