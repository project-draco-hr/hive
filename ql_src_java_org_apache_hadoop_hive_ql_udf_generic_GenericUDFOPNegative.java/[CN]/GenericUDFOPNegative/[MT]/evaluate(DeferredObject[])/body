{
  if (arguments[0] == null) {
    return null;
  }
  Object input=arguments[0].get();
  if (input == null) {
    return null;
  }
  input=converter.convert(input);
  if (input == null) {
    return null;
  }
switch (resultOI.getPrimitiveCategory()) {
case BYTE:
    byteWritable.set((byte)-(((ByteWritable)input).get()));
  return byteWritable;
case SHORT:
shortWritable.set((short)-(((ShortWritable)input).get()));
return shortWritable;
case INT:
intWritable.set(-(((IntWritable)input).get()));
return intWritable;
case LONG:
longWritable.set(-(((LongWritable)input).get()));
return longWritable;
case FLOAT:
floatWritable.set(-(((FloatWritable)input).get()));
return floatWritable;
case DOUBLE:
doubleWritable.set(-(((DoubleWritable)input).get()));
return doubleWritable;
case DECIMAL:
HiveDecimal dec=((HiveDecimalWritable)input).getHiveDecimal();
decimalWritable.set(dec.negate());
return decimalWritable;
default :
throw new RuntimeException("Unexpected type in evaluating " + opName + ": "+ resultOI.getPrimitiveCategory());
}
}
