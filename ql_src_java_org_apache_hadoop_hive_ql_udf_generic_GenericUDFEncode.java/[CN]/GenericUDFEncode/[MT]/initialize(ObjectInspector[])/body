{
  if (arguments.length != 2) {
    throw new UDFArgumentLengthException("Encode() requires exactly two arguments");
  }
  if (arguments[0].getCategory() != Category.PRIMITIVE || PrimitiveGrouping.STRING_GROUP != PrimitiveObjectInspectorUtils.getPrimitiveGrouping(((PrimitiveObjectInspector)arguments[0]).getPrimitiveCategory())) {
    throw new UDFArgumentTypeException(0,"The first argument to Encode() must be a string/varchar");
  }
  stringOI=(PrimitiveObjectInspector)arguments[0];
  if (arguments[1].getCategory() != Category.PRIMITIVE || PrimitiveGrouping.STRING_GROUP != PrimitiveObjectInspectorUtils.getPrimitiveGrouping(((PrimitiveObjectInspector)arguments[1]).getPrimitiveCategory())) {
    throw new UDFArgumentTypeException(1,"The second argument to Encode() must be a string/varchar");
  }
  charsetOI=(PrimitiveObjectInspector)arguments[1];
  if (charsetOI instanceof ConstantObjectInspector) {
    String charSetName=((ConstantObjectInspector)arguments[1]).getWritableConstantValue().toString();
    encoder=Charset.forName(charSetName).newEncoder().onMalformedInput(CodingErrorAction.REPORT).onUnmappableCharacter(CodingErrorAction.REPORT);
  }
  result=new BytesWritable();
  return (ObjectInspector)PrimitiveObjectInspectorFactory.writableBinaryObjectInspector;
}
