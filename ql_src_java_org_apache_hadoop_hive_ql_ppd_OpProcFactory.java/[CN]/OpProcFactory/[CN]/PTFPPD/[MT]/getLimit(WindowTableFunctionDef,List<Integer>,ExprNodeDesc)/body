{
  if (!(expr instanceof ExprNodeGenericFuncDesc)) {
    return null;
  }
  ExprNodeGenericFuncDesc fExpr=(ExprNodeGenericFuncDesc)expr;
  if (!(fExpr.getGenericUDF() instanceof GenericUDFOPLessThan) && !(fExpr.getGenericUDF() instanceof GenericUDFOPEqualOrLessThan)) {
    return null;
  }
  if (!(fExpr.getChildren().get(0) instanceof ExprNodeColumnDesc)) {
    return null;
  }
  if (!(fExpr.getChildren().get(1) instanceof ExprNodeConstantDesc)) {
    return null;
  }
  ExprNodeConstantDesc constantExpr=(ExprNodeConstantDesc)fExpr.getChildren().get(1);
  if (constantExpr.getTypeInfo() != TypeInfoFactory.intTypeInfo) {
    return null;
  }
  int limit=(Integer)constantExpr.getValue();
  if (fExpr.getGenericUDF() instanceof GenericUDFOPEqualOrLessThan) {
    limit=limit + 1;
  }
  String colName=((ExprNodeColumnDesc)fExpr.getChildren().get(0)).getColumn();
  for (int i=0; i < rFnIdxs.size(); i++) {
    String fAlias=wTFn.getWindowFunctions().get(i).getAlias();
    if (fAlias.equals(colName)) {
      return new int[]{limit,i};
    }
  }
  return null;
}
