{
  List<String> queries=new ArrayList<String>();
  StringBuilder prefix=new StringBuilder();
  StringBuilder suffix=new StringBuilder();
  prefix.append("select count(*) from TXNS where ");
  suffix.append(" and TXN_STATE = 'o'");
  conf.setIntVar(HiveConf.ConfVars.METASTORE_DIRECT_SQL_MAX_QUERY_LENGTH,1);
  conf.setIntVar(HiveConf.ConfVars.METASTORE_DIRECT_SQL_MAX_ELEMENTS_IN_CLAUSE,10);
  List<Long> inList=new ArrayList<Long>();
  for (long i=1; i <= 200; i++) {
    inList.add(i);
  }
  TxnUtils.buildQueryWithINClause(conf,queries,prefix,suffix,inList,"TXN_ID",true,false);
  Assert.assertEquals(1,queries.size());
  runAgainstDerby(queries);
  queries.clear();
  inList.add((long)201);
  TxnUtils.buildQueryWithINClause(conf,queries,prefix,suffix,inList,"TXN_ID",true,false);
  Assert.assertEquals(2,queries.size());
  runAgainstDerby(queries);
  conf.setIntVar(HiveConf.ConfVars.METASTORE_DIRECT_SQL_MAX_QUERY_LENGTH,10);
  conf.setIntVar(HiveConf.ConfVars.METASTORE_DIRECT_SQL_MAX_ELEMENTS_IN_CLAUSE,1000);
  queries.clear();
  for (long i=202; i <= 4321; i++) {
    inList.add(i);
  }
  TxnUtils.buildQueryWithINClause(conf,queries,prefix,suffix,inList,"TXN_ID",true,false);
  Assert.assertEquals(3,queries.size());
  runAgainstDerby(queries);
  queries.clear();
  TxnUtils.buildQueryWithINClause(conf,queries,prefix,suffix,inList,"TXN_ID",true,true);
  Assert.assertEquals(3,queries.size());
  runAgainstDerby(queries);
  queries.clear();
  suffix.setLength(0);
  suffix.append("");
  TxnUtils.buildQueryWithINClause(conf,queries,prefix,suffix,inList,"TXN_ID",false,false);
  Assert.assertEquals(3,queries.size());
  runAgainstDerby(queries);
}
