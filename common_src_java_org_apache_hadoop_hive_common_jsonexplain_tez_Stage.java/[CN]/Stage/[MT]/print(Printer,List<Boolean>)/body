{
  if (parser.printSet.contains(this)) {
    printer.println(TezJsonParser.prefixString(indentFlag) + " Please refer to the previous " + externalName);
    return;
  }
  parser.printSet.add(this);
  printer.println(TezJsonParser.prefixString(indentFlag) + externalName);
  List<Boolean> nextIndentFlag=new ArrayList<>();
  nextIndentFlag.addAll(indentFlag);
  nextIndentFlag.add(false);
  for (  Vertex candidate : this.vertexs.values()) {
    if (!parser.isInline(candidate) && candidate.children.isEmpty()) {
      candidate.print(printer,nextIndentFlag,null,null);
    }
  }
  if (!attrs.isEmpty()) {
    Collections.sort(attrs);
    for (    Attr attr : attrs) {
      printer.println(TezJsonParser.prefixString(nextIndentFlag) + attr.toString());
    }
  }
  if (op != null) {
    op.print(printer,nextIndentFlag,false);
  }
  nextIndentFlag.add(false);
  for (  Stage stage : this.parentStages) {
    stage.print(printer,nextIndentFlag);
  }
}
