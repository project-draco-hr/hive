{
  tolerateCorruptions=HiveConf.getBoolVar(conf,HIVE_RCFILE_TOLERATE_CORRUPTIONS);
  conf.setInt("io.file.buffer.size",bufferSize);
  this.file=file;
  in=openFile(fs,file,bufferSize,length);
  this.conf=conf;
  end=start + length;
  boolean succeed=false;
  try {
    if (start > 0) {
      seek(0);
      init();
      seek(start);
    }
 else {
      init();
    }
    succeed=true;
  }
  finally {
    if (!succeed) {
      if (in != null) {
        try {
          in.close();
        }
 catch (        IOException e) {
          if (LOG != null && LOG.isDebugEnabled()) {
            LOG.debug("Exception in closing " + in,e);
          }
        }
      }
    }
  }
  columnNumber=Integer.parseInt(metadata.get(new Text(COLUMN_NUMBER_METADATA_STR)).toString());
  List<Integer> notSkipIDs=ColumnProjectionUtils.getReadColumnIDs(conf);
  boolean[] skippedColIDs=new boolean[columnNumber];
  if (ColumnProjectionUtils.isReadAllColumns(conf)) {
    Arrays.fill(skippedColIDs,false);
  }
 else   if (notSkipIDs.size() > 0) {
    Arrays.fill(skippedColIDs,true);
    for (    int read : notSkipIDs) {
      if (read < columnNumber) {
        skippedColIDs[read]=false;
      }
    }
  }
 else {
    Arrays.fill(skippedColIDs,true);
  }
  loadColumnNum=columnNumber;
  if (skippedColIDs.length > 0) {
    for (    boolean skippedColID : skippedColIDs) {
      if (skippedColID) {
        loadColumnNum-=1;
      }
    }
  }
  revPrjColIDs=new int[columnNumber];
  selectedColumns=new SelectedColumn[loadColumnNum];
  colValLenBufferReadIn=new NonSyncDataInputBuffer[loadColumnNum];
  for (int i=0, j=0; i < columnNumber; ++i) {
    if (!skippedColIDs[i]) {
      SelectedColumn col=new SelectedColumn();
      col.colIndex=i;
      col.runLength=0;
      col.prvLength=-1;
      col.rowReadIndex=0;
      selectedColumns[j]=col;
      colValLenBufferReadIn[j]=new NonSyncDataInputBuffer();
      revPrjColIDs[i]=j;
      j++;
    }
 else {
      revPrjColIDs[i]=-1;
    }
  }
  currentKey=createKeyBuffer();
  boolean lazyDecompress=!tolerateCorruptions;
  currentValue=new ValueBuffer(null,columnNumber,skippedColIDs,codec,lazyDecompress);
}
