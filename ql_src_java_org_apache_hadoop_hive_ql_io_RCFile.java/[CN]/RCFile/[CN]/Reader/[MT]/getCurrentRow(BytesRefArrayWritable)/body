{
  if (!keyInit || rowFetched) {
    return;
  }
  if (tolerateCorruptions) {
    if (!currentValue.inited) {
      currentValueBuffer();
    }
    ret.resetValid(columnNumber);
  }
 else {
    if (!currentValue.inited) {
      currentValueBuffer();
      ret.resetValid(columnNumber);
    }
  }
  if (currentValue.numCompressed > 0) {
    for (int j=0; j < selectedColumns.length; ++j) {
      SelectedColumn col=selectedColumns[j];
      int i=col.colIndex;
      if (col.isNulled) {
        ret.set(i,null);
      }
 else {
        BytesRefWritable ref=ret.unCheckedGet(i);
        colAdvanceRow(j,col);
        if (currentValue.decompressedFlag[j]) {
          ref.set(currentValue.loadedColumnsValueBuffer[j].getData(),col.rowReadIndex,col.prvLength);
        }
 else {
          ref.set(currentValue.lazyDecompressCallbackObjs[j],col.rowReadIndex,col.prvLength);
        }
        col.rowReadIndex+=col.prvLength;
      }
    }
  }
 else {
    for (int j=0; j < selectedColumns.length; ++j) {
      SelectedColumn col=selectedColumns[j];
      int i=col.colIndex;
      if (col.isNulled) {
        ret.set(i,null);
      }
 else {
        BytesRefWritable ref=ret.unCheckedGet(i);
        colAdvanceRow(j,col);
        ref.set(currentValue.loadedColumnsValueBuffer[j].getData(),col.rowReadIndex,col.prvLength);
        col.rowReadIndex+=col.prvLength;
      }
    }
  }
  rowFetched=true;
}
