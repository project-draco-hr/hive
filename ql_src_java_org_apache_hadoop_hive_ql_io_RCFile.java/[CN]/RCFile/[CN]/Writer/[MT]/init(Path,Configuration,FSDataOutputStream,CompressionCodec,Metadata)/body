{
  this.conf=conf;
  this.out=out;
  this.codec=codec;
  this.metadata=metadata;
  if (this.codec != null) {
    ReflectionUtils.setConf(codec,this.conf);
    compressor=CodecPool.getCompressor(codec);
    compressionBuffer=new DataOutputBuffer[columnNumber];
    deflateFilter=new CompressionOutputStream[columnNumber];
    deflateOut=new DataOutputStream[columnNumber];
    for (int i=0; i < columnNumber; i++) {
      compressionBuffer[i]=new DataOutputBuffer();
      deflateFilter[i]=codec.createOutputStream(compressionBuffer[i],compressor);
      deflateOut[i]=new DataOutputStream(new BufferedOutputStream(deflateFilter[i]));
    }
    keyCompressor=CodecPool.getCompressor(codec);
    keyCompressionBuffer=new DataOutputBuffer();
    keyDeflateFilter=codec.createOutputStream(keyCompressionBuffer,keyCompressor);
    keyDeflateOut=new DataOutputStream(new BufferedOutputStream(keyDeflateFilter));
  }
}
