{
  this.conf=conf;
  this.out=out;
  this.codec=codec;
  this.metadata=metadata;
  if (this.codec != null) {
    ReflectionUtils.setConf(codec,this.conf);
    compressor=CodecPool.getCompressor(codec);
    compressionBuffer=new NonSyncDataOutputBuffer[columnNumber];
    deflateFilter=new CompressionOutputStream[columnNumber];
    deflateOut=new DataOutputStream[columnNumber];
    for (int i=0; i < columnNumber; i++) {
      compressionBuffer[i]=new NonSyncDataOutputBuffer();
      deflateFilter[i]=codec.createOutputStream(compressionBuffer[i],compressor);
      if (deflateFilter[i] instanceof SchemaAwareCompressionOutputStream) {
        ((SchemaAwareCompressionOutputStream)deflateFilter[i]).setColumnIndex(i);
      }
      deflateOut[i]=new DataOutputStream(new BufferedOutputStream(deflateFilter[i]));
    }
    keyCompressor=CodecPool.getCompressor(codec);
    keyCompressionBuffer=new NonSyncDataOutputBuffer();
    keyDeflateFilter=codec.createOutputStream(keyCompressionBuffer,keyCompressor);
    keyDeflateOut=new DataOutputStream(new BufferedOutputStream(keyDeflateFilter));
  }
  this.useNewMagic=conf.getBoolean(HiveConf.ConfVars.HIVEUSEEXPLICITRCFILEHEADER.varname,true);
}
