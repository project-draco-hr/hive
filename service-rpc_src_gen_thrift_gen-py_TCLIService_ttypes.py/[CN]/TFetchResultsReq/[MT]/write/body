def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('TFetchResultsReq')
    if (self.operationHandle is not None):
        oprot.writeFieldBegin('operationHandle', TType.STRUCT, 1)
        self.operationHandle.write(oprot)
        oprot.writeFieldEnd()
    if (self.orientation is not None):
        oprot.writeFieldBegin('orientation', TType.I32, 2)
        oprot.writeI32(self.orientation)
        oprot.writeFieldEnd()
    if (self.maxRows is not None):
        oprot.writeFieldBegin('maxRows', TType.I64, 3)
        oprot.writeI64(self.maxRows)
        oprot.writeFieldEnd()
    if (self.fetchType is not None):
        oprot.writeFieldBegin('fetchType', TType.I16, 4)
        oprot.writeI16(self.fetchType)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
