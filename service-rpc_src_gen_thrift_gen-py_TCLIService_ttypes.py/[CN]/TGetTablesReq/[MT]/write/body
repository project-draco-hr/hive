def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('TGetTablesReq')
    if (self.sessionHandle is not None):
        oprot.writeFieldBegin('sessionHandle', TType.STRUCT, 1)
        self.sessionHandle.write(oprot)
        oprot.writeFieldEnd()
    if (self.catalogName is not None):
        oprot.writeFieldBegin('catalogName', TType.STRING, 2)
        oprot.writeString(self.catalogName)
        oprot.writeFieldEnd()
    if (self.schemaName is not None):
        oprot.writeFieldBegin('schemaName', TType.STRING, 3)
        oprot.writeString(self.schemaName)
        oprot.writeFieldEnd()
    if (self.tableName is not None):
        oprot.writeFieldBegin('tableName', TType.STRING, 4)
        oprot.writeString(self.tableName)
        oprot.writeFieldEnd()
    if (self.tableTypes is not None):
        oprot.writeFieldBegin('tableTypes', TType.LIST, 5)
        oprot.writeListBegin(TType.STRING, len(self.tableTypes))
        for iter158 in self.tableTypes:
            oprot.writeString(iter158)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
