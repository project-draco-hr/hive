def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('TOperationHandle')
    if (self.operationId is not None):
        oprot.writeFieldBegin('operationId', TType.STRUCT, 1)
        self.operationId.write(oprot)
        oprot.writeFieldEnd()
    if (self.operationType is not None):
        oprot.writeFieldBegin('operationType', TType.I32, 2)
        oprot.writeI32(self.operationType)
        oprot.writeFieldEnd()
    if (self.hasResultSet is not None):
        oprot.writeFieldBegin('hasResultSet', TType.BOOL, 3)
        oprot.writeBool(self.hasResultSet)
        oprot.writeFieldEnd()
    if (self.modifiedRowCount is not None):
        oprot.writeFieldBegin('modifiedRowCount', TType.DOUBLE, 4)
        oprot.writeDouble(self.modifiedRowCount)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
