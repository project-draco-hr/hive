def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('TGetCrossReferenceReq')
    if (self.sessionHandle is not None):
        oprot.writeFieldBegin('sessionHandle', TType.STRUCT, 1)
        self.sessionHandle.write(oprot)
        oprot.writeFieldEnd()
    if (self.parentCatalogName is not None):
        oprot.writeFieldBegin('parentCatalogName', TType.STRING, 2)
        oprot.writeString(self.parentCatalogName)
        oprot.writeFieldEnd()
    if (self.parentSchemaName is not None):
        oprot.writeFieldBegin('parentSchemaName', TType.STRING, 3)
        oprot.writeString(self.parentSchemaName)
        oprot.writeFieldEnd()
    if (self.parentTableName is not None):
        oprot.writeFieldBegin('parentTableName', TType.STRING, 4)
        oprot.writeString(self.parentTableName)
        oprot.writeFieldEnd()
    if (self.foreignCatalogName is not None):
        oprot.writeFieldBegin('foreignCatalogName', TType.STRING, 5)
        oprot.writeString(self.foreignCatalogName)
        oprot.writeFieldEnd()
    if (self.foreignSchemaName is not None):
        oprot.writeFieldBegin('foreignSchemaName', TType.STRING, 6)
        oprot.writeString(self.foreignSchemaName)
        oprot.writeFieldEnd()
    if (self.foreignTableName is not None):
        oprot.writeFieldBegin('foreignTableName', TType.STRING, 7)
        oprot.writeString(self.foreignTableName)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
