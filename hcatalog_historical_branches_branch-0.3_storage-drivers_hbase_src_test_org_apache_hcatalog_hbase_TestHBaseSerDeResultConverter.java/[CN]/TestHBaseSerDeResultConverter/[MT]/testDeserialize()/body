{
  HBaseSerDeResultConverter converter=new HBaseSerDeResultConverter(createHCatSchema(),null,createProperties(),1l);
  Result result=new Result(new KeyValue[]{new KeyValue(Bytes.toBytes("row"),Bytes.toBytes("my_family"),Bytes.toBytes("my_qualifier1"),0,Bytes.toBytes("123")),new KeyValue(Bytes.toBytes("row"),Bytes.toBytes("my_family"),Bytes.toBytes("my_qualifier2"),0,Bytes.toBytes("onetwothree")),new KeyValue(Bytes.toBytes("row"),Bytes.toBytes("my_family2"),Bytes.toBytes("one"),0,Bytes.toBytes("1")),new KeyValue(Bytes.toBytes("row"),Bytes.toBytes("my_family2"),Bytes.toBytes("two"),0,Bytes.toBytes("2"))});
  HCatRecord record=converter.convert(result);
  assertEquals(Bytes.toString(result.getRow()),record.get(0).toString());
  assertEquals(Integer.valueOf(Bytes.toString(result.getValue(Bytes.toBytes("my_family"),Bytes.toBytes("my_qualifier1")))),record.get(1));
  assertEquals(Bytes.toString(result.getValue(Bytes.toBytes("my_family"),Bytes.toBytes("my_qualifier2"))),record.get(2).toString());
  Map<String,Integer> recordMap=(Map<String,Integer>)record.get(3);
  Map<byte[],byte[]> familyMap=result.getFamilyMap(Bytes.toBytes("my_family2"));
  assertEquals(Integer.valueOf(Bytes.toString(familyMap.get(Bytes.toBytes("one")))),recordMap.get("one"));
  assertEquals(Integer.valueOf(Bytes.toString(familyMap.get(Bytes.toBytes("two")))),recordMap.get("two"));
}
