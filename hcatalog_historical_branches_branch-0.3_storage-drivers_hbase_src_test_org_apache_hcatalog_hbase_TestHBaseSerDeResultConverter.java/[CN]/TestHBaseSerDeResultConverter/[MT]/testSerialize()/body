{
  HCatSchema schema=createHCatSchema();
  HBaseSerDeResultConverter converter=new HBaseSerDeResultConverter(schema,null,createProperties(),1l);
  HCatRecord in=new DefaultHCatRecord(4);
  in.set(0,"row");
  in.set(1,123);
  in.set(2,"onetwothree");
  Map<String,Integer> map=new HashMap<String,Integer>();
  map.put("one",1);
  map.put("two",2);
  in.set(3,map);
  Put put=converter.convert(in);
  assertEquals(in.get(0).toString(),Bytes.toString(put.getRow()));
  assertEquals(in.get(1),Integer.valueOf(Bytes.toString(put.get(Bytes.toBytes("my_family"),Bytes.toBytes("my_qualifier1")).get(0).getValue())));
  assertEquals(1l,put.get(Bytes.toBytes("my_family"),Bytes.toBytes("my_qualifier1")).get(0).getTimestamp());
  assertEquals(in.get(2),Bytes.toString(put.get(Bytes.toBytes("my_family"),Bytes.toBytes("my_qualifier2")).get(0).getValue()));
  assertEquals(1l,put.get(Bytes.toBytes("my_family"),Bytes.toBytes("my_qualifier2")).get(0).getTimestamp());
  assertEquals(map.get("one"),Integer.valueOf(Bytes.toString(put.get(Bytes.toBytes("my_family2"),Bytes.toBytes("one")).get(0).getValue())));
  assertEquals(1l,put.get(Bytes.toBytes("my_family2"),Bytes.toBytes("one")).get(0).getTimestamp());
  assertEquals(map.get("two"),Integer.valueOf(Bytes.toString(put.get("my_family2".getBytes(),"two".getBytes()).get(0).getValue())));
  assertEquals(1l,put.get(Bytes.toBytes("my_family2"),Bytes.toBytes("two")).get(0).getTimestamp());
}
