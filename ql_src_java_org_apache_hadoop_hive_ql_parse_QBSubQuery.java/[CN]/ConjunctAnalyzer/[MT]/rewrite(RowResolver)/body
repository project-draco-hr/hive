{
  ASTNode selectClause=(ASTNode)subQueryAST.getChild(1).getChild(1);
  ASTNode whereClause=null;
  if (subQueryAST.getChild(1).getChildCount() > 2 && subQueryAST.getChild(1).getChild(2).getType() == HiveParser.TOK_WHERE) {
    whereClause=(ASTNode)subQueryAST.getChild(1).getChild(2);
  }
  if (whereClause == null) {
    return;
  }
  ASTNode searchCond=(ASTNode)whereClause.getChild(0);
  List<ASTNode> conjuncts=new ArrayList<ASTNode>();
  SubQueryUtils.extractConjuncts(searchCond,conjuncts);
  ConjunctAnalyzer conjunctAnalyzer=new ConjunctAnalyzer(parentQueryRR);
  ASTNode sqNewSearchCond=null;
  for (  ASTNode conjunctAST : conjuncts) {
    Conjunct conjunct=conjunctAnalyzer.analyzeConjunct(conjunctAST);
    if (conjunct.eitherSideRefersBoth()) {
      throw new SemanticException(ErrorMsg.UNSUPPORTED_SUBQUERY_EXPRESSION.getMsg(conjunctAST,"SubQuery expression refers to both Parent and SubQuery expressions and " + "is not a valid join condition."));
    }
    if (conjunct.refersOuterOnly()) {
      throw new SemanticException(ErrorMsg.UNSUPPORTED_SUBQUERY_EXPRESSION.getMsg(conjunctAST,"SubQuery expression refers to Outer query expressions only."));
    }
    if (conjunct.isCorrelated()) {
      hasCorrelation=true;
      subQueryJoinAliasExprs=new ArrayList<ASTNode>();
      String exprAlias=getNextCorrExprAlias();
      ASTNode sqExprAlias=SubQueryUtils.createAliasAST(exprAlias);
      ASTNode sqExprForCorr=SubQueryUtils.createColRefAST(alias,exprAlias);
      if (conjunct.getLeftExprType().refersSubQuery()) {
        ASTNode joinPredciate=SubQueryUtils.alterCorrelatedPredicate(conjunctAST,sqExprForCorr,true);
        joinConditionAST=SubQueryUtils.andAST(joinConditionAST,joinPredciate);
        subQueryJoinAliasExprs.add(sqExprForCorr);
        ASTNode selExpr=SubQueryUtils.createSelectItem(conjunct.getLeftExpr(),sqExprAlias);
        selectClause.addChild(selExpr);
        numOfCorrelationExprsAddedToSQSelect++;
        if (containsAggregationExprs) {
          ASTNode gBy=getSubQueryGroupByAST();
          SubQueryUtils.addGroupExpressionToFront(gBy,conjunct.getLeftExpr());
        }
      }
 else {
        ASTNode joinPredciate=SubQueryUtils.alterCorrelatedPredicate(conjunctAST,sqExprForCorr,false);
        joinConditionAST=SubQueryUtils.andAST(joinConditionAST,joinPredciate);
        subQueryJoinAliasExprs.add(sqExprForCorr);
        ASTNode selExpr=SubQueryUtils.createSelectItem(conjunct.getRightExpr(),sqExprAlias);
        selectClause.addChild(selExpr);
        numOfCorrelationExprsAddedToSQSelect++;
        if (containsAggregationExprs) {
          ASTNode gBy=getSubQueryGroupByAST();
          SubQueryUtils.addGroupExpressionToFront(gBy,conjunct.getRightExpr());
        }
      }
    }
 else {
      sqNewSearchCond=SubQueryUtils.andAST(sqNewSearchCond,conjunctAST);
    }
  }
  if (sqNewSearchCond != searchCond) {
    if (sqNewSearchCond == null) {
      sqNewSearchCond=SubQueryUtils.constructTrueCond();
    }
    whereClause.setChild(0,sqNewSearchCond);
  }
}
