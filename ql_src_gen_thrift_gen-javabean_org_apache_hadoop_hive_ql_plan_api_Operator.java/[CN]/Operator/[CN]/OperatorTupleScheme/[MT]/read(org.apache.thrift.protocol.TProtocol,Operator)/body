{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(6);
  if (incoming.get(0)) {
    struct.operatorId=iprot.readString();
    struct.setOperatorIdIsSet(true);
  }
  if (incoming.get(1)) {
    struct.operatorType=OperatorType.findByValue(iprot.readI32());
    struct.setOperatorTypeIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TMap _map36=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.operatorAttributes=new HashMap<String,String>(2 * _map36.size);
      for (int _i37=0; _i37 < _map36.size; ++_i37) {
        String _key38;
        String _val39;
        _key38=iprot.readString();
        _val39=iprot.readString();
        struct.operatorAttributes.put(_key38,_val39);
      }
    }
    struct.setOperatorAttributesIsSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map40=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.I64,iprot.readI32());
      struct.operatorCounters=new HashMap<String,Long>(2 * _map40.size);
      for (int _i41=0; _i41 < _map40.size; ++_i41) {
        String _key42;
        long _val43;
        _key42=iprot.readString();
        _val43=iprot.readI64();
        struct.operatorCounters.put(_key42,_val43);
      }
    }
    struct.setOperatorCountersIsSet(true);
  }
  if (incoming.get(4)) {
    struct.done=iprot.readBool();
    struct.setDoneIsSet(true);
  }
  if (incoming.get(5)) {
    struct.started=iprot.readBool();
    struct.setStartedIsSet(true);
  }
}
