{
  TTupleProtocol oprot=(TTupleProtocol)prot;
  BitSet optionals=new BitSet();
  if (struct.isSetOperatorId()) {
    optionals.set(0);
  }
  if (struct.isSetOperatorType()) {
    optionals.set(1);
  }
  if (struct.isSetOperatorAttributes()) {
    optionals.set(2);
  }
  if (struct.isSetOperatorCounters()) {
    optionals.set(3);
  }
  if (struct.isSetDone()) {
    optionals.set(4);
  }
  if (struct.isSetStarted()) {
    optionals.set(5);
  }
  oprot.writeBitSet(optionals,6);
  if (struct.isSetOperatorId()) {
    oprot.writeString(struct.operatorId);
  }
  if (struct.isSetOperatorType()) {
    oprot.writeI32(struct.operatorType.getValue());
  }
  if (struct.isSetOperatorAttributes()) {
{
      oprot.writeI32(struct.operatorAttributes.size());
      for (      Map.Entry<String,String> _iter34 : struct.operatorAttributes.entrySet()) {
        oprot.writeString(_iter34.getKey());
        oprot.writeString(_iter34.getValue());
      }
    }
  }
  if (struct.isSetOperatorCounters()) {
{
      oprot.writeI32(struct.operatorCounters.size());
      for (      Map.Entry<String,Long> _iter35 : struct.operatorCounters.entrySet()) {
        oprot.writeString(_iter35.getKey());
        oprot.writeI64(_iter35.getValue());
      }
    }
  }
  if (struct.isSetDone()) {
    oprot.writeBool(struct.done);
  }
  if (struct.isSetStarted()) {
    oprot.writeBool(struct.started);
  }
}
