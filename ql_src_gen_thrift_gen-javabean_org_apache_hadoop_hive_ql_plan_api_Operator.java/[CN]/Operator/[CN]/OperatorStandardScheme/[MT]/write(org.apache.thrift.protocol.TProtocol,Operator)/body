{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.operatorId != null) {
    oprot.writeFieldBegin(OPERATOR_ID_FIELD_DESC);
    oprot.writeString(struct.operatorId);
    oprot.writeFieldEnd();
  }
  if (struct.operatorType != null) {
    oprot.writeFieldBegin(OPERATOR_TYPE_FIELD_DESC);
    oprot.writeI32(struct.operatorType.getValue());
    oprot.writeFieldEnd();
  }
  if (struct.operatorAttributes != null) {
    oprot.writeFieldBegin(OPERATOR_ATTRIBUTES_FIELD_DESC);
{
      oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,struct.operatorAttributes.size()));
      for (      Map.Entry<String,String> _iter32 : struct.operatorAttributes.entrySet()) {
        oprot.writeString(_iter32.getKey());
        oprot.writeString(_iter32.getValue());
      }
      oprot.writeMapEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.operatorCounters != null) {
    oprot.writeFieldBegin(OPERATOR_COUNTERS_FIELD_DESC);
{
      oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.I64,struct.operatorCounters.size()));
      for (      Map.Entry<String,Long> _iter33 : struct.operatorCounters.entrySet()) {
        oprot.writeString(_iter33.getKey());
        oprot.writeI64(_iter33.getValue());
      }
      oprot.writeMapEnd();
    }
    oprot.writeFieldEnd();
  }
  oprot.writeFieldBegin(DONE_FIELD_DESC);
  oprot.writeBool(struct.done);
  oprot.writeFieldEnd();
  oprot.writeFieldBegin(STARTED_FIELD_DESC);
  oprot.writeBool(struct.started);
  oprot.writeFieldEnd();
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
