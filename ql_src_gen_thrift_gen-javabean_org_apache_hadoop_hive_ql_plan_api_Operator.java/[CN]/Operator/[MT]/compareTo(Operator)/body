{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  Operator typedOther=(Operator)other;
  lastComparison=Boolean.valueOf(isSetOperatorId()).compareTo(typedOther.isSetOperatorId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetOperatorId()) {
    lastComparison=TBaseHelper.compareTo(this.operatorId,typedOther.operatorId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetOperatorType()).compareTo(typedOther.isSetOperatorType());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetOperatorType()) {
    lastComparison=TBaseHelper.compareTo(this.operatorType,typedOther.operatorType);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetOperatorAttributes()).compareTo(typedOther.isSetOperatorAttributes());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetOperatorAttributes()) {
    lastComparison=TBaseHelper.compareTo(this.operatorAttributes,typedOther.operatorAttributes);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetOperatorCounters()).compareTo(typedOther.isSetOperatorCounters());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetOperatorCounters()) {
    lastComparison=TBaseHelper.compareTo(this.operatorCounters,typedOther.operatorCounters);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetDone()).compareTo(typedOther.isSetDone());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDone()) {
    lastComparison=TBaseHelper.compareTo(this.done,typedOther.done);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetStarted()).compareTo(typedOther.isSetStarted());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetStarted()) {
    lastComparison=TBaseHelper.compareTo(this.started,typedOther.started);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
