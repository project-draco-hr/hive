{
  String serialAst="AQEAamF2YS51dGlsLkFycmF5TGlz9AECAQFvcmcuYXBhY2hlLmhhZG9vcC5oaXZlLnFsLnBsYW4uRXh" + "wck5vZGVDb2x1bW5EZXPjAQFmbPQAAAFiaWdvcuMBAm9yZy5hcGFjaGUuaGFkb29wLmhpdmUuc2VyZG" + "UyLnR5cGVpbmZvLlByaW1pdGl2ZVR5cGVJbmbvAQFmbG9h9AEDb3JnLmFwYWNoZS5oYWRvb3AuaGl2Z"+ "S5xbC5wbGFuLkV4cHJOb2RlQ29uc3RhbnREZXPjAQECBwQ/jMzNAQRvcmcuYXBhY2hlLmhhZG9vcC5o"+ "aXZlLnFsLnVkZi5nZW5lcmljLkdlbmVyaWNVREZPUEVxdWHsAQAAAYI9AUVRVUHMAQVvcmcuYXBhY2h"+ "lLmhhZG9vcC5pby5Cb29sZWFuV3JpdGFibOUBAAABAgEBYm9vbGVh7g==";
  SearchArgument sarg=new ConvertAstToSearchArg(SerializationUtilities.deserializeExpression(serialAst)).buildSearchArgument();
  assertEquals("leaf-0",sarg.getExpression().toString());
  assertEquals(1,sarg.getLeaves().size());
  PredicateLeaf leaf=sarg.getLeaves().get(0);
  assertEquals(PredicateLeaf.Type.FLOAT,leaf.getType());
  assertEquals("(EQUALS flt " + ((Number)1.1f).doubleValue() + ")",leaf.toString());
}
