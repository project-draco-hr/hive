{
  String serialAst="AQEAamF2YS51dGlsLkFycmF5TGlz9AECAQFvcmcuYXBhY2hlLmhhZG9vcC5oaXZlLnFsLnBsYW4uRXh" + "wck5vZGVDb2x1bW5EZXPjAQFi6QAAAWJpZ29y4wECb3JnLmFwYWNoZS5oYWRvb3AuaGl2ZS5zZXJkZT" + "IudHlwZWluZm8uUHJpbWl0aXZlVHlwZUluZu8BAWJpZ2lu9AEDb3JnLmFwYWNoZS5oYWRvb3AuaGl2Z"+ "S5xbC5wbGFuLkV4cHJOb2RlQ29uc3RhbnREZXPjAQECBwnywAEBBG9yZy5hcGFjaGUuaGFkb29wLmhp"+ "dmUucWwudWRmLmdlbmVyaWMuR2VuZXJpY1VERk9QRXF1YewBAAABgj0BRVFVQcwBBW9yZy5hcGFjaGU"+ "uaGFkb29wLmlvLkJvb2xlYW5Xcml0YWJs5QEAAAECAQFib29sZWHu";
  SearchArgument sarg=new ConvertAstToSearchArg(SerializationUtilities.deserializeExpression(serialAst)).buildSearchArgument();
  assertEquals("leaf-0",sarg.getExpression().toString());
  assertEquals(1,sarg.getLeaves().size());
  PredicateLeaf leaf=sarg.getLeaves().get(0);
  assertEquals(PredicateLeaf.Type.LONG,leaf.getType());
  assertEquals("(EQUALS bi 12345)",leaf.toString());
}
