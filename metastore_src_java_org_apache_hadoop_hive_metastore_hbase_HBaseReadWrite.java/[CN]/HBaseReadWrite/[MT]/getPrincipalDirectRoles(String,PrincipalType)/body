{
  buildRoleCache();
  Set<String> rolesFound=new HashSet<String>();
  for (  Map.Entry<String,GrantInfoList> e : roleCache.entrySet()) {
    for (    GrantInfoWritable giw : e.getValue().grantInfos) {
      if (giw.principalType == type && giw.principalName.equals(name)) {
        rolesFound.add(e.getKey());
        break;
      }
    }
  }
  List<Role> directRoles=new ArrayList<Role>(rolesFound.size());
  List<Get> gets=new ArrayList<Get>();
  HTableInterface htab=getHTable(ROLE_TABLE);
  for (  String roleFound : rolesFound) {
    byte[] key=HBaseUtils.buildKey(roleFound);
    Get g=new Get(key);
    g.addColumn(CATALOG_CF,CATALOG_COL);
    gets.add(g);
  }
  Result[] results=htab.get(gets);
  for (int i=0; i < results.length; i++) {
    byte[] serialized=results[i].getValue(CATALOG_CF,CATALOG_COL);
    if (serialized != null) {
      RoleWritable role=new RoleWritable();
      HBaseUtils.deserialize(role,serialized);
      directRoles.add(role.role);
    }
  }
  return directRoles;
}
