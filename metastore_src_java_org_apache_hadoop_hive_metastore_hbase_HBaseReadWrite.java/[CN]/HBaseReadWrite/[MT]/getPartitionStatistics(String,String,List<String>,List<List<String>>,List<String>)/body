{
  List<ColumnStatistics> statsList=new ArrayList<ColumnStatistics>(partNames.size());
  ColumnStatistics partitionStats;
  ColumnStatisticsDesc statsDesc;
  byte[][] colKeys=new byte[colNames.size()][];
  List<Get> gets=new ArrayList<Get>();
  for (int pOff=0; pOff < partNames.size(); pOff++) {
    partitionStats=new ColumnStatistics();
    statsDesc=new ColumnStatisticsDesc();
    statsDesc.setIsTblLevel(false);
    statsDesc.setDbName(dbName);
    statsDesc.setTableName(tblName);
    statsDesc.setPartName(partNames.get(pOff));
    partitionStats.setStatsDesc(statsDesc);
    statsList.add(partitionStats);
    for (int i=0; i < colKeys.length; i++) {
      colKeys[i]=HBaseUtils.buildKey(colNames.get(i));
    }
    byte[] partKey=HBaseUtils.buildPartitionKey(dbName,tblName,partVals.get(pOff));
    Get get=new Get(partKey);
    for (    byte[] colName : colKeys) {
      get.addColumn(STATS_CF,colName);
    }
    gets.add(get);
  }
  HTableInterface htab=conn.getHBaseTable(PART_TABLE);
  Result[] results=htab.get(gets);
  for (int pOff=0; pOff < results.length; pOff++) {
    for (int cOff=0; cOff < colNames.size(); cOff++) {
      byte[] serializedColStats=results[pOff].getValue(STATS_CF,colKeys[cOff]);
      if (serializedColStats == null) {
        continue;
      }
      partitionStats=statsList.get(pOff);
      ColumnStatisticsObj colStats=HBaseUtils.deserializeStatsForOneColumn(partitionStats,serializedColStats);
      colStats.setColName(colNames.get(cOff));
      partitionStats.addToStatsObj(colStats);
    }
  }
  return statsList;
}
