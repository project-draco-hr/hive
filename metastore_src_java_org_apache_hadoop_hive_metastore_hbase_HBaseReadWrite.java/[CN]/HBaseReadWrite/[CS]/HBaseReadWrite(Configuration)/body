{
  conf=configuration;
  HBaseConfiguration.addHbaseResources(conf);
  try {
    String connClass=HiveConf.getVar(conf,HiveConf.ConfVars.METASTORE_HBASE_CONNECTION_CLASS);
    if (TEST_CONN.equals(connClass)) {
      conn=testConn;
      LOG.debug("Using test connection.");
    }
 else {
      LOG.debug("Instantiating connection class " + connClass);
      Class c=Class.forName(connClass);
      Object o=c.newInstance();
      if (HBaseConnection.class.isAssignableFrom(o.getClass())) {
        conn=(HBaseConnection)o;
      }
 else {
        throw new IOException(connClass + " is not an instance of HBaseConnection.");
      }
      conn.setConf(conf);
      conn.connect();
    }
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  try {
    md=MessageDigest.getInstance("MD5");
  }
 catch (  NoSuchAlgorithmException e) {
    throw new RuntimeException(e);
  }
  int totalCatalogObjectsToCache=HiveConf.getIntVar(conf,HiveConf.ConfVars.METASTORE_HBASE_CATALOG_CACHE_SIZE);
  tableHits=new Counter("table cache hits");
  tableMisses=new Counter("table cache misses");
  tableOverflows=new Counter("table cache overflows");
  partHits=new Counter("partition cache hits");
  partMisses=new Counter("partition cache misses");
  partOverflows=new Counter("partition cache overflows");
  sdHits=new Counter("storage descriptor cache hits");
  sdMisses=new Counter("storage descriptor cache misses");
  sdOverflows=new Counter("storage descriptor cache overflows");
  counters=new ArrayList<Counter>();
  counters.add(tableHits);
  counters.add(tableMisses);
  counters.add(tableOverflows);
  counters.add(partHits);
  counters.add(partMisses);
  counters.add(partOverflows);
  counters.add(sdHits);
  counters.add(sdMisses);
  counters.add(sdOverflows);
  int sdsCacheSize=totalCatalogObjectsToCache / 100;
  if (conf.getBoolean(NO_CACHE_CONF,false)) {
    tableCache=new BogusObjectCache<ObjectPair<String,String>,Table>();
    sdCache=new BogusObjectCache<ByteArrayWrapper,StorageDescriptor>();
    partCache=new BogusPartitionCache();
  }
 else {
    tableCache=new ObjectCache<ObjectPair<String,String>,Table>(TABLES_TO_CACHE,tableHits,tableMisses,tableOverflows);
    sdCache=new ObjectCache<ByteArrayWrapper,StorageDescriptor>(sdsCacheSize,sdHits,sdMisses,sdOverflows);
    partCache=new PartitionCache(totalCatalogObjectsToCache,partHits,partMisses,partOverflows);
    aggrStatsCache=AggregateStatsCache.getInstance(conf);
  }
  roleCache=new HashMap<String,HbaseMetastoreProto.RoleGrantInfoList>();
  entireRoleTableInCache=false;
}
