{
  int fieldId=0;
  int fieldByteBegin=start;
  int fieldByteEnd=start;
  final byte separator=this.separator;
  final int fieldCount=this.fieldCount;
  final int[] startPosition=this.startPosition;
  final byte[] bytes=this.bytes;
  final int end=this.end;
  if (!isEscaped) {
    while (fieldByteEnd < end) {
      if (bytes[fieldByteEnd] == separator) {
        startPosition[fieldId++]=fieldByteBegin;
        if (fieldId == fieldCount) {
          break;
        }
        fieldByteBegin=++fieldByteEnd;
      }
 else {
        fieldByteEnd++;
      }
    }
    if (fieldByteEnd == end && fieldId < fieldCount) {
      startPosition[fieldId++]=fieldByteBegin;
    }
  }
 else {
    final byte escapeChar=this.escapeChar;
    final int endLessOne=end - 1;
    final int[] escapeCounts=this.escapeCounts;
    int escapeCount=0;
    while (fieldByteEnd < endLessOne) {
      if (bytes[fieldByteEnd] == separator) {
        escapeCounts[fieldId]=escapeCount;
        escapeCount=0;
        startPosition[fieldId++]=fieldByteBegin;
        if (fieldId == fieldCount) {
          break;
        }
        fieldByteBegin=++fieldByteEnd;
      }
 else       if (bytes[fieldByteEnd] == escapeChar) {
        fieldByteEnd+=2;
        escapeCount++;
      }
 else {
        fieldByteEnd++;
      }
    }
    if (fieldByteEnd == endLessOne && fieldId < fieldCount) {
      if (bytes[fieldByteEnd] == separator) {
        escapeCounts[fieldId]=escapeCount;
        escapeCount=0;
        startPosition[fieldId++]=fieldByteBegin;
        if (fieldId <= fieldCount) {
          fieldByteBegin=++fieldByteEnd;
        }
      }
 else {
        fieldByteEnd++;
      }
    }
    if (fieldByteEnd == end && fieldId < fieldCount) {
      escapeCounts[fieldId]=escapeCount;
      startPosition[fieldId++]=fieldByteBegin;
    }
  }
  if (fieldId == fieldCount || fieldByteEnd == end) {
    Arrays.fill(startPosition,fieldId,startPosition.length,fieldByteEnd + 1);
  }
  isEndOfInputReached=(fieldByteEnd == end);
}
