{
  int structByteEnd=end;
  int fieldByteBegin=start;
  int fieldByteEnd=start;
  parseFieldIndex=0;
  while (fieldByteEnd <= structByteEnd) {
    if (fieldByteEnd == structByteEnd || bytes[fieldByteEnd] == separator) {
      if (lastColumnTakesRest && parseFieldIndex == fieldCount - 1) {
        fieldByteEnd=structByteEnd;
      }
      startPosition[parseFieldIndex]=fieldByteBegin;
      parseFieldIndex++;
      if (parseFieldIndex == fieldCount || fieldByteEnd == structByteEnd) {
        for (int i=parseFieldIndex; i <= fieldCount; i++) {
          startPosition[i]=fieldByteEnd + 1;
        }
        break;
      }
      fieldByteBegin=fieldByteEnd + 1;
      fieldByteEnd++;
    }
 else {
      if (isEscaped && bytes[fieldByteEnd] == escapeChar && fieldByteEnd + 1 < structByteEnd) {
        fieldByteEnd+=2;
      }
 else {
        fieldByteEnd++;
      }
    }
  }
  if (!extraFieldWarned && fieldByteEnd < structByteEnd) {
    doExtraFieldWarned();
  }
  if (!missingFieldWarned && parseFieldIndex < fieldCount) {
    doMissingFieldWarned(parseFieldIndex);
  }
}
