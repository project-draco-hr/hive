{
  int i=fieldStart;
  int end=fieldStart + fieldLength;
  boolean negative=false;
  if (i >= end) {
    return false;
  }
  if (bytes[i] == '+') {
    i++;
    if (i >= end) {
      return false;
    }
  }
 else   if (bytes[i] == '-') {
    negative=true;
    i++;
    if (i >= end) {
      return false;
    }
  }
  boolean atLeastOneZero=false;
  while (true) {
    if (bytes[i] != '0') {
      break;
    }
    i++;
    if (i >= end) {
      saveLong=0;
      return true;
    }
    atLeastOneZero=true;
  }
  if (bytes[i] == '.') {
    if (!atLeastOneZero) {
      return false;
    }
    saveLong=0;
  }
 else {
    if (!Character.isDigit(bytes[i])) {
      return false;
    }
    int nonLeadingZeroStart=i;
    int digitCount=1;
    saveLong=Character.digit(bytes[i],10);
    i++;
    while (i < end) {
      if (!Character.isDigit(bytes[i])) {
        break;
      }
      digitCount++;
      if (digitCount > maxLongDigitsCount) {
        return false;
      }
 else       if (digitCount == maxLongDigitsCount) {
        if (!negative) {
          if (byteArrayCompareRanges(bytes,nonLeadingZeroStart,maxLongBytes,0,digitCount) >= 1) {
            return false;
          }
        }
 else {
          if (byteArrayCompareRanges(bytes,nonLeadingZeroStart,minLongNoSignBytes,0,digitCount) >= 1) {
            return false;
          }
        }
      }
      saveLong=(saveLong * 10) + Character.digit(bytes[i],10);
    }
    if (negative) {
      saveLong=-saveLong;
    }
    if (i >= end) {
      return true;
    }
    if (bytes[i] != '.') {
      return false;
    }
  }
  while (true) {
    i++;
    if (i >= end) {
      break;
    }
    if (!Character.isDigit(bytes[i])) {
      return false;
    }
  }
  return true;
}
