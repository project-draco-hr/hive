{
  Map<Rule,NodeProcessor> opRules=new LinkedHashMap<Rule,NodeProcessor>();
  BucketMapjoinOptProcCtx bucketMapJoinOptimizeCtx=new BucketMapjoinOptProcCtx();
  opRules.put(new RuleRegExp("R1","MAPJOIN%"),getBucketMapjoinProc(pctx));
  opRules.put(new RuleRegExp("R2","RS%.*MAPJOIN"),getBucketMapjoinRejectProc(pctx));
  opRules.put(new RuleRegExp(new String("R3"),"UNION%.*MAPJOIN%"),getBucketMapjoinRejectProc(pctx));
  opRules.put(new RuleRegExp(new String("R4"),"MAPJOIN%.*MAPJOIN%"),getBucketMapjoinRejectProc(pctx));
  Dispatcher disp=new DefaultRuleDispatcher(getDefaultProc(),opRules,bucketMapJoinOptimizeCtx);
  GraphWalker ogw=new DefaultGraphWalker(disp);
  ArrayList<Node> topNodes=new ArrayList<Node>();
  topNodes.addAll(pctx.getTopOps().values());
  ogw.startWalking(topNodes,null);
  return pctx;
}
