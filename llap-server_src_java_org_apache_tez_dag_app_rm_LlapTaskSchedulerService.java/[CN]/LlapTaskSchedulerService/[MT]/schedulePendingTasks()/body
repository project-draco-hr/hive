{
  writeLock.lock();
  try {
    Iterator<Entry<Priority,List<TaskInfo>>> pendingIterator=pendingTasks.entrySet().iterator();
    while (pendingIterator.hasNext()) {
      Entry<Priority,List<TaskInfo>> entry=pendingIterator.next();
      List<TaskInfo> taskListAtPriority=entry.getValue();
      Iterator<TaskInfo> taskIter=taskListAtPriority.iterator();
      boolean scheduledAllAtPriority=true;
      while (taskIter.hasNext()) {
        TaskInfo taskInfo=taskIter.next();
        boolean scheduled=scheduleTask(taskInfo);
        if (scheduled) {
          taskIter.remove();
        }
 else {
          scheduledAllAtPriority=false;
          break;
        }
      }
      if (taskListAtPriority.isEmpty()) {
        pendingIterator.remove();
      }
      if (!scheduledAllAtPriority) {
        break;
      }
    }
  }
  finally {
    writeLock.unlock();
  }
}
