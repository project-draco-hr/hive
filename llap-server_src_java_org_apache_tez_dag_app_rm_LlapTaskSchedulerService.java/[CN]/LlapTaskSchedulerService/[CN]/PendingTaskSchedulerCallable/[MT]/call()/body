{
  while (!isShutdown.get() && !Thread.currentThread().isInterrupted()) {
    try {
      while (true) {
        NodeInfo nodeInfo=disabledNodesQueue.take();
        reenableDisabledNode(nodeInfo);
        schedulePendingTasks();
      }
    }
 catch (    InterruptedException e) {
      if (isShutdown.get()) {
        LOG.info("Disabled node wait interrupted after shutdown. Stopping the disabled node poll");
        break;
      }
 else {
        LOG.warn("Interrupted while waiting for disabled nodes.");
        throw new RuntimeException("Interrupted while waiting for disabled nodes",e);
      }
    }
  }
  return null;
}
