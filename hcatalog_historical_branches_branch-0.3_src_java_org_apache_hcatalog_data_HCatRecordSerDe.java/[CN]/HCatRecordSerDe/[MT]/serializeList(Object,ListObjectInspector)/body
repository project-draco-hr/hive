{
  List l=loi.getList(f);
  ObjectInspector eloi=loi.getListElementObjectInspector();
  if (eloi.getCategory() == Category.PRIMITIVE) {
    List<Object> list=new ArrayList<Object>(l.size());
    for (int i=0; i < l.size(); i++) {
      list.add(((PrimitiveObjectInspector)eloi).getPrimitiveJavaObject(l.get(i)));
    }
    return list;
  }
 else   if (eloi.getCategory() == Category.STRUCT) {
    List<List<?>> list=new ArrayList<List<?>>(l.size());
    for (int i=0; i < l.size(); i++) {
      list.add(serializeStruct(l.get(i),(StructObjectInspector)eloi));
    }
    return list;
  }
 else   if (eloi.getCategory() == Category.LIST) {
    List<List<?>> list=new ArrayList<List<?>>(l.size());
    for (int i=0; i < l.size(); i++) {
      list.add(serializeList(l.get(i),(ListObjectInspector)eloi));
    }
    return list;
  }
 else   if (eloi.getCategory() == Category.MAP) {
    List<Map<?,?>> list=new ArrayList<Map<?,?>>(l.size());
    for (int i=0; i < l.size(); i++) {
      list.add(serializeMap(l.get(i),(MapObjectInspector)eloi));
    }
    return list;
  }
 else {
    throw new SerDeException(getClass().toString() + " does not know what to do with fields of unknown category: " + eloi.getCategory()+ " , type: "+ eloi.getTypeName());
  }
}
