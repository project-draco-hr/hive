{
  GenericUDFOPPositive udf=new GenericUDFOPPositive();
  HiveChar vc=new HiveChar("32300.004747",12);
  HiveCharWritable input=new HiveCharWritable(vc);
  CharTypeInfo inputTypeInfo=TypeInfoFactory.getCharTypeInfo(12);
  ObjectInspector[] inputOIs={PrimitiveObjectInspectorFactory.getPrimitiveWritableObjectInspector(inputTypeInfo)};
  DeferredObject[] args={new DeferredJavaObject(input)};
  PrimitiveObjectInspector oi=(PrimitiveObjectInspector)udf.initialize(inputOIs);
  Assert.assertEquals(TypeInfoFactory.doubleTypeInfo,oi.getTypeInfo());
  DoubleWritable res=(DoubleWritable)udf.evaluate(args);
  Assert.assertEquals(new Double(32300.004747),new Double(res.get()));
}
