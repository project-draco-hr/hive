{
  SelectOperator sel=(SelectOperator)nd;
  List<Operator<? extends OperatorDesc>> parents=sel.getParentOperators();
  if (parents.size() != 1 || parents.get(0) instanceof LateralViewForwardOperator) {
    return null;
  }
  Operator<? extends OperatorDesc> parent=parents.get(0);
  if (parent instanceof ReduceSinkOperator && Iterators.any(sel.getChildOperators().iterator(),Predicates.instanceOf(ReduceSinkOperator.class))) {
    return null;
  }
  List<Operator<? extends OperatorDesc>> ancestorList=new ArrayList<Operator<? extends OperatorDesc>>();
  ancestorList.addAll(sel.getParentOperators());
  while (!ancestorList.isEmpty()) {
    Operator<? extends OperatorDesc> curParent=ancestorList.remove(0);
    if ((curParent instanceof PTFOperator)) {
      return null;
    }
    if ((curParent instanceof FilterOperator) && curParent.getParentOperators() != null) {
      ancestorList.addAll(curParent.getParentOperators());
    }
  }
  if (sel.isIdentitySelect()) {
    parent.removeChildAndAdoptItsChildren(sel);
    LOG.debug("Identity project remover optimization removed : " + sel);
  }
  return null;
}
