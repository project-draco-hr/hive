{
  final boolean cboEnabled=HiveConf.getBoolVar(pctx.getConf(),HiveConf.ConfVars.HIVE_CBO_ENABLED);
  final boolean returnPathEnabled=HiveConf.getBoolVar(pctx.getConf(),HiveConf.ConfVars.HIVE_CBO_RETPATH_HIVEOP);
  final boolean cboSucceeded=pctx.getContext().isCboSucceeded();
  if (cboEnabled && returnPathEnabled && cboSucceeded) {
    return pctx;
  }
  Map<Rule,NodeProcessor> opRules=new LinkedHashMap<Rule,NodeProcessor>();
  opRules.put(new RuleRegExp("R1","(" + SelectOperator.getOperatorName() + "%)"),new ProjectRemover());
  GraphWalker ogw=new DefaultGraphWalker(new DefaultRuleDispatcher(null,opRules,null));
  ArrayList<Node> topNodes=new ArrayList<Node>();
  topNodes.addAll(pctx.getTopOps().values());
  ogw.startWalking(topNodes,null);
  return pctx;
}
