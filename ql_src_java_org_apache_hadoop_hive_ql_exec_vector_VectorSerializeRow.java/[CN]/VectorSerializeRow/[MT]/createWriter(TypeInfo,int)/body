{
  Writer<T> writer;
  Category category=typeInfo.getCategory();
switch (category) {
case PRIMITIVE:
{
      PrimitiveTypeInfo primitiveTypeInfo=(PrimitiveTypeInfo)typeInfo;
      PrimitiveCategory primitiveCategory=primitiveTypeInfo.getPrimitiveCategory();
switch (primitiveCategory) {
case BOOLEAN:
        writer=new BooleanWriter(columnIndex);
      break;
case BYTE:
    writer=new ByteWriter(columnIndex);
  break;
case SHORT:
writer=new ShortWriter(columnIndex);
break;
case INT:
writer=new IntWriter(columnIndex);
break;
case LONG:
writer=new LongWriter(columnIndex);
break;
case DATE:
writer=new DateWriter(columnIndex);
break;
case TIMESTAMP:
writer=new TimestampWriter(columnIndex);
break;
case FLOAT:
writer=new FloatWriter(columnIndex);
break;
case DOUBLE:
writer=new DoubleWriter(columnIndex);
break;
case STRING:
case CHAR:
case VARCHAR:
writer=new StringWriter(columnIndex);
break;
case BINARY:
writer=new BinaryWriter(columnIndex);
break;
case DECIMAL:
writer=new HiveDecimalWriter(columnIndex);
break;
case INTERVAL_YEAR_MONTH:
writer=new IntervalYearMonthWriter(columnIndex);
break;
case INTERVAL_DAY_TIME:
writer=new IntervalDayTimeWriter(columnIndex);
break;
default :
throw new HiveException("Unexpected primitive type category " + primitiveCategory);
}
}
break;
default :
throw new HiveException("Unexpected type category " + category);
}
return writer;
}
