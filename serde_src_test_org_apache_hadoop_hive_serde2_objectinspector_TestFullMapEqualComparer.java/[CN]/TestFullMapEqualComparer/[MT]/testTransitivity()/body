{
  IntegerIntegerMapHolder o1=new IntegerIntegerMapHolder();
  IntegerIntegerMapHolder o2=new IntegerIntegerMapHolder();
  IntegerIntegerMapHolder o3=new IntegerIntegerMapHolder();
  ObjectInspector oi=ObjectInspectorFactory.getReflectionObjectInspector(IntegerIntegerMapHolder.class,ObjectInspectorOptions.JAVA);
  o1.mMap.put(1,1);
  o1.mMap.put(99,99);
  o2.mMap.put(0,99);
  o2.mMap.put(99,99);
  o3.mMap.put(0,1);
  o3.mMap.put(1,99);
{
    int rc12=ObjectInspectorUtils.compare(o1,oi,o2,oi,new SimpleMapEqualComparer());
    assertTrue(rc12 > 0);
    int rc23=ObjectInspectorUtils.compare(o2,oi,o3,oi,new SimpleMapEqualComparer());
    assertTrue(rc23 > 0);
    int rc13=ObjectInspectorUtils.compare(o1,oi,o3,oi,new SimpleMapEqualComparer());
    assertTrue(rc13 < 0);
  }
{
    int rc12=ObjectInspectorUtils.compare(o1,oi,o2,oi,new CrossMapEqualComparer());
    assertTrue(rc12 > 0);
    int rc23=ObjectInspectorUtils.compare(o2,oi,o3,oi,new CrossMapEqualComparer());
    assertTrue(rc23 > 0);
    int rc13=ObjectInspectorUtils.compare(o1,oi,o3,oi,new CrossMapEqualComparer());
    assertTrue(rc13 < 0);
  }
{
    int rc12=ObjectInspectorUtils.compare(o1,oi,o2,oi,new FullMapEqualComparer());
    assertTrue(rc12 > 0);
    int rc23=ObjectInspectorUtils.compare(o2,oi,o3,oi,new FullMapEqualComparer());
    assertTrue(rc23 > 0);
    int rc13=ObjectInspectorUtils.compare(o1,oi,o3,oi,new FullMapEqualComparer());
    assertTrue(rc13 > 0);
  }
}
