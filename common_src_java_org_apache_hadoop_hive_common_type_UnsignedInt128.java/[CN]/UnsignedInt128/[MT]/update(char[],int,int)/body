{
  final int end=offset + length;
  assert(end <= str.length);
  int cursor=offset;
  while (cursor < end && str[cursor] == '0') {
    ++cursor;
  }
  if (cursor == end) {
    zeroClear();
    return;
  }
  if (end - cursor > MAX_DIGITS) {
    SqlMathUtil.throwOverflowException();
  }
  int accumulated=0;
  int accumulatedCount=0;
  while (cursor < end) {
    if (str[cursor] < '0' || str[cursor] > '9') {
      throw new NumberFormatException("Invalid string:" + new String(str,offset,length));
    }
    if (accumulatedCount == 9) {
      scaleUpTenDestructive((short)accumulatedCount);
      addDestructive(accumulated);
      accumulated=0;
      accumulatedCount=0;
    }
    int digit=str[cursor] - '0';
    accumulated=accumulated * 10 + digit;
    ++accumulatedCount;
    ++cursor;
  }
  if (accumulatedCount > 0) {
    scaleUpTenDestructive((short)accumulatedCount);
    addDestructive(accumulated);
  }
}
