{
  if (right.isZero()) {
    assert(right.isZero());
    SqlMathUtil.throwZeroDivisionException();
  }
  if (right.count == 1) {
    assert(right.v[1] == 0);
    assert(right.v[2] == 0);
    assert(right.v[3] == 0);
    int rem=divideDestructive(right.v[0]);
    remainder.update(rem);
    return;
  }
  int[] quotient=new int[5];
  int[] rem=SqlMathUtil.divideMultiPrecision(this.v,right.v,quotient);
  update(quotient[0],quotient[1],quotient[2],quotient[3]);
  remainder.update(rem[0],rem[1],rem[2],rem[3]);
}
