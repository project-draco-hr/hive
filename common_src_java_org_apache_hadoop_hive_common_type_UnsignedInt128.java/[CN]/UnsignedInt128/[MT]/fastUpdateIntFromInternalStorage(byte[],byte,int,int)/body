{
  byte b0, b1, b2, b3;
  if (signum == -1) {
    b1=b2=b3=(byte)-1;
  }
 else {
    b1=b2=b3=0;
  }
switch (length) {
case 4:
    b3=internalStorage[pos];
  ++pos;
case 3:
b2=internalStorage[pos];
++pos;
case 2:
b1=internalStorage[pos];
++pos;
case 1:
b0=internalStorage[pos];
break;
default :
throw new RuntimeException("Impossible HiveDecimal internal storage position!");
}
int value=((int)b0 & 0x000000FF) | (((int)b1 << 8) & 0x0000FF00) | (((int)b2 << 16) & 0x00FF0000)| (((int)b3 << 24) & 0xFF000000);
if (signum == -1 && value != 0) {
int mask=-1 >>> (8 * (4 - length));
value=~value & mask;
}
return value;
}
