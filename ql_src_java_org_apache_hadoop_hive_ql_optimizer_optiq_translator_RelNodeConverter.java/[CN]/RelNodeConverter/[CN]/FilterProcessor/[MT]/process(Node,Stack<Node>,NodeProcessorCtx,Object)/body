{
  Context ctx=(Context)procCtx;
  HiveRel input=(HiveRel)ctx.getParentNode((Operator<? extends OperatorDesc>)nd,0);
  FilterOperator filterOp=(FilterOperator)nd;
  RexNode convertedFilterExpr=ctx.convertToOptiqExpr(filterOp.getConf().getPredicate(),input,true);
  if (convertedFilterExpr instanceof RexCall) {
    RexCall call=(RexCall)convertedFilterExpr;
    convertedFilterExpr=ctx.cluster.getRexBuilder().makeFlatCall(call.getOperator(),call.getOperands());
  }
  HiveRel filtRel=new HiveFilterRel(ctx.cluster,ctx.cluster.traitSetOf(HiveRel.CONVENTION),input,convertedFilterExpr);
  ctx.propagatePosMap(filtRel,input);
  ctx.hiveOpToRelNode.put(filterOp,filtRel);
  return filtRel;
}
