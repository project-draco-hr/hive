{
  final DoubleColumnVector result=(DoubleColumnVector)previousVector;
  super.nextVector(result,isNull,batchSize);
  final boolean hasNulls=!result.noNulls;
  boolean allNulls=hasNulls;
  if (hasNulls) {
    for (int i=0; batchSize <= result.isNull.length && i < batchSize; i++) {
      allNulls=allNulls & result.isNull[i];
    }
    if (allNulls) {
      result.vector[0]=Double.NaN;
      result.isRepeating=true;
    }
 else {
      result.isRepeating=false;
      for (int i=0; batchSize <= result.isNull.length && batchSize <= result.vector.length && i < batchSize; i++) {
        if (!result.isNull[i]) {
          result.vector[i]=utils.readFloat(stream);
        }
 else {
          result.vector[i]=Double.NaN;
        }
      }
    }
  }
 else {
    boolean repeating=(batchSize > 1);
    final float f1=utils.readFloat(stream);
    result.vector[0]=f1;
    for (int i=1; i < batchSize && batchSize <= result.vector.length; i++) {
      final float f2=utils.readFloat(stream);
      repeating=repeating && (f1 == f2);
      result.vector[i]=f2;
    }
    result.isRepeating=repeating;
  }
}
