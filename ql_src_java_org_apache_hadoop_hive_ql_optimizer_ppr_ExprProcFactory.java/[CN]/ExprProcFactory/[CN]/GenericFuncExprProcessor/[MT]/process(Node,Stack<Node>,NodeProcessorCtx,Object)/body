{
  ExprNodeDesc newfd=null;
  ExprNodeGenericFuncDesc fd=(ExprNodeGenericFuncDesc)nd;
  boolean unknown=false;
  if (FunctionRegistry.isOpAndOrNot(fd)) {
    boolean isAllNull=true;
    for (    Object child : nodeOutputs) {
      ExprNodeDesc child_nd=(ExprNodeDesc)child;
      if (!(child_nd instanceof ExprNodeConstantDesc && ((ExprNodeConstantDesc)child_nd).getValue() == null)) {
        isAllNull=false;
      }
    }
    unknown=isAllNull;
  }
 else   if (!FunctionRegistry.isDeterministic(fd.getGenericUDF())) {
    unknown=true;
  }
 else {
    for (    Object child : nodeOutputs) {
      ExprNodeDesc child_nd=(ExprNodeDesc)child;
      if (child_nd instanceof ExprNodeConstantDesc && ((ExprNodeConstantDesc)child_nd).getValue() == null) {
        unknown=true;
      }
    }
  }
  if (unknown) {
    newfd=new ExprNodeConstantDesc(fd.getTypeInfo(),null);
  }
 else {
    ArrayList<ExprNodeDesc> children=new ArrayList<ExprNodeDesc>();
    for (    Object child : nodeOutputs) {
      children.add((ExprNodeDesc)child);
    }
    newfd=new ExprNodeGenericFuncDesc(fd.getTypeInfo(),fd.getGenericUDF(),children);
  }
  return newfd;
}
