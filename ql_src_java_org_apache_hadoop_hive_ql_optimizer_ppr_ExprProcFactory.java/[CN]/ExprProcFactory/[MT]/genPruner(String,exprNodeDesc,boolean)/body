{
  ExprProcCtx pprCtx=new ExprProcCtx(tabAlias);
  Map<Rule,NodeProcessor> exprRules=new LinkedHashMap<Rule,NodeProcessor>();
  exprRules.put(new RuleRegExp("R1",exprNodeColumnDesc.class.getName() + "%"),getColumnProcessor());
  exprRules.put(new RuleRegExp("R2",exprNodeFieldDesc.class.getName() + "%"),getFieldProcessor());
  exprRules.put(new RuleRegExp("R3",exprNodeFuncDesc.class.getName() + "%"),getFuncProcessor());
  exprRules.put(new RuleRegExp("R5",exprNodeGenericFuncDesc.class.getName() + "%"),getGenericFuncProcessor());
  Dispatcher disp=new DefaultRuleDispatcher(getDefaultExprProcessor(),exprRules,pprCtx);
  GraphWalker egw=new DefaultGraphWalker(disp);
  List<Node> startNodes=new ArrayList<Node>();
  startNodes.add(pred);
  HashMap<Node,Object> outputMap=new HashMap<Node,Object>();
  egw.startWalking(startNodes,outputMap);
  hasNonPartCols=pprCtx.getHasNonPartCols();
  return (exprNodeDesc)outputMap.get(pred);
}
