{
  MapJoinDesc mapJoinDescriptor=getMapJoinDesc(hconf,opParseCtxMap,op,joinTree,mapJoinPos,noCheckOuterJoin);
  RowResolver outputRS=opParseCtxMap.get(op).getRowResolver();
  MapJoinOperator mapJoinOp=(MapJoinOperator)OperatorFactory.getAndMakeChild(mapJoinDescriptor,new RowSchema(outputRS.getColumnInfos()),op.getParentOperators());
  OpParseContext ctx=new OpParseContext(outputRS);
  opParseCtxMap.put(mapJoinOp,ctx);
  mapJoinOp.getConf().setReversedExprs(op.getConf().getReversedExprs());
  Map<String,ExprNodeDesc> colExprMap=op.getColumnExprMap();
  mapJoinOp.setColumnExprMap(colExprMap);
  List<Operator<? extends OperatorDesc>> childOps=op.getChildOperators();
  for (  Operator<? extends OperatorDesc> childOp : childOps) {
    childOp.replaceParent(op,mapJoinOp);
  }
  mapJoinOp.setChildOperators(childOps);
  op.setChildOperators(null);
  op.setParentOperators(null);
  return mapJoinOp;
}
