{
  this.open=false;
  if (store.getScheme().equals("thrift")) {
    transport=new TSocket(store.getHost(),store.getPort());
    ((TSocket)transport).setTimeout(2000);
    TProtocol protocol=new TBinaryProtocol(transport);
    client=new ThriftMetaStore.Client(protocol);
    for (int i=0; i < retries && !this.open; ++i) {
      try {
        transport.open();
        this.open=true;
      }
 catch (      TTransportException e) {
        System.err.println("WARN: failed to connect to MetaStore, re-trying...");
        try {
          Thread.sleep(1000);
        }
 catch (        InterruptedException ignore) {
        }
      }
    }
    if (!open) {
      throw new TException("could not connect to meta store");
    }
  }
 else   if (store.getScheme().equals("file")) {
    client=new MetaStoreServer.ThriftMetaStoreHandler("temp_server",this.conf);
    try {
      client.setOption("metastore.path",store.toASCIIString());
    }
 catch (    RuntimeException e) {
      System.err.println("Could not setoption metastore.path to " + store.getPath());
      throw new TException("could not set metastore path to: " + store.getPath());
    }
  }
 else {
    throw new TException("Unknown scheme to connect to MetaStore: " + store.getScheme());
  }
}
