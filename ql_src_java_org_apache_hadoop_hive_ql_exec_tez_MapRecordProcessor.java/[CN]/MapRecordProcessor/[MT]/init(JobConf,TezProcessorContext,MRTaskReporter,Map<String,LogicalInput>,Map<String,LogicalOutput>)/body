{
  perfLogger.PerfLogBegin(CLASS_NAME,PerfLogger.TEZ_INIT_OPERATORS);
  super.init(jconf,processorContext,mrReporter,inputs,outputs);
  MRInputLegacy mrInput=TezProcessor.getMRInput(inputs);
  Configuration updatedConf=mrInput.getConfigUpdates();
  if (updatedConf != null) {
    for (    Entry<String,String> entry : updatedConf) {
      jconf.set(entry.getKey(),entry.getValue());
    }
  }
  createOutputMap();
  for (  Entry<String,LogicalOutput> outputEntry : outputs.entrySet()) {
    l4j.info("Starting Output: " + outputEntry.getKey());
    outputEntry.getValue().start();
    ((TezKVOutputCollector)outMap.get(outputEntry.getKey())).initialize();
  }
  ObjectCache cache=ObjectCacheFactory.getCache(jconf);
  try {
    execContext.setJc(jconf);
    mapWork=(MapWork)cache.retrieve(MAP_PLAN_KEY);
    if (mapWork == null) {
      mapWork=Utilities.getMapWork(jconf);
      cache.cache(MAP_PLAN_KEY,mapWork);
      l4j.info("Plan: " + mapWork);
      for (      String s : mapWork.getAliases()) {
        l4j.info("Alias: " + s);
      }
    }
 else {
      Utilities.setMapWork(jconf,mapWork);
    }
    if (mapWork.getVectorMode()) {
      mapOp=new VectorMapOperator();
    }
 else {
      mapOp=new MapOperator();
    }
    mapOp.setConf(mapWork);
    mapOp.setChildren(jconf);
    l4j.info(mapOp.dump(0));
    MapredContext.init(true,new JobConf(jconf));
    ((TezContext)MapredContext.get()).setInputs(inputs);
    mapOp.setExecContext(execContext);
    mapOp.initializeLocalWork(jconf);
    mapOp.initialize(jconf,null);
    List<HashTableDummyOperator> dummyOps=mapWork.getDummyOps();
    if (dummyOps != null) {
      for (      Operator<? extends OperatorDesc> dummyOp : dummyOps) {
        dummyOp.setExecContext(execContext);
        dummyOp.initialize(jconf,null);
      }
    }
    OperatorUtils.setChildrenCollector(mapOp.getChildOperators(),outMap);
    mapOp.setReporter(reporter);
    MapredContext.get().setReporter(reporter);
  }
 catch (  Throwable e) {
    abort=true;
    if (e instanceof OutOfMemoryError) {
      throw (OutOfMemoryError)e;
    }
 else {
      throw new RuntimeException("Map operator initialization failed",e);
    }
  }
  perfLogger.PerfLogEnd(CLASS_NAME,PerfLogger.TEZ_INIT_OPERATORS);
}
