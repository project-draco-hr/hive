{
  int size=mergeMapOpList.size() + 1;
  sources=new MapRecordSource[size];
  position=mapOp.getConf().getTag();
  sources[position]=new MapRecordSource();
  KeyValueReader reader=null;
  if (mainWorkMultiMRInput != null) {
    reader=getKeyValueReader(mainWorkMultiMRInput.getKeyValueReaders(),mapOp);
  }
 else {
    reader=legacyMRInput.getReader();
  }
  sources[position].init(jconf,mapOp,reader);
  for (  AbstractMapOperator mapOp : mergeMapOpList) {
    int tag=mapOp.getConf().getTag();
    sources[tag]=new MapRecordSource();
    String inputName=mapOp.getConf().getName();
    MultiMRInput multiMRInput=multiMRInputMap.get(inputName);
    Collection<KeyValueReader> kvReaders=multiMRInput.getKeyValueReaders();
    l4j.debug("There are " + kvReaders.size() + " key-value readers for input "+ inputName);
    if (kvReaders.size() > 0) {
      reader=getKeyValueReader(kvReaders,mapOp);
      sources[tag].init(jconf,mapOp,reader);
    }
  }
  ((TezContext)MapredContext.get()).setRecordSources(sources);
}
