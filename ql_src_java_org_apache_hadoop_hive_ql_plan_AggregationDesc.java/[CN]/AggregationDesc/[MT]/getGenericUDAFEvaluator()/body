{
  if (genericUDAFEvaluator != null) {
    return genericUDAFEvaluator;
  }
  if (genericUDAFWritableEvaluator != null) {
    return genericUDAFEvaluator=genericUDAFWritableEvaluator;
  }
  try {
    return genericUDAFEvaluator=ReflectionUtils.newInstance(Class.forName(genericUDAFEvaluatorClassName,true,JavaUtils.getClassLoader()).asSubclass(GenericUDAFEvaluator.class),null);
  }
 catch (  ClassNotFoundException e) {
    throw new RuntimeException(e);
  }
}
