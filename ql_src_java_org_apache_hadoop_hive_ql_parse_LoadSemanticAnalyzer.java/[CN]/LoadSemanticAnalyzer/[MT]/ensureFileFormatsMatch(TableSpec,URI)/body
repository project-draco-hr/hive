{
  final Class<? extends InputFormat> destInputFormat;
  try {
    if (ts.getPartSpec() == null || ts.getPartSpec().isEmpty()) {
      destInputFormat=ts.tableHandle.getInputFormatClass();
    }
 else {
      destInputFormat=ts.partHandle.getInputFormatClass();
    }
  }
 catch (  HiveException e) {
    throw new SemanticException(e);
  }
  if (OrcInputFormat.class.equals(destInputFormat)) {
    Path inputFilePath=new Path(fromURI);
    try {
      FileSystem fs=FileSystem.get(fromURI,conf);
      OrcFile.createReader(fs,inputFilePath);
    }
 catch (    FileFormatException e) {
      throw new SemanticException(ErrorMsg.INVALID_FILE_FORMAT_IN_LOAD.getMsg("Destination" + " table is stored as ORC but the file being loaded is not a valid ORC file."));
    }
catch (    IOException e) {
      throw new SemanticException("Unable to load data to destination table." + " Error: " + e.getMessage());
    }
  }
}
