{
  FileStatus[] srcs=null;
  if (isLocal && !fromURI.getScheme().equals("file")) {
    throw new SemanticException(ErrorMsg.ILLEGAL_PATH.getMsg(ast,"Source file system should be \"file\" if \"local\" is specified"));
  }
  try {
    srcs=matchFilesOrDir(FileSystem.get(fromURI,conf),new Path(fromURI));
    if (srcs == null || srcs.length == 0) {
      throw new SemanticException(ErrorMsg.INVALID_PATH.getMsg(ast,"No files matching path " + fromURI));
    }
    for (    FileStatus oneSrc : srcs) {
      if (oneSrc.isDir()) {
        throw new SemanticException(ErrorMsg.INVALID_PATH.getMsg(ast,"source contains directory: " + oneSrc.getPath().toString()));
      }
    }
  }
 catch (  IOException e) {
    throw new SemanticException(ErrorMsg.INVALID_PATH.getMsg(ast),e);
  }
  return Lists.newArrayList(srcs);
}
