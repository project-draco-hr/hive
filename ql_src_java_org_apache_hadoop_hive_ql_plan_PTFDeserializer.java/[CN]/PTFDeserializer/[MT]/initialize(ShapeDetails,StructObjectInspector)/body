{
  String serdeClassName=shp.getSerdeClassName();
  Properties serDeProps=new Properties();
  Map<String,String> serdePropsMap=new LinkedHashMap<String,String>();
  addOIPropertiestoSerDePropsMap(OI,serdePropsMap);
  for (  String serdeName : serdePropsMap.keySet()) {
    serDeProps.setProperty(serdeName,serdePropsMap.get(serdeName));
  }
  try {
    SerDe serDe=ReflectionUtils.newInstance(hConf.getClassByName(serdeClassName).asSubclass(SerDe.class),hConf);
    SerDeUtils.initializeSerDe(serDe,hConf,serDeProps,null);
    shp.setSerde(serDe);
    StructObjectInspector outOI=PTFPartition.setupPartitionOutputOI(serDe,OI);
    shp.setOI(outOI);
  }
 catch (  Exception se) {
    throw new HiveException(se);
  }
}
