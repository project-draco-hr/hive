{
  random=new Random(93440);
  VectorMapJoinFastLongHashMap map=new VectorMapJoinFastLongHashMap(false,false,HashTableKeyType.LONG,CAPACITY,1f,WB_SIZE);
  VerifyFastLongHashMap verifyTable=new VerifyFastLongHashMap();
  for (int i=0; i < CAPACITY; i++) {
    long key;
    while (true) {
      key=random.nextLong();
      if (!verifyTable.contains(key)) {
        break;
      }
    }
    byte[] value=new byte[random.nextInt(MAX_VALUE_LENGTH)];
    random.nextBytes(value);
    map.testPutRow(key,value);
    verifyTable.add(key,value);
  }
  verifyTable.verify(map);
  long anotherKey;
  while (true) {
    anotherKey=random.nextLong();
    if (!verifyTable.contains(anotherKey)) {
      break;
    }
  }
  VectorMapJoinHashMapResult hashMapResult=map.createHashMapResult();
  JoinUtil.JoinResult joinResult=map.lookup(anotherKey,hashMapResult);
  assertTrue(joinResult == JoinUtil.JoinResult.NOMATCH);
}
