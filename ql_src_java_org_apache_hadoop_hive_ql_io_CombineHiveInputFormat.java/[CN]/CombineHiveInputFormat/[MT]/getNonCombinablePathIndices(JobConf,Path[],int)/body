{
  LOG.info("Total number of paths: " + paths.length + ", launching "+ numThreads+ " threads to check non-combinable ones.");
  int numPathPerThread=(int)Math.ceil((double)paths.length / numThreads);
  ExecutorService executor=Executors.newFixedThreadPool(numThreads);
  List<Future<Set<Integer>>> futureList=new ArrayList<Future<Set<Integer>>>(numThreads);
  try {
    for (int i=0; i < numThreads; i++) {
      int start=i * numPathPerThread;
      int length=i != numThreads - 1 ? numPathPerThread : paths.length - start;
      futureList.add(executor.submit(new CheckNonCombinablePathCallable(paths,start,length,job)));
    }
    Set<Integer> nonCombinablePathIndices=new HashSet<Integer>();
    for (    Future<Set<Integer>> future : futureList) {
      nonCombinablePathIndices.addAll(future.get());
    }
    return nonCombinablePathIndices;
  }
  finally {
    executor.shutdownNow();
  }
}
