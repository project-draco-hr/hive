{
  HistoryLogger.logFragmentStart(request.getApplicationIdString(),request.getContainerIdString(),localAddress.get().getHostName(),request.getFragmentSpec().getDagName(),request.getFragmentSpec().getVertexName(),request.getFragmentSpec().getFragmentNumber(),request.getFragmentSpec().getAttemptNumber());
  LOG.info("Queueing container for execution: " + stringifySubmitRequest(request));
  String ndcContextString=request.getContainerIdString() + "_" + request.getFragmentSpec().getDagName()+ "_"+ request.getFragmentSpec().getVertexName()+ "_"+ request.getFragmentSpec().getFragmentNumber()+ "_"+ request.getFragmentSpec().getAttemptNumber();
  NDC.push(ndcContextString);
  try {
    Map<String,String> env=new HashMap<String,String>();
    env.putAll(localEnv);
    env.put(ApplicationConstants.Environment.USER.name(),request.getUser());
    FragmentSpecProto fragmentSpec=request.getFragmentSpec();
    TezTaskAttemptID taskAttemptId=TezTaskAttemptID.fromString(fragmentSpec.getTaskAttemptIdString());
    int dagIdentifier=taskAttemptId.getTaskID().getVertexID().getDAGId().getId();
    queryTracker.registerFragment(null,request.getApplicationIdString(),fragmentSpec.getDagName(),dagIdentifier,fragmentSpec.getVertexName(),fragmentSpec.getFragmentNumber(),fragmentSpec.getAttemptNumber(),request.getUser());
    String[] localDirs=queryTracker.getLocalDirs(null,fragmentSpec.getDagName(),request.getUser());
    Preconditions.checkNotNull(localDirs);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Dirs are: " + Arrays.toString(localDirs));
    }
    Credentials credentials=new Credentials();
    DataInputBuffer dib=new DataInputBuffer();
    byte[] tokenBytes=request.getCredentialsBinary().toByteArray();
    dib.reset(tokenBytes,tokenBytes.length);
    credentials.readTokenStorageStream(dib);
    Token<JobTokenIdentifier> jobToken=TokenCache.getSessionToken(credentials);
    LOG.info("DEBUG: Registering request with the ShuffleHandler");
    ShuffleHandler.get().registerDag(request.getApplicationIdString(),dagIdentifier,jobToken,request.getUser(),localDirs);
    ConcurrentMap<String,SourceStateProto> sourceCompletionMap=getSourceCompletionMap(request.getFragmentSpec().getDagName());
    TaskRunnerCallable callable=new TaskRunnerCallable(request,new Configuration(getConfig()),new ExecutionContextImpl(localAddress.get().getHostName()),env,localDirs,credentials,memoryPerExecutor,amReporter,sourceCompletionMap,confParams,metrics,killedTaskHandler);
    executorService.schedule(callable);
    metrics.incrExecutorTotalRequestsHandled();
    metrics.incrExecutorNumQueuedRequests();
  }
  finally {
    NDC.pop();
  }
}
