{
switch (result.getExitStatus()) {
case SUCCESS:
    LOG.info("Successfully finished: " + request.getApplicationIdString() + ", containerId="+ request.getContainerIdString());
  metrics.incrExecutorTotalSuccess();
break;
case EXECUTION_FAILURE:
LOG.info("Failed to run: " + request.getApplicationIdString() + ", containerId="+ request.getContainerIdString(),result.getThrowable());
metrics.incrExecutorTotalExecutionFailed();
break;
case INTERRUPTED:
LOG.info("Interrupted while running: " + request.getApplicationIdString() + ", containerId="+ request.getContainerIdString(),result.getThrowable());
metrics.incrExecutorTotalInterrupted();
break;
case ASKED_TO_DIE:
LOG.info("Asked to die while running: " + request.getApplicationIdString() + ", containerId="+ request.getContainerIdString());
metrics.incrExecutorTotalAskedToDie();
break;
}
HistoryLogger.logFragmentEnd(request.getApplicationIdString(),request.getContainerIdString(),localAddress.get().getHostName(),null,null,-1,-1,containerRunnerCallable.startTime,true);
metrics.decrExecutorNumQueuedRequests();
}
