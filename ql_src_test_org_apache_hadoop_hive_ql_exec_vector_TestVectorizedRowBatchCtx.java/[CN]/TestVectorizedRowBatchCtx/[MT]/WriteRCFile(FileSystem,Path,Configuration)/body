{
  fs.delete(file,true);
  RCFileOutputFormat.setColumnNumber(conf,colCount);
  RCFile.Writer writer=new RCFile.Writer(fs,conf,file,null,null,new DefaultCodec());
  for (int i=0; i < 10; ++i) {
    BytesRefArrayWritable bytes=new BytesRefArrayWritable(colCount);
    BytesRefWritable cu;
    if (i % 3 != 0) {
      cu=new BytesRefWritable((i + "").getBytes("UTF-8"),0,(i + "").getBytes("UTF-8").length);
      bytes.set(0,cu);
      cu=new BytesRefWritable((i + 100 + "").getBytes("UTF-8"),0,(i + 100 + "").getBytes("UTF-8").length);
      bytes.set(1,cu);
      cu=new BytesRefWritable((i + 200 + "").getBytes("UTF-8"),0,(i + 200 + "").getBytes("UTF-8").length);
      bytes.set(2,cu);
      cu=new BytesRefWritable((i + 1.23 + "").getBytes("UTF-8"),0,(i + 1.23 + "").getBytes("UTF-8").length);
      bytes.set(3,cu);
      cu=new BytesRefWritable((i + 2.23 + "").getBytes("UTF-8"),0,(i + 2.23 + "").getBytes("UTF-8").length);
      bytes.set(4,cu);
      cu=new BytesRefWritable(("Test string").getBytes("UTF-8"),0,("Test string").getBytes("UTF-8").length);
      bytes.set(5,cu);
    }
 else {
      cu=new BytesRefWritable((i + "").getBytes("UTF-8"),0,(i + "").getBytes("UTF-8").length);
      bytes.set(0,cu);
      cu=new BytesRefWritable(new byte[0],0,0);
      bytes.set(1,cu);
      cu=new BytesRefWritable(new byte[0],0,0);
      bytes.set(2,cu);
      cu=new BytesRefWritable(new byte[0],0,0);
      bytes.set(3,cu);
      cu=new BytesRefWritable(new byte[0],0,0);
      bytes.set(4,cu);
      cu=new BytesRefWritable(("Test string").getBytes("UTF-8"),0,("Test string").getBytes("UTF-8").length);
      bytes.set(5,cu);
    }
    writer.append(bytes);
  }
  writer.close();
}
