{
  if (arguments.length != 3) {
    throw new UDFArgumentLengthException("_FUNC_ expects exactly 3 arguments");
  }
  for (int i=0; i < arguments.length; i++) {
    if (arguments[i].getCategory() != Category.PRIMITIVE) {
      throw new UDFArgumentTypeException(i,"A string argument was expected but an argument of type " + arguments[i].getTypeName() + " was given.");
    }
    PrimitiveCategory primitiveCategory=((PrimitiveObjectInspector)arguments[i]).getPrimitiveCategory();
    if (primitiveCategory != PrimitiveCategory.STRING && primitiveCategory != PrimitiveCategory.VOID) {
      throw new UDFArgumentTypeException(i,"A string argument was expected but an argument of type " + arguments[i].getTypeName() + " was given.");
    }
  }
  converters=new ObjectInspectorConverters.Converter[arguments.length];
  for (int i=0; i < arguments.length; i++) {
    converters[i]=ObjectInspectorConverters.getConverter(arguments[i],PrimitiveObjectInspectorFactory.writableStringObjectInspector);
  }
  return PrimitiveObjectInspectorFactory.writableStringObjectInspector;
}
