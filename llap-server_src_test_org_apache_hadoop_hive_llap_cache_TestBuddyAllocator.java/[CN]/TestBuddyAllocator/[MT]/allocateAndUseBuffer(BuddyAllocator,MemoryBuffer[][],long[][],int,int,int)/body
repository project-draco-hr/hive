{
  allocs[index]=new MemoryBuffer[allocCount];
  testValues[index]=new long[allocCount];
  int size=(1 << sizeLog2) - 1;
  try {
    a.allocateMultiple(allocs[index],size);
  }
 catch (  AllocatorOutOfMemoryException ex) {
    LOG.error("Failed to allocate " + allocCount + " of "+ size+ "; "+ a.debugDump());
    throw ex;
  }
  for (int j=0; j < allocCount; ++j) {
    MemoryBuffer mem=allocs[index][j];
    long testValue=testValues[index][j]=rdm.nextLong();
    int pos=mem.getByteBufferRaw().position();
    mem.getByteBufferRaw().putLong(pos,testValue);
    int halfLength=mem.getByteBufferRaw().remaining() >> 1;
    if (halfLength + 8 <= mem.getByteBufferRaw().remaining()) {
      mem.getByteBufferRaw().putLong(pos + halfLength,testValue);
    }
  }
}
