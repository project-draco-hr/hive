{
  SliderClient sliderClient=null;
  try {
    LlapStatusOptionsProcessor optionsProcessor=new LlapStatusOptionsProcessor();
    LlapStatusOptions options;
    try {
      options=optionsProcessor.processOptions(args);
    }
 catch (    Exception e) {
      LOG.info("Failed to parse arguments",e);
      return ExitCode.INCORRECT_USAGE.getInt();
    }
    for (    String f : LlapDaemonConfiguration.DAEMON_CONFIGS) {
      conf.addResource(f);
    }
    conf.reloadConfiguration();
    for (    Map.Entry<Object,Object> props : options.getConf().entrySet()) {
      conf.set((String)props.getKey(),(String)props.getValue());
    }
    String appName;
    appName=options.getName();
    if (StringUtils.isEmpty(appName)) {
      appName=HiveConf.getVar(conf,HiveConf.ConfVars.LLAP_DAEMON_SERVICE_HOSTS);
      if (appName.startsWith("@") && appName.length() > 1) {
        appName=appName.substring(1);
      }
 else {
        appName=null;
      }
    }
    if (StringUtils.isEmpty(appName)) {
      String message="Invalid app name. This must be setup via config or passed in as a parameter." + " This tool works with clusters deployed by Slider/YARN";
      LOG.info(message);
      return ExitCode.INCORRECT_USAGE.getInt();
    }
    try {
      sliderClient=createSliderClient();
    }
 catch (    LlapStatusCliException e) {
      logError(e);
      return e.getExitCode().getInt();
    }
    ApplicationReport appReport=null;
    try {
      appReport=getAppReport(appName,sliderClient,options.getFindAppTimeoutMs());
    }
 catch (    LlapStatusCliException e) {
      logError(e);
      return e.getExitCode().getInt();
    }
    ExitCode ret;
    try {
      ret=processAppReport(appReport,appStatusBuilder);
    }
 catch (    LlapStatusCliException e) {
      logError(e);
      return e.getExitCode().getInt();
    }
    if (ret != ExitCode.SUCCESS) {
      return ret.getInt();
    }
 else     if (EnumSet.of(State.APP_NOT_FOUND,State.COMPLETE,State.LAUNCHING).contains(appStatusBuilder.getState())) {
      return ExitCode.SUCCESS.getInt();
    }
 else {
      try {
        ret=populateAppStatusFromSlider(appName,sliderClient,appStatusBuilder);
      }
 catch (      LlapStatusCliException e) {
        logError(e);
        return e.getExitCode().getInt();
      }
    }
    if (ret != ExitCode.SUCCESS) {
      return ret.getInt();
    }
 else {
      try {
        ret=populateAppStatusFromLlapRegistry(options,appStatusBuilder);
      }
 catch (      LlapStatusCliException e) {
        logError(e);
        return e.getExitCode().getInt();
      }
    }
    return ret.getInt();
  }
  finally {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Final AppState: " + appStatusBuilder.toString());
    }
    if (sliderClient != null) {
      sliderClient.stop();
    }
  }
}
