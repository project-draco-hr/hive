{
  RequestManagerForTest requestManager=new RequestManagerForTest(1);
  LlapNodeId nodeId1=LlapNodeId.getInstance("host1",1025);
  Message mockMessage=mock(Message.class);
  LlapProtocolClientProxy.ExecuteRequestCallback mockExecuteRequestCallback=mock(LlapProtocolClientProxy.ExecuteRequestCallback.class);
  requestManager.queueRequest(new CallableRequestForTest(nodeId1,mockMessage,mockExecuteRequestCallback));
  requestManager.process();
  assertEquals(1,requestManager.numSubmissionsCounters);
  assertNotNull(requestManager.numInvocationsPerNode.get(nodeId1));
  Assert.assertEquals(1,requestManager.numInvocationsPerNode.get(nodeId1).getValue().intValue());
  assertEquals(0,requestManager.currentLoopSkippedRequests.size());
  requestManager.queueRequest(new CallableRequestForTest(nodeId1,mockMessage,mockExecuteRequestCallback));
  requestManager.process();
  assertEquals(1,requestManager.numSubmissionsCounters);
  assertNotNull(requestManager.numInvocationsPerNode.get(nodeId1));
  Assert.assertEquals(1,requestManager.numInvocationsPerNode.get(nodeId1).getValue().intValue());
  assertEquals(1,requestManager.currentLoopSkippedRequests.size());
  assertEquals(1,requestManager.currentLoopDisabledNodes.size());
  assertTrue(requestManager.currentLoopDisabledNodes.contains(nodeId1));
  requestManager.requestFinished(nodeId1);
  requestManager.process();
  assertEquals(2,requestManager.numSubmissionsCounters);
  assertNotNull(requestManager.numInvocationsPerNode.get(nodeId1));
  Assert.assertEquals(2,requestManager.numInvocationsPerNode.get(nodeId1).getValue().intValue());
  assertEquals(0,requestManager.currentLoopSkippedRequests.size());
  assertEquals(0,requestManager.currentLoopDisabledNodes.size());
  assertFalse(requestManager.currentLoopDisabledNodes.contains(nodeId1));
}
