{
  Writable[] fields=new Writable[columnTypes.size()];
  int pos=0;
  for (  TypeInfo type : columnTypes) {
switch (type.getCategory()) {
case PRIMITIVE:
      fields[pos++]=getPrimitiveWritable((PrimitiveTypeInfo)type);
    break;
case LIST:
{
    List<TypeInfo> elementType=new ArrayList<TypeInfo>();
    elementType.add(((ListTypeInfo)type).getListElementTypeInfo());
    fields[pos++]=createRecord(elementType);
  }
break;
case MAP:
{
List<TypeInfo> keyValueType=new ArrayList<TypeInfo>();
keyValueType.add(((MapTypeInfo)type).getMapKeyTypeInfo());
keyValueType.add(((MapTypeInfo)type).getMapValueTypeInfo());
fields[pos++]=record(createRecord(keyValueType));
}
break;
case STRUCT:
{
List<TypeInfo> elementType=((StructTypeInfo)type).getAllStructFieldTypeInfos();
fields[pos++]=createRecord(elementType);
}
break;
default :
throw new IllegalStateException("Invalid column type: " + type);
}
}
return record(fields);
}
