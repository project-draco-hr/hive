{
  assert(nodeOutputs.length == 1);
  NodeInfoWrapper wrapper=(NodeInfoWrapper)nodeOutputs[0];
  if (wrapper.state == WalkState.TRUE) {
    ExprNodeConstantDesc falseDesc=new ExprNodeConstantDesc(wrapper.outExpr.getTypeInfo(),Boolean.FALSE);
    return new NodeInfoWrapper(WalkState.FALSE,null,falseDesc);
  }
 else   if (wrapper.state == WalkState.FALSE) {
    ExprNodeConstantDesc trueDesc=new ExprNodeConstantDesc(wrapper.outExpr.getTypeInfo(),Boolean.TRUE);
    return new NodeInfoWrapper(WalkState.TRUE,null,trueDesc);
  }
 else   if (wrapper.state == WalkState.DIVIDED) {
    Boolean[] results=new Boolean[ctx.getPartList().size()];
    for (int i=0; i < ctx.getPartList().size(); i++) {
      results[i]=opNot(wrapper.ResultVector[i]);
    }
    return new NodeInfoWrapper(WalkState.DIVIDED,results,getOutExpr(fd,nodeOutputs));
  }
 else {
    return new NodeInfoWrapper(wrapper.state,null,getOutExpr(fd,nodeOutputs));
  }
}
