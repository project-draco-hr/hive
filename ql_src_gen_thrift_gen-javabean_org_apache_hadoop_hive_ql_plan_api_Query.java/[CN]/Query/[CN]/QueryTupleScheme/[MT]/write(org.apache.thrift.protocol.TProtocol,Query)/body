{
  TTupleProtocol oprot=(TTupleProtocol)prot;
  BitSet optionals=new BitSet();
  if (struct.isSetQueryId()) {
    optionals.set(0);
  }
  if (struct.isSetQueryType()) {
    optionals.set(1);
  }
  if (struct.isSetQueryAttributes()) {
    optionals.set(2);
  }
  if (struct.isSetQueryCounters()) {
    optionals.set(3);
  }
  if (struct.isSetStageGraph()) {
    optionals.set(4);
  }
  if (struct.isSetStageList()) {
    optionals.set(5);
  }
  if (struct.isSetDone()) {
    optionals.set(6);
  }
  if (struct.isSetStarted()) {
    optionals.set(7);
  }
  oprot.writeBitSet(optionals,8);
  if (struct.isSetQueryId()) {
    oprot.writeString(struct.queryId);
  }
  if (struct.isSetQueryType()) {
    oprot.writeString(struct.queryType);
  }
  if (struct.isSetQueryAttributes()) {
{
      oprot.writeI32(struct.queryAttributes.size());
      for (      Map.Entry<String,String> _iter114 : struct.queryAttributes.entrySet()) {
        oprot.writeString(_iter114.getKey());
        oprot.writeString(_iter114.getValue());
      }
    }
  }
  if (struct.isSetQueryCounters()) {
{
      oprot.writeI32(struct.queryCounters.size());
      for (      Map.Entry<String,Long> _iter115 : struct.queryCounters.entrySet()) {
        oprot.writeString(_iter115.getKey());
        oprot.writeI64(_iter115.getValue());
      }
    }
  }
  if (struct.isSetStageGraph()) {
    struct.stageGraph.write(oprot);
  }
  if (struct.isSetStageList()) {
{
      oprot.writeI32(struct.stageList.size());
      for (      Stage _iter116 : struct.stageList) {
        _iter116.write(oprot);
      }
    }
  }
  if (struct.isSetDone()) {
    oprot.writeBool(struct.done);
  }
  if (struct.isSetStarted()) {
    oprot.writeBool(struct.started);
  }
}
