def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == (-1)):
            if (ftype == TType.LIST):
                self.values = []
                (_etype65, _size62) = iprot.readListBegin()
                for _i66 in xrange(_size62):
                    _elem67 = iprot.readString()
                    self.values.append(_elem67)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == (-2)):
            if (ftype == TType.STRING):
                self.database = iprot.readString()
            else:
                iprot.skip(ftype)
        elif (fid == (-3)):
            if (ftype == TType.STRING):
                self.tableName = iprot.readString()
            else:
                iprot.skip(ftype)
        elif (fid == (-4)):
            if (ftype == TType.I32):
                self.createTime = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == (-5)):
            if (ftype == TType.I32):
                self.lastAccessTime = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == (-6)):
            if (ftype == TType.STRUCT):
                self.sd = StorageDescriptor()
                self.sd.read(iprot)
            else:
                iprot.skip(ftype)
        elif (fid == (-7)):
            if (ftype == TType.MAP):
                self.parameters = {}
                (_ktype69, _vtype70, _size68) = iprot.readMapBegin()
                for _i72 in xrange(_size68):
                    _key73 = iprot.readString()
                    _val74 = iprot.readString()
                    self.parameters[_key73] = _val74
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
