def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.LIST):
                self.cols = []
                (_etype19, _size16) = iprot.readListBegin()
                for _i20 in xrange(_size16):
                    _elem21 = FieldSchema()
                    _elem21.read(iprot)
                    self.cols.append(_elem21)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.STRING):
                self.location = iprot.readString()
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.STRING):
                self.inputFormat = iprot.readString()
            else:
                iprot.skip(ftype)
        elif (fid == 4):
            if (ftype == TType.STRING):
                self.outputFormat = iprot.readString()
            else:
                iprot.skip(ftype)
        elif (fid == 5):
            if (ftype == TType.BOOL):
                self.compressed = iprot.readBool()
            else:
                iprot.skip(ftype)
        elif (fid == 6):
            if (ftype == TType.I32):
                self.numBuckets = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 7):
            if (ftype == TType.STRUCT):
                self.serdeInfo = SerDeInfo()
                self.serdeInfo.read(iprot)
            else:
                iprot.skip(ftype)
        elif (fid == 8):
            if (ftype == TType.LIST):
                self.bucketCols = []
                (_etype25, _size22) = iprot.readListBegin()
                for _i26 in xrange(_size22):
                    _elem27 = iprot.readString()
                    self.bucketCols.append(_elem27)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 9):
            if (ftype == TType.LIST):
                self.sortCols = []
                (_etype31, _size28) = iprot.readListBegin()
                for _i32 in xrange(_size28):
                    _elem33 = Order()
                    _elem33.read(iprot)
                    self.sortCols.append(_elem33)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 10):
            if (ftype == TType.MAP):
                self.parameters = {}
                (_ktype35, _vtype36, _size34) = iprot.readMapBegin()
                for _i38 in xrange(_size34):
                    _key39 = iprot.readString()
                    _val40 = iprot.readString()
                    self.parameters[_key39] = _val40
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
