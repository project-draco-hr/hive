def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('Type')
    if (self.name != None):
        oprot.writeFieldBegin('name', TType.STRING, 1)
        oprot.writeString(self.name)
        oprot.writeFieldEnd()
    if (self.type1 != None):
        oprot.writeFieldBegin('type1', TType.STRING, 2)
        oprot.writeString(self.type1)
        oprot.writeFieldEnd()
    if (self.type2 != None):
        oprot.writeFieldBegin('type2', TType.STRING, 3)
        oprot.writeString(self.type2)
        oprot.writeFieldEnd()
    if (self.fields != None):
        oprot.writeFieldBegin('fields', TType.LIST, 4)
        oprot.writeListBegin(TType.STRUCT, len(self.fields))
        for iter6 in self.fields:
            iter6.write(oprot)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
