def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('Schema')
    if (self.fieldSchemas != None):
        oprot.writeFieldBegin('fieldSchemas', TType.LIST, 1)
        oprot.writeListBegin(TType.STRUCT, len(self.fieldSchemas))
        for iter98 in self.fieldSchemas:
            iter98.write(oprot)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    if (self.properties != None):
        oprot.writeFieldBegin('properties', TType.MAP, 2)
        oprot.writeMapBegin(TType.STRING, TType.STRING, len(self.properties))
        for (kiter99, viter100) in self.properties.items():
            oprot.writeString(kiter99)
            oprot.writeString(viter100)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
