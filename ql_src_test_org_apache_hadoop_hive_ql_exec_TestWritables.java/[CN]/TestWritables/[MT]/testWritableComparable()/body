{
  try {
    ByteStream.Output bos=new ByteStream.Output();
    DataOutputStream dos=new DataOutputStream(bos);
    HiveObjectSerializer hos=new NaiiveSerializer();
    NoTagWritableComparableHiveObject[] who=new NoTagWritableComparableHiveObject[5];
    for (int i=0; i < 5; i++) {
      who[i]=new NoTagWritableComparableHiveObject(null,hos);
      who[i].setHo(r[((i + 1) * 3) % 5]);
      who[i].write(dos);
    }
    ByteStream.Input bin=new ByteStream.Input(bos.getData(),0,bos.getCount());
    DataInputStream din=new DataInputStream(bin);
    for (int i=0; i < 5; i++) {
      who[i].readFields(din);
    }
    assertEquals(who[0].compareTo(who[1]) > 0,true);
    assertEquals(who[1].compareTo(who[2]) > 0,false);
    assertEquals(who[2].compareTo(who[3]) > 0,true);
    assertEquals(who[3].compareTo(who[4]) > 0,true);
    System.out.println("testWritableComparable OK");
  }
 catch (  Exception e) {
    e.printStackTrace();
    throw (e);
  }
}
