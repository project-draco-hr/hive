{
  commandLine=new GnuParser().parse(options,argv);
  if (commandLine.hasOption('H') || false == commandLine.hasOption("instances")) {
    printUsage();
    return null;
  }
  int instances=Integer.parseInt(commandLine.getOptionValue(OPTION_INSTANCES));
  String directory=commandLine.getOptionValue(OPTION_DIRECTORY);
  String jars=commandLine.getOptionValue(OPTION_AUXJARS);
  String name=commandLine.getOptionValue(OPTION_NAME,null);
  final int executors=Integer.parseInt(commandLine.getOptionValue(OPTION_EXECUTORS,"-1"));
  final long cache=parseSuffixed(commandLine.getOptionValue(OPTION_CACHE,"-1"));
  final long size=parseSuffixed(commandLine.getOptionValue(OPTION_SIZE,"-1"));
  final long xmx=parseSuffixed(commandLine.getOptionValue(OPTION_XMX,"-1"));
  final boolean isHbase=Boolean.parseBoolean(commandLine.getOptionValue(OPTION_AUXHBASE,"true"));
  final Properties hiveconf;
  if (commandLine.hasOption(OPTION_HIVECONF)) {
    hiveconf=commandLine.getOptionProperties(OPTION_HIVECONF);
  }
 else {
    hiveconf=new Properties();
  }
  String javaHome=null;
  if (commandLine.hasOption(OPTION_JAVA_HOME)) {
    javaHome=commandLine.getOptionValue(OPTION_JAVA_HOME);
  }
  return new LlapOptions(name,instances,directory,executors,cache,size,xmx,jars,isHbase,hiveconf,javaHome);
}
