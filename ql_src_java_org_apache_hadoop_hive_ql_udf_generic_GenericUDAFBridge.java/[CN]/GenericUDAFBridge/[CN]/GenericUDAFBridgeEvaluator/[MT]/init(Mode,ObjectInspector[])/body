{
  super.init(m,parameters);
  parameterOIs=parameters;
  for (  Method method : udafEvaluator.getMethods()) {
    if (method.getName().equals("iterate")) {
      iterateMethod=method;
    }
    if (method.getName().equals("merge")) {
      mergeMethod=method;
    }
    if (method.getName().equals("terminatePartial")) {
      terminatePartialMethod=method;
    }
    if (method.getName().equals("terminate")) {
      terminateMethod=method;
    }
  }
  Method aggregateMethod=null;
  if (mode == Mode.PARTIAL1 || mode == Mode.COMPLETE) {
    aggregateMethod=iterateMethod;
  }
 else {
    aggregateMethod=mergeMethod;
  }
  conversionHelper=new ConversionHelper(aggregateMethod,parameters);
  Method evaluateMethod=null;
  if (mode == Mode.PARTIAL1 || mode == Mode.PARTIAL2) {
    evaluateMethod=terminatePartialMethod;
  }
 else {
    evaluateMethod=terminateMethod;
  }
  Type returnType=evaluateMethod.getGenericReturnType();
  try {
    return ObjectInspectorFactory.getReflectionObjectInspector(returnType,ObjectInspectorOptions.JAVA);
  }
 catch (  RuntimeException e) {
    throw new HiveException("Cannot recognize return type " + returnType + " from "+ evaluateMethod,e);
  }
}
