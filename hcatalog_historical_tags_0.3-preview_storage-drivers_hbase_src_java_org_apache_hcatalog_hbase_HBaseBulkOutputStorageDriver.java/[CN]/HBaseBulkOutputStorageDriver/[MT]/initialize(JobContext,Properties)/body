{
  super.initialize(context,hcatProperties);
  if (!outputJobInfo.getProperties().containsKey(PROPERTY_INT_OUTPUT_LOCATION)) {
    String tableLocation=context.getConfiguration().get(PROPERTY_TABLE_LOCATION);
    String location=new Path(tableLocation,"REVISION_" + outputJobInfo.getProperties().getProperty(HBaseConstants.PROPERTY_OUTPUT_VERSION_KEY)).toString();
    outputJobInfo.getProperties().setProperty(PROPERTY_INT_OUTPUT_LOCATION,location);
    context.getConfiguration().set("mapred.output.dir",location);
    if (context.getConfiguration().getBoolean("hadoop.security.authorization",false)) {
      Path p=new Path(tableLocation);
      FileSystem fs=FileSystem.get(context.getConfiguration());
      fs.setPermission(new Path(tableLocation),FsPermission.valueOf("drwx--x--x"));
      while ((p=p.getParent()) != null) {
        if (!fs.getFileStatus(p).getPermission().getOtherAction().implies(FsAction.EXECUTE))         throw new IOException("Table's parent directories must at least have global execute permissions.");
      }
    }
  }
  outputFormat=new HBaseBulkOutputFormat();
  context.getConfiguration().set(HCatConstants.HCAT_KEY_OUTPUT_INFO,HCatUtil.serialize(outputJobInfo));
}
