{
  createWorkDir();
  Configuration conf=new Configuration(true);
  fs=FileSystem.get(conf);
  System.setProperty("hadoop.log.dir",new File(workDir,"/logs").getAbsolutePath());
  mrCluster=new MiniMRCluster(1,fs.getUri().toString(),1,null,null,new JobConf(conf));
  mrConf=mrCluster.createJobConf();
  if (isServerRunning) {
    return;
  }
  MetaStoreUtils.startMetaStore(msPort,ShimLoader.getHadoopThriftAuthBridge());
  isServerRunning=true;
  securityManager=System.getSecurityManager();
  System.setSecurityManager(new NoExitSecurityManager());
  hcatConf=new HiveConf(TestHCatPartitionPublish.class);
  hcatConf.set("hive.metastore.local","false");
  hcatConf.setVar(HiveConf.ConfVars.METASTOREURIS,"thrift://localhost:" + msPort);
  hcatConf.setIntVar(HiveConf.ConfVars.METASTORETHRIFTRETRIES,3);
  hcatConf.set(HiveConf.ConfVars.SEMANTIC_ANALYZER_HOOK.varname,HCatSemanticAnalyzer.class.getName());
  hcatConf.set(HiveConf.ConfVars.PREEXECHOOKS.varname,"");
  hcatConf.set(HiveConf.ConfVars.POSTEXECHOOKS.varname,"");
  hcatConf.set(HiveConf.ConfVars.HIVE_SUPPORT_CONCURRENCY.varname,"false");
  msc=new HiveMetaStoreClient(hcatConf,null);
  System.setProperty(HiveConf.ConfVars.PREEXECHOOKS.varname," ");
  System.setProperty(HiveConf.ConfVars.POSTEXECHOOKS.varname," ");
}
