{
  context=new Context();
  baseDir=Files.createTempDir();
  workingDirectory=new File(baseDir.getAbsolutePath(),"source");
  unitTestDir1=Dirs.create(new File(baseDir,Joiner.on("/").join("source","build","1","units","test","classes")));
  unitTestDir2=Dirs.create(new File(baseDir,Joiner.on("/").join("source","build","2","units","test","classes")));
  qFileTestDir=Dirs.create(new File(baseDir,Joiner.on("/").join("source","qfiles")));
  Assert.assertTrue((new File(unitTestDir1,"TestA.class")).createNewFile());
  Assert.assertTrue((new File(unitTestDir2,"TestB.class")).createNewFile());
  Assert.assertTrue((new File(unitTestDir1,"TestC.class")).createNewFile());
  Assert.assertTrue((new File(unitTestDir1,"TestD$E.class")).createNewFile());
  Assert.assertTrue((new File(unitTestDir1,DRIVER + ".class")).createNewFile());
  Assert.assertTrue((new File(qFileTestDir,".svn")).mkdirs());
  Assert.assertTrue((new File(qFileTestDir,"dir.q")).mkdirs());
  Assert.assertTrue((new File(qFileTestDir,"normal.q")).createNewFile());
  Assert.assertTrue((new File(qFileTestDir,"excluded.q")).createNewFile());
  Assert.assertTrue((new File(qFileTestDir,"isolated.q")).createNewFile());
  Assert.assertTrue((new File(qFileTestDir,"included.q")).createNewFile());
}
