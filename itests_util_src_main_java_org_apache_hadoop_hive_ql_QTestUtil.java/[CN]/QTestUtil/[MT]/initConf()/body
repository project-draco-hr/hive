{
  String vectorizationEnabled=System.getProperty("test.vectorization.enabled");
  if (vectorizationEnabled != null && vectorizationEnabled.equalsIgnoreCase("true")) {
    conf.setBoolVar(ConfVars.HIVE_VECTORIZATION_ENABLED,true);
  }
  if (!useHBaseMetastore) {
    conf.setVar(HiveConf.ConfVars.METASTORE_RAW_STORE_IMPL,"org.apache.hadoop.hive.metastore.VerifyingObjectStore");
  }
 else {
    conf.setVar(ConfVars.METASTORE_RAW_STORE_IMPL,HBaseStore.class.getName());
    conf.setBoolVar(ConfVars.METASTORE_FASTPATH,true);
  }
  if (mr != null) {
    mr.setupConfiguration(conf);
    setFsRelatedProperties(conf,fs.getScheme().equals("file"),fs);
  }
  if (llapCluster != null) {
    Configuration clusterSpecificConf=llapCluster.getClusterSpecificConfiguration();
    for (    Map.Entry<String,String> confEntry : clusterSpecificConf) {
      conf.set(confEntry.getKey(),clusterSpecificConf.get(confEntry.getKey()));
    }
  }
  if (Shell.WINDOWS) {
    WindowsPathUtil.convertPathsFromWindowsToHdfs(conf);
  }
}
