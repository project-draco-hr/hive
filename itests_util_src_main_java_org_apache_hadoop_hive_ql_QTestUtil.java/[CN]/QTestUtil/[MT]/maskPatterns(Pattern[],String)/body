{
  String maskPattern="#### A masked pattern was here ####";
  String partialMaskPattern="#### A PARTIAL masked pattern was here ####";
  String line;
  BufferedReader in;
  BufferedWriter out;
  File file=new File(fname);
  File fileOrig=new File(fname + ".orig");
  FileUtils.copyFile(file,fileOrig);
  in=new BufferedReader(new InputStreamReader(new FileInputStream(fileOrig),"UTF-8"));
  out=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file),"UTF-8"));
  boolean lastWasMasked=false;
  boolean partialMaskWasMatched=false;
  Matcher matcher;
  while (null != (line=in.readLine())) {
    if (clusterType == MiniClusterType.encrypted) {
      for (      Pattern pattern : partialReservedPlanMask) {
        matcher=pattern.matcher(line);
        if (matcher.find()) {
          line=partialMaskPattern + " " + matcher.group(0);
          partialMaskWasMatched=true;
          break;
        }
      }
    }
    if (!partialMaskWasMatched) {
      for (      Pattern pattern : patterns) {
        line=pattern.matcher(line).replaceAll(maskPattern);
      }
    }
    if (line.equals(maskPattern)) {
      if (!lastWasMasked) {
        out.write(line);
        out.write("\n");
        lastWasMasked=true;
      }
    }
 else {
      out.write(line);
      out.write("\n");
      lastWasMasked=false;
      partialMaskWasMatched=false;
    }
  }
  in.close();
  out.close();
}
