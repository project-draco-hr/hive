{
  if (System.getenv(QTEST_LEAVE_FILES) != null) {
    return;
  }
  conf.set("hive.metastore.filter.hook","org.apache.hadoop.hive.metastore.DefaultMetaStoreFilterHookImpl");
  db=Hive.get(conf);
  for (  String dbName : db.getAllDatabases()) {
    SessionState.get().setCurrentDatabase(dbName);
    for (    String tblName : db.getAllTables()) {
      if (!DEFAULT_DATABASE_NAME.equals(dbName) || !srcTables.contains(tblName)) {
        Table tblObj=null;
        try {
          tblObj=db.getTable(tblName);
        }
 catch (        InvalidTableException e) {
          LOG.warn("Trying to drop table " + e.getTableName() + ". But it does not exist.");
          continue;
        }
        if (tblObj.isIndexTable()) {
          continue;
        }
        db.dropTable(dbName,tblName,true,true,fsType == FsType.encrypted_hdfs);
      }
 else {
        List<Index> indexes=db.getIndexes(dbName,tblName,(short)-1);
        if (indexes != null && indexes.size() > 0) {
          for (          Index index : indexes) {
            db.dropIndex(dbName,tblName,index.getIndexName(),true,true);
          }
        }
      }
    }
    if (!DEFAULT_DATABASE_NAME.equals(dbName)) {
      db.dropDatabase(dbName,true,true,true);
    }
  }
  try {
    Path p=new Path(testWarehouse);
    FileSystem fileSystem=p.getFileSystem(conf);
    if (fileSystem.exists(p)) {
      for (      FileStatus status : fileSystem.listStatus(p)) {
        if (status.isDirectory() && !srcTables.contains(status.getPath().getName())) {
          fileSystem.delete(status.getPath(),true);
        }
      }
    }
  }
 catch (  IllegalArgumentException e) {
  }
  SessionState.get().setCurrentDatabase(DEFAULT_DATABASE_NAME);
  List<String> roleNames=db.getAllRoleNames();
  for (  String roleName : roleNames) {
    if (!"PUBLIC".equalsIgnoreCase(roleName) && !"ADMIN".equalsIgnoreCase(roleName)) {
      db.dropRole(roleName);
    }
  }
}
