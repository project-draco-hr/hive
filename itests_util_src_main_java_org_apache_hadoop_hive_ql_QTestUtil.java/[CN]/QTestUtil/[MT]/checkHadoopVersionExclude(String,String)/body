{
  Pattern pattern=Pattern.compile("-- (EX|IN)CLUDE_HADOOP_MAJOR_VERSIONS\\((.*)\\)");
  boolean excludeQuery=false;
  boolean includeQuery=false;
  Set<String> versionSet=new HashSet<String>();
  String hadoopVer=ShimLoader.getMajorVersion();
  Matcher matcher=pattern.matcher(query);
  if (matcher.find()) {
    String prefix=matcher.group(1);
    if ("EX".equals(prefix)) {
      excludeQuery=true;
    }
 else {
      includeQuery=true;
    }
    String versions=matcher.group(2);
    for (    String s : versions.split("\\,")) {
      s=s.trim();
      versionSet.add(s);
    }
  }
  if (matcher.find()) {
    String message="QTestUtil: qfile " + fileName + " contains more than one reference to (EX|IN)CLUDE_HADOOP_MAJOR_VERSIONS";
    throw new UnsupportedOperationException(message);
  }
  if (excludeQuery && versionSet.contains(hadoopVer)) {
    System.out.println("QTestUtil: " + fileName + " EXCLUDE list contains Hadoop Version "+ hadoopVer+ ". Skipping...");
    return true;
  }
 else   if (includeQuery && !versionSet.contains(hadoopVer)) {
    System.out.println("QTestUtil: " + fileName + " INCLUDE list does not contain Hadoop Version "+ hadoopVer+ ". Skipping...");
    return true;
  }
  return false;
}
