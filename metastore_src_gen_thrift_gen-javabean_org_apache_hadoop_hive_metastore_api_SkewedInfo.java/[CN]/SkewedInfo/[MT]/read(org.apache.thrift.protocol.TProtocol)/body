{
  org.apache.thrift.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift.protocol.TType.LIST) {
{
          org.apache.thrift.protocol.TList _list49=iprot.readListBegin();
          this.skewedColNames=new ArrayList<String>(_list49.size);
          for (int _i50=0; _i50 < _list49.size; ++_i50) {
            String _elem51;
            _elem51=iprot.readString();
            this.skewedColNames.add(_elem51);
          }
          iprot.readListEnd();
        }
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift.protocol.TType.LIST) {
{
      org.apache.thrift.protocol.TList _list52=iprot.readListBegin();
      this.skewedColValues=new ArrayList<List<String>>(_list52.size);
      for (int _i53=0; _i53 < _list52.size; ++_i53) {
        List<String> _elem54;
{
          org.apache.thrift.protocol.TList _list55=iprot.readListBegin();
          _elem54=new ArrayList<String>(_list55.size);
          for (int _i56=0; _i56 < _list55.size; ++_i56) {
            String _elem57;
            _elem57=iprot.readString();
            _elem54.add(_elem57);
          }
          iprot.readListEnd();
        }
        this.skewedColValues.add(_elem54);
      }
      iprot.readListEnd();
    }
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift.protocol.TType.MAP) {
{
  org.apache.thrift.protocol.TMap _map58=iprot.readMapBegin();
  this.skewedColValueLocationMaps=new HashMap<List<String>,String>(2 * _map58.size);
  for (int _i59=0; _i59 < _map58.size; ++_i59) {
    List<String> _key60;
    String _val61;
{
      org.apache.thrift.protocol.TList _list62=iprot.readListBegin();
      _key60=new ArrayList<String>(_list62.size);
      for (int _i63=0; _i63 < _list62.size; ++_i63) {
        String _elem64;
        _elem64=iprot.readString();
        _key60.add(_elem64);
      }
      iprot.readListEnd();
    }
    _val61=iprot.readString();
    this.skewedColValueLocationMaps.put(_key60,_val61);
  }
  iprot.readMapEnd();
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
