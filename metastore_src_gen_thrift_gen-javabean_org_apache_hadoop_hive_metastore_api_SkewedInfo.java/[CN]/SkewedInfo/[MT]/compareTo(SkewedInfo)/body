{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  SkewedInfo typedOther=(SkewedInfo)other;
  lastComparison=Boolean.valueOf(isSetSkewedColNames()).compareTo(typedOther.isSetSkewedColNames());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSkewedColNames()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.skewedColNames,typedOther.skewedColNames);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetSkewedColValues()).compareTo(typedOther.isSetSkewedColValues());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSkewedColValues()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.skewedColValues,typedOther.skewedColValues);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetSkewedColValueLocationMaps()).compareTo(typedOther.isSetSkewedColValueLocationMaps());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSkewedColValueLocationMaps()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.skewedColValueLocationMaps,typedOther.skewedColValueLocationMaps);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
