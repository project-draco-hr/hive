{
  TTupleProtocol oprot=(TTupleProtocol)prot;
  BitSet optionals=new BitSet();
  if (struct.isSetSkewedColNames()) {
    optionals.set(0);
  }
  if (struct.isSetSkewedColValues()) {
    optionals.set(1);
  }
  if (struct.isSetSkewedColValueLocationMaps()) {
    optionals.set(2);
  }
  oprot.writeBitSet(optionals,3);
  if (struct.isSetSkewedColNames()) {
{
      oprot.writeI32(struct.skewedColNames.size());
      for (      String _iter123 : struct.skewedColNames) {
        oprot.writeString(_iter123);
      }
    }
  }
  if (struct.isSetSkewedColValues()) {
{
      oprot.writeI32(struct.skewedColValues.size());
      for (      List<String> _iter124 : struct.skewedColValues) {
{
          oprot.writeI32(_iter124.size());
          for (          String _iter125 : _iter124) {
            oprot.writeString(_iter125);
          }
        }
      }
    }
  }
  if (struct.isSetSkewedColValueLocationMaps()) {
{
      oprot.writeI32(struct.skewedColValueLocationMaps.size());
      for (      Map.Entry<SkewedValueList,String> _iter126 : struct.skewedColValueLocationMaps.entrySet()) {
        _iter126.getKey().write(oprot);
        oprot.writeString(_iter126.getValue());
      }
    }
  }
}
