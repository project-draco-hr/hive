{
  TTupleProtocol oprot=(TTupleProtocol)prot;
  BitSet optionals=new BitSet();
  if (struct.isSetSkewedColNames()) {
    optionals.set(0);
  }
  if (struct.isSetSkewedColValues()) {
    optionals.set(1);
  }
  if (struct.isSetSkewedColValueLocationMaps()) {
    optionals.set(2);
  }
  oprot.writeBitSet(optionals,3);
  if (struct.isSetSkewedColNames()) {
{
      oprot.writeI32(struct.skewedColNames.size());
      for (      String _iter135 : struct.skewedColNames) {
        oprot.writeString(_iter135);
      }
    }
  }
  if (struct.isSetSkewedColValues()) {
{
      oprot.writeI32(struct.skewedColValues.size());
      for (      List<String> _iter136 : struct.skewedColValues) {
{
          oprot.writeI32(_iter136.size());
          for (          String _iter137 : _iter136) {
            oprot.writeString(_iter137);
          }
        }
      }
    }
  }
  if (struct.isSetSkewedColValueLocationMaps()) {
{
      oprot.writeI32(struct.skewedColValueLocationMaps.size());
      for (      Map.Entry<List<String>,String> _iter138 : struct.skewedColValueLocationMaps.entrySet()) {
{
          oprot.writeI32(_iter138.getKey().size());
          for (          String _iter139 : _iter138.getKey()) {
            oprot.writeString(_iter139);
          }
        }
        oprot.writeString(_iter138.getValue());
      }
    }
  }
}
