{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(3);
  if (incoming.get(0)) {
{
      org.apache.thrift.protocol.TList _list127=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.skewedColNames=new ArrayList<String>(_list127.size);
      for (int _i128=0; _i128 < _list127.size; ++_i128) {
        String _elem129;
        _elem129=iprot.readString();
        struct.skewedColNames.add(_elem129);
      }
    }
    struct.setSkewedColNamesIsSet(true);
  }
  if (incoming.get(1)) {
{
      org.apache.thrift.protocol.TList _list130=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST,iprot.readI32());
      struct.skewedColValues=new ArrayList<List<String>>(_list130.size);
      for (int _i131=0; _i131 < _list130.size; ++_i131) {
        List<String> _elem132;
{
          org.apache.thrift.protocol.TList _list133=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
          _elem132=new ArrayList<String>(_list133.size);
          for (int _i134=0; _i134 < _list133.size; ++_i134) {
            String _elem135;
            _elem135=iprot.readString();
            _elem132.add(_elem135);
          }
        }
        struct.skewedColValues.add(_elem132);
      }
    }
    struct.setSkewedColValuesIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TMap _map136=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.skewedColValueLocationMaps=new HashMap<SkewedValueList,String>(2 * _map136.size);
      for (int _i137=0; _i137 < _map136.size; ++_i137) {
        SkewedValueList _key138;
        String _val139;
        _key138=new SkewedValueList();
        _key138.read(iprot);
        _val139=iprot.readString();
        struct.skewedColValueLocationMaps.put(_key138,_val139);
      }
    }
    struct.setSkewedColValueLocationMapsIsSet(true);
  }
}
