{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
          org.apache.thrift.protocol.TList _list114=iprot.readListBegin();
          struct.skewedColNames=new ArrayList<String>(_list114.size);
          for (int _i115=0; _i115 < _list114.size; ++_i115) {
            String _elem116;
            _elem116=iprot.readString();
            struct.skewedColNames.add(_elem116);
          }
          iprot.readListEnd();
        }
        struct.setSkewedColNamesIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
      org.apache.thrift.protocol.TList _list117=iprot.readListBegin();
      struct.skewedColValues=new ArrayList<List<String>>(_list117.size);
      for (int _i118=0; _i118 < _list117.size; ++_i118) {
        List<String> _elem119;
{
          org.apache.thrift.protocol.TList _list120=iprot.readListBegin();
          _elem119=new ArrayList<String>(_list120.size);
          for (int _i121=0; _i121 < _list120.size; ++_i121) {
            String _elem122;
            _elem122=iprot.readString();
            _elem119.add(_elem122);
          }
          iprot.readListEnd();
        }
        struct.skewedColValues.add(_elem119);
      }
      iprot.readListEnd();
    }
    struct.setSkewedColValuesIsSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 3:
if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
  org.apache.thrift.protocol.TMap _map123=iprot.readMapBegin();
  struct.skewedColValueLocationMaps=new HashMap<List<String>,String>(2 * _map123.size);
  for (int _i124=0; _i124 < _map123.size; ++_i124) {
    List<String> _key125;
    String _val126;
{
      org.apache.thrift.protocol.TList _list127=iprot.readListBegin();
      _key125=new ArrayList<String>(_list127.size);
      for (int _i128=0; _i128 < _list127.size; ++_i128) {
        String _elem129;
        _elem129=iprot.readString();
        _key125.add(_elem129);
      }
      iprot.readListEnd();
    }
    _val126=iprot.readString();
    struct.skewedColValueLocationMaps.put(_key125,_val126);
  }
  iprot.readMapEnd();
}
struct.setSkewedColValueLocationMapsIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
