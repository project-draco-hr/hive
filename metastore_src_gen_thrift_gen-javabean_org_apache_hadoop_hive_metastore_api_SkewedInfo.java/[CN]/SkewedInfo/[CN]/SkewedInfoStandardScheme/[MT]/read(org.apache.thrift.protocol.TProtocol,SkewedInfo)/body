{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
          org.apache.thrift.protocol.TList _list98=iprot.readListBegin();
          struct.skewedColNames=new ArrayList<String>(_list98.size);
          for (int _i99=0; _i99 < _list98.size; ++_i99) {
            String _elem100;
            _elem100=iprot.readString();
            struct.skewedColNames.add(_elem100);
          }
          iprot.readListEnd();
        }
        struct.setSkewedColNamesIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
      org.apache.thrift.protocol.TList _list101=iprot.readListBegin();
      struct.skewedColValues=new ArrayList<List<String>>(_list101.size);
      for (int _i102=0; _i102 < _list101.size; ++_i102) {
        List<String> _elem103;
{
          org.apache.thrift.protocol.TList _list104=iprot.readListBegin();
          _elem103=new ArrayList<String>(_list104.size);
          for (int _i105=0; _i105 < _list104.size; ++_i105) {
            String _elem106;
            _elem106=iprot.readString();
            _elem103.add(_elem106);
          }
          iprot.readListEnd();
        }
        struct.skewedColValues.add(_elem103);
      }
      iprot.readListEnd();
    }
    struct.setSkewedColValuesIsSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 3:
if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
  org.apache.thrift.protocol.TMap _map107=iprot.readMapBegin();
  struct.skewedColValueLocationMaps=new HashMap<List<String>,String>(2 * _map107.size);
  for (int _i108=0; _i108 < _map107.size; ++_i108) {
    List<String> _key109;
    String _val110;
{
      org.apache.thrift.protocol.TList _list111=iprot.readListBegin();
      _key109=new ArrayList<String>(_list111.size);
      for (int _i112=0; _i112 < _list111.size; ++_i112) {
        String _elem113;
        _elem113=iprot.readString();
        _key109.add(_elem113);
      }
      iprot.readListEnd();
    }
    _val110=iprot.readString();
    struct.skewedColValueLocationMaps.put(_key109,_val110);
  }
  iprot.readMapEnd();
}
struct.setSkewedColValueLocationMapsIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
