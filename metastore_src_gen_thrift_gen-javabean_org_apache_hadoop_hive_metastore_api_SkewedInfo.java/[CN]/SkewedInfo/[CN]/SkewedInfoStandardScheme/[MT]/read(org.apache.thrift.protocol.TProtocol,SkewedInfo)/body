{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
          org.apache.thrift.protocol.TList _list114=iprot.readListBegin();
          struct.skewedColNames=new ArrayList<String>(_list114.size);
          String _elem115;
          for (int _i116=0; _i116 < _list114.size; ++_i116) {
            _elem115=iprot.readString();
            struct.skewedColNames.add(_elem115);
          }
          iprot.readListEnd();
        }
        struct.setSkewedColNamesIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
      org.apache.thrift.protocol.TList _list117=iprot.readListBegin();
      struct.skewedColValues=new ArrayList<List<String>>(_list117.size);
      List<String> _elem118;
      for (int _i119=0; _i119 < _list117.size; ++_i119) {
{
          org.apache.thrift.protocol.TList _list120=iprot.readListBegin();
          _elem118=new ArrayList<String>(_list120.size);
          String _elem121;
          for (int _i122=0; _i122 < _list120.size; ++_i122) {
            _elem121=iprot.readString();
            _elem118.add(_elem121);
          }
          iprot.readListEnd();
        }
        struct.skewedColValues.add(_elem118);
      }
      iprot.readListEnd();
    }
    struct.setSkewedColValuesIsSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 3:
if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
  org.apache.thrift.protocol.TMap _map123=iprot.readMapBegin();
  struct.skewedColValueLocationMaps=new HashMap<List<String>,String>(2 * _map123.size);
  List<String> _key124;
  String _val125;
  for (int _i126=0; _i126 < _map123.size; ++_i126) {
{
      org.apache.thrift.protocol.TList _list127=iprot.readListBegin();
      _key124=new ArrayList<String>(_list127.size);
      String _elem128;
      for (int _i129=0; _i129 < _list127.size; ++_i129) {
        _elem128=iprot.readString();
        _key124.add(_elem128);
      }
      iprot.readListEnd();
    }
    _val125=iprot.readString();
    struct.skewedColValueLocationMaps.put(_key124,_val125);
  }
  iprot.readMapEnd();
}
struct.setSkewedColValueLocationMapsIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
