{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
          org.apache.thrift.protocol.TList _list106=iprot.readListBegin();
          struct.skewedColNames=new ArrayList<String>(_list106.size);
          for (int _i107=0; _i107 < _list106.size; ++_i107) {
            String _elem108;
            _elem108=iprot.readString();
            struct.skewedColNames.add(_elem108);
          }
          iprot.readListEnd();
        }
        struct.setSkewedColNamesIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
      org.apache.thrift.protocol.TList _list109=iprot.readListBegin();
      struct.skewedColValues=new ArrayList<List<String>>(_list109.size);
      for (int _i110=0; _i110 < _list109.size; ++_i110) {
        List<String> _elem111;
{
          org.apache.thrift.protocol.TList _list112=iprot.readListBegin();
          _elem111=new ArrayList<String>(_list112.size);
          for (int _i113=0; _i113 < _list112.size; ++_i113) {
            String _elem114;
            _elem114=iprot.readString();
            _elem111.add(_elem114);
          }
          iprot.readListEnd();
        }
        struct.skewedColValues.add(_elem111);
      }
      iprot.readListEnd();
    }
    struct.setSkewedColValuesIsSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
case 3:
if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
  org.apache.thrift.protocol.TMap _map115=iprot.readMapBegin();
  struct.skewedColValueLocationMaps=new HashMap<SkewedValueList,String>(2 * _map115.size);
  for (int _i116=0; _i116 < _map115.size; ++_i116) {
    SkewedValueList _key117;
    String _val118;
    _key117=new SkewedValueList();
    _key117.read(iprot);
    _val118=iprot.readString();
    struct.skewedColValueLocationMaps.put(_key117,_val118);
  }
  iprot.readMapEnd();
}
struct.setSkewedColValueLocationMapsIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
