{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.skewedColNames != null) {
    oprot.writeFieldBegin(SKEWED_COL_NAMES_FIELD_DESC);
{
      oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,struct.skewedColNames.size()));
      for (      String _iter114 : struct.skewedColNames) {
        oprot.writeString(_iter114);
      }
      oprot.writeListEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.skewedColValues != null) {
    oprot.writeFieldBegin(SKEWED_COL_VALUES_FIELD_DESC);
{
      oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.LIST,struct.skewedColValues.size()));
      for (      List<String> _iter115 : struct.skewedColValues) {
{
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,_iter115.size()));
          for (          String _iter116 : _iter115) {
            oprot.writeString(_iter116);
          }
          oprot.writeListEnd();
        }
      }
      oprot.writeListEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.skewedColValueLocationMaps != null) {
    oprot.writeFieldBegin(SKEWED_COL_VALUE_LOCATION_MAPS_FIELD_DESC);
{
      oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.LIST,org.apache.thrift.protocol.TType.STRING,struct.skewedColValueLocationMaps.size()));
      for (      Map.Entry<List<String>,String> _iter117 : struct.skewedColValueLocationMaps.entrySet()) {
{
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,_iter117.getKey().size()));
          for (          String _iter118 : _iter117.getKey()) {
            oprot.writeString(_iter118);
          }
          oprot.writeListEnd();
        }
        oprot.writeString(_iter117.getValue());
      }
      oprot.writeMapEnd();
    }
    oprot.writeFieldEnd();
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
