{
  PrimitiveTypeEntry typeEntry=PrimitiveObjectInspectorUtils.getTypeEntryFromTypeName(TypeInfoUtils.getBaseName(typeName));
  if (null == typeEntry) {
    throw new RuntimeException("Cannot getPrimitiveTypeInfo for " + typeName);
  }
  TypeInfo result=cachedPrimitiveTypeInfo.get(typeName);
  if (result == null) {
    TypeInfoUtils.PrimitiveParts parts=TypeInfoUtils.parsePrimitiveParts(typeName);
    if (parts.typeParams != null && parts.typeParams.length > 0) {
      try {
        BaseTypeParams typeParams=PrimitiveTypeEntry.createTypeParams(parts.typeName,parts.typeParams);
        result=new PrimitiveTypeInfo(typeName);
        ((PrimitiveTypeInfo)result).setTypeParams(typeParams);
      }
 catch (      Exception err) {
        LOG.error(err);
        throw new RuntimeException("Error creating type parameters for " + typeName + ": "+ err,err);
      }
    }
 else {
      result=new PrimitiveTypeInfo(parts.typeName);
    }
    cachedPrimitiveTypeInfo.put(typeName,result);
  }
  return result;
}
