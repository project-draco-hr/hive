{
  boolean doTrace=LOG.isDebugEnabled();
  long start=doTrace ? System.nanoTime() : 0;
  Query query=pm.newQuery("javax.jdo.query.SQL",queryText);
  Object result=query.execute();
  long queryTime=doTrace ? System.nanoTime() : 0;
  if (result == null) {
    query.closeAll();
    return 0;
  }
  List<Object[]> list=ensureList(result);
  Iterator<Object[]> iter=list.iterator();
  Object[] fields=null;
  for (  Map.Entry<Long,T> entry : tree.entrySet()) {
    if (fields == null && !iter.hasNext())     break;
    long id=entry.getKey();
    while (fields != null || iter.hasNext()) {
      if (fields == null) {
        fields=iter.next();
      }
      long nestedId=StatObjectConverter.extractSqlLong(fields[keyIndex]);
      if (nestedId < id)       throw new MetaException("Found entries for unknown ID " + nestedId);
      if (nestedId > id)       break;
      func.apply(entry.getValue(),fields);
      fields=null;
    }
  }
  int rv=list.size();
  query.closeAll();
  timingTrace(doTrace,queryText,start,queryTime);
  return rv;
}
