{
  if (colNames.isEmpty() || partNames.isEmpty()) {
    return Lists.newArrayList();
  }
  boolean doTrace=LOG.isDebugEnabled();
  doDbSpecificInitializationsBeforeQuery();
  long start=doTrace ? System.nanoTime() : 0;
  String queryText="select " + STATS_PARTITION_NAME + ", "+ STATS_COLLIST+ " from "+ STATS_PART_JOINED_TBLS+ " where "+ STATS_DB_NAME+ " = ? and "+ STATS_TABLE_NAME+ " = ? "+ "and \"COLUMN_NAME\" in ("+ makeParams(colNames.size())+ ") "+ "and "+ STATS_PARTITION_NAME+ " in ("+ makeParams(partNames.size())+ ") "+ "order by "+ STATS_PARTITION_NAME+ " asc";
  Query query=pm.newQuery("javax.jdo.query.SQL",queryText);
  Object qResult=executeWithArray(query,prepareParams(dbName,tableName,partNames,colNames),queryText);
  long queryTime=doTrace ? System.nanoTime() : 0;
  if (qResult == null) {
    query.closeAll();
    return Lists.newArrayList();
  }
  List<Object[]> list=ensureList(qResult);
  List<ColumnStatistics> result=new ArrayList<ColumnStatistics>(Math.min(list.size(),partNames.size()));
  String lastPartName=null;
  int from=0;
  for (int i=0; i <= list.size(); ++i) {
    boolean isLast=i == list.size();
    String partName=isLast ? null : (String)list.get(i)[0];
    if (!isLast && partName.equals(lastPartName)) {
      continue;
    }
 else     if (from != i) {
      ColumnStatisticsDesc csd=new ColumnStatisticsDesc(false,dbName,tableName);
      csd.setPartName(lastPartName);
      result.add(makeColumnStats(list.subList(from,i),csd,1));
    }
    lastPartName=partName;
    from=i;
    Deadline.checkTimeout();
  }
  timingTrace(doTrace,queryText,start,queryTime);
  query.closeAll();
  return result;
}
