{
  this.pm=pm;
  DatabaseProduct dbType=null;
  try {
    dbType=DatabaseProduct.determineDatabaseProduct(getProductName());
  }
 catch (  SQLException e) {
    LOG.warn("Cannot determine database product; assuming OTHER",e);
    dbType=DatabaseProduct.OTHER;
  }
  this.dbType=dbType;
  int batchSize=HiveConf.getIntVar(conf,ConfVars.METASTORE_DIRECT_SQL_PARTITION_BATCH_SIZE);
  if (batchSize == DETECT_BATCHING) {
    batchSize=DatabaseProduct.needsInBatching(dbType) ? 1000 : NO_BATCHING;
  }
  this.batchSize=batchSize;
  convertMapNullsToEmptyStrings=HiveConf.getBoolVar(conf,ConfVars.METASTORE_ORM_RETRIEVE_MAPNULLS_AS_EMPTY_STRINGS);
  defaultPartName=HiveConf.getVar(conf,ConfVars.DEFAULTPARTITIONNAME);
  String jdoIdFactory=HiveConf.getVar(conf,ConfVars.METASTORE_IDENTIFIER_FACTORY);
  if (!("datanucleus1".equalsIgnoreCase(jdoIdFactory))) {
    LOG.warn("Underlying metastore does not use 'datanucleus1' for its ORM naming scheme." + " Disabling directSQL as it uses hand-hardcoded SQL with that assumption.");
    isCompatibleDatastore=false;
  }
 else {
    isCompatibleDatastore=ensureDbInit() && runTestQuery();
    if (isCompatibleDatastore) {
      LOG.info("Using direct SQL, underlying DB is " + dbType);
    }
  }
  isAggregateStatsCacheEnabled=HiveConf.getBoolVar(conf,ConfVars.METASTORE_AGGREGATE_STATS_CACHE_ENABLED);
  if (isAggregateStatsCacheEnabled) {
    aggrStatsCache=AggregateStatsCache.getInstance(conf);
  }
}
