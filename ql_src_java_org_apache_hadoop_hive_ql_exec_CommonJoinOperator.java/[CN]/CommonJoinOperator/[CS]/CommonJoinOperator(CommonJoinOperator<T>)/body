{
  this.joinEmitInterval=clone.joinEmitInterval;
  this.joinCacheSize=clone.joinCacheSize;
  this.nextSz=clone.nextSz;
  this.childOperators=clone.childOperators;
  this.parentOperators=clone.parentOperators;
  this.counterNames=clone.counterNames;
  this.counterNameToEnum=clone.counterNameToEnum;
  this.done=clone.done;
  this.operatorId=clone.operatorId;
  this.storage=clone.storage;
  this.condn=clone.condn;
  this.setSchema(clone.getSchema());
  this.alias=clone.alias;
  this.beginTime=clone.beginTime;
  this.inputRows=clone.inputRows;
  this.childOperatorsArray=clone.childOperatorsArray;
  this.childOperatorsTag=clone.childOperatorsTag;
  this.colExprMap=clone.colExprMap;
  this.counters=clone.counters;
  this.dummyObj=clone.dummyObj;
  this.dummyObjVectors=clone.dummyObjVectors;
  this.forwardCache=clone.forwardCache;
  this.groupKeyObject=clone.groupKeyObject;
  this.handleSkewJoin=clone.handleSkewJoin;
  this.hconf=clone.hconf;
  this.id=clone.id;
  this.inputObjInspectors=clone.inputObjInspectors;
  this.inputRows=clone.inputRows;
  this.noOuterJoin=clone.noOuterJoin;
  this.numAliases=clone.numAliases;
  this.operatorId=clone.operatorId;
  this.posToAliasMap=clone.posToAliasMap;
  this.spillTableDesc=clone.spillTableDesc;
  this.statsMap=clone.statsMap;
  this.joinFilters=clone.joinFilters;
  this.joinFilterObjectInspectors=clone.joinFilterObjectInspectors;
}
