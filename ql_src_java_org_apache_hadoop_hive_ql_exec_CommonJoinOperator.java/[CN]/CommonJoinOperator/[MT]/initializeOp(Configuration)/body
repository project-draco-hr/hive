{
  LOG.info("COMMONJOIN " + ((StructObjectInspector)inputObjInspectors[0]).getTypeName());
  totalSz=0;
  storage=new HashMap<Byte,ArrayList<ArrayList<Object>>>();
  numAliases=conf.getExprs().size();
  joinValues=new HashMap<Byte,List<ExprNodeEvaluator>>();
  if (order == null) {
    order=conf.getTagOrder();
  }
  condn=conf.getConds();
  noOuterJoin=conf.getNoOuterJoin();
  totalSz=populateJoinKeyValue(joinValues,conf.getExprs());
  joinValuesObjectInspectors=getObjectInspectorsFromEvaluators(joinValues,inputObjInspectors);
  joinValuesStandardObjectInspectors=getStandardObjectInspectors(joinValuesObjectInspectors);
  dummyObj=new Object[numAliases];
  dummyObjVectors=new ArrayList[numAliases];
  int pos=0;
  for (  Byte alias : order) {
    int sz=conf.getExprs().get(alias).size();
    ArrayList<Object> nr=new ArrayList<Object>(sz);
    for (int j=0; j < sz; j++)     nr.add(null);
    dummyObj[pos]=nr;
    ArrayList<ArrayList<Object>> values=new ArrayList<ArrayList<Object>>();
    values.add((ArrayList<Object>)dummyObj[pos]);
    dummyObjVectors[pos]=values;
    pos++;
  }
  iterators=new Stack<Iterator<ArrayList<Object>>>();
  joinEmitInterval=HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEJOINEMITINTERVAL);
  forwardCache=new Object[totalSz];
  outputObjInspector=getJoinOutputObjectInspector(order,joinValuesStandardObjectInspectors,conf);
  LOG.info("JOIN " + ((StructObjectInspector)outputObjInspector).getTypeName() + " totalsz = "+ totalSz);
}
