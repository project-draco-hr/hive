{
  boolean hasVC=vcs != null && !vcs.isEmpty();
  List<ObjectInspector> partObjectInspectors=new ArrayList<ObjectInspector>();
  for (int i=0; i < partNames.size(); i++) {
    partObjectInspectors.add(PrimitiveObjectInspectorFactory.javaStringObjectInspector);
  }
  StructObjectInspector objectInspector=ObjectInspectorFactory.getStandardStructObjectInspector(partNames,partObjectInspectors);
  if (hasVC) {
    List<StructObjectInspector> ois=new ArrayList<StructObjectInspector>(2);
    ois.add(objectInspector);
    ois.add(VirtualColumn.getVCSObjectInspector(vcs));
    objectInspector=ObjectInspectorFactory.getUnionStructObjectInspector(ois);
  }
  ExprNodeEvaluator evaluator=ExprNodeEvaluatorFactory.get(expr);
  ObjectInspector evaluateResultOI=evaluator.initialize(objectInspector);
  Map<PrimitiveObjectInspector,ExprNodeEvaluator> result=new HashMap<PrimitiveObjectInspector,ExprNodeEvaluator>();
  result.put((PrimitiveObjectInspector)evaluateResultOI,evaluator);
  return result;
}
