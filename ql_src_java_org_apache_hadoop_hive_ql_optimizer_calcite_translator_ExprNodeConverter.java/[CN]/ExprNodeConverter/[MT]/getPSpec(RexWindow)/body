{
  PartitioningSpec partitioning=new PartitioningSpec();
  if (window.partitionKeys != null && !window.partitionKeys.isEmpty()) {
    PartitionSpec pSpec=new PartitionSpec();
    for (    RexNode pk : window.partitionKeys) {
      PartitionExpression exprSpec=new PartitionExpression();
      RexInputRef inputRef=(RexInputRef)pk;
      RelDataTypeField f=inputRowType.getFieldList().get(inputRef.getIndex());
      ASTNode astCol;
      if (tabAlias == null || tabAlias.isEmpty()) {
        astCol=ASTBuilder.unqualifiedName(f.getName());
      }
 else {
        astCol=ASTBuilder.qualifiedName(tabAlias,f.getName());
      }
      exprSpec.setExpression(astCol);
      pSpec.addExpression(exprSpec);
    }
    partitioning.setPartSpec(pSpec);
  }
  if (window.orderKeys != null && !window.orderKeys.isEmpty()) {
    OrderSpec oSpec=new OrderSpec();
    for (    RexFieldCollation ok : window.orderKeys) {
      OrderExpression exprSpec=new OrderExpression();
      Order order=ok.getDirection() == RelFieldCollation.Direction.ASCENDING ? Order.ASC : Order.DESC;
      exprSpec.setOrder(order);
      RexInputRef inputRef=(RexInputRef)ok.left;
      RelDataTypeField f=inputRowType.getFieldList().get(inputRef.getIndex());
      ASTNode astCol;
      if (tabAlias == null || tabAlias.isEmpty()) {
        astCol=ASTBuilder.unqualifiedName(f.getName());
      }
 else {
        astCol=ASTBuilder.qualifiedName(tabAlias,f.getName());
      }
      exprSpec.setExpression(astCol);
      oSpec.addExpression(exprSpec);
    }
    partitioning.setOrderSpec(oSpec);
  }
  return partitioning;
}
