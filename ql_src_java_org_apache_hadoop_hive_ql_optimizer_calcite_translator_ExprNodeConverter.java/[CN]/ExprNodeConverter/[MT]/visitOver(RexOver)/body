{
  if (!deep) {
    return null;
  }
  final RexWindow window=over.getWindow();
  final WindowSpec windowSpec=new WindowSpec();
  final PartitioningSpec partitioningSpec=getPSpec(window);
  windowSpec.setPartitioning(partitioningSpec);
  final WindowFrameSpec windowFrameSpec=getWindowRange(window);
  windowSpec.setWindowFrame(windowFrameSpec);
  WindowFunctionSpec wfs=new WindowFunctionSpec();
  wfs.setWindowSpec(windowSpec);
  final Schema schema=new Schema(tabAlias,inputRowType.getFieldList());
  final ASTNode wUDAFAst=new ASTConverter.RexVisitor(schema).visitOver(over);
  wfs.setExpression(wUDAFAst);
  ASTNode nameNode=(ASTNode)wUDAFAst.getChild(0);
  wfs.setName(nameNode.getText());
  for (int i=1; i < wUDAFAst.getChildCount() - 1; i++) {
    ASTNode child=(ASTNode)wUDAFAst.getChild(i);
    wfs.addArg(child);
  }
  if (wUDAFAst.getText().equals("TOK_FUNCTIONSTAR")) {
    wfs.setStar(true);
  }
  String columnAlias=getWindowColumnAlias();
  wfs.setAlias(columnAlias);
  this.windowFunctionSpecs.add(wfs);
  return new ExprNodeColumnDesc(TypeConverter.convert(over.getType()),columnAlias,tabAlias,false);
}
