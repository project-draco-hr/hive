def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('alter_partitions_args')
    if (self.sd != None):
        oprot.writeFieldBegin('sd', TType.STRUCT, 1)
        self.sd.write(oprot)
        oprot.writeFieldEnd()
    if (self.parts != None):
        oprot.writeFieldBegin('parts', TType.LIST, 2)
        oprot.writeListBegin(TType.STRING, len(self.parts))
        for iter174 in self.parts:
            oprot.writeString(iter174)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
