{
  Category typeCategory=typeInfo.getCategory();
  HCatSchema hCatSchema;
  if (Category.PRIMITIVE == typeCategory) {
    hCatSchema=getStructSchemaBuilder().addField(new HCatFieldSchema(null,(PrimitiveTypeInfo)typeInfo,null)).build();
  }
 else   if (Category.STRUCT == typeCategory) {
    HCatSchema subSchema=constructHCatSchema((StructTypeInfo)typeInfo);
    hCatSchema=getStructSchemaBuilder().addField(new HCatFieldSchema(null,Type.STRUCT,subSchema,null)).build();
  }
 else   if (Category.LIST == typeCategory) {
    CollectionBuilder builder=getListSchemaBuilder();
    builder.addField(getHCatFieldSchema(null,((ListTypeInfo)typeInfo).getListElementTypeInfo()));
    hCatSchema=new HCatSchema(Arrays.asList(new HCatFieldSchema("",Type.ARRAY,builder.build(),"")));
  }
 else   if (Category.MAP == typeCategory) {
    HCatSchema subSchema=getHCatSchema(((MapTypeInfo)typeInfo).getMapValueTypeInfo());
    MapBuilder builder=getMapSchemaBuilder();
    hCatSchema=builder.withKeyType((PrimitiveTypeInfo)((MapTypeInfo)typeInfo).getMapKeyTypeInfo()).withValueSchema(subSchema).build();
  }
 else {
    throw new TypeNotPresentException(typeInfo.getTypeName(),null);
  }
  return hCatSchema;
}
