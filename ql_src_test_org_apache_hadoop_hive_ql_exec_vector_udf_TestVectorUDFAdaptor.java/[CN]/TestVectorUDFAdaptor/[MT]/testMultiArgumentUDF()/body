{
  ExprNodeGenericFuncDesc funcDesc;
  TypeInfo typeInfoStr=TypeInfoFactory.stringTypeInfo;
  TypeInfo typeInfoLong=TypeInfoFactory.longTypeInfo;
  TypeInfo typeInfoDbl=TypeInfoFactory.doubleTypeInfo;
  GenericUDFBridge genericUDFBridge=new GenericUDFBridge("testudf",false,ConcatTextLongDoubleUDF.class.getName());
  List<ExprNodeDesc> children=new ArrayList<ExprNodeDesc>();
  children.add(new ExprNodeColumnDesc(typeInfoStr,"col0","tablename",false));
  children.add(new ExprNodeColumnDesc(typeInfoLong,"col1","tablename",false));
  children.add(new ExprNodeColumnDesc(typeInfoDbl,"col2","tablename",false));
  VectorUDFArgDesc[] argDescs=new VectorUDFArgDesc[3];
  for (int i=0; i < 3; i++) {
    argDescs[i]=new VectorUDFArgDesc();
    argDescs[i].setVariable(i);
  }
  funcDesc=new ExprNodeGenericFuncDesc(typeInfoStr,genericUDFBridge,genericUDFBridge.getUdfName(),children);
  VectorUDFAdaptor vudf=null;
  try {
    vudf=new VectorUDFAdaptor(funcDesc,3,"String",argDescs);
  }
 catch (  HiveException e) {
    assertTrue(false);
    throw new RuntimeException(e);
  }
  VectorizedRowBatch b=getBatchStrDblLongWithStrOut();
  vudf.evaluate(b);
  byte[] result=null;
  byte[] result2=null;
  try {
    result="red:1:1.0".getBytes("UTF-8");
    result2="blue:0:0.0".getBytes("UTF-8");
  }
 catch (  Exception e) {
    ;
  }
  BytesColumnVector out=(BytesColumnVector)b.cols[3];
  int cmp=StringExpr.compare(result,0,result.length,out.vector[1],out.start[1],out.length[1]);
  assertEquals(0,cmp);
  assertTrue(out.noNulls);
  b=getBatchStrDblLongWithStrOut();
  b.cols[1].noNulls=false;
  vudf.evaluate(b);
  out=(BytesColumnVector)b.cols[3];
  assertFalse(out.noNulls);
  assertTrue(out.isNull[1]);
  b=getBatchStrDblLongWithStrOut();
  b.cols[0].isRepeating=true;
  b.cols[1].isRepeating=true;
  b.cols[2].isRepeating=true;
  vudf.evaluate(b);
  out=(BytesColumnVector)b.cols[3];
  assertTrue(out.isRepeating);
  cmp=StringExpr.compare(result2,0,result2.length,out.vector[0],out.start[0],out.length[0]);
  assertEquals(0,cmp);
  assertTrue(out.noNulls);
}
