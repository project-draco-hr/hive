{
  this.done=false;
  if (state == State.INIT) {
    return;
  }
  this.configuration=hconf;
  if (!areAllParentsInitialized()) {
    return;
  }
  if (isLogInfoEnabled) {
    LOG.info("Initializing operator " + this);
  }
  if (inputOIs != null) {
    inputObjInspectors=inputOIs;
  }
  childOperatorsArray=new Operator[childOperators.size()];
  for (int i=0; i < childOperatorsArray.length; i++) {
    childOperatorsArray[i]=childOperators.get(i);
  }
  childOperatorsTag=new int[childOperatorsArray.length];
  for (int i=0; i < childOperatorsArray.length; i++) {
    List<Operator<? extends OperatorDesc>> parentOperators=childOperatorsArray[i].getParentOperators();
    childOperatorsTag[i]=parentOperators.indexOf(this);
    if (childOperatorsTag[i] == -1) {
      throw new HiveException("Hive internal error: cannot find parent in the child operator!");
    }
  }
  if (inputObjInspectors.length == 0) {
    throw new HiveException("Internal Error during operator initialization.");
  }
  outputObjInspector=inputObjInspectors[0];
  Collection<Future<?>> asyncInitOperations=initializeOp(hconf);
  if (!rootInitializeCalled || asyncInitOperations == null || childOperatorsArray.length != childOperators.size()) {
    throw new AssertionError("Internal error during operator initialization");
  }
  if (isLogInfoEnabled) {
    LOG.info("Initialization Done " + id + " "+ getName()+ " done is reset.");
  }
  initializeChildren(hconf);
  completeInitialization(asyncInitOperations);
}
