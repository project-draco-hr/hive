{
  Object[] os=new Object[fs.size()];
  int i=0;
  Throwable asyncEx=null;
  for (  Future<?> f : fs) {
    if (abortOp.get() || asyncEx != null) {
      f.cancel(true);
    }
 else {
      try {
        os[i++]=f.get();
      }
 catch (      CancellationException ex) {
        asyncEx=new InterruptedException("Future was canceled");
      }
catch (      Throwable t) {
        f.cancel(true);
        asyncEx=t;
      }
    }
  }
  if (asyncEx != null) {
    if (asyncEx instanceof Exception) {
      throw new HiveException("Async initialization failed",asyncEx);
    }
 else {
      throw (Error)asyncEx;
    }
  }
  completeInitializationOp(os);
}
