{
  _Fields setField=_Fields.findByThriftId(fieldID);
  if (setField != null) {
switch (setField) {
case PRIMITIVE_ENTRY:
      TPrimitiveTypeEntry primitiveEntry;
    primitiveEntry=new TPrimitiveTypeEntry();
  primitiveEntry.read(iprot);
return primitiveEntry;
case ARRAY_ENTRY:
TArrayTypeEntry arrayEntry;
arrayEntry=new TArrayTypeEntry();
arrayEntry.read(iprot);
return arrayEntry;
case MAP_ENTRY:
TMapTypeEntry mapEntry;
mapEntry=new TMapTypeEntry();
mapEntry.read(iprot);
return mapEntry;
case STRUCT_ENTRY:
TStructTypeEntry structEntry;
structEntry=new TStructTypeEntry();
structEntry.read(iprot);
return structEntry;
case UNION_ENTRY:
TUnionTypeEntry unionEntry;
unionEntry=new TUnionTypeEntry();
unionEntry.read(iprot);
return unionEntry;
case USER_DEFINED_TYPE_ENTRY:
TUserDefinedTypeEntry userDefinedTypeEntry;
userDefinedTypeEntry=new TUserDefinedTypeEntry();
userDefinedTypeEntry.read(iprot);
return userDefinedTypeEntry;
default :
throw new IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
}
}
 else {
throw new TProtocolException("Couldn't find a field with field id " + fieldID);
}
}
