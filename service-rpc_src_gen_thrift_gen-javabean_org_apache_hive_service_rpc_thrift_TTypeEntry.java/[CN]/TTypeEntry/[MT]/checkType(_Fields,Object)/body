{
switch (setField) {
case PRIMITIVE_ENTRY:
    if (value instanceof TPrimitiveTypeEntry) {
      break;
    }
  throw new ClassCastException("Was expecting value of type TPrimitiveTypeEntry for field 'primitiveEntry', but got " + value.getClass().getSimpleName());
case ARRAY_ENTRY:
if (value instanceof TArrayTypeEntry) {
  break;
}
throw new ClassCastException("Was expecting value of type TArrayTypeEntry for field 'arrayEntry', but got " + value.getClass().getSimpleName());
case MAP_ENTRY:
if (value instanceof TMapTypeEntry) {
break;
}
throw new ClassCastException("Was expecting value of type TMapTypeEntry for field 'mapEntry', but got " + value.getClass().getSimpleName());
case STRUCT_ENTRY:
if (value instanceof TStructTypeEntry) {
break;
}
throw new ClassCastException("Was expecting value of type TStructTypeEntry for field 'structEntry', but got " + value.getClass().getSimpleName());
case UNION_ENTRY:
if (value instanceof TUnionTypeEntry) {
break;
}
throw new ClassCastException("Was expecting value of type TUnionTypeEntry for field 'unionEntry', but got " + value.getClass().getSimpleName());
case USER_DEFINED_TYPE_ENTRY:
if (value instanceof TUserDefinedTypeEntry) {
break;
}
throw new ClassCastException("Was expecting value of type TUserDefinedTypeEntry for field 'userDefinedTypeEntry', but got " + value.getClass().getSimpleName());
default :
throw new IllegalArgumentException("Unknown field id " + setField);
}
}
