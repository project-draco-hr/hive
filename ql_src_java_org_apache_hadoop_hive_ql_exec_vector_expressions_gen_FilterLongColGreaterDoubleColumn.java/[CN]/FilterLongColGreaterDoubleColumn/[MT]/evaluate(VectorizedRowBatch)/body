{
  if (childExpressions != null) {
    super.evaluateChildren(batch);
  }
  LongColumnVector inputColVector1=(LongColumnVector)batch.cols[colNum1];
  DoubleColumnVector inputColVector2=(DoubleColumnVector)batch.cols[colNum2];
  int[] sel=batch.selected;
  boolean[] nullPos1=inputColVector1.isNull;
  boolean[] nullPos2=inputColVector2.isNull;
  int n=batch.size;
  long[] vector1=inputColVector1.vector;
  double[] vector2=inputColVector2.vector;
  if (n == 0) {
    return;
  }
  if (inputColVector1.noNulls && inputColVector2.noNulls) {
    if (inputColVector1.isRepeating && inputColVector2.isRepeating) {
      if (!(vector1[0] > vector2[0])) {
        batch.size=0;
      }
    }
 else     if (inputColVector1.isRepeating) {
      if (batch.selectedInUse) {
        int newSize=0;
        for (int j=0; j != n; j++) {
          int i=sel[j];
          if (vector1[0] > vector2[i]) {
            sel[newSize++]=i;
          }
        }
        batch.size=newSize;
      }
 else {
        int newSize=0;
        for (int i=0; i != n; i++) {
          if (vector1[0] > vector2[i]) {
            sel[newSize++]=i;
          }
        }
        if (newSize < batch.size) {
          batch.size=newSize;
          batch.selectedInUse=true;
        }
      }
    }
 else     if (inputColVector2.isRepeating) {
      if (batch.selectedInUse) {
        int newSize=0;
        for (int j=0; j != n; j++) {
          int i=sel[j];
          if (vector1[i] > vector2[0]) {
            sel[newSize++]=i;
          }
        }
        batch.size=newSize;
      }
 else {
        int newSize=0;
        for (int i=0; i != n; i++) {
          if (vector1[i] > vector2[0]) {
            sel[newSize++]=i;
          }
        }
        if (newSize < batch.size) {
          batch.size=newSize;
          batch.selectedInUse=true;
        }
      }
    }
 else     if (batch.selectedInUse) {
      int newSize=0;
      for (int j=0; j != n; j++) {
        int i=sel[j];
        if (vector1[i] > vector2[i]) {
          sel[newSize++]=i;
        }
      }
      batch.size=newSize;
    }
 else {
      int newSize=0;
      for (int i=0; i != n; i++) {
        if (vector1[i] > vector2[i]) {
          sel[newSize++]=i;
        }
      }
      if (newSize < batch.size) {
        batch.size=newSize;
        batch.selectedInUse=true;
      }
    }
  }
 else   if (inputColVector1.isRepeating && inputColVector2.isRepeating) {
    if (nullPos1[0] || nullPos2[0]) {
      batch.size=0;
    }
  }
 else   if (inputColVector1.isRepeating) {
    if (nullPos1[0]) {
      batch.size=0;
    }
 else {
      if (batch.selectedInUse) {
        int newSize=0;
        for (int j=0; j != n; j++) {
          int i=sel[j];
          if (!nullPos2[i]) {
            if (vector1[0] > vector2[i]) {
              sel[newSize++]=i;
            }
          }
        }
        batch.size=newSize;
      }
 else {
        int newSize=0;
        for (int i=0; i != n; i++) {
          if (!nullPos2[i]) {
            if (vector1[0] > vector2[i]) {
              sel[newSize++]=i;
            }
          }
        }
        if (newSize < batch.size) {
          batch.size=newSize;
          batch.selectedInUse=true;
        }
      }
    }
  }
 else   if (inputColVector2.isRepeating) {
    if (nullPos2[0]) {
      batch.size=0;
    }
 else {
      if (batch.selectedInUse) {
        int newSize=0;
        for (int j=0; j != n; j++) {
          int i=sel[j];
          if (!nullPos1[i]) {
            if (vector1[i] > vector2[0]) {
              sel[newSize++]=i;
            }
          }
        }
        batch.size=newSize;
      }
 else {
        int newSize=0;
        for (int i=0; i != n; i++) {
          if (!nullPos1[i]) {
            if (vector1[i] > vector2[0]) {
              sel[newSize++]=i;
            }
          }
        }
        if (newSize < batch.size) {
          batch.size=newSize;
          batch.selectedInUse=true;
        }
      }
    }
  }
 else   if (batch.selectedInUse) {
    int newSize=0;
    for (int j=0; j != n; j++) {
      int i=sel[j];
      if (!nullPos1[i] && !nullPos2[i]) {
        if (vector1[i] > vector2[i]) {
          sel[newSize++]=i;
        }
      }
    }
    batch.size=newSize;
  }
 else {
    int newSize=0;
    for (int i=0; i != n; i++) {
      if (!nullPos1[i] && !nullPos2[i]) {
        if (vector1[i] > vector2[i]) {
          sel[newSize++]=i;
        }
      }
    }
    if (newSize < batch.size) {
      batch.size=newSize;
      batch.selectedInUse=true;
    }
  }
}
