{
  PrimitiveCategory primitiveCategory=primitiveCategories[column];
  PrimitiveTypeInfo primitiveTypeInfo=primitiveTypeInfos[column];
switch (primitiveCategory) {
case BOOLEAN:
    return Boolean.valueOf(r.nextInt(1) == 1);
case BYTE:
  return Byte.valueOf((byte)r.nextInt());
case SHORT:
return Short.valueOf((short)r.nextInt());
case INT:
return Integer.valueOf(r.nextInt());
case LONG:
return Long.valueOf(r.nextLong());
case DATE:
return getRandDate(r);
case FLOAT:
return Float.valueOf(r.nextFloat() * 10 - 5);
case DOUBLE:
return Double.valueOf(r.nextDouble() * 10 - 5);
case STRING:
return getRandString(r);
case CHAR:
return getRandHiveChar(r,(CharTypeInfo)primitiveTypeInfo);
case VARCHAR:
return getRandHiveVarchar(r,(VarcharTypeInfo)primitiveTypeInfo);
case BINARY:
return getRandBinary(r,1 + r.nextInt(100));
case TIMESTAMP:
return getRandTimestamp(r);
case INTERVAL_YEAR_MONTH:
return getRandIntervalYearMonth(r);
case INTERVAL_DAY_TIME:
return getRandIntervalDayTime(r);
case DECIMAL:
return getRandHiveDecimal(r,(DecimalTypeInfo)primitiveTypeInfo);
default :
throw new Error("Unknown primitive category " + primitiveCategory);
}
}
