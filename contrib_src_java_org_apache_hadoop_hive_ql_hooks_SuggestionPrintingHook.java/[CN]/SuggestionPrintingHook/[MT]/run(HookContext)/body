{
  assert(hookContext.getHookType() == HookContext.HookType.PRE_EXEC_HOOK);
  SessionState sess=SessionState.get();
  if (sess.getIsSilent()) {
    return;
  }
  SessionState.LogHelper console=new SessionState.LogHelper(LOG);
  QueryPlan queryPlan=hookContext.getQueryPlan();
  ArrayList<Task<? extends Serializable>> rootTasks=queryPlan.getRootTasks();
  if (rootTasks == null) {
    return;
  }
  if (rootTasks.size() == 1) {
    Task<? extends Serializable> tsk=rootTasks.get(0);
    if (tsk instanceof DDLTask) {
      return;
    }
  }
  String command=SessionState.get().getCmd().toUpperCase().replace('\n',' ').replace('\t',' ');
  if ((timesReported > 0 && HookUtils.rollDice(0.9f)) || !command.contains("SELECT ") || command.contains(" TABLESAMPLE")|| command.contains(" JOIN ")|| command.contains(" LIMIT ")) {
    return;
  }
  Set<ReadEntity> inputs=hookContext.getInputs();
  Map<String,ContentSummary> inputToCS=hookContext.getInputPathToContentSummary();
  HiveConf conf=sess.getConf();
  int maxGigaBytes=conf.getInt("fbhive.suggest.tablesample.gigabytes",32);
  long maxBytes=maxGigaBytes * 1024 * 1024* 1024L;
  if (maxGigaBytes < 0) {
    console.printError("maxGigaBytes value of " + maxGigaBytes + "is invalid");
    return;
  }
  long inputSize=HookUtils.getInputSize(inputs,inputToCS,conf);
  if (inputSize > maxBytes) {
    console.printInfo("");
    console.printInfo("***  This queries over " + Math.round(maxBytes / 1024D / 1024D/ 1024D) + " GB data. Consider TABLESAMPLE: fburl.com/?key=2001210");
    console.printInfo("");
    timesReported++;
  }
}
