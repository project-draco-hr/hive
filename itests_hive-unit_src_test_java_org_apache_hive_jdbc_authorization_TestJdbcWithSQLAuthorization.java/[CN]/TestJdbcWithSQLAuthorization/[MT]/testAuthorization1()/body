{
  String tableName1="test_jdbc_sql_auth1";
  String tableName2="test_jdbc_sql_auth2";
{
    Connection hs2Conn=getConnection("user1");
    Statement stmt=hs2Conn.createStatement();
    stmt.execute("create table " + tableName1 + "(i int) ");
    stmt.execute("create table " + tableName2 + "(i int) ");
    stmt.close();
    hs2Conn.close();
  }
{
    Connection hs2Conn=getConnection("user1");
    Statement stmt=hs2Conn.createStatement();
    stmt.execute("drop table " + tableName1);
  }
{
    Connection hs2Conn=getConnection("user2");
    try {
      hs2Conn.getMetaData().getColumns(null,"default",tableName2,null);
      fail("Exception due to authorization failure is expected");
    }
 catch (    SQLException e) {
      String msg=e.getMessage();
      System.err.println("Got SQLException with message " + msg);
      assertTrue("Checking permission denied error",msg.contains("user2"));
      assertTrue("Checking permission denied error",msg.contains(tableName2));
      assertTrue("Checking permission denied error",msg.contains("SELECT"));
    }
  }
{
    Connection hs2Conn=getConnection("user2");
    try {
      Statement stmt=hs2Conn.createStatement();
      stmt.execute("drop table " + tableName2);
      fail("Exception due to authorization failure is expected");
    }
 catch (    SQLException e) {
      String msg=e.getMessage();
      System.err.println("Got SQLException with message " + msg);
      assertTrue("Checking permission denied error",msg.contains("user2"));
      assertTrue("Checking permission denied error",msg.contains(tableName2));
      assertTrue("Checking permission denied error",msg.contains("OBJECT OWNERSHIP"));
    }
  }
}
