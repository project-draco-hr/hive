{
  return mExecutor.submit(new Callable<SSHResult>(){
    @Override public SSHResult call() throws Exception {
      for (      final Drone drone : ImmutableList.copyOf(mDrones)) {
        Map<String,String> templateVariables=Maps.newHashMap(mTemplateDefaults);
        templateVariables.put("instanceName",drone.getInstanceName());
        templateVariables.put("localDir",drone.getLocalDirectory());
        String command=Templates.getTemplateResult(cmd,templateVariables);
        SSHResult result=new SSHCommand(mSSHCommandExecutor,drone.getPrivateKey(),drone.getUser(),drone.getHost(),drone.getInstance(),command).call();
        if (result.getExitCode() == Constants.EXIT_CODE_UNKNOWN) {
          mDrones.remove(drone);
          mLogger.error("Aborting drone during exec " + command,new AbortDroneException("Drone " + drone + " exited with "+ Constants.EXIT_CODE_UNKNOWN+ ": "+ result));
        }
 else {
          return result;
        }
      }
      return null;
    }
  }
);
}
