{
  ExprNodeGenericFuncDesc tsFuncExpr=new ExprNodeGenericFuncDesc();
  tsFuncExpr.setTypeInfo(TypeInfoFactory.intTypeInfo);
  ExprNodeColumnDesc colDesc1=new ExprNodeColumnDesc(TypeInfoFactory.timestampTypeInfo,"a","table",false);
  List<ExprNodeDesc> children=new ArrayList<ExprNodeDesc>();
  children.add(colDesc1);
  List<String> columns=new ArrayList<String>();
  columns.add("b");
  columns.add("a");
  VectorizationContext vc=new VectorizationContext(columns);
  GenericUDFBridge gudfBridge=new GenericUDFBridge("year",false,UDFYear.class.getName());
  tsFuncExpr.setGenericUDF(gudfBridge);
  tsFuncExpr.setChildren(children);
  VectorExpression ve=vc.getVectorExpression(tsFuncExpr);
  Assert.assertEquals(VectorUDFYearLong.class,ve.getClass());
  GenericUDFToUnixTimeStamp gudf=new GenericUDFToUnixTimeStamp();
  tsFuncExpr.setGenericUDF(gudf);
  tsFuncExpr.setTypeInfo(TypeInfoFactory.longTypeInfo);
  ve=vc.getVectorExpression(tsFuncExpr);
  Assert.assertEquals(VectorUDFUnixTimeStampLong.class,ve.getClass());
}
