{
  VectorUDFUnixTimeStampLong v1=new VectorUDFUnixTimeStampLong();
  VectorExpressionDescriptor.Builder builder1=new VectorExpressionDescriptor.Builder();
  VectorExpressionDescriptor.Descriptor d1=builder1.setMode(VectorExpressionDescriptor.Mode.PROJECTION).setNumArguments(1).setArgumentTypes(VectorExpressionDescriptor.ArgumentType.LONG).setInputExpressionTypes(VectorExpressionDescriptor.InputExpressionType.COLUMN).build();
  Assert.assertEquals(d1,v1.getDescriptor());
  VectorExpressionDescriptor.Builder builder2=new VectorExpressionDescriptor.Builder();
  VectorExpressionDescriptor.Descriptor d2=builder2.setMode(VectorExpressionDescriptor.Mode.FILTER).setNumArguments(2).setArgumentTypes(VectorExpressionDescriptor.ArgumentType.LONG,VectorExpressionDescriptor.ArgumentType.DOUBLE).setInputExpressionTypes(VectorExpressionDescriptor.InputExpressionType.COLUMN,VectorExpressionDescriptor.InputExpressionType.SCALAR).build();
  FilterLongColLessDoubleScalar v2=new FilterLongColLessDoubleScalar();
  Assert.assertEquals(d2,v2.getDescriptor());
  VectorExpressionDescriptor.Builder builder3=new VectorExpressionDescriptor.Builder();
  VectorExpressionDescriptor.Descriptor d3=builder3.setMode(VectorExpressionDescriptor.Mode.PROJECTION).setNumArguments(1).setArgumentTypes(VectorExpressionDescriptor.ArgumentType.STRING).setInputExpressionTypes(VectorExpressionDescriptor.InputExpressionType.COLUMN).build();
  StringLower v3=new StringLower();
  Assert.assertEquals(d3,v3.getDescriptor());
  VectorExpressionDescriptor.Builder builder4=new VectorExpressionDescriptor.Builder();
  VectorExpressionDescriptor.Descriptor d4=builder4.setMode(VectorExpressionDescriptor.Mode.PROJECTION).setNumArguments(1).setArgumentTypes(VectorExpressionDescriptor.ArgumentType.ANY).setInputExpressionTypes(VectorExpressionDescriptor.InputExpressionType.COLUMN).build();
  StringUpper v4=new StringUpper();
  Assert.assertEquals(d4,v4.getDescriptor());
  VectorExpressionDescriptor.Builder builder5=new VectorExpressionDescriptor.Builder();
  VectorExpressionDescriptor.Descriptor d5=builder5.setMode(VectorExpressionDescriptor.Mode.PROJECTION).setNumArguments(1).setArgumentTypes(VectorExpressionDescriptor.ArgumentType.STRING).setInputExpressionTypes(VectorExpressionDescriptor.InputExpressionType.COLUMN).build();
  IsNull v5=new IsNull();
  Assert.assertEquals(d5,v5.getDescriptor());
}
