{
  ExprNodeColumnDesc col1Expr=new ExprNodeColumnDesc(String.class,"col1","table",false);
  ExprNodeConstantDesc constDesc=new ExprNodeConstantDesc("Alpha");
  GenericUDFOPGreaterThan udf=new GenericUDFOPGreaterThan();
  ExprNodeGenericFuncDesc exprDesc=new ExprNodeGenericFuncDesc();
  exprDesc.setGenericUDF(udf);
  List<ExprNodeDesc> children1=new ArrayList<ExprNodeDesc>(2);
  children1.add(col1Expr);
  children1.add(constDesc);
  exprDesc.setChildren(children1);
  Map<String,Integer> columnMap=new HashMap<String,Integer>();
  columnMap.put("col1",1);
  columnMap.put("col2",2);
  VectorizationContext vc=new VectorizationContext(columnMap,2);
  VectorExpression ve=vc.getVectorExpression(exprDesc,VectorExpressionDescriptor.Mode.FILTER);
  assertTrue(ve instanceof FilterStringGroupColGreaterStringScalar);
}
