{
  org.apache.hadoop.mapred.JobContext mapRedJobContext=HCatMapRedUtil.createJobContext(jobContext);
  if (dynamicPartitioningUsed) {
    discoverPartitions(jobContext);
  }
  if (getBaseOutputCommitter() != null && !dynamicPartitioningUsed) {
    resetMapRedOutputDirFromJobInfo(mapRedJobContext.getConfiguration());
    getBaseOutputCommitter().abortJob(mapRedJobContext,state);
  }
 else   if (dynamicPartitioningUsed) {
    for (    JobContext currContext : contextDiscoveredByPath.values()) {
      try {
        new JobConf(currContext.getConfiguration()).getOutputCommitter().abortJob(currContext,state);
      }
 catch (      Exception e) {
        throw new IOException(e);
      }
    }
  }
  OutputJobInfo jobInfo=HCatOutputFormat.getJobInfo(jobContext);
  try {
    HiveConf hiveConf=HCatUtil.getHiveConf(jobContext.getConfiguration());
    HiveMetaStoreClient client=HCatUtil.createHiveClient(hiveConf);
    String tokenStrForm=client.getTokenStrForm();
    if (tokenStrForm != null && jobContext.getConfiguration().get(HCatConstants.HCAT_KEY_TOKEN_SIGNATURE) != null) {
      client.cancelDelegationToken(tokenStrForm);
    }
    if (harProcessor.isEnabled()) {
      String jcTokenStrForm=jobContext.getConfiguration().get(HCatConstants.HCAT_KEY_JOBCLIENT_TOKEN_STRFORM);
      String jcTokenSignature=jobContext.getConfiguration().get(HCatConstants.HCAT_KEY_JOBCLIENT_TOKEN_SIGNATURE);
      if (jcTokenStrForm != null && jcTokenSignature != null) {
        HCatUtil.cancelJobTrackerDelegationToken(tokenStrForm,jcTokenSignature);
      }
    }
  }
 catch (  Exception e) {
    if (e instanceof HCatException) {
      throw (HCatException)e;
    }
 else {
      throw new HCatException(ErrorType.ERROR_PUBLISHING_PARTITION,e);
    }
  }
  Path src;
  if (dynamicPartitioningUsed) {
    src=new Path(getPartitionRootLocation(jobInfo.getLocation().toString(),jobInfo.getTableInfo().getTable().getPartitionKeysSize()));
  }
 else {
    src=new Path(jobInfo.getLocation());
  }
  FileSystem fs=src.getFileSystem(jobContext.getConfiguration());
  fs.delete(src,true);
}
