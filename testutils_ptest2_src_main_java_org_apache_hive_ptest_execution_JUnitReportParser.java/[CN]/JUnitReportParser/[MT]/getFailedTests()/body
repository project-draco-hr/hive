{
  final Set<String> failedTests=Sets.newHashSet();
  for (  File file : getFiles(directory)) {
    FileInputStream stream=null;
    try {
      stream=new FileInputStream(file);
      SAXParserFactory factory=SAXParserFactory.newInstance();
      SAXParser saxParser=factory.newSAXParser();
      saxParser.parse(new InputSource(stream),new DefaultHandler(){
        private String name;
        private boolean failedOrErrored;
        @Override public void startElement(        String uri,        String localName,        String qName,        Attributes attributes){
          if ("testcase".equals(qName)) {
            name=attributes.getValue("classname");
            failedOrErrored=false;
            if (name == null) {
              name=attributes.getValue("name");
            }
 else {
              name=name + "." + attributes.getValue("name");
            }
          }
 else           if (name != null && ("failure".equals(qName) || "error".equals(qName))) {
            failedOrErrored=true;
          }
        }
        @Override public void endElement(        String uri,        String localName,        String qName){
          if ("testcase".equals(qName)) {
            if (failedOrErrored && name != null) {
              failedTests.add(name);
            }
          }
        }
      }
);
    }
 catch (    Exception e) {
      logger.error("Error parsing file " + file,e);
    }
 finally {
      if (stream != null) {
        try {
          stream.close();
        }
 catch (        IOException e) {
          logger.warn("Error closing file " + file,e);
        }
      }
    }
  }
  return failedTests;
}
