{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetLockid()).compareTo(other.isSetLockid());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetLockid()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.lockid,other.lockid);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetDbname()).compareTo(other.isSetDbname());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDbname()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.dbname,other.dbname);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTablename()).compareTo(other.isSetTablename());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTablename()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.tablename,other.tablename);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetPartname()).compareTo(other.isSetPartname());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetPartname()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.partname,other.partname);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetState()).compareTo(other.isSetState());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetState()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.state,other.state);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetType()).compareTo(other.isSetType());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetType()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.type,other.type);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTxnid()).compareTo(other.isSetTxnid());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTxnid()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.txnid,other.txnid);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetLastheartbeat()).compareTo(other.isSetLastheartbeat());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetLastheartbeat()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.lastheartbeat,other.lastheartbeat);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetAcquiredat()).compareTo(other.isSetAcquiredat());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAcquiredat()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.acquiredat,other.acquiredat);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetUser()).compareTo(other.isSetUser());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetUser()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.user,other.user);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetHostname()).compareTo(other.isSetHostname());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetHostname()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.hostname,other.hostname);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetHeartbeatCount()).compareTo(other.isSetHeartbeatCount());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetHeartbeatCount()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.heartbeatCount,other.heartbeatCount);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetAgentInfo()).compareTo(other.isSetAgentInfo());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAgentInfo()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.agentInfo,other.agentInfo);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetBlockedByExtId()).compareTo(other.isSetBlockedByExtId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetBlockedByExtId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.blockedByExtId,other.blockedByExtId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetBlockedByIntId()).compareTo(other.isSetBlockedByIntId());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetBlockedByIntId()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.blockedByIntId,other.blockedByIntId);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetLockIdInternal()).compareTo(other.isSetLockIdInternal());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetLockIdInternal()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.lockIdInternal,other.lockIdInternal);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
