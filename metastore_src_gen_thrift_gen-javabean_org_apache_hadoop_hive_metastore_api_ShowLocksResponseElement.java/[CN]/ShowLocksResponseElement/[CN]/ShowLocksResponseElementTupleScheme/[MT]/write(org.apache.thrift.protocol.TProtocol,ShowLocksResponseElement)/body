{
  TTupleProtocol oprot=(TTupleProtocol)prot;
  oprot.writeI64(struct.lockid);
  oprot.writeString(struct.dbname);
  oprot.writeI32(struct.state.getValue());
  oprot.writeI32(struct.type.getValue());
  oprot.writeI64(struct.lastheartbeat);
  oprot.writeString(struct.user);
  oprot.writeString(struct.hostname);
  BitSet optionals=new BitSet();
  if (struct.isSetTablename()) {
    optionals.set(0);
  }
  if (struct.isSetPartname()) {
    optionals.set(1);
  }
  if (struct.isSetTxnid()) {
    optionals.set(2);
  }
  if (struct.isSetAcquiredat()) {
    optionals.set(3);
  }
  if (struct.isSetHeartbeatCount()) {
    optionals.set(4);
  }
  if (struct.isSetAgentInfo()) {
    optionals.set(5);
  }
  if (struct.isSetBlockedByExtId()) {
    optionals.set(6);
  }
  if (struct.isSetBlockedByIntId()) {
    optionals.set(7);
  }
  if (struct.isSetLockIdInternal()) {
    optionals.set(8);
  }
  oprot.writeBitSet(optionals,9);
  if (struct.isSetTablename()) {
    oprot.writeString(struct.tablename);
  }
  if (struct.isSetPartname()) {
    oprot.writeString(struct.partname);
  }
  if (struct.isSetTxnid()) {
    oprot.writeI64(struct.txnid);
  }
  if (struct.isSetAcquiredat()) {
    oprot.writeI64(struct.acquiredat);
  }
  if (struct.isSetHeartbeatCount()) {
    oprot.writeI32(struct.heartbeatCount);
  }
  if (struct.isSetAgentInfo()) {
    oprot.writeString(struct.agentInfo);
  }
  if (struct.isSetBlockedByExtId()) {
    oprot.writeI64(struct.blockedByExtId);
  }
  if (struct.isSetBlockedByIntId()) {
    oprot.writeI64(struct.blockedByIntId);
  }
  if (struct.isSetLockIdInternal()) {
    oprot.writeI64(struct.lockIdInternal);
  }
}
