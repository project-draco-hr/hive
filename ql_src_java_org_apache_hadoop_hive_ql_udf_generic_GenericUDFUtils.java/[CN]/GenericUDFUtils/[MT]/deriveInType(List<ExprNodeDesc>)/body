{
  TypeInfo returnType=null;
  for (  ExprNodeDesc node : children) {
    TypeInfo ti=node.getTypeInfo();
    if (ti.getCategory() == Category.PRIMITIVE && ((PrimitiveTypeInfo)ti).getPrimitiveCategory() == PrimitiveCategory.VOID) {
      continue;
    }
    if (returnType == null) {
      returnType=ti;
      continue;
    }
    if (returnType == ti)     continue;
    TypeInfo commonTypeInfo=FunctionRegistry.getCommonClass(returnType,ti);
    if (commonTypeInfo == null)     return null;
    returnType=updateCommonTypeForDecimal(commonTypeInfo,ti,returnType);
  }
  return returnType;
}
