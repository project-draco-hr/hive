{
  checkConnection("execute");
  closeClientOperation();
  initFlags();
  TExecuteStatementReq execReq=new TExecuteStatementReq(sessHandle,sql);
  execReq.setRunAsync(true);
  execReq.setConfOverlay(sessConf);
  transportLock.lock();
  try {
    TExecuteStatementResp execResp=client.ExecuteStatement(execReq);
    Utils.verifySuccessWithInfo(execResp.getStatus());
    stmtHandle=execResp.getOperationHandle();
    isExecuteStatementFailed=false;
  }
 catch (  SQLException eS) {
    isExecuteStatementFailed=true;
    throw eS;
  }
catch (  Exception ex) {
    isExecuteStatementFailed=true;
    throw new SQLException(ex.toString(),"08S01",ex);
  }
 finally {
    transportLock.unlock();
  }
  TGetOperationStatusReq statusReq=new TGetOperationStatusReq(stmtHandle);
  boolean operationComplete=false;
  TGetOperationStatusResp statusResp;
  while (!operationComplete) {
    try {
      transportLock.lock();
      try {
        statusResp=client.GetOperationStatus(statusReq);
      }
  finally {
        transportLock.unlock();
      }
      Utils.verifySuccessWithInfo(statusResp.getStatus());
      if (statusResp.isSetOperationState()) {
switch (statusResp.getOperationState()) {
case CLOSED_STATE:
case FINISHED_STATE:
          operationComplete=true;
        break;
case CANCELED_STATE:
      throw new SQLException("Query was cancelled","01000");
case ERROR_STATE:
    throw new SQLException(statusResp.getErrorMessage(),statusResp.getSqlState(),statusResp.getErrorCode());
case UKNOWN_STATE:
  throw new SQLException("Unknown query","HY000");
case INITIALIZED_STATE:
case PENDING_STATE:
case RUNNING_STATE:
break;
}
}
}
 catch (SQLException e) {
isLogBeingGenerated=false;
throw e;
}
catch (Exception e) {
isLogBeingGenerated=false;
throw new SQLException(e.toString(),"08S01",e);
}
}
isLogBeingGenerated=false;
if (!stmtHandle.isHasResultSet()) {
return false;
}
resultSet=new HiveQueryResultSet.Builder(this).setClient(client).setSessionHandle(sessHandle).setStmtHandle(stmtHandle).setMaxRows(maxRows).setFetchSize(fetchSize).setScrollable(isScrollableResultset).setTransportLock(transportLock).build();
return true;
}
