{
  if (isClosed) {
    throw new SQLException("Can't execute after statement has been closed");
  }
  try {
    if (stmtHandle != null) {
      closeClientOperation();
    }
    TExecuteStatementReq execReq=new TExecuteStatementReq(sessHandle,sql);
    execReq.setConfOverlay(sessConf);
    TExecuteStatementResp execResp=client.ExecuteStatement(execReq);
    Utils.verifySuccessWithInfo(execResp.getStatus());
    stmtHandle=execResp.getOperationHandle();
  }
 catch (  SQLException eS) {
    throw eS;
  }
catch (  Exception ex) {
    throw new SQLException(ex.toString(),"08S01",ex);
  }
  if (!stmtHandle.isHasResultSet()) {
    TGetOperationStatusReq statusReq=new TGetOperationStatusReq(stmtHandle);
    boolean requestComplete=false;
    while (!requestComplete) {
      try {
        TGetOperationStatusResp statusResp=client.GetOperationStatus(statusReq);
        Utils.verifySuccessWithInfo(statusResp.getStatus());
        if (statusResp.isSetOperationState()) {
switch (statusResp.getOperationState()) {
case CLOSED_STATE:
case FINISHED_STATE:
            return false;
case CANCELED_STATE:
          throw new SQLException("Query was cancelled","01000");
case ERROR_STATE:
        throw new SQLException("Query failed","HY000");
case UKNOWN_STATE:
      throw new SQLException("Unknown query","HY000");
case INITIALIZED_STATE:
case RUNNING_STATE:
    break;
}
}
}
 catch (Exception ex) {
throw new SQLException(ex.toString(),"08S01",ex);
}
try {
Thread.sleep(100);
}
 catch (InterruptedException ex) {
}
}
return false;
}
resultSet=new HiveQueryResultSet.Builder().setClient(client).setSessionHandle(sessHandle).setStmtHandle(stmtHandle).setHiveStatement(this).setMaxRows(maxRows).setFetchSize(fetchSize).build();
return true;
}
