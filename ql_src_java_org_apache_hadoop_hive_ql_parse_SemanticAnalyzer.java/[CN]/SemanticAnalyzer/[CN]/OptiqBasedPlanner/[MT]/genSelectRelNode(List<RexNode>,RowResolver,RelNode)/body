{
  ArrayList<String> columnNames=new ArrayList<String>();
  for (int i=0; i < optiqColLst.size(); i++) {
    columnNames.add(getColumnInternalName(i));
  }
  if (!Util.isDistinct(columnNames)) {
    String msg=String.format("Select list contains multiple expressions with the same name %s." + columnNames);
    LOG.debug(msg);
    throw new OptiqSemanticException(msg);
  }
  List<String> oFieldNames=Lists.transform(columnNames,new Function<String,String>(){
    @Override public String apply(    String hName){
      return "_o_" + hName;
    }
  }
);
  HiveRel selRel=HiveProjectRel.create(srcRel,optiqColLst,oFieldNames);
  this.relToHiveColNameOptiqPosMap.put(selRel,buildHiveToOptiqColumnMap(out_rwsch,selRel));
  this.relToHiveRR.put(selRel,out_rwsch);
  return selRel;
}
