{
  AggInfo aInfo=null;
  ArrayList<ExprNodeDesc> aggParameters=new ArrayList<ExprNodeDesc>();
  for (int i=1; i <= aggFnLstArgIndx; i++) {
    ASTNode paraExpr=(ASTNode)aggAst.getChild(i);
    ExprNodeDesc paraExprNode=genExprNodeDesc(paraExpr,inputRR);
    aggParameters.add(paraExprNode);
  }
  String aggName=unescapeIdentifier(aggAst.getChild(0).getText());
  boolean isDistinct=aggAst.getType() == HiveParser.TOK_FUNCTIONDI;
  boolean isAllColumns=aggAst.getType() == HiveParser.TOK_FUNCTIONSTAR;
  Mode amode=groupByDescModeToUDAFMode(GroupByDesc.Mode.COMPLETE,isDistinct);
  GenericUDAFEvaluator genericUDAFEvaluator=getGenericUDAFEvaluator(aggName,aggParameters,aggAst,isDistinct,isAllColumns);
  assert(genericUDAFEvaluator != null);
  GenericUDAFInfo udaf=getGenericUDAFInfo(genericUDAFEvaluator,amode,aggParameters);
  aInfo=new AggInfo(aggParameters,udaf.returnType,aggName,isDistinct);
  return aInfo;
}
