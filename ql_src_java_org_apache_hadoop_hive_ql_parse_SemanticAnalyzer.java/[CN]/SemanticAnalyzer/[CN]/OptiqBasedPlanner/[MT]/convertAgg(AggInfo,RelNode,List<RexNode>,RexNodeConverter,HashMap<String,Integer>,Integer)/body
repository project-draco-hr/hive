{
  final Aggregation aggregation=AGG_MAP.get(agg.m_udfName);
  if (aggregation == null) {
    throw new AssertionError("agg not found: " + agg.m_udfName);
  }
  List<Integer> argList=new ArrayList<Integer>();
  RelDataType type=TypeConverter.convert(agg.m_returnType,this.m_cluster.getTypeFactory());
  Integer inputIndx;
  RexNode rexNd=null;
  for (  ExprNodeDesc expr : agg.m_aggParams) {
    rexNd=converter.convert(expr);
    inputIndx=rexNodeToPosMap.get(rexNd.toString());
    if (inputIndx == null) {
      gbChildProjLst.add(rexNd);
      rexNodeToPosMap.put(rexNd.toString(),childProjLstIndx);
      inputIndx=childProjLstIndx;
      childProjLstIndx++;
    }
    argList.add(inputIndx);
  }
  if (argList.size() > 0) {
    RexNode rex=converter.convert(agg.m_aggParams.get(0));
    type=rex.getType();
  }
  return new AggregateCall(aggregation,agg.m_distinct,argList,type,null);
}
