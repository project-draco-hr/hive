{
  if (expr.getType() != HiveParser.TOK_COLREF) {
    throw new SemanticException(ErrorMsg.INVALID_COLUMN.getMsg(expr));
  }
  exprNodeDesc desc;
  ColumnInfo colInfo;
  String tabAlias=null;
  String colName=null;
  if (expr.getChildCount() != 1) {
    tabAlias=unescapeIdentifier(expr.getChild(0).getText());
    colName=unescapeIdentifier(expr.getChild(1).getText());
  }
 else {
    colName=unescapeIdentifier(expr.getChild(0).getText());
  }
  if (colName == null) {
    throw new SemanticException(ErrorMsg.INVALID_XPATH.getMsg(expr));
  }
  colInfo=input.get(tabAlias,colName);
  if (colInfo == null && input.getIsExprResolver()) {
    throw new SemanticException(ErrorMsg.NON_KEY_EXPR_IN_GROUPBY.getMsg(expr));
  }
 else   if (tabAlias != null && !input.hasTableAlias(tabAlias)) {
    throw new SemanticException(ErrorMsg.INVALID_TABLE_ALIAS.getMsg(expr.getChild(0)));
  }
 else   if (colInfo == null) {
    throw new SemanticException(ErrorMsg.INVALID_COLUMN.getMsg(tabAlias == null ? expr.getChild(0) : expr.getChild(1)));
  }
  desc=new exprNodeColumnDesc(colInfo.getType(),colInfo.getInternalName());
  return desc;
}
