{
  int numChildren=lateralView.getChildCount();
  assert(numChildren == 2);
  ASTNode next=(ASTNode)lateralView.getChild(1);
  String alias=null;
switch (next.getToken().getType()) {
case HiveParser.TOK_TABREF:
    alias=processTable(qb,next);
  break;
case HiveParser.TOK_SUBQUERY:
alias=processSubQuery(qb,next);
break;
case HiveParser.TOK_LATERAL_VIEW:
case HiveParser.TOK_LATERAL_VIEW_OUTER:
alias=processLateralView(qb,next);
break;
default :
throw new SemanticException(ErrorMsg.LATERAL_VIEW_INVALID_CHILD.getMsg(lateralView));
}
alias=alias.toLowerCase();
qb.getParseInfo().addLateralViewForAlias(alias,lateralView);
qb.addAlias(alias);
return alias;
}
