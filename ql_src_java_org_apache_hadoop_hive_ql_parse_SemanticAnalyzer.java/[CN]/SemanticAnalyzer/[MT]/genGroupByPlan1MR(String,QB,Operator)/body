{
  QBParseInfo parseInfo=qb.getParseInfo();
  int numReducers=-1;
  ObjectPair<List<ASTNode>,List<Integer>> grpByExprsGroupingSets=getGroupByGroupingSetsForClause(parseInfo,dest);
  List<ASTNode> grpByExprs=grpByExprsGroupingSets.getFirst();
  List<Integer> groupingSets=grpByExprsGroupingSets.getSecond();
  if (grpByExprs.isEmpty()) {
    numReducers=1;
  }
  if (!groupingSets.isEmpty()) {
    throw new SemanticException(ErrorMsg.HIVE_GROUPING_SETS_AGGR_NOMAPAGGR.getMsg());
  }
  ReduceSinkOperator reduceSinkOperatorInfo=genGroupByPlanReduceSinkOperator(qb,dest,input,grpByExprs,grpByExprs.size(),false,numReducers,false,false);
  Operator groupByOperatorInfo=genGroupByPlanGroupByOperator(parseInfo,dest,reduceSinkOperatorInfo,reduceSinkOperatorInfo,GroupByDesc.Mode.COMPLETE,null);
  return groupByOperatorInfo;
}
