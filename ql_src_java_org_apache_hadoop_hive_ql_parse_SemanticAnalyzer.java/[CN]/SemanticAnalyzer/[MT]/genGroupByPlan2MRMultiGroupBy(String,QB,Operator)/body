{
  Map<String,GenericUDAFEvaluator> genericUDAFEvaluators=new LinkedHashMap<String,GenericUDAFEvaluator>();
  QBParseInfo parseInfo=qb.getParseInfo();
  Operator groupByOperatorInfo=genGroupByPlanGroupByOperator1(parseInfo,dest,input,GroupByDesc.Mode.HASH,genericUDAFEvaluators,true,null,false,false);
  int numReducers=-1;
  List<ASTNode> grpByExprs=getGroupByForClause(parseInfo,dest);
  Operator reduceSinkOperatorInfo2=genGroupByPlanReduceSinkOperator2MR(parseInfo,dest,groupByOperatorInfo,grpByExprs.size(),numReducers,false);
  Operator groupByOperatorInfo2=genGroupByPlanGroupByOperator2MR(parseInfo,dest,reduceSinkOperatorInfo2,GroupByDesc.Mode.FINAL,genericUDAFEvaluators,false);
  return groupByOperatorInfo2;
}
