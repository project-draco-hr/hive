{
  ASTNode havingExpr=qb.getParseInfo().getHavingForClause(dest);
  OpParseContext inputCtx=opParseCtx.get(input);
  RowResolver inputRR=inputCtx.getRowResolver();
  Map<ASTNode,String> exprToColumnAlias=qb.getParseInfo().getAllExprToColumnAlias();
  for (  ASTNode astNode : exprToColumnAlias.keySet()) {
    if (inputRR.getExpression(astNode) != null) {
      inputRR.put("",exprToColumnAlias.get(astNode),inputRR.getExpression(astNode));
    }
  }
  ASTNode condn=(ASTNode)havingExpr.getChild(0);
  Operator output=putOpInsertMap(OperatorFactory.getAndMakeChild(new FilterDesc(genExprNodeDesc(condn,inputRR),false),new RowSchema(inputRR.getColumnInfos()),input),inputRR);
  return output;
}
