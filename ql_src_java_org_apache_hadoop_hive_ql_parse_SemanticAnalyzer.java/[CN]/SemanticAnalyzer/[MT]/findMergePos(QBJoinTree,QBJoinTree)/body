{
  int res=-1;
  String leftAlias=node.getLeftAlias();
  if (leftAlias == null)   return -1;
  Vector<CommonTree> nodeCondn=node.getExpressions().get(0);
  Vector<CommonTree> targetCondn=null;
  if (leftAlias.equals(target.getLeftAlias())) {
    targetCondn=target.getExpressions().get(0);
    res=0;
  }
 else   for (int i=0; i < target.getRightAliases().length; i++) {
    if (leftAlias.equals(target.getRightAliases()[i])) {
      targetCondn=target.getExpressions().get(i + 1);
      res=i + 1;
      break;
    }
  }
  if ((targetCondn == null) || (nodeCondn.size() != targetCondn.size()))   return -1;
  for (int i=0; i < nodeCondn.size(); i++)   if (!nodeCondn.get(i).toStringTree().equals(targetCondn.get(i).toStringTree()))   return -1;
  return res;
}
