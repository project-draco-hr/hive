{
switch (joinCond.getToken().getType()) {
case HiveParser.KW_AND:
    parseJoinCondition(joinParseTree,joinTree,(CommonTree)joinCond.getChild(0),leftSrc);
  parseJoinCondition(joinParseTree,joinTree,(CommonTree)joinCond.getChild(1),leftSrc);
break;
case HiveParser.EQUAL:
CommonTree leftCondn=(CommonTree)joinCond.getChild(0);
Vector<String> leftAliases=new Vector<String>();
Vector<String> rightAliases=new Vector<String>();
parseJoinCondPopulateAlias(joinTree,leftCondn,leftAliases,rightAliases);
populateAliases(leftAliases,rightAliases,leftCondn,joinTree,leftSrc);
CommonTree rightCondn=(CommonTree)joinCond.getChild(1);
leftAliases.clear();
rightAliases.clear();
parseJoinCondPopulateAlias(joinTree,rightCondn,leftAliases,rightAliases);
populateAliases(leftAliases,rightAliases,rightCondn,joinTree,leftSrc);
break;
default :
break;
}
}
