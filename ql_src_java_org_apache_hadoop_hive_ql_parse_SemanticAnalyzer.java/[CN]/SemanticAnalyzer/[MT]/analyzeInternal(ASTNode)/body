{
  reset();
  QB qb=new QB(null,null,false);
  this.qb=qb;
  this.ast=ast;
  ASTNode child=ast;
  LOG.info("Starting Semantic Analysis");
  if (ast.getToken().getType() == HiveParser.TOK_CREATETABLE) {
    if ((child=analyzeCreateTable(ast,qb)) == null)     return;
  }
  doPhase1(child,qb,initPhase1Ctx());
  LOG.info("Completed phase 1 of Semantic Analysis");
  getMetaData(qb);
  LOG.info("Completed getting MetaData in Semantic Analysis");
  genPlan(qb);
  ParseContext pCtx=new ParseContext(conf,qb,child,opToPartPruner,aliasToSamplePruner,topOps,topSelOps,opParseCtx,joinContext,topToTable,loadTableWork,loadFileWork,ctx,idToTableNameMap,destTableId,uCtx,listMapJoinOpsNoReducer,groupOpToInputTables,prunedPartitions);
  Optimizer optm=new Optimizer();
  optm.setPctx(pCtx);
  optm.initialize(conf);
  pCtx=optm.optimize();
  init(pCtx);
  qb=pCtx.getQB();
  genSamplePruners(qb);
  LOG.info("Completed sample pruning");
  genMapRedTasks(qb);
  LOG.info("Completed plan generation");
  return;
}
