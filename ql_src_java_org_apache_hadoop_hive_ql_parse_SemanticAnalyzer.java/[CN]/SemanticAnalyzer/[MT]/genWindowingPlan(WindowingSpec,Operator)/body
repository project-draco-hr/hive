{
  wSpec.validateAndMakeEffective();
  WindowingComponentizer groups=new WindowingComponentizer(wSpec);
  RowResolver rr=opParseCtx.get(input).getRowResolver();
  while (groups.hasNext()) {
    wSpec=groups.next(conf,this,unparseTranslator,rr);
    input=genReduceSinkPlanForWindowing(wSpec,rr,input);
    rr=opParseCtx.get(input).getRowResolver();
    PTFTranslator translator=new PTFTranslator();
    PTFDesc ptfDesc=translator.translate(wSpec,this,conf,rr,unparseTranslator);
    RowResolver ptfOpRR=ptfDesc.getFuncDef().getOutputShape().getRr();
    input=putOpInsertMap(OperatorFactory.getAndMakeChild(ptfDesc,new RowSchema(ptfOpRR.getColumnInfos()),input),ptfOpRR);
    input=genSelectAllDesc(input);
    rr=ptfOpRR;
  }
  return input;
}
