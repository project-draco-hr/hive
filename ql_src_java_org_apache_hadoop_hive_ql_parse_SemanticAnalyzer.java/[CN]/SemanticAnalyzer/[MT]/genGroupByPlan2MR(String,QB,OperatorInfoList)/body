{
  if (inputList.size() != 1) {
    throw new SemanticException("Select has more than one inputs");
  }
  OperatorInfo inputOperatorInfo=inputList.get(0);
  QBParseInfo parseInfo=qb.getParseInfo();
  OperatorInfo reduceSinkOperatorInfo=genGroupByPlanReduceSinkOperator(parseInfo,dest,inputOperatorInfo,(parseInfo.getDistinctFuncExprForClause(dest) == null ? -1 : Integer.MAX_VALUE));
  OperatorInfo groupByOperatorInfo=genGroupByPlanGroupByOperator(parseInfo,dest,reduceSinkOperatorInfo,groupByDesc.Mode.PARTIAL1);
  OperatorInfo reduceSinkOperatorInfo2=genGroupByPlanReduceSinkOperator2MR(parseInfo,dest,groupByOperatorInfo,getGroupByForClause(parseInfo,dest).size());
  OperatorInfo groupByOperatorInfo2=genGroupByPlanGroupByOperator2MR(parseInfo,dest,reduceSinkOperatorInfo2);
  OperatorInfo selectOperatorInfo=genGroupByPlanSelectOperator(parseInfo,dest,groupByOperatorInfo2);
  OperatorInfoList output=new OperatorInfoList();
  output.add(selectOperatorInfo);
  return output;
}
