{
  for (  String alias : qb.getSubqAliases()) {
    QBExpr qbexpr=qb.getSubqForAlias(alias);
    genPartitionPruners(qbexpr);
  }
  for (  String alias : qb.getTabAliases()) {
    String alias_id=(qb.getId() == null ? alias : qb.getId() + ":" + alias);
    PartitionPruner pruner=new PartitionPruner(alias,qb.getMetaData());
    QBParseInfo qbp=qb.getParseInfo();
    for (    String clause : qbp.getClauseNames()) {
      CommonTree whexp=(CommonTree)qbp.getWhrForClause(clause);
      if (pruner.getTable().isPartitioned() && conf.getVar(HiveConf.ConfVars.HIVEPARTITIONPRUNER).equalsIgnoreCase("strict") && (whexp == null || !pruner.hasPartitionPredicate((CommonTree)whexp.getChild(0)))) {
        throw new SemanticException(ErrorMsg.NO_PARTITION_PREDICATE.getMsg(whexp != null ? whexp : qbp.getSelForClause(clause)," for Alias " + alias + " Table "+ pruner.getTable().getName()));
      }
      if (whexp != null) {
        pruner.addExpression((CommonTree)whexp.getChild(0));
      }
    }
    this.aliasToPruner.put(alias_id,pruner);
  }
}
