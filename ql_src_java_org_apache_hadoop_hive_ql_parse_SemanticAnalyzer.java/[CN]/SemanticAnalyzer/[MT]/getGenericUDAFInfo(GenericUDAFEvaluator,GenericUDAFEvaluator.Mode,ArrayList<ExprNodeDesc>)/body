{
  GenericUDAFInfo r=new GenericUDAFInfo();
  r.genericUDAFEvaluator=evaluator;
  ObjectInspector returnOI=null;
  try {
    ArrayList<ObjectInspector> aggOIs=getWritableObjectInspector(aggParameters);
    ObjectInspector[] aggOIArray=new ObjectInspector[aggOIs.size()];
    for (int ii=0; ii < aggOIs.size(); ++ii) {
      aggOIArray[ii]=aggOIs.get(ii);
    }
    returnOI=r.genericUDAFEvaluator.init(emode,aggOIArray);
    r.returnType=TypeInfoUtils.getTypeInfoFromObjectInspector(returnOI);
  }
 catch (  HiveException e) {
    throw new SemanticException(e);
  }
  r.convertedParameters=aggParameters;
  return r;
}
