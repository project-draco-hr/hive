{
switch (condn.getToken().getType()) {
case HiveParser.TOK_TABLE_OR_COL:
    String tableOrCol=unescapeIdentifier(condn.getChild(0).getText().toLowerCase());
  if (isPresent(joinTree.getLeftAliases(),tableOrCol)) {
    if (!leftAliases.contains(tableOrCol))     leftAliases.add(tableOrCol);
  }
 else   if (isPresent(joinTree.getRightAliases(),tableOrCol)) {
    if (!rightAliases.contains(tableOrCol))     rightAliases.add(tableOrCol);
  }
 else {
    throw new SemanticException(ErrorMsg.INVALID_TABLE_ALIAS.getMsg(condn.getChild(0)));
  }
break;
case HiveParser.Identifier:
if (fields != null) {
fields.add(unescapeIdentifier(condn.getToken().getText().toLowerCase()));
}
break;
case HiveParser.Number:
case HiveParser.StringLiteral:
case HiveParser.TOK_CHARSETLITERAL:
case HiveParser.KW_TRUE:
case HiveParser.KW_FALSE:
break;
case HiveParser.TOK_FUNCTION:
for (int i=1; i < condn.getChildCount(); i++) parseJoinCondPopulateAlias(joinTree,(ASTNode)condn.getChild(i),leftAliases,rightAliases,null);
break;
default :
if (condn.getChildCount() == 1) parseJoinCondPopulateAlias(joinTree,(ASTNode)condn.getChild(0),leftAliases,rightAliases,null);
 else if (condn.getChildCount() == 2) {
ArrayList<String> fields1=null;
if (joinTree.getNoSemiJoin() == false && condn.getToken().getType() == HiveParser.DOT) {
fields1=new ArrayList<String>();
int rhssize=rightAliases.size();
parseJoinCondPopulateAlias(joinTree,(ASTNode)condn.getChild(0),leftAliases,rightAliases,null);
String rhsAlias=null;
if (rightAliases.size() > rhssize) {
rhsAlias=rightAliases.get(rightAliases.size() - 1);
}
parseJoinCondPopulateAlias(joinTree,(ASTNode)condn.getChild(1),leftAliases,rightAliases,fields1);
if (rhsAlias != null && fields1.size() > 0) {
joinTree.addRHSSemijoinColumns(rhsAlias,condn);
}
}
 else {
parseJoinCondPopulateAlias(joinTree,(ASTNode)condn.getChild(0),leftAliases,rightAliases,null);
parseJoinCondPopulateAlias(joinTree,(ASTNode)condn.getChild(1),leftAliases,rightAliases,fields1);
}
}
 else throw new SemanticException(condn.toStringTree() + " encountered with " + condn.getChildCount()+ " children");
break;
}
}
