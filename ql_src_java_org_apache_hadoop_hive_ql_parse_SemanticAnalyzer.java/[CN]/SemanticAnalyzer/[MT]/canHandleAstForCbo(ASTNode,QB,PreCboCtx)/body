{
  int root=ast.getToken().getType();
  boolean needToLogMessage=LOG.isInfoEnabled();
  boolean isSupportedRoot=root == HiveParser.TOK_QUERY || root == HiveParser.TOK_EXPLAIN || qb.isCTAS();
  boolean isSupportedType=qb.getIsQuery() || qb.isCTAS() || cboCtx.type == PreCboCtx.Type.INSERT;
  boolean noBadTokens=HiveOptiqUtil.validateASTForUnsupportedTokens(ast);
  boolean result=isSupportedRoot && isSupportedType && createVwDesc == null && noBadTokens;
  if (!result) {
    if (needToLogMessage) {
      String msg="";
      if (!isSupportedRoot)       msg+="doesn't have QUERY or EXPLAIN as root and not a CTAS; ";
      if (!isSupportedType)       msg+="is not a query, CTAS, or insert; ";
      if (createVwDesc != null)       msg+="has create view; ";
      if (!noBadTokens)       msg+="has unsupported tokens; ";
      if (msg.isEmpty())       msg+="has some unspecified limitations; ";
      LOG.info("Not invoking CBO because the statement " + msg.substring(0,msg.length() - 2));
    }
    return false;
  }
  String msg=canHandleQbForCbo(qb,true,needToLogMessage);
  if (msg == null) {
    return true;
  }
  if (needToLogMessage) {
    LOG.info("Not invoking CBO because the statement " + msg.substring(0,msg.length() - 2));
  }
  return false;
}
