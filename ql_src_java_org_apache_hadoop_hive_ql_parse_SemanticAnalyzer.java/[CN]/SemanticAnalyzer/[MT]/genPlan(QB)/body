{
  HashMap<String,OperatorInfo> aliasToOpInfo=new HashMap<String,OperatorInfo>();
  for (  String alias : qb.getSubqAliases()) {
    QBExpr qbexpr=qb.getSubqForAlias(alias);
    aliasToOpInfo.put(alias,genPlan(qbexpr));
    qbexpr.setAlias(alias);
  }
  for (  String alias : qb.getTabAliases()) {
    aliasToOpInfo.put(alias,genTablePlan(alias,qb));
  }
  OperatorInfo srcOpInfo=null;
  if (qb.getParseInfo().getJoinExpr() != null) {
    CommonTree joinExpr=qb.getParseInfo().getJoinExpr();
    QBJoinTree joinTree=genJoinTree(joinExpr);
    qb.setQbJoinTree(joinTree);
    mergeJoinTree(qb);
    srcOpInfo=genJoinPlan(qb,aliasToOpInfo);
  }
 else   srcOpInfo=aliasToOpInfo.values().iterator().next();
  OperatorInfo bodyOpInfo=genBodyPlan(qb,srcOpInfo);
  LOG.debug("Created Plan for Query Block " + qb.getId());
  QBParseInfo qbp=qb.getParseInfo();
  qbp.setCanOptTopQ(qb.isSelectStarQuery());
  return bodyOpInfo;
}
