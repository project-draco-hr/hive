{
  if (parseInfo.getSelForClause(dest).getToken().getType() == HiveParser.TOK_SELECTDI) {
    ASTNode selectExprs=parseInfo.getSelForClause(dest);
    List<ASTNode> result=new ArrayList<ASTNode>(selectExprs == null ? 0 : selectExprs.getChildCount());
    if (selectExprs != null) {
      HashMap<String,ASTNode> windowingExprs=parseInfo.getWindowingExprsForClause(dest);
      for (int i=0; i < selectExprs.getChildCount(); ++i) {
        if (((ASTNode)selectExprs.getChild(i)).getToken().getType() == HiveParser.TOK_HINTLIST) {
          continue;
        }
        ASTNode grpbyExpr=(ASTNode)selectExprs.getChild(i).getChild(0);
        if (windowingExprs != null && windowingExprs.containsKey(grpbyExpr.toStringTree())) {
          if (!isCBOExecuted()) {
            throw new SemanticException("SELECT DISTINCT not allowed in the presence of windowing" + " functions when CBO is off");
          }
          continue;
        }
        result.add(grpbyExpr);
      }
    }
    return result;
  }
 else {
    ASTNode grpByExprs=parseInfo.getGroupByForClause(dest);
    List<ASTNode> result=new ArrayList<ASTNode>(grpByExprs == null ? 0 : grpByExprs.getChildCount());
    if (grpByExprs != null) {
      for (int i=0; i < grpByExprs.getChildCount(); ++i) {
        ASTNode grpbyExpr=(ASTNode)grpByExprs.getChild(i);
        if (grpbyExpr.getType() != HiveParser.TOK_GROUPING_SETS_EXPRESSION) {
          result.add(grpbyExpr);
        }
      }
    }
    return result;
  }
}
