{
  RowResolver inputRR=opParseCtx.get(input).getRowResolver();
  ArrayList<ExprNodeDesc> colList=new ArrayList<ExprNodeDesc>();
  ArrayList<String> outputColumnNames=new ArrayList<String>();
  Map<String,ExprNodeDesc> colExprMap=new HashMap<String,ExprNodeDesc>();
  RowResolver outputRR=new RowResolver();
  for (int i=0; i < fields.size(); ++i) {
    ASTNode field=fields.get(i);
    ExprNodeDesc exprNode=genExprNodeDesc(field,inputRR);
    String colName=getColumnInternalName(i);
    outputColumnNames.add(colName);
    ColumnInfo colInfo=new ColumnInfo(colName,exprNode.getTypeInfo(),"",false);
    outputRR.putExpression(field,colInfo);
    colList.add(exprNode);
    colExprMap.put(colName,exprNode);
  }
  Operator output=putOpInsertMap(OperatorFactory.getAndMakeChild(new SelectDesc(colList,outputColumnNames,false),new RowSchema(outputRR.getColumnInfos()),input),outputRR);
  output.setColumnExprMap(colExprMap);
  return output;
}
