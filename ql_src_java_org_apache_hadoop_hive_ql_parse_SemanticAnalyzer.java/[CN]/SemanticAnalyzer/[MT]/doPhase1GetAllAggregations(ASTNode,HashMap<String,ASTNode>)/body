{
  if (expressionTree.getToken().getType() == HiveParser.TOK_FUNCTION || expressionTree.getToken().getType() == HiveParser.TOK_FUNCTIONDI) {
    assert(expressionTree.getChildCount() != 0);
    if (expressionTree.getChild(0).getType() == HiveParser.Identifier) {
      String functionName=unescapeIdentifier(expressionTree.getChild(0).getText());
      if (FunctionRegistry.getGenericUDAFResolver(functionName) != null) {
        aggregations.put(expressionTree.toStringTree(),expressionTree);
        FunctionInfo fi=FunctionRegistry.getFunctionInfo(functionName);
        if (!fi.isNative()) {
          unparseTranslator.addIdentifierTranslation((ASTNode)expressionTree.getChild(0));
        }
        return;
      }
    }
  }
  for (int i=0; i < expressionTree.getChildCount(); i++) {
    doPhase1GetAllAggregations((ASTNode)expressionTree.getChild(i),aggregations);
  }
}
