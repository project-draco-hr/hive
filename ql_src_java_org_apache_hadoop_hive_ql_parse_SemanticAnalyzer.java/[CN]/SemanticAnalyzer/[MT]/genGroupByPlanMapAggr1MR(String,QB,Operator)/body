{
  QBParseInfo parseInfo=qb.getParseInfo();
  Map<String,GenericUDAFEvaluator> genericUDAFEvaluators=new LinkedHashMap<String,GenericUDAFEvaluator>();
  GroupByOperator groupByOperatorInfo=(GroupByOperator)genGroupByPlanMapGroupByOperator(qb,dest,inputOperatorInfo,groupByDesc.Mode.HASH,genericUDAFEvaluators);
  int numReducers=-1;
  List<ASTNode> grpByExprs=getGroupByForClause(parseInfo,dest);
  if (grpByExprs.isEmpty())   numReducers=1;
  Operator reduceSinkOperatorInfo=genGroupByPlanReduceSinkOperator(qb,dest,groupByOperatorInfo,grpByExprs.size(),numReducers,true);
  return genGroupByPlanGroupByOperator1(parseInfo,dest,reduceSinkOperatorInfo,groupByDesc.Mode.MERGEPARTIAL,genericUDAFEvaluators);
}
