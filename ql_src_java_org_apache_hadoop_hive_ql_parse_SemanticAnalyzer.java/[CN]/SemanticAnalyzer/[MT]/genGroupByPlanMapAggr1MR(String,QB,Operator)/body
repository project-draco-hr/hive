{
  QBParseInfo parseInfo=qb.getParseInfo();
  Map<String,GenericUDAFEvaluator> genericUDAFEvaluators=new LinkedHashMap<String,GenericUDAFEvaluator>();
  GroupByOperator groupByOperatorInfo=(GroupByOperator)genGroupByPlanMapGroupByOperator(qb,dest,inputOperatorInfo,GroupByDesc.Mode.HASH,genericUDAFEvaluators);
  groupOpToInputTables.put(groupByOperatorInfo,opParseCtx.get(inputOperatorInfo).getRR().getTableNames());
  int numReducers=-1;
  List<ASTNode> grpByExprs=getGroupByForClause(parseInfo,dest);
  if (grpByExprs.isEmpty()) {
    numReducers=1;
  }
  Operator reduceSinkOperatorInfo=genGroupByPlanReduceSinkOperator(qb,dest,groupByOperatorInfo,grpByExprs.size(),numReducers,true);
  return genGroupByPlanGroupByOperator1(parseInfo,dest,reduceSinkOperatorInfo,GroupByDesc.Mode.MERGEPARTIAL,genericUDAFEvaluators,false);
}
