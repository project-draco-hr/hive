{
  if (!qbp.isAnalyzeCommand()) {
    tsDesc.setGatherStats(false);
  }
 else {
    if (HiveConf.getVar(conf,HIVESTATSDBCLASS).equalsIgnoreCase(StatDB.fs.name())) {
      String statsTmpLoc=ctx.getExtTmpPathRelTo(tab.getPath()).toString();
      LOG.debug("Set stats collection dir : " + statsTmpLoc);
      tsDesc.setTmpStatsDir(statsTmpLoc);
    }
    tsDesc.setGatherStats(true);
    tsDesc.setStatsReliable(conf.getBoolVar(HiveConf.ConfVars.HIVE_STATS_RELIABLE));
    tsDesc.setMaxStatsKeyPrefixLength(StatsFactory.getMaxPrefixLength(conf));
    Iterator<VirtualColumn> vcs=VirtualColumn.getStatsRegistry(conf).iterator();
    List<VirtualColumn> vcList=new ArrayList<VirtualColumn>();
    while (vcs.hasNext()) {
      VirtualColumn vc=vcs.next();
      rwsch.put(alias,vc.getName(),new ColumnInfo(vc.getName(),vc.getTypeInfo(),alias,true,vc.getIsHidden()));
      vcList.add(vc);
    }
    tsDesc.addVirtualCols(vcList);
    String tblName=tab.getTableName();
    TableSpec tblSpec=qbp.getTableSpec(alias);
    Map<String,String> partSpec=tblSpec.getPartSpec();
    if (partSpec != null) {
      List<String> cols=new ArrayList<String>();
      cols.addAll(partSpec.keySet());
      tsDesc.setPartColumns(cols);
    }
    String k=tblName + Path.SEPARATOR;
    tsDesc.setStatsAggPrefix(tab.getDbName() + "." + k);
    outputs.add(new WriteEntity(tab,WriteEntity.WriteType.DDL_SHARED));
    if (tab.isPartitioned()) {
      if (partSpec == null) {
        throw new SemanticException(ErrorMsg.NEED_PARTITION_SPECIFICATION.getMsg());
      }
      List<Partition> partitions=qbp.getTableSpec().partitions;
      if (partitions != null) {
        for (        Partition partn : partitions) {
          outputs.add(new WriteEntity(partn,WriteEntity.WriteType.DDL_NO_LOCK));
        }
      }
    }
  }
}
