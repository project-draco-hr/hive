{
  String colAlias=null;
  String tabAlias=null;
  String[] colRef=new String[2];
  if (selExpr.getChildCount() == 2) {
    colAlias=unescapeIdentifier(selExpr.getChild(1).getText());
    colRef[0]=tabAlias;
    colRef[1]=colAlias;
    return colRef;
  }
  ASTNode root=(ASTNode)selExpr.getChild(0);
  if (root.getType() == HiveParser.TOK_TABLE_OR_COL) {
    colAlias=BaseSemanticAnalyzer.unescapeIdentifier(root.getChild(0).getText());
    colRef[0]=tabAlias;
    colRef[1]=colAlias;
    return colRef;
  }
  if (root.getType() == HiveParser.DOT) {
    ASTNode tab=(ASTNode)root.getChild(0);
    if (tab.getType() == HiveParser.TOK_TABLE_OR_COL) {
      String t=unescapeIdentifier(tab.getChild(0).getText());
      if (inputRR.hasTableAlias(t)) {
        tabAlias=t;
      }
    }
    ASTNode col=(ASTNode)root.getChild(1);
    if (col.getType() == HiveParser.Identifier) {
      colAlias=unescapeIdentifier(col.getText());
    }
  }
  if (includeFuncName && (root.getType() == HiveParser.TOK_FUNCTION)) {
    String expr_flattened=root.toStringTree();
    String expr_no_tok=expr_flattened.replaceAll("TOK_\\S+","");
    String expr_formatted=expr_no_tok.replaceAll("\\W"," ").trim().replaceAll("\\s+","_");
    if (expr_formatted.length() > AUTOGEN_COLALIAS_PRFX_MAXLENGTH) {
      expr_formatted=expr_formatted.substring(0,AUTOGEN_COLALIAS_PRFX_MAXLENGTH);
    }
    colAlias=expr_formatted.concat("_" + colNum);
  }
  if (colAlias == null) {
    colAlias=defaultName + colNum;
  }
  colRef[0]=tabAlias;
  colRef[1]=colAlias;
  return colRef;
}
