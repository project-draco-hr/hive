{
  ArrayList<ASTNode> aggregations=new ArrayList<ASTNode>();
  extractWindowingUDAFs(expressionTree,aggregations);
  if (!implyOrder) {
    return aggregations;
  }
  ArrayList<ASTNode> wdwUDAFs=new ArrayList<ASTNode>();
  for (  ASTNode function : aggregations) {
    String fnName=function.getChild(0).getText().toLowerCase();
    if (FunctionRegistry.impliesOrder(fnName)) {
      wdwUDAFs.add(function);
      continue;
    }
    boolean hasLLInArgs=false;
    for (int i=1; i < function.getChildCount(); i++) {
      ASTNode child=(ASTNode)function.getChild(i);
      hasLLInArgs=containsLeadLagUDF(child);
      if (hasLLInArgs) {
        break;
      }
    }
    if (hasLLInArgs) {
      wdwUDAFs.add(function);
    }
  }
  return wdwUDAFs;
}
