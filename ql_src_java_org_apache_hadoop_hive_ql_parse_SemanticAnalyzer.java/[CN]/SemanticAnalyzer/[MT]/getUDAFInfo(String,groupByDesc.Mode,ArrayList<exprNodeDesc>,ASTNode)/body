{
  UDAFInfo r=new UDAFInfo();
  ArrayList<TypeInfo> aggTypeInfos=new ArrayList<TypeInfo>();
  for (  exprNodeDesc expr : aggParameters) {
    aggTypeInfos.add(expr.getTypeInfo());
  }
  r.evalClass=FunctionRegistry.getUDAFEvaluator(aggName,aggTypeInfos);
  if (null == r.evalClass) {
    String reason="Looking for UDAF Evaluator\"" + aggName + "\" with parameters "+ aggTypeInfos;
    throw new SemanticException(ErrorMsg.INVALID_FUNCTION_SIGNATURE.getMsg((ASTNode)aggTree.getChild(0),reason));
  }
  r.aggMethod=null;
  String funcName=(((mode == groupByDesc.Mode.PARTIAL1) || (mode == groupByDesc.Mode.HASH) || (mode == groupByDesc.Mode.COMPLETE)) ? "iterate" : "merge");
  if (aggTree.getToken().getType() == HiveParser.TOK_FUNCTIONDI && (mode != groupByDesc.Mode.FINAL))   funcName="iterate";
  for (  Method m : r.evalClass.getMethods()) {
    if (m.getName().equalsIgnoreCase(funcName)) {
      r.aggMethod=m;
    }
  }
  if (null == r.aggMethod) {
    String reason="Looking for UDAF Evaluator Iterator\"" + aggName + "\" with parameters "+ aggTypeInfos;
    throw new SemanticException(ErrorMsg.INVALID_FUNCTION_SIGNATURE.getMsg((ASTNode)aggTree.getChild(0),reason));
  }
  r.convertedParameters=convertParameters(r.aggMethod,aggParameters);
  funcName=((mode == groupByDesc.Mode.PARTIAL1 || mode == groupByDesc.Mode.HASH || mode == groupByDesc.Mode.PARTIAL2) ? "terminatePartial" : "terminate");
  r.evalMethod=null;
  for (  Method m : r.evalClass.getMethods()) {
    if (m.getName().equalsIgnoreCase(funcName)) {
      r.evalMethod=m;
    }
  }
  if (r.evalMethod == null) {
    String reason="UDAF \"" + aggName + "\" does not have terminate()/terminatePartial() methods.";
    throw new SemanticException(ErrorMsg.INVALID_FUNCTION.getMsg((ASTNode)aggTree.getChild(0),reason));
  }
  r.retType=r.evalMethod.getReturnType();
  return r;
}
