{
  RowResolver groupByOutputRowResolver=groupByOperatorInfo.getRowResolver();
  RowResolver selectOutputRowResolver=new RowResolver();
  ArrayList<exprNodeDesc> selectCols=new ArrayList<exprNodeDesc>();
  CommonTree selectExpr=parseInfo.getSelForClause(dest);
  for (int i=0; i < selectExpr.getChildCount(); ++i) {
    CommonTree sel=(CommonTree)selectExpr.getChild(i).getChild(0);
    exprNodeDesc exp=genExprNodeDesc(sel,parseInfo.getAlias(),groupByOutputRowResolver);
    selectCols.add(exp);
    selectOutputRowResolver.put(parseInfo.getAlias(),sel.getText(),new ColumnInfo((Integer.valueOf(i)).toString(),String.class,false));
  }
  return new OperatorInfo(OperatorFactory.getAndMakeChild(new selectDesc(selectCols),new RowSchema(selectOutputRowResolver.getColumnInfos()),groupByOperatorInfo.getOp()),selectOutputRowResolver);
}
