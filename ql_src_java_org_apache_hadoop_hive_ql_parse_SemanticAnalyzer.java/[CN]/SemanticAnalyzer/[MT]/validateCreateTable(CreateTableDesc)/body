{
  if ((crtTblDesc.getCols() == null) || (crtTblDesc.getCols().size() == 0)) {
    if (StringUtils.isEmpty(crtTblDesc.getSerName()) || !SerDeUtils.shouldGetColsFromSerDe(crtTblDesc.getSerName())) {
      throw new SemanticException(ErrorMsg.INVALID_TBL_DDL_SERDE.getMsg());
    }
    return;
  }
  try {
    Class<?> origin=Class.forName(crtTblDesc.getOutputFormat(),true,JavaUtils.getClassLoader());
    Class<? extends HiveOutputFormat> replaced=HiveFileFormatUtils.getOutputFormatSubstitute(origin);
    if (replaced == null) {
      throw new SemanticException(ErrorMsg.INVALID_OUTPUT_FORMAT_TYPE.getMsg());
    }
  }
 catch (  ClassNotFoundException e) {
    throw new SemanticException(ErrorMsg.INVALID_OUTPUT_FORMAT_TYPE.getMsg());
  }
  List<String> colNames=validateColumnNameUniqueness(crtTblDesc.getCols());
  if (crtTblDesc.getBucketCols() != null) {
    Iterator<String> bucketCols=crtTblDesc.getBucketCols().iterator();
    while (bucketCols.hasNext()) {
      String bucketCol=bucketCols.next();
      boolean found=false;
      Iterator<String> colNamesIter=colNames.iterator();
      while (colNamesIter.hasNext()) {
        String colName=colNamesIter.next();
        if (bucketCol.equalsIgnoreCase(colName)) {
          found=true;
          break;
        }
      }
      if (!found) {
        throw new SemanticException(ErrorMsg.INVALID_COLUMN.getMsg());
      }
    }
  }
  if (crtTblDesc.getSortCols() != null) {
    Iterator<Order> sortCols=crtTblDesc.getSortCols().iterator();
    while (sortCols.hasNext()) {
      String sortCol=sortCols.next().getCol();
      boolean found=false;
      Iterator<String> colNamesIter=colNames.iterator();
      while (colNamesIter.hasNext()) {
        String colName=colNamesIter.next();
        if (sortCol.equalsIgnoreCase(colName)) {
          found=true;
          break;
        }
      }
      if (!found) {
        throw new SemanticException(ErrorMsg.INVALID_COLUMN.getMsg());
      }
    }
  }
  if (crtTblDesc.getPartCols() != null) {
    Iterator<FieldSchema> partColsIter=crtTblDesc.getPartCols().iterator();
    while (partColsIter.hasNext()) {
      String partCol=partColsIter.next().getName();
      Iterator<String> colNamesIter=colNames.iterator();
      while (colNamesIter.hasNext()) {
        String colName=unescapeIdentifier(colNamesIter.next());
        if (partCol.equalsIgnoreCase(colName)) {
          throw new SemanticException(ErrorMsg.COLUMN_REPEATED_IN_PARTITIONING_COLS.getMsg());
        }
      }
    }
  }
}
