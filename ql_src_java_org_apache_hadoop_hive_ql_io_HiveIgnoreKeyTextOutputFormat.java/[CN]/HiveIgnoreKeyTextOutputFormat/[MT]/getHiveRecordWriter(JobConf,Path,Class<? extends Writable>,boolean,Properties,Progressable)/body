{
  int rowSeparator=0;
  String rowSeparatorString=tableProperties.getProperty(serdeConstants.LINE_DELIM,"\n");
  try {
    rowSeparator=Byte.parseByte(rowSeparatorString);
  }
 catch (  NumberFormatException e) {
    rowSeparator=rowSeparatorString.charAt(0);
  }
  final int finalRowSeparator=rowSeparator;
  FileSystem fs=outPath.getFileSystem(jc);
  final OutputStream outStream=Utilities.createCompressedStream(jc,fs.create(outPath,progress),isCompressed);
  return new RecordWriter(){
    @Override public void write(    Writable r) throws IOException {
      if (r instanceof Text) {
        Text tr=(Text)r;
        outStream.write(tr.getBytes(),0,tr.getLength());
        outStream.write(finalRowSeparator);
      }
 else {
        BytesWritable bw=(BytesWritable)r;
        outStream.write(bw.get(),0,bw.getSize());
        outStream.write(finalRowSeparator);
      }
    }
    @Override public void close(    boolean abort) throws IOException {
      outStream.close();
    }
  }
;
}
