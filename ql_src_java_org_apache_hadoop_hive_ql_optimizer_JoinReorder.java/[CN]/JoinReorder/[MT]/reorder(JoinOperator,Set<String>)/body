{
  int count=joinOp.getParentOperators().size();
  int biggestPos=count - 1;
  int biggestSize=getOutputSize(joinOp.getParentOperators().get(biggestPos),bigTables);
  for (int i=0; i < count - 1; i++) {
    int currSize=getOutputSize(joinOp.getParentOperators().get(i),bigTables);
    if (currSize > biggestSize) {
      biggestSize=currSize;
      biggestPos=i;
    }
  }
  if (biggestPos != (count - 1)) {
    Byte[] tagOrder=joinOp.getConf().getTagOrder();
    Byte temp=tagOrder[biggestPos];
    tagOrder[biggestPos]=tagOrder[count - 1];
    tagOrder[count - 1]=temp;
    ((ReduceSinkOperator)joinOp.getParentOperators().get(biggestPos)).getConf().setTag(count - 1);
    ((ReduceSinkOperator)joinOp.getParentOperators().get(count - 1)).getConf().setTag(biggestPos);
  }
}
