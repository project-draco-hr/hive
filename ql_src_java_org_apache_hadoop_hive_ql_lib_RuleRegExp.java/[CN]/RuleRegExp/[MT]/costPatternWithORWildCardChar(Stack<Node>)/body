{
  int numElems=(stack != null ? stack.size() : 0);
  if (numElems == 0) {
    return -1;
  }
  Map<Integer,String> cachedNames=new HashMap<Integer,String>();
  int maxDepth=numElems;
  int maxLength=0;
  for (  String pattern : patternORWildChar) {
    int patLen=pattern.length();
    if (cachedNames.containsKey(patLen)) {
      if (pattern.contentEquals(cachedNames.get(patLen))) {
        return patLen;
      }
    }
 else     if (maxLength >= patLen) {
      continue;
    }
 else {
      StringBuilder name=new StringBuilder(patLen + numElems);
      if (maxLength != 0) {
        name.append(cachedNames.get(maxLength));
      }
      for (int pos=maxDepth - 1; pos >= 0; pos--) {
        String nodeName=stack.get(pos).getName() + "%";
        name.insert(0,nodeName);
        cachedNames.put(name.length(),name.toString());
        maxLength=name.length();
        maxDepth--;
        if (name.length() >= patLen) {
          if (pattern.contentEquals(name)) {
            return patLen;
          }
          break;
        }
      }
    }
  }
  return -1;
}
