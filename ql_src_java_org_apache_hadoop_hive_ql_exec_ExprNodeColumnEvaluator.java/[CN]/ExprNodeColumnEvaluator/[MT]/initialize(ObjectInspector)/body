{
  String[] names=expr.getColumn().split("\\.");
  String[] unionfields=names[0].split("\\:");
  if (names.length == 1 && unionfields.length == 1) {
    simpleCase=true;
    inspector=(StructObjectInspector)rowInspector;
    field=inspector.getStructFieldRef(names[0]);
    return outputOI=field.getFieldObjectInspector();
  }
  simpleCase=false;
  inspectors=new StructObjectInspector[names.length];
  fields=new StructField[names.length];
  unionField=new boolean[names.length];
  int unionIndex=-1;
  for (int i=0; i < names.length; i++) {
    if (i == 0) {
      inspectors[0]=(StructObjectInspector)rowInspector;
    }
 else {
      if (unionIndex != -1) {
        inspectors[i]=(StructObjectInspector)((UnionObjectInspector)fields[i - 1].getFieldObjectInspector()).getObjectInspectors().get(unionIndex);
      }
 else {
        inspectors[i]=(StructObjectInspector)fields[i - 1].getFieldObjectInspector();
      }
    }
    unionfields=names[i].split("\\:");
    fields[i]=inspectors[i].getStructFieldRef(unionfields[0]);
    if (unionfields.length > 1) {
      unionIndex=Integer.parseInt(unionfields[1]);
      unionField[i]=true;
    }
 else {
      unionIndex=-1;
      unionField[i]=false;
    }
  }
  return outputOI=fields[names.length - 1].getFieldObjectInspector();
}
