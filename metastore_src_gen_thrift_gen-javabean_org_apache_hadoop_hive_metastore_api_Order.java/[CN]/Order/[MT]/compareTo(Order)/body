{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetCol()).compareTo(other.isSetCol());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetCol()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.col,other.col);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetOrder()).compareTo(other.isSetOrder());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetOrder()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.order,other.order);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetNullOrder()).compareTo(other.isSetNullOrder());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetNullOrder()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.nullOrder,other.nullOrder);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
