{
  Object[] arr=(Object[])result;
  assertEquals(1,arr.length);
  if (expected == null) {
    assertEquals(key,null,arr[0]);
  }
 else {
    assertEquals(true,arr[0] instanceof Object[]);
    Object[] vals=(Object[])arr[0];
    assertEquals(2,vals.length);
    assertEquals(true,vals[0] instanceof LongWritable);
    LongWritable lw=(LongWritable)vals[0];
    assertFalse(lw.get() == 0L);
    if (vals[1] instanceof DoubleWritable) {
      DoubleWritable dw=(DoubleWritable)vals[1];
      assertEquals(key,(Double)expected,(Double)(dw.get() / lw.get()));
    }
 else     if (vals[1] instanceof HiveDecimalWritable) {
      HiveDecimalWritable hdw=(HiveDecimalWritable)vals[1];
      assertEquals(key,(HiveDecimal)expected,hdw.getHiveDecimal().divide(HiveDecimal.create(lw.get())));
    }
  }
}
