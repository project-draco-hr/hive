{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case SUCCESS:
      if (field.type == TType.MAP) {
{
          TMap _map61=iprot.readMapBegin();
          this.success=new HashMap<String,Type>(2 * _map61.size);
          for (int _i62=0; _i62 < _map61.size; ++_i62) {
            String _key63;
            Type _val64;
            _key63=iprot.readString();
            _val64=new Type();
            _val64.read(iprot);
            this.success.put(_key63,_val64);
          }
          iprot.readMapEnd();
        }
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case O2:
  if (field.type == TType.STRUCT) {
    this.o2=new MetaException();
    this.o2.read(iprot);
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
