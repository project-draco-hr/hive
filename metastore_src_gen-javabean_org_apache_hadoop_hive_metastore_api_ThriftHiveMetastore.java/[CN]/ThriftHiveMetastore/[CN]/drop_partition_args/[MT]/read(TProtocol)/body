{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == TType.STRING) {
        this.db_name=iprot.readString();
        this.__isset.db_name=true;
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == TType.STRING) {
    this.tbl_name=iprot.readString();
    this.__isset.tbl_name=true;
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == TType.LIST) {
{
  TList _list78=iprot.readListBegin();
  this.part_vals=new ArrayList<String>(_list78.size);
  for (int _i79=0; _i79 < _list78.size; ++_i79) {
    String _elem80=null;
    _elem80=iprot.readString();
    this.part_vals.add(_elem80);
  }
  iprot.readListEnd();
}
this.__isset.part_vals=true;
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
case 4:
if (field.type == TType.BOOL) {
this.deleteData=iprot.readBool();
this.__isset.deleteData=true;
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
}
