{
  ObjectInspector javaStringOI=PrimitiveObjectInspectorFactory.getPrimitiveJavaObjectInspector(PrimitiveCategory.STRING);
  Object[] data=new Object[components.length + 2];
  List<ObjectInspector> fois=new ArrayList<ObjectInspector>(components.length + 2);
  boolean[] endPrefixes=new boolean[components.length + 2];
  data[0]=dbName;
  fois.add(javaStringOI);
  endPrefixes[0]=false;
  data[1]=tableName;
  fois.add(javaStringOI);
  endPrefixes[1]=false;
  for (int i=0; i < components.length; i++) {
    data[i + 2]=components[i];
    TypeInfo expectedType=TypeInfoUtils.getTypeInfoFromTypeString(partTypes.get(i));
    ObjectInspector outputOI=TypeInfoUtils.getStandardJavaObjectInspectorFromTypeInfo(expectedType);
    fois.add(outputOI);
  }
  Output output=new Output();
  try {
    BinarySortableSerDeWithEndPrefix.serializeStruct(output,data,fois,endPrefix);
  }
 catch (  SerDeException e) {
    throw new RuntimeException("Cannot serialize partition " + StringUtils.join(components,","));
  }
  return Arrays.copyOf(output.getData(),output.getLength());
}
