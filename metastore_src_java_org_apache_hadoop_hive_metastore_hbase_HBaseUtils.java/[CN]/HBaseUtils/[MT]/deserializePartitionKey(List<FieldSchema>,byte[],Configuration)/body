{
  StringBuffer names=new StringBuffer();
  names.append("dbName,tableName,");
  StringBuffer types=new StringBuffer();
  types.append("string,string,");
  for (int i=0; i < partitions.size(); i++) {
    names.append(partitions.get(i).getName());
    types.append(TypeInfoUtils.getTypeInfoFromTypeString(partitions.get(i).getType()));
    if (i != partitions.size() - 1) {
      names.append(",");
      types.append(",");
    }
  }
  BinarySortableSerDe serDe=new BinarySortableSerDe();
  Properties props=new Properties();
  props.setProperty(serdeConstants.LIST_COLUMNS,names.toString());
  props.setProperty(serdeConstants.LIST_COLUMN_TYPES,types.toString());
  try {
    serDe.initialize(new Configuration(),props);
    List deserializedkeys=((List)serDe.deserialize(new BytesWritable(key))).subList(2,partitions.size() + 2);
    List<String> partitionKeys=new ArrayList<String>();
    for (    Object deserializedKey : deserializedkeys) {
      partitionKeys.add(deserializedKey != null ? deserializedKey.toString() : HiveConf.getVar(conf,HiveConf.ConfVars.DEFAULTPARTITIONNAME));
    }
    return partitionKeys;
  }
 catch (  SerDeException e) {
    throw new RuntimeException("Error when deserialize key",e);
  }
}
