{
  byte[][] result=new byte[2][];
  result[0]=buildKey(table.getDbName(),table.getTableName());
  HbaseMetastoreProto.Table.Builder builder=HbaseMetastoreProto.Table.newBuilder();
  if (table.getOwner() != null)   builder.setOwner(table.getOwner());
  builder.setCreateTime(table.getCreateTime()).setLastAccessTime(table.getLastAccessTime()).setRetention(table.getRetention());
  if (table.getSd().getLocation() != null)   builder.setLocation(table.getSd().getLocation());
  if (table.getSd().getParameters() != null) {
    builder.setSdParameters(buildParameters(table.getSd().getParameters()));
  }
  builder.setSdHash(ByteString.copyFrom(sdHash));
  if (table.getPartitionKeys() != null) {
    builder.addAllPartitionKeys(convertFieldSchemaListToProto(table.getPartitionKeys()));
  }
  if (table.getParameters() != null) {
    builder.setParameters(buildParameters(table.getParameters()));
  }
  if (table.getViewOriginalText() != null) {
    builder.setViewOriginalText(table.getViewOriginalText());
  }
  if (table.getViewExpandedText() != null) {
    builder.setViewExpandedText(table.getViewExpandedText());
  }
  if (table.getTableType() != null)   builder.setTableType(table.getTableType());
  if (table.getPrivileges() != null) {
    builder.setPrivileges(buildPrincipalPrivilegeSet(table.getPrivileges()));
  }
  builder.setIsTemporary(table.isTemporary());
  result[1]=builder.build().toByteArray();
  return result;
}
