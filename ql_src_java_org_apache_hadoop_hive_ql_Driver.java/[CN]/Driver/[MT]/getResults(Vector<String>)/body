{
  if (plan != null && plan.getPlan().getFetchTask() != null) {
    BaseSemanticAnalyzer sem=plan.getPlan();
    if (!sem.getFetchTaskInit()) {
      sem.setFetchTaskInit(true);
      sem.getFetchTask().initialize(conf);
    }
    FetchTask ft=(FetchTask)sem.getFetchTask();
    ft.setMaxRows(maxRows);
    return ft.fetch(res);
  }
  if (resStream == null)   resStream=ctx.getStream();
  if (resStream == null)   return false;
  int numRows=0;
  String row=null;
  while (numRows < maxRows) {
    if (resStream == null) {
      if (numRows > 0)       return true;
 else       return false;
    }
    bos.reset();
    Utilities.streamStatus ss;
    try {
      ss=Utilities.readColumn(resStream,bos);
      if (bos.getCount() > 0)       row=new String(bos.getData(),0,bos.getCount(),"UTF-8");
 else       if (ss == Utilities.streamStatus.TERMINATED)       row=new String();
      if (row != null) {
        numRows++;
        res.add(row);
      }
    }
 catch (    IOException e) {
      console.printError("FAILED: Unexpected IO exception : " + e.getMessage());
      res=null;
      return false;
    }
    if (ss == Utilities.streamStatus.EOF)     resStream=ctx.getStream();
  }
  return true;
}
