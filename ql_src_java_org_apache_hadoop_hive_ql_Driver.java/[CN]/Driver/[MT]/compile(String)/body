{
  if (plan != null) {
    close();
    plan=null;
  }
  TaskFactory.resetId();
  try {
    ctx=new Context(conf);
    ParseDriver pd=new ParseDriver();
    ASTNode tree=pd.parse(command,ctx);
    tree=ParseUtils.findRootNonNullToken(tree);
    BaseSemanticAnalyzer sem=SemanticAnalyzerFactory.get(conf,tree);
    sem.analyze(tree,ctx);
    LOG.info("Semantic Analysis Completed");
    sem.validate();
    plan=new QueryPlan(command,sem);
    return (0);
  }
 catch (  SemanticException e) {
    errorMessage="FAILED: Error in semantic analysis: " + e.getMessage();
    SQLState=ErrorMsg.findSQLState(e.getMessage());
    console.printError(errorMessage,"\n" + org.apache.hadoop.util.StringUtils.stringifyException(e));
    return (10);
  }
catch (  ParseException e) {
    errorMessage="FAILED: Parse Error: " + e.getMessage();
    SQLState=ErrorMsg.findSQLState(e.getMessage());
    console.printError(errorMessage,"\n" + org.apache.hadoop.util.StringUtils.stringifyException(e));
    return (11);
  }
catch (  Exception e) {
    errorMessage="FAILED: Unknown exception: " + e.getMessage();
    SQLState=ErrorMsg.findSQLState(e.getMessage());
    console.printError(errorMessage,"\n" + org.apache.hadoop.util.StringUtils.stringifyException(e));
    return (12);
  }
}
