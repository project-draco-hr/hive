{
  if (resStream == null)   resStream=ctx.getStream();
  if (resStream == null)   return false;
  int sizeArr=128;
  char[] tmpCharArr=new char[sizeArr];
  for (int numRows=0; numRows < MAX_ROWS; numRows++) {
    if (resStream == null) {
      if (numRows > 0) {
        return true;
      }
 else {
        return false;
      }
    }
    boolean eof=false;
    Vector<String> row=new Vector<String>();
    String col;
    int len=0;
    while (true) {
      char c;
      try {
        int i=resStream.read();
        if (i == -1) {
          eof=true;
          break;
        }
        c=(char)i;
        if (c == terminator) {
          col=new String(tmpCharArr,0,len);
          len=0;
          row.add(col.equals(Utilities.nullStringStorage) ? null : col);
          res.add(row);
          break;
        }
 else         if (c == separator) {
          col=new String(tmpCharArr,0,len);
          len=0;
          row.add(col.equals(Utilities.nullStringStorage) ? null : col);
        }
 else {
          if (sizeArr == len) {
            char[] tmp=new char[2 * sizeArr];
            sizeArr*=2;
            for (int idx=0; idx < len; idx++)             tmp[idx]=tmpCharArr[idx];
            tmpCharArr=tmp;
          }
          tmpCharArr[len++]=c;
        }
      }
 catch (      java.io.IOException e) {
        console.printError("FAILED: Unknown exception : " + e.getMessage(),"\n" + org.apache.hadoop.util.StringUtils.stringifyException(e));
        return false;
      }
    }
    if (eof) {
      if (len > 0) {
        col=new String(tmpCharArr,0,len);
        len=0;
        row.add(col.equals(Utilities.nullStringStorage) ? null : col);
        res.add(row);
      }
      resStream=ctx.getStream();
    }
  }
  return true;
}
