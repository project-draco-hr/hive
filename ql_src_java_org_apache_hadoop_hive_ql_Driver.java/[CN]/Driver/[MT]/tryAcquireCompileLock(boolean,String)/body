{
  final ReentrantLock compileLock=isParallelEnabled ? SessionState.get().getCompileLock() : globalCompileLock;
  long maxCompileLockWaitTime=HiveConf.getTimeVar(this.conf,ConfVars.HIVE_SERVER2_COMPILE_LOCK_TIMEOUT,TimeUnit.SECONDS);
  final String lockAcquiredMsg="Acquired the compile lock.";
  try {
    if (compileLock.tryLock(0,TimeUnit.SECONDS)) {
      LOG.debug(lockAcquiredMsg);
      return compileLock;
    }
  }
 catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
    if (LOG.isDebugEnabled()) {
      LOG.debug("Interrupted Exception ignored",e);
    }
    return null;
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Waiting to acquire compile lock: " + command);
  }
  OperationLog ol=OperationLog.getCurrentOperationLog();
  if (ol != null) {
    ol.writeOperationLog(LoggingLevel.EXECUTION,"Waiting to acquire compile lock.\n");
  }
  if (maxCompileLockWaitTime > 0) {
    try {
      if (!compileLock.tryLock(maxCompileLockWaitTime,TimeUnit.SECONDS)) {
        errorMessage=ErrorMsg.COMPILE_LOCK_TIMED_OUT.getErrorCodedMsg();
        LOG.error(errorMessage + ": " + command);
        return null;
      }
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
      if (LOG.isDebugEnabled()) {
        LOG.debug("Interrupted Exception ignored",e);
      }
      return null;
    }
  }
 else {
    compileLock.lock();
  }
  LOG.debug(lockAcquiredMsg);
  if (ol != null) {
    ol.writeOperationLog(LoggingLevel.EXECUTION,lockAcquiredMsg + "\n");
  }
  return compileLock;
}
