{
  if (SessionState.get() != null) {
    SessionState.get().getHiveHistory().startTask(queryId,tsk,tsk.getClass().getName());
  }
  if (tsk.isMapRedTask() && !(tsk instanceof ConditionalTask)) {
    if (noName) {
      conf.setVar(HiveConf.ConfVars.HADOOPJOBNAME,jobname + "(" + tsk.getId()+ ")");
    }
    conf.set("mapreduce.workflow.node.name",tsk.getId());
    Utilities.setWorkflowAdjacencies(conf,plan);
    cxt.incCurJobNo(1);
    console.printInfo("Launching Job " + cxt.getCurJobNo() + " out of "+ jobs);
  }
  tsk.initialize(conf,plan,cxt);
  TaskResult tskRes=new TaskResult();
  TaskRunner tskRun=new TaskRunner(tsk,tskRes);
  cxt.launching(tskRun);
  if (HiveConf.getBoolVar(conf,HiveConf.ConfVars.EXECPARALLEL) && tsk.isMapRedTask()) {
    tskRun.start();
  }
 else {
    tskRun.runSequential();
  }
  return tskRun;
}
