{
  int ret;
  Metrics metrics=MetricsFactory.getInstance();
  if (metrics != null) {
    metrics.incrementCounter(MetricsConstant.WAITING_COMPILE_OPS,1);
  }
  final ReentrantLock compileLock=tryAcquireCompileLock(isParallelEnabled,command);
  if (compileLock == null) {
    return ErrorMsg.COMPILE_LOCK_TIMED_OUT.getErrorCode();
  }
  try {
    if (metrics != null) {
      metrics.decrementCounter(MetricsConstant.WAITING_COMPILE_OPS,1);
    }
    ret=compile(command);
  }
  finally {
    compileLock.unlock();
  }
  if (ret != 0) {
    try {
      releaseLocksAndCommitOrRollback(false,null);
    }
 catch (    LockException e) {
      LOG.warn("Exception in releasing locks. " + org.apache.hadoop.util.StringUtils.stringifyException(e));
    }
  }
  PerfLogger perfLogger=SessionState.getPerfLogger();
  queryDisplay.setPerfLogStarts(QueryDisplay.Phase.COMPILATION,perfLogger.getStartTimes());
  queryDisplay.setPerfLogEnds(QueryDisplay.Phase.COMPILATION,perfLogger.getEndTimes());
  return ret;
}
