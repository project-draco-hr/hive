{
  boolean isParallelEnabled=SessionState.get().isHiveServerQuery() && this.isParallelEnabled;
  int ret;
  final ReentrantLock compileLock=isParallelEnabled ? SessionState.get().getCompileLock() : globalCompileLock;
  compileLock.lock();
  try {
    if (isParallelEnabled && LOG.isDebugEnabled()) {
      LOG.debug("Entering compile: " + command);
    }
    ret=compile(command);
    if (isParallelEnabled && LOG.isDebugEnabled()) {
      LOG.debug("Done with compile: " + command);
    }
  }
  finally {
    compileLock.unlock();
  }
  if (ret != 0) {
    try {
      releaseLocksAndCommitOrRollback(ctx.getHiveLocks(),false);
    }
 catch (    LockException e) {
      LOG.warn("Exception in releasing locks. " + org.apache.hadoop.util.StringUtils.stringifyException(e));
    }
  }
  return ret;
}
