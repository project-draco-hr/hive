{
  List<LockObject> locks=new LinkedList<LockObject>();
  HiveLockObjectData lockData=new HiveLockObjectData(plan.getQueryId(),String.valueOf(System.currentTimeMillis()),"IMPLICIT");
  if (t != null) {
    locks.add(new LockObject(new HiveLockObject(t,lockData),mode));
    return locks;
  }
  if (p != null) {
    locks.add(new LockObject(new HiveLockObject(p,lockData),mode));
    mode=HiveLockMode.SHARED;
    String name=p.getName();
    if (p instanceof DummyPartition) {
      name=p.getName().split("@")[2];
    }
    String partName=name;
    String partialName="";
    String[] partns=name.split("/");
    for (int idx=0; idx < partns.length - 1; idx++) {
      String partn=partns[idx];
      partialName+=partialName + partn;
      try {
        locks.add(new LockObject(new HiveLockObject(new DummyPartition(p.getTable(),p.getTable().getDbName() + "@" + p.getTable().getTableName()+ "@"+ partialName),lockData),mode));
        partialName+="/";
      }
 catch (      HiveException e) {
        throw new SemanticException(e.getMessage());
      }
    }
    locks.add(new LockObject(new HiveLockObject(p.getTable(),lockData),mode));
  }
  return locks;
}
