{
  errorMessage=null;
  SQLState=null;
  downstreamError=null;
  if (!validateConfVariables()) {
    return new CommandProcessorResponse(12,errorMessage,SQLState);
  }
  HiveDriverRunHookContext hookContext=new HiveDriverRunHookContextImpl(conf,command);
  List<HiveDriverRunHook> driverRunHooks;
  try {
    driverRunHooks=getHooks(HiveConf.ConfVars.HIVE_DRIVER_RUN_HOOKS,HiveDriverRunHook.class);
    for (    HiveDriverRunHook driverRunHook : driverRunHooks) {
      driverRunHook.preDriverRun(hookContext);
    }
  }
 catch (  Exception e) {
    errorMessage="FAILED: Hive Internal Error: " + Utilities.getNameMessage(e);
    SQLState=ErrorMsg.findSQLState(e.getMessage());
    downstreamError=e;
    console.printError(errorMessage + "\n" + org.apache.hadoop.util.StringUtils.stringifyException(e));
    return new CommandProcessorResponse(12,errorMessage,SQLState);
  }
  PerfLogger perfLogger=PerfLogger.getPerfLogger(true);
  perfLogger.PerfLogBegin(CLASS_NAME,PerfLogger.DRIVER_RUN);
  perfLogger.PerfLogBegin(CLASS_NAME,PerfLogger.TIME_TO_SUBMIT);
  int ret;
synchronized (compileMonitor) {
    ret=compile(command);
  }
  if (ret != 0) {
    releaseLocks(ctx.getHiveLocks());
    return new CommandProcessorResponse(ret,errorMessage,SQLState);
  }
  boolean requireLock=false;
  boolean ckLock=checkLockManager();
  if (ckLock) {
    boolean lockOnlyMapred=HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_LOCK_MAPRED_ONLY);
    if (lockOnlyMapred) {
      Queue<Task<? extends Serializable>> taskQueue=new LinkedList<Task<? extends Serializable>>();
      taskQueue.addAll(plan.getRootTasks());
      while (taskQueue.peek() != null) {
        Task<? extends Serializable> tsk=taskQueue.remove();
        requireLock=requireLock || tsk.requireLock();
        if (requireLock) {
          break;
        }
        if (tsk instanceof ConditionalTask) {
          taskQueue.addAll(((ConditionalTask)tsk).getListTasks());
        }
        if (tsk.getChildTasks() != null) {
          taskQueue.addAll(tsk.getChildTasks());
        }
      }
    }
 else {
      requireLock=true;
    }
  }
  if (requireLock) {
    ret=acquireReadWriteLocks();
    if (ret != 0) {
      releaseLocks(ctx.getHiveLocks());
      return new CommandProcessorResponse(ret,errorMessage,SQLState);
    }
  }
  ret=execute();
  if (ret != 0) {
    releaseLocks(ctx.getHiveLocks());
    return new CommandProcessorResponse(ret,errorMessage,SQLState);
  }
  releaseLocks(ctx.getHiveLocks());
  perfLogger.PerfLogEnd(CLASS_NAME,PerfLogger.DRIVER_RUN);
  perfLogger.close(LOG,plan);
  try {
    for (    HiveDriverRunHook driverRunHook : driverRunHooks) {
      driverRunHook.postDriverRun(hookContext);
    }
  }
 catch (  Exception e) {
    errorMessage="FAILED: Hive Internal Error: " + Utilities.getNameMessage(e);
    SQLState=ErrorMsg.findSQLState(e.getMessage());
    downstreamError=e;
    console.printError(errorMessage + "\n" + org.apache.hadoop.util.StringUtils.stringifyException(e));
    return new CommandProcessorResponse(12,errorMessage,SQLState);
  }
  return new CommandProcessorResponse(ret);
}
