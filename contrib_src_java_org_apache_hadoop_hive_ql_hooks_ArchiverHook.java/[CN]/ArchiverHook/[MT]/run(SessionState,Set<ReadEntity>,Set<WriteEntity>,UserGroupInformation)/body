{
  for (  ReadEntity re : inputs) {
    boolean isArchived=false;
    if (re.getParameters() != null) {
      String archF=re.getParameters().get(ARCHIVE_FLAG);
      if (archF != null) {
        isArchived=archF.equals("true");
      }
    }
    if (isArchived)     throw new Exception("Path: " + re.getLocation().toString() + " needs to be unarchived.");
    ReadEntity.Type typ=re.getType();
switch (typ) {
case TABLE:
      Table t=re.getTable().getTTable();
    if (setLastQueryTime(t)) {
      LOG.debug("Setting LastQueryTime for table " + re);
      ms.alter_table(MetaStoreUtils.DEFAULT_DATABASE_NAME,t.getTableName(),t);
    }
  break;
case PARTITION:
Partition p=re.getPartition().getTPartition();
if (setLastQueryTime(p)) {
LOG.debug("Setting LastQueryTime for partition " + re);
ms.alter_partition(MetaStoreUtils.DEFAULT_DATABASE_NAME,p.getTableName(),p);
}
break;
default :
throw new Exception("Unknown type for input: " + re.toString());
}
}
for (WriteEntity we : outputs) {
WriteEntity.Type typ=we.getType();
boolean q, a;
switch (typ) {
case TABLE:
Table t=we.getTable().getTTable();
q=setLastQueryTime(t);
a=setArchiveFlag(t);
if (q || a) {
LOG.debug("Altering dest table for archiver " + we);
ms.alter_table(MetaStoreUtils.DEFAULT_DATABASE_NAME,t.getTableName(),t);
}
break;
case PARTITION:
Partition p=we.getPartition().getTPartition();
q=setLastQueryTime(p);
a=setArchiveFlag(p);
if (q || a) {
if (ms.getPartition(MetaStoreUtils.DEFAULT_DATABASE_NAME,p.getTableName(),p.getValues()) != null) {
LOG.debug("Altering dest partition for archiver " + we);
ms.alter_partition(MetaStoreUtils.DEFAULT_DATABASE_NAME,p.getTableName(),p);
}
}
break;
case DFS_DIR:
case LOCAL_DIR:
break;
default :
throw new Exception("Unknown type for output: " + we.toString());
}
}
}
