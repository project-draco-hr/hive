{
  Set<Operator<?>> ops=new HashSet<Operator<?>>();
  if (work instanceof MapWork) {
    Collection<Operator<?>> opSet=((MapWork)work).getAliasToWork().values();
    Stack<Operator<?>> opStack=new Stack<Operator<?>>();
    opStack.addAll(opSet);
    while (!opStack.empty()) {
      Operator<?> op=opStack.pop();
      ops.add(op);
      if (op.getChildOperators() != null) {
        opStack.addAll(op.getChildOperators());
      }
    }
  }
 else {
    ops.addAll(work.getAllOperators());
  }
  Set<Operator<? extends OperatorDesc>> matchingOps=new HashSet<Operator<? extends OperatorDesc>>();
  for (  Operator<? extends OperatorDesc> op : ops) {
    if (clazz.isInstance(op)) {
      matchingOps.add(op);
    }
  }
  return matchingOps;
}
