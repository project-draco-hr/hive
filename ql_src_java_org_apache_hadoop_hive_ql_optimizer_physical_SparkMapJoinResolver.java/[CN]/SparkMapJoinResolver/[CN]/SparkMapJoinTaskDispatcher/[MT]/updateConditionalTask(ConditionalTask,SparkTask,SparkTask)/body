{
  ConditionalWork conditionalWork=conditionalTask.getWork();
  SparkWork originWork=originalTask.getWork();
  SparkWork newWork=newTask.getWork();
  List<Task<? extends Serializable>> listTask=conditionalTask.getListTasks();
  List<Serializable> listWork=(List<Serializable>)conditionalWork.getListWorks();
  int taskIndex=listTask.indexOf(originalTask);
  int workIndex=listWork.indexOf(originWork);
  if (taskIndex < 0 || workIndex < 0) {
    return;
  }
  listTask.set(taskIndex,newTask);
  listWork.set(workIndex,newWork);
  ConditionalResolver resolver=conditionalTask.getResolver();
  if (resolver instanceof ConditionalResolverSkewJoin) {
    ConditionalResolverSkewJoin.ConditionalResolverSkewJoinCtx context=(ConditionalResolverSkewJoin.ConditionalResolverSkewJoinCtx)conditionalTask.getResolverCtx();
    HashMap<Path,Task<? extends Serializable>> bigKeysDirToTaskMap=context.getDirToTaskMap();
    HashMap<Path,Task<? extends Serializable>> newbigKeysDirToTaskMap=new HashMap<Path,Task<? extends Serializable>>();
    for (    Map.Entry<Path,Task<? extends Serializable>> entry : bigKeysDirToTaskMap.entrySet()) {
      Task<? extends Serializable> task=entry.getValue();
      Path bigKeyDir=entry.getKey();
      if (task.equals(originalTask)) {
        newbigKeysDirToTaskMap.put(bigKeyDir,newTask);
      }
 else {
        newbigKeysDirToTaskMap.put(bigKeyDir,task);
      }
    }
    context.setDirToTaskMap(newbigKeysDirToTaskMap);
    if (context.getNoSkewTask() != null && context.getNoSkewTask().equals(originalTask)) {
      List<Task<? extends Serializable>> noSkewTask=new ArrayList<>();
      noSkewTask.add(newTask);
      context.setNoSkewTask(noSkewTask);
    }
  }
}
