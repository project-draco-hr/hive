{
  Task<? extends Serializable> currentTask=(Task<? extends Serializable>)nd;
  if (currentTask instanceof SparkTask) {
    SparkTask sparkTask=(SparkTask)currentTask;
    SparkWork sparkWork=sparkTask.getWork();
    generateLocalWork(sparkTask);
    dependencyGraph.put(sparkWork,new ArrayList<SparkWork>());
    Set<BaseWork> leaves=sparkWork.getLeaves();
    for (    BaseWork leaf : leaves) {
      moveWork(sparkWork,leaf,sparkWork);
    }
    for (    SparkWork newSparkWork : sparkWorkMap.values()) {
      for (      BaseWork work : newSparkWork.getAllWorkUnsorted()) {
        sparkWork.remove(work);
      }
    }
    Map<SparkWork,SparkTask> createdTaskMap=new HashMap<SparkWork,SparkTask>();
    for (    SparkWork work : dependencyGraph.keySet()) {
      createSparkTask(sparkTask,work,createdTaskMap);
    }
  }
  return null;
}
