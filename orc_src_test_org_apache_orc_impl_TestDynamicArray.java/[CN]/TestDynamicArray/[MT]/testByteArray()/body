{
  DynamicByteArray dba=new DynamicByteArray(3,10);
  dba.add((byte)0);
  dba.add((byte)1);
  dba.set(3,(byte)3);
  dba.set(2,(byte)2);
  dba.add((byte)4);
  assertEquals("{0,1,2,3,4}",dba.toString());
  assertEquals(5,dba.size());
  byte[] val;
  val=new byte[0];
  assertEquals(0,dba.compare(val,0,0,2,0));
  assertEquals(-1,dba.compare(val,0,0,2,1));
  val=new byte[]{3,42};
  assertEquals(1,dba.compare(val,0,1,2,0));
  assertEquals(1,dba.compare(val,0,1,2,1));
  assertEquals(0,dba.compare(val,0,1,3,1));
  assertEquals(-1,dba.compare(val,0,1,3,2));
  assertEquals(1,dba.compare(val,0,2,3,1));
  val=new byte[256];
  for (int b=-128; b < 128; ++b) {
    dba.add((byte)b);
    val[b + 128]=(byte)b;
  }
  assertEquals(0,dba.compare(val,0,256,5,256));
  assertEquals(1,dba.compare(val,0,1,0,1));
  assertEquals(1,dba.compare(val,254,1,0,1));
  assertEquals(1,dba.compare(val,120,1,64,1));
  val=new byte[1024];
  Random rand=new Random(1701);
  for (int i=0; i < val.length; ++i) {
    rand.nextBytes(val);
  }
  dba.add(val,0,1024);
  assertEquals(1285,dba.size());
  assertEquals(0,dba.compare(val,0,1024,261,1024));
}
