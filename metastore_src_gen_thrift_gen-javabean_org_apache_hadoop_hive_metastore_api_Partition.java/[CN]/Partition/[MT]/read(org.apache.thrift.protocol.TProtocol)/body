{
  org.apache.thrift.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift.protocol.TType.LIST) {
{
          org.apache.thrift.protocol.TList _list79=iprot.readListBegin();
          this.values=new ArrayList<String>(_list79.size);
          for (int _i80=0; _i80 < _list79.size; ++_i80) {
            String _elem81;
            _elem81=iprot.readString();
            this.values.add(_elem81);
          }
          iprot.readListEnd();
        }
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift.protocol.TType.STRING) {
    this.dbName=iprot.readString();
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift.protocol.TType.STRING) {
this.tableName=iprot.readString();
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 4:
if (field.type == org.apache.thrift.protocol.TType.I32) {
this.createTime=iprot.readI32();
setCreateTimeIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 5:
if (field.type == org.apache.thrift.protocol.TType.I32) {
this.lastAccessTime=iprot.readI32();
setLastAccessTimeIsSet(true);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 6:
if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
this.sd=new StorageDescriptor();
this.sd.read(iprot);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 7:
if (field.type == org.apache.thrift.protocol.TType.MAP) {
{
org.apache.thrift.protocol.TMap _map82=iprot.readMapBegin();
this.parameters=new HashMap<String,String>(2 * _map82.size);
for (int _i83=0; _i83 < _map82.size; ++_i83) {
String _key84;
String _val85;
_key84=iprot.readString();
_val85=iprot.readString();
this.parameters.put(_key84,_val85);
}
iprot.readMapEnd();
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
case 8:
if (field.type == org.apache.thrift.protocol.TType.STRUCT) {
this.privileges=new PrincipalPrivilegeSet();
this.privileges.read(iprot);
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
