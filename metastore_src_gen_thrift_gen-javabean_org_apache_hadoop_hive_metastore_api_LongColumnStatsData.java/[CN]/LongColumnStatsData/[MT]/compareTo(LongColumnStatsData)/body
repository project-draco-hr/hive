{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetLowValue()).compareTo(other.isSetLowValue());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetLowValue()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.lowValue,other.lowValue);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetHighValue()).compareTo(other.isSetHighValue());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetHighValue()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.highValue,other.highValue);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetNumNulls()).compareTo(other.isSetNumNulls());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetNumNulls()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.numNulls,other.numNulls);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetNumDVs()).compareTo(other.isSetNumDVs());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetNumDVs()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.numDVs,other.numDVs);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
