{
  if (udf instanceof GenericUDFOPAnd) {
    for (int i=0; i < 2; i++) {
      ExprNodeDesc childExpr=newExprs.get(i);
      ExprNodeDesc other=newExprs.get(Math.abs(i - 1));
      if (childExpr instanceof ExprNodeConstantDesc) {
        ExprNodeConstantDesc c=(ExprNodeConstantDesc)childExpr;
        if (Boolean.TRUE.equals(c.getValue())) {
          return other;
        }
 else {
          return childExpr;
        }
      }
 else       if (childExpr instanceof ExprNodeGenericFuncDesc && ((ExprNodeGenericFuncDesc)childExpr).getGenericUDF() instanceof GenericUDFOPNotNull && childExpr.getChildren().get(0) instanceof ExprNodeColumnDesc&& other instanceof ExprNodeGenericFuncDesc&& ((ExprNodeGenericFuncDesc)other).getGenericUDF() instanceof GenericUDFBaseCompare&& other.getChildren().size() == 2) {
        ExprNodeColumnDesc colDesc=getColumnExpr(other.getChildren().get(0));
        if (null == colDesc) {
          colDesc=getColumnExpr(other.getChildren().get(1));
        }
        if (null != colDesc && colDesc.isSame(childExpr.getChildren().get(0))) {
          return other;
        }
      }
    }
  }
  if (udf instanceof GenericUDFOPOr) {
    for (int i=0; i < 2; i++) {
      ExprNodeDesc childExpr=newExprs.get(i);
      if (childExpr instanceof ExprNodeConstantDesc) {
        ExprNodeConstantDesc c=(ExprNodeConstantDesc)childExpr;
        if (Boolean.FALSE.equals(c.getValue())) {
          return newExprs.get(Math.abs(i - 1));
        }
 else {
          return childExpr;
        }
      }
    }
  }
  if (udf instanceof GenericUDFWhen) {
    if (!(newExprs.size() == 2 || newExprs.size() == 3)) {
      return null;
    }
    ExprNodeDesc thenExpr=newExprs.get(1);
    if (thenExpr instanceof ExprNodeNullDesc && (newExprs.size() == 2 || newExprs.get(2) instanceof ExprNodeNullDesc)) {
      return thenExpr;
    }
    ExprNodeDesc elseExpr=newExprs.size() == 3 ? newExprs.get(2) : new ExprNodeConstantDesc(newExprs.get(2).getTypeInfo(),null);
    ExprNodeDesc whenExpr=newExprs.get(0);
    if (whenExpr instanceof ExprNodeConstantDesc) {
      Boolean whenVal=(Boolean)((ExprNodeConstantDesc)whenExpr).getValue();
      return (whenVal == null || Boolean.FALSE.equals(whenVal)) ? elseExpr : thenExpr;
    }
    if (thenExpr instanceof ExprNodeConstantDesc && elseExpr instanceof ExprNodeConstantDesc) {
      ExprNodeConstantDesc constThen=(ExprNodeConstantDesc)thenExpr;
      ExprNodeConstantDesc constElse=(ExprNodeConstantDesc)elseExpr;
      Object thenVal=constThen.getValue();
      Object elseVal=constElse.getValue();
      if (thenVal == null) {
        return elseVal == null ? thenExpr : null;
      }
 else       if (thenVal.equals(elseVal)) {
        return thenExpr;
      }
 else       if (thenVal instanceof Boolean && elseVal instanceof Boolean) {
        return Boolean.TRUE.equals(thenVal) ? newExprs.get(0) : ExprNodeGenericFuncDesc.newInstance(new GenericUDFOPNot(),newExprs.subList(0,1));
      }
 else {
        return null;
      }
    }
  }
  if (udf instanceof GenericUDFCase) {
    if (!(newExprs.size() == 3 || newExprs.size() == 4)) {
      return null;
    }
    ExprNodeDesc thenExpr=newExprs.get(2);
    if (thenExpr instanceof ExprNodeNullDesc && (newExprs.size() == 3 || newExprs.get(3) instanceof ExprNodeNullDesc)) {
      return thenExpr;
    }
    ExprNodeDesc elseExpr=newExprs.size() == 4 ? newExprs.get(3) : new ExprNodeConstantDesc(newExprs.get(2).getTypeInfo(),null);
    if (thenExpr instanceof ExprNodeConstantDesc && elseExpr instanceof ExprNodeConstantDesc) {
      ExprNodeConstantDesc constThen=(ExprNodeConstantDesc)thenExpr;
      ExprNodeConstantDesc constElse=(ExprNodeConstantDesc)elseExpr;
      Object thenVal=constThen.getValue();
      Object elseVal=constElse.getValue();
      if (thenVal == null) {
        return elseVal == null ? thenExpr : null;
      }
 else       if (thenVal.equals(elseVal)) {
        return thenExpr;
      }
 else       if (thenVal instanceof Boolean && elseVal instanceof Boolean) {
        return Boolean.TRUE.equals(thenVal) ? ExprNodeGenericFuncDesc.newInstance(new GenericUDFOPEqual(),newExprs.subList(0,2)) : ExprNodeGenericFuncDesc.newInstance(new GenericUDFOPNotEqual(),newExprs.subList(0,2));
      }
 else {
        return null;
      }
    }
  }
  return null;
}
