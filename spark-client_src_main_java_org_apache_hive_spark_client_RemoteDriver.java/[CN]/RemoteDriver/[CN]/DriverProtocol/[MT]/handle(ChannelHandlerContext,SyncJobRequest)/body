{
  if (jc == null) {
synchronized (jcLock) {
      while (jc == null) {
        jcLock.wait();
        if (!running) {
          throw new IllegalStateException("Remote context is shutting down.");
        }
      }
    }
  }
  jc.setMonitorCb(new MonitorCallback(){
    @Override public void call(    JavaFutureAction<?> future,    SparkCounters sparkCounters,    Set<Integer> cachedRDDIds){
      throw new IllegalStateException("JobContext.monitor() is not available for synchronous jobs.");
    }
  }
);
  try {
    return msg.job.call(jc);
  }
  finally {
    jc.setMonitorCb(null);
  }
}
