{
  AccumuloSerDe accumuloSerDe=new AccumuloSerDe();
  Properties properties=new Properties();
  Configuration conf=new Configuration();
  properties.setProperty(AccumuloSerDeParameters.COLUMN_MAPPINGS,":rowID,cf:cq");
  properties.setProperty(serdeConstants.LIST_COLUMNS,"row,col");
  properties.setProperty(serdeConstants.LIST_COLUMN_TYPES,"struct<col1:int,col2:int>,map<string,string>");
  accumuloSerDe.initialize(conf,properties);
  AccumuloRowIdFactory factory=accumuloSerDe.getParams().getRowIdFactory();
  List<TypeInfo> columnTypes=accumuloSerDe.getParams().getHiveColumnTypes();
  ColumnMapper mapper=accumuloSerDe.getParams().getColumnMapper();
  LazySerDeParameters serDeParams=accumuloSerDe.getParams().getSerDeParameters();
  List<ObjectInspector> OIs=accumuloSerDe.getColumnObjectInspectors(columnTypes,serDeParams,mapper.getColumnMappings(),factory);
  Assert.assertEquals(2,OIs.size());
  Assert.assertEquals(LazySimpleStructObjectInspector.class,OIs.get(0).getClass());
  Assert.assertEquals(LazyMapObjectInspector.class,OIs.get(1).getClass());
  LazySimpleStructObjectInspector structOI=(LazySimpleStructObjectInspector)OIs.get(0);
  Assert.assertEquals(2,(int)structOI.getSeparator());
  LazyMapObjectInspector mapOI=(LazyMapObjectInspector)OIs.get(1);
  Assert.assertEquals(2,(int)mapOI.getItemSeparator());
  Assert.assertEquals(3,(int)mapOI.getKeyValueSeparator());
}
