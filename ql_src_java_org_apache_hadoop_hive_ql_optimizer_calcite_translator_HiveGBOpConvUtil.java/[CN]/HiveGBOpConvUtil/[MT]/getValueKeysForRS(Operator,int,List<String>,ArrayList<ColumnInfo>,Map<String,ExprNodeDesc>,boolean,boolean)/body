{
  List<ColumnInfo> mapGBColInfoLst=inOp.getSchema().getSignature();
  ArrayList<ExprNodeDesc> valueKeys=null;
  if (aggStartPos >= mapGBColInfoLst.size()) {
    valueKeys=new ArrayList<ExprNodeDesc>();
  }
 else {
    valueKeys=ExprNodeDescUtils.genExprNodeDesc(inOp,aggStartPos,mapGBColInfoLst.size() - 1,true,setColToNonVirtual);
    for (int i=0; i < valueKeys.size(); ++i) {
      String outputColName=SemanticAnalyzer.getColumnInternalName(i);
      outputKeyColumnNames.add(outputColName);
      String tabAlias=addEmptyTabAlias ? "" : null;
      ColumnInfo colInfo=new ColumnInfo(Utilities.ReduceField.VALUE.toString() + "." + outputColName,valueKeys.get(i).getTypeInfo(),tabAlias,false);
      colInfoLst.add(colInfo);
      colExprMap.put(colInfo.getInternalName(),valueKeys.get(i));
    }
  }
  return valueKeys;
}
