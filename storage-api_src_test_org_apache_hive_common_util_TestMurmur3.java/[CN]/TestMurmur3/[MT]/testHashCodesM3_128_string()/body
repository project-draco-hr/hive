{
  String key="test";
  int seed=123;
  HashFunction hf=Hashing.murmur3_128(seed);
  ByteBuffer buf=ByteBuffer.allocate(16).order(ByteOrder.LITTLE_ENDIAN);
  buf.put(hf.hashBytes(key.getBytes()).asBytes());
  buf.flip();
  long gl1=buf.getLong();
  long gl2=buf.getLong(8);
  long[] hc=Murmur3.hash128(key.getBytes(),0,key.getBytes().length,seed);
  long m1=hc[0];
  long m2=hc[1];
  assertEquals(gl1,m1);
  assertEquals(gl2,m2);
  key="testkey128_testkey128";
  buf=ByteBuffer.allocate(16).order(ByteOrder.LITTLE_ENDIAN);
  buf.put(hf.hashBytes(key.getBytes()).asBytes());
  buf.flip();
  gl1=buf.getLong();
  gl2=buf.getLong(8);
  byte[] keyBytes=key.getBytes();
  hc=Murmur3.hash128(keyBytes,0,keyBytes.length,seed);
  m1=hc[0];
  m2=hc[1];
  assertEquals(gl1,m1);
  assertEquals(gl2,m2);
  byte[] offsetKeyBytes=new byte[keyBytes.length + 35];
  Arrays.fill(offsetKeyBytes,(byte)-1);
  System.arraycopy(keyBytes,0,offsetKeyBytes,35,keyBytes.length);
  hc=Murmur3.hash128(offsetKeyBytes,35,keyBytes.length,seed);
  assertEquals(gl1,hc[0]);
  assertEquals(gl2,hc[1]);
}
