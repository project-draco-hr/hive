{
  StringRedBlackTree tree=new StringRedBlackTree(5);
  assertEquals(0,tree.getSizeInBytes());
  checkTree(tree);
  assertEquals(0,tree.add("owen"));
  checkTree(tree);
  assertEquals(1,tree.add("ashutosh"));
  checkTree(tree);
  assertEquals(0,tree.add("owen"));
  checkTree(tree);
  assertEquals(2,tree.add("alan"));
  checkTree(tree);
  assertEquals(2,tree.add("alan"));
  checkTree(tree);
  assertEquals(1,tree.add("ashutosh"));
  checkTree(tree);
  assertEquals(3,tree.add("greg"));
  checkTree(tree);
  assertEquals(4,tree.add("eric"));
  checkTree(tree);
  assertEquals(5,tree.add("arun"));
  checkTree(tree);
  assertEquals(6,tree.size());
  checkTree(tree);
  assertEquals(6,tree.add("eric14"));
  checkTree(tree);
  assertEquals(7,tree.add("o"));
  checkTree(tree);
  assertEquals(8,tree.add("ziggy"));
  checkTree(tree);
  assertEquals(9,tree.add("z"));
  checkTree(tree);
  checkContents(tree,new int[]{2,5,1,4,6,3,7,0,9,8},"alan","arun","ashutosh","eric","eric14","greg","o","owen","z","ziggy");
  assertEquals(32888,tree.getSizeInBytes());
  assertEquals(3,tree.add("greg"));
  assertEquals(41,tree.getCharacterSize());
  assertEquals(10,tree.add("zak"));
  checkTree(tree);
  assertEquals(11,tree.add("eric1"));
  checkTree(tree);
  assertEquals(12,tree.add("ash"));
  checkTree(tree);
  assertEquals(13,tree.add("harry"));
  checkTree(tree);
  assertEquals(14,tree.add("john"));
  checkTree(tree);
  tree.clear();
  checkTree(tree);
  assertEquals(0,tree.getSizeInBytes());
  assertEquals(0,tree.getCharacterSize());
}
