{
  if (orcTail == null) {
    Reader orcReader=OrcFile.createReader(file.getPath(),OrcFile.readerOptions(context.conf).filesystem(fs).maxLength(file.getLen()));
    orcTail=new OrcTail(orcReader.getFileTail(),orcReader.getSerializedFileFooter(),file.getModificationTime());
    if (context.cacheStripeDetails) {
      context.footerCache.put(new FooterCacheKey(fsFileId,file.getPath()),orcTail);
    }
  }
  stripes=orcTail.getStripes();
  stripeStats=orcTail.getStripeStatistics();
  fileTypes=orcTail.getTypes();
  TypeDescription fileSchema=OrcUtils.convertTypeFromProtobuf(fileTypes,0);
  if (readerTypes == null) {
    readerIncluded=genIncludedColumns(fileTypes,context.conf,isOriginal);
    evolution=new SchemaEvolution(fileSchema,readerIncluded);
  }
 else {
    readerIncluded=genIncludedColumns(readerTypes,context.conf,true);
    if (readerIncluded != null && !isOriginal) {
      readerIncluded=shiftReaderIncludedForAcid(readerIncluded);
    }
    TypeDescription readerSchema=OrcUtils.convertTypeFromProtobuf(readerTypes,0);
    evolution=new SchemaEvolution(fileSchema,readerSchema,readerIncluded);
  }
  writerVersion=orcTail.getWriterVersion();
  List<OrcProto.ColumnStatistics> fileColStats=orcTail.getFooter().getStatisticsList();
  boolean[] fileIncluded;
  if (readerTypes == null) {
    fileIncluded=readerIncluded;
  }
 else {
    fileIncluded=new boolean[fileTypes.size()];
    final int readerSchemaSize=readerTypes.size();
    for (int i=0; i < readerSchemaSize; i++) {
      TypeDescription fileType=evolution.getFileType(i);
      if (fileType != null) {
        fileIncluded[fileType.getId()]=true;
      }
    }
  }
  projColsUncompressedSize=computeProjectionSize(fileTypes,fileColStats,fileIncluded,isOriginal);
  if (!context.footerInSplits) {
    orcTail=null;
  }
}
