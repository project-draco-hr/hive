{
  try {
    populateAndCacheStripeDetails();
    boolean[] includeStripe=null;
    if (deltas.isEmpty()) {
      Reader.Options options=new Reader.Options();
      setIncludedColumns(options,types,context.conf,isOriginal);
      setSearchArgument(options,types,context.conf,isOriginal);
      if (options.getSearchArgument() != null && writerVersion != OrcFile.WriterVersion.ORIGINAL) {
        SearchArgument sarg=options.getSearchArgument();
        List<PredicateLeaf> sargLeaves=sarg.getLeaves();
        List<StripeStatistics> stripeStats=metadata.getStripeStatistics();
        int[] filterColumns=RecordReaderImpl.mapSargColumns(sargLeaves,options.getColumnNames(),getRootColumn(isOriginal));
        if (stripeStats != null) {
          includeStripe=new boolean[stripes.size()];
          for (int i=0; i < stripes.size(); ++i) {
            includeStripe[i]=(i >= stripeStats.size()) || isStripeSatisfyPredicate(stripeStats.get(i),sarg,filterColumns);
            if (LOG.isDebugEnabled() && !includeStripe[i]) {
              LOG.debug("Eliminating ORC stripe-" + i + " of file '"+ file.getPath()+ "'  as it did not satisfy "+ "predicate condition.");
            }
          }
        }
      }
    }
    if (includeStripe == null) {
      includeStripe=new boolean[stripes.size()];
      Arrays.fill(includeStripe,true);
    }
    long currentOffset=-1;
    long currentLength=0;
    int idx=-1;
    for (    StripeInformation stripe : stripes) {
      idx++;
      if (!includeStripe[idx]) {
        if (currentOffset != -1) {
          createSplit(currentOffset,currentLength,fileMetaInfo);
          currentOffset=-1;
        }
        continue;
      }
      if (currentOffset != -1 && currentLength > context.minSize && (currentOffset / blockSize != stripe.getOffset() / blockSize)) {
        createSplit(currentOffset,currentLength,fileMetaInfo);
        currentOffset=-1;
      }
      if (currentOffset == -1) {
        currentOffset=stripe.getOffset();
        currentLength=stripe.getLength();
      }
 else {
        currentLength=(stripe.getOffset() + stripe.getLength()) - currentOffset;
      }
      if (currentLength >= context.maxSize) {
        createSplit(currentOffset,currentLength,fileMetaInfo);
        currentOffset=-1;
      }
    }
    if (currentOffset != -1) {
      createSplit(currentOffset,currentLength,fileMetaInfo);
    }
  }
 catch (  Throwable th) {
    if (!(th instanceof IOException)) {
      LOG.error("Unexpected Exception",th);
    }
synchronized (context.errors) {
      context.errors.add(th);
    }
    if (!(th instanceof IOException)) {
      context.notifyOnNonIOException(th);
    }
  }
 finally {
    context.decrementSchedulers();
  }
}
