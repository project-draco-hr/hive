{
  try {
    Reader orcReader=OrcFile.createReader(fs,file.getPath());
    Configuration conf=context.conf;
    List<OrcProto.Type> types=orcReader.getTypes();
    SearchArgument sarg=createSarg(types,conf);
    List<StripeStatistics> stripeStats=null;
    int[] filterColumns=null;
    if (sarg != null) {
      List<PredicateLeaf> sargLeaves=null;
      String[] columnNames=conf.get(serdeConstants.LIST_COLUMNS).split(",");
      if (columnNames == null) {
        columnNames=conf.get(ColumnProjectionUtils.READ_COLUMN_NAMES_CONF_STR).split(",");
      }
      sargLeaves=sarg.getLeaves();
      filterColumns=new int[sargLeaves.size()];
      for (int i=0; i < filterColumns.length; ++i) {
        String colName=sargLeaves.get(i).getColumnName();
        filterColumns[i]=RecordReaderImpl.findColumns(columnNames,colName);
      }
      Metadata metadata=orcReader.getMetadata();
      stripeStats=metadata.getStripeStatistics();
    }
    long currentOffset=-1;
    long currentLength=0;
    int idx=-1;
    for (    StripeInformation stripe : orcReader.getStripes()) {
      idx++;
      if (sarg != null && !isStripeSatisfyPredicate(stripeStats.get(idx),sarg,filterColumns)) {
        if (LOG.isDebugEnabled()) {
          LOG.debug("Eliminating ORC stripe-" + idx + " of file '"+ file.getPath()+ "'  as it did not satisfy predicate condition.");
        }
        if (currentOffset != -1) {
          createSplit(currentOffset,currentLength);
          currentOffset=-1;
        }
        continue;
      }
      if (currentOffset != -1 && currentLength > context.minSize && (currentOffset / blockSize != stripe.getOffset() / blockSize)) {
        createSplit(currentOffset,currentLength);
        currentOffset=-1;
      }
      if (currentOffset == -1) {
        currentOffset=stripe.getOffset();
        currentLength=stripe.getLength();
      }
 else {
        currentLength+=stripe.getLength();
      }
      if (currentLength >= context.maxSize) {
        createSplit(currentOffset,currentLength);
        currentOffset=-1;
      }
    }
    if (currentOffset != -1) {
      createSplit(currentOffset,currentLength);
    }
  }
 catch (  Throwable th) {
synchronized (context.errors) {
      context.errors.add(th);
    }
  }
}
