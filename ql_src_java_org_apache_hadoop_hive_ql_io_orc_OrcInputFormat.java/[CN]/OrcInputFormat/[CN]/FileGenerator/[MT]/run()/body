{
  try {
    perfLogger.PerfLogBegin(CLASS_NAME,PerfLogger.ORC_GET_BLOCK_LOCATIONS);
    Iterator<FileStatus> itr=context.shims.listLocatedStatus(fs,dir,hiddenFileFilter);
    while (itr.hasNext()) {
      FileStatus file=itr.next();
      if (!file.isDir()) {
        FileInfo fileInfo=null;
        if (context.cacheStripeDetails) {
          fileInfo=verifyCachedFileInfo(file);
        }
        context.schedule(new SplitGenerator(context,fs,file,fileInfo));
      }
    }
    perfLogger.PerfLogEnd(CLASS_NAME,PerfLogger.ORC_GET_BLOCK_LOCATIONS);
  }
 catch (  Throwable th) {
    if (!(th instanceof IOException)) {
      LOG.error("Unexpected Exception",th);
    }
synchronized (context.errors) {
      context.errors.add(th);
    }
    if (!(th instanceof IOException)) {
      context.notifyOnNonIOException(th);
    }
  }
 finally {
    context.decrementSchedulers();
  }
}
