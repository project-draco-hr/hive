{
  String kerberosAuthHeader;
  try {
    kerberosLock.lock();
    if (isCookieEnabled) {
      httpContext.setAttribute(ClientContext.COOKIE_STORE,cookieStore);
    }
    if (!isCookieEnabled || ((httpContext.getAttribute(Utils.HIVE_SERVER2_RETRY_KEY) == null && (cookieStore == null || (cookieStore != null && Utils.needToSendCredentials(cookieStore,cookieName)))) || (httpContext.getAttribute(Utils.HIVE_SERVER2_RETRY_KEY) != null && httpContext.getAttribute(Utils.HIVE_SERVER2_RETRY_KEY).equals(Utils.HIVE_SERVER2_RETRY_TRUE)))) {
      kerberosAuthHeader=HttpAuthUtils.getKerberosServiceTicket(principal,host,serverHttpUrl,assumeSubject);
      httpRequest.addHeader(HttpAuthUtils.AUTHORIZATION + ": " + HttpAuthUtils.NEGOTIATE+ " ",kerberosAuthHeader);
    }
    if (isCookieEnabled) {
      httpContext.setAttribute(Utils.HIVE_SERVER2_RETRY_KEY,Utils.HIVE_SERVER2_RETRY_FALSE);
    }
  }
 catch (  Exception e) {
    throw new HttpException(e.getMessage(),e);
  }
 finally {
    kerberosLock.unlock();
  }
}
