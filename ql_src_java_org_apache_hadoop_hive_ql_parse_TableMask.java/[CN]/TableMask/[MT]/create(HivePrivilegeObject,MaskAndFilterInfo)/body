{
  StringBuilder sb=new StringBuilder();
  sb.append("(SELECT ");
  boolean firstOne=true;
  List<String> exprs=privObject.getCellValueTransformers();
  if (exprs != null) {
    if (exprs.size() != privObject.getColumns().size()) {
      throw new SemanticException("Expect " + privObject.getColumns().size() + " columns in "+ privObject.getObjectName()+ ", but only find "+ exprs.size());
    }
    List<String> colTypes=maskAndFilterInfo.colTypes;
    for (int index=0; index < exprs.size(); index++) {
      String expr=exprs.get(index);
      if (expr == null) {
        throw new SemanticException("Expect string type CellValueTransformer in " + privObject.getObjectName() + ", but only find null");
      }
      if (!firstOne) {
        sb.append(", ");
      }
 else {
        firstOne=false;
      }
      String colName=privObject.getColumns().get(index);
      if (!expr.equals(colName)) {
        sb.append("CAST(" + expr + " AS "+ colTypes.get(index)+ ") AS "+ colName);
      }
 else {
        sb.append(expr);
      }
    }
  }
 else {
    for (int index=0; index < privObject.getColumns().size(); index++) {
      String expr=privObject.getColumns().get(index);
      if (!firstOne) {
        sb.append(", ");
      }
 else {
        firstOne=false;
      }
      sb.append(expr);
    }
  }
  sb.append(" FROM " + privObject.getObjectName());
  sb.append(" " + maskAndFilterInfo.additionalTabInfo);
  String filter=privObject.getRowFilterExpression();
  if (filter != null) {
    sb.append(" WHERE " + filter);
  }
  sb.append(")" + maskAndFilterInfo.alias);
  LOG.debug("TableMask creates `" + sb.toString() + "`");
  return sb.toString();
}
