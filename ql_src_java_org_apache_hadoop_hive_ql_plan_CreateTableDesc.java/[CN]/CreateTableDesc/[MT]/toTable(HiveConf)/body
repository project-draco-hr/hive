{
  String databaseName=getDatabaseName();
  String tableName=getTableName();
  if (databaseName == null || tableName.contains(".")) {
    String[] names=Utilities.getDbTableName(tableName);
    databaseName=names[0];
    tableName=names[1];
  }
  Table tbl=new Table(databaseName,tableName);
  if (getTblProps() != null) {
    tbl.getTTable().getParameters().putAll(getTblProps());
  }
  if (getPartCols() != null) {
    tbl.setPartCols(getPartCols());
  }
  if (getNumBuckets() != -1) {
    tbl.setNumBuckets(getNumBuckets());
  }
  if (getStorageHandler() != null) {
    tbl.setProperty(org.apache.hadoop.hive.metastore.api.hive_metastoreConstants.META_TABLE_STORAGE,getStorageHandler());
  }
  HiveStorageHandler storageHandler=tbl.getStorageHandler();
  if (getSerName() == null) {
    if (storageHandler == null) {
      LOG.info("Default to LazySimpleSerDe for table " + tableName);
      tbl.setSerializationLib(LazySimpleSerDe.class.getName());
    }
 else {
      String serDeClassName=storageHandler.getSerDeClass().getName();
      LOG.info("Use StorageHandler-supplied " + serDeClassName + " for table "+ tableName);
      tbl.setSerializationLib(serDeClassName);
    }
  }
 else {
    DDLTask.validateSerDe(getSerName(),conf);
    tbl.setSerializationLib(getSerName());
  }
  if (getFieldDelim() != null) {
    tbl.setSerdeParam(serdeConstants.FIELD_DELIM,getFieldDelim());
    tbl.setSerdeParam(serdeConstants.SERIALIZATION_FORMAT,getFieldDelim());
  }
  if (getFieldEscape() != null) {
    tbl.setSerdeParam(serdeConstants.ESCAPE_CHAR,getFieldEscape());
  }
  if (getCollItemDelim() != null) {
    tbl.setSerdeParam(serdeConstants.COLLECTION_DELIM,getCollItemDelim());
  }
  if (getMapKeyDelim() != null) {
    tbl.setSerdeParam(serdeConstants.MAPKEY_DELIM,getMapKeyDelim());
  }
  if (getLineDelim() != null) {
    tbl.setSerdeParam(serdeConstants.LINE_DELIM,getLineDelim());
  }
  if (getNullFormat() != null) {
    tbl.setSerdeParam(serdeConstants.SERIALIZATION_NULL_FORMAT,getNullFormat());
  }
  if (getSerdeProps() != null) {
    Iterator<Map.Entry<String,String>> iter=getSerdeProps().entrySet().iterator();
    while (iter.hasNext()) {
      Map.Entry<String,String> m=iter.next();
      tbl.setSerdeParam(m.getKey(),m.getValue());
    }
  }
  if (getCols() != null) {
    tbl.setFields(getCols());
  }
  if (getBucketCols() != null) {
    tbl.setBucketCols(getBucketCols());
  }
  if (getSortCols() != null) {
    tbl.setSortCols(getSortCols());
  }
  if (getComment() != null) {
    tbl.setProperty("comment",getComment());
  }
  if (getLocation() != null) {
    tbl.setDataLocation(new Path(getLocation()));
  }
  if (getSkewedColNames() != null) {
    tbl.setSkewedColNames(getSkewedColNames());
  }
  if (getSkewedColValues() != null) {
    tbl.setSkewedColValues(getSkewedColValues());
  }
  tbl.getTTable().setTemporary(isTemporary());
  tbl.setStoredAsSubDirectories(isStoredAsSubDirectories());
  tbl.setInputFormatClass(getInputFormat());
  tbl.setOutputFormatClass(getOutputFormat());
  if (getInputFormat() != null && !getInputFormat().isEmpty()) {
    tbl.getTTable().getSd().setInputFormat(tbl.getInputFormatClass().getName());
  }
  if (getOutputFormat() != null && !getOutputFormat().isEmpty()) {
    tbl.getTTable().getSd().setOutputFormat(tbl.getOutputFormatClass().getName());
  }
  if (!Utilities.isDefaultNameNode(conf) && DDLTask.doesTableNeedLocation(tbl)) {
    DDLTask.makeLocationQualified(tbl.getDbName(),tbl.getTTable().getSd(),tableName,conf);
  }
  if (isExternal()) {
    tbl.setProperty("EXTERNAL","TRUE");
    tbl.setTableType(TableType.EXTERNAL_TABLE);
  }
  if ((tbl.getBucketCols() != null) && (tbl.getSortCols() != null)) {
    List<String> bucketCols=tbl.getBucketCols();
    List<Order> sortCols=tbl.getSortCols();
    if ((sortCols.size() > 0) && (sortCols.size() >= bucketCols.size())) {
      boolean found=true;
      Iterator<String> iterBucketCols=bucketCols.iterator();
      while (iterBucketCols.hasNext()) {
        String bucketCol=iterBucketCols.next();
        boolean colFound=false;
        for (int i=0; i < bucketCols.size(); i++) {
          if (bucketCol.equals(sortCols.get(i).getCol())) {
            colFound=true;
            break;
          }
        }
        if (colFound == false) {
          found=false;
          break;
        }
      }
      if (found) {
        tbl.setProperty("SORTBUCKETCOLSPREFIX","TRUE");
      }
    }
  }
  if (getLocation() == null && !this.isCTAS) {
    if (!tbl.isPartitioned() && conf.getBoolVar(HiveConf.ConfVars.HIVESTATSAUTOGATHER)) {
      StatsSetupConst.setBasicStatsStateForCreateTable(tbl.getTTable().getParameters(),StatsSetupConst.TRUE);
    }
  }
 else {
    StatsSetupConst.setBasicStatsStateForCreateTable(tbl.getTTable().getParameters(),StatsSetupConst.FALSE);
  }
  return tbl;
}
