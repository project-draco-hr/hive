{
  try {
    verifyHttpConfiguration(hiveConf);
    httpServer=new org.eclipse.jetty.server.Server();
    String threadPoolName="HiveServer2-HttpHandler-Pool";
    ExecutorService executorService=new ThreadPoolExecutor(minWorkerThreads,maxWorkerThreads,workerKeepAliveTime,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>(),new ThreadFactoryWithGarbageCleanup(threadPoolName));
    ExecutorThreadPool threadPool=new ExecutorThreadPool(executorService);
    httpServer.setThreadPool(threadPool);
    SelectChannelConnector connector=new SelectChannelConnector();
    boolean useSsl=hiveConf.getBoolVar(ConfVars.HIVE_SERVER2_USE_SSL);
    String schemeName=useSsl ? "https" : "http";
    if (useSsl) {
      String keyStorePath=hiveConf.getVar(ConfVars.HIVE_SERVER2_SSL_KEYSTORE_PATH).trim();
      String keyStorePassword=ShimLoader.getHadoopShims().getPassword(hiveConf,HiveConf.ConfVars.HIVE_SERVER2_SSL_KEYSTORE_PASSWORD.varname);
      if (keyStorePath.isEmpty()) {
        throw new IllegalArgumentException(ConfVars.HIVE_SERVER2_SSL_KEYSTORE_PATH.varname + " Not configured for SSL connection");
      }
      SslContextFactory sslContextFactory=new SslContextFactory();
      sslContextFactory.setKeyStorePath(keyStorePath);
      sslContextFactory.setKeyStorePassword(keyStorePassword);
      connector=new SslSelectChannelConnector(sslContextFactory);
    }
    connector.setPort(portNum);
    connector.setReuseAddress(!Shell.WINDOWS);
    int maxIdleTime=(int)hiveConf.getTimeVar(ConfVars.HIVE_SERVER2_THRIFT_HTTP_MAX_IDLE_TIME,TimeUnit.MILLISECONDS);
    connector.setMaxIdleTime(maxIdleTime);
    httpServer.addConnector(connector);
    hiveAuthFactory=new HiveAuthFactory(hiveConf);
    TProcessor processor=new TCLIService.Processor<Iface>(this);
    TProtocolFactory protocolFactory=new TBinaryProtocol.Factory();
    UserGroupInformation serviceUGI=cliService.getServiceUGI();
    UserGroupInformation httpUGI=cliService.getHttpUGI();
    String authType=hiveConf.getVar(ConfVars.HIVE_SERVER2_AUTHENTICATION);
    TServlet thriftHttpServlet=new ThriftHttpServlet(processor,protocolFactory,authType,serviceUGI,httpUGI);
    final ServletContextHandler context=new ServletContextHandler(ServletContextHandler.SESSIONS);
    context.setContextPath("/");
    String httpPath=getHttpPath(hiveConf.getVar(HiveConf.ConfVars.HIVE_SERVER2_THRIFT_HTTP_PATH));
    httpServer.setHandler(context);
    context.addServlet(new ServletHolder(thriftHttpServlet),httpPath);
    httpServer.start();
    String msg="Started " + ThriftHttpCLIService.class.getSimpleName() + " in "+ schemeName+ " mode on port "+ portNum+ " path="+ httpPath+ " with "+ minWorkerThreads+ "..."+ maxWorkerThreads+ " worker threads";
    LOG.info(msg);
    httpServer.join();
  }
 catch (  Throwable t) {
    LOG.fatal("Error starting HiveServer2: could not start " + ThriftHttpCLIService.class.getSimpleName(),t);
    System.exit(-1);
  }
}
