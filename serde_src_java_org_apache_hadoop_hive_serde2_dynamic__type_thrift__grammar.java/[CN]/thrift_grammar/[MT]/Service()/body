{
  DynamicSerDeService jjtn000=new DynamicSerDeService(JJTSERVICE);
  boolean jjtc000=true;
  jjtree.openNodeScope(jjtn000);
  try {
    jj_consume_token(tok_service);
    jj_consume_token(IDENTIFIER);
    Extends();
    jj_consume_token(61);
    FlagArgs();
    label_7:     while (true) {
      Function();
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case tok_void:
case tok_bool:
case tok_i16:
case tok_i32:
case tok_i64:
case tok_double:
case tok_string:
case tok_map:
case tok_list:
case tok_set:
case tok_async:
case IDENTIFIER:
        ;
      break;
default :
    jj_la1[20]=jj_gen;
  break label_7;
}
}
UnflagArgs();
jj_consume_token(62);
jjtree.closeNodeScope(jjtn000,true);
jjtc000=false;
{
if (true) return jjtn000;
}
}
 catch (Throwable jjte000) {
if (jjtc000) {
jjtree.clearNodeScope(jjtn000);
jjtc000=false;
}
 else {
jjtree.popNode();
}
if (jjte000 instanceof RuntimeException) {
{
if (true) throw (RuntimeException)jjte000;
}
}
if (jjte000 instanceof ParseException) {
{
if (true) throw (ParseException)jjte000;
}
}
{
if (true) throw (Error)jjte000;
}
}
 finally {
if (jjtc000) {
jjtree.closeNodeScope(jjtn000,true);
}
}
throw new Error("Missing return statement in function");
}
