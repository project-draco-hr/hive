{
  driver.run("drop table junit_unparted");
  String createTable="create table junit_unparted(a int) partitioned by (b string) stored as RCFILE";
  int retCode=driver.run(createTable).getResponseCode();
  if (retCode != 0) {
    throw new IOException("Failed to create table.");
  }
  int LOOP_SIZE=11;
  String[] input=new String[LOOP_SIZE];
  for (int i=0; i < LOOP_SIZE; i++) {
    input[i]=i + "\t1";
  }
  HcatTestUtils.createTestDataFile(INPUT_FILE_NAME,input);
  PigServer server=new PigServer(ExecType.LOCAL);
  server.registerQuery("A = load '" + INPUT_FILE_NAME + "' as (a:int, b:chararray);");
  server.registerQuery("store A into 'default.junit_unparted' using " + HCatStorer.class.getName() + "('b=1');");
  server.registerQuery("B = load 'default.junit_unparted' using " + HCatLoader.class.getName() + "();");
  Iterator<Tuple> itr=server.openIterator("B");
  int i=0;
  while (itr.hasNext()) {
    Tuple t=itr.next();
    Assert.assertEquals(2,t.size());
    Assert.assertEquals(t.get(0),i);
    Assert.assertEquals(t.get(1),"1");
    i++;
  }
  Assert.assertFalse(itr.hasNext());
  Assert.assertEquals(LOOP_SIZE,i);
}
