{
  WindowTableFunctionDef wTFnDef=(WindowTableFunctionDef)conf.getFuncDef();
  StructObjectInspector inputOI=wTFnDef.getOutputFromWdwFnProcessing().getOI();
  StructObjectInspector outputOI=wTFnDef.getOutputShape().getOI();
  int numCols=outputOI.getAllStructFieldRefs().size();
  ArrayList<WindowExpressionDef> wdwExprs=wTFnDef.getWindowExpressions();
  int numWdwExprs=wdwExprs == null ? 0 : wdwExprs.size();
  Object[] output=new Object[numCols];
  boolean forwardRowsUntouched=(wdwExprs == null || wdwExprs.size() == 0);
  PTFPartitionIterator<Object> pItr=oPart.iterator();
  PTFOperator.connectLeadLagFunctionsToPartition(conf,pItr);
  while (pItr.hasNext()) {
    int colCnt=0;
    Object oRow=pItr.next();
    if (forwardRowsUntouched) {
      forward(oRow,outputObjInspector);
      continue;
    }
    if (wdwExprs != null) {
      for (      WindowExpressionDef wdwExpr : wdwExprs) {
        Object newCol=wdwExpr.getExprEvaluator().evaluate(oRow);
        output[colCnt++]=newCol;
      }
    }
    for (; colCnt < numCols; ) {
      StructField field=inputOI.getAllStructFieldRefs().get(colCnt - numWdwExprs);
      output[colCnt++]=ObjectInspectorUtils.copyToStandardObject(inputOI.getStructFieldData(oRow,field),field.getFieldObjectInspector());
    }
    forward(output,outputObjInspector);
  }
}
