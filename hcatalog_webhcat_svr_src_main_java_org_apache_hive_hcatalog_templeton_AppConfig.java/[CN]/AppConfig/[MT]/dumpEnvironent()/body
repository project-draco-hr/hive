{
  StringBuilder sb=TempletonUtils.dumpPropMap("========WebHCat System.getenv()========",System.getenv());
  sb.append("START========WebHCat AppConfig.iterator()========: \n");
  Iterator<Map.Entry<String,String>> configIter=this.iterator();
  List<Map.Entry<String,String>> configVals=new ArrayList<Map.Entry<String,String>>();
  while (configIter.hasNext()) {
    configVals.add(configIter.next());
  }
  Collections.sort(configVals,new Comparator<Map.Entry<String,String>>(){
    @Override public int compare(    Map.Entry<String,String> ent,    Map.Entry<String,String> ent2){
      return ent.getKey().compareTo(ent2.getKey());
    }
  }
);
  for (  Map.Entry<String,String> entry : configVals) {
    if (entry.getKey().toLowerCase().contains("path")) {
      StringTokenizer st=new StringTokenizer(get(entry.getKey()),File.pathSeparator);
      sb.append(entry.getKey()).append("=\n");
      while (st.hasMoreTokens()) {
        sb.append("    ").append(st.nextToken()).append(File.pathSeparator).append('\n');
      }
    }
 else {
      sb.append(entry.getKey()).append('=').append(get(entry.getKey())).append('\n');
    }
  }
  sb.append("END========WebHCat AppConfig.iterator()========: \n");
  sb.append(TempletonUtils.dumpPropMap("========WebHCat System.getProperties()========",System.getProperties()));
  return sb.toString();
}
