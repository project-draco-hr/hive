{
  Matcher match=varPat.matcher("");
  String eval=expr;
  StringBuilder builder=new StringBuilder();
  int s=0;
  for (; s <= depth; s++) {
    match.reset(eval);
    builder.setLength(0);
    int prev=0;
    boolean found=false;
    while (match.find(prev)) {
      String group=match.group();
      String var=group.substring(2,group.length() - 1);
      String substitute=getSubstitute(conf,var);
      if (substitute == null) {
        substitute=group;
      }
 else {
        found=true;
      }
      builder.append(eval.substring(prev,match.start())).append(substitute);
      prev=match.end();
    }
    if (!found) {
      return eval;
    }
    builder.append(eval.substring(prev));
    eval=builder.toString();
  }
  if (s > depth) {
    throw new IllegalStateException("Variable substitution depth is deeper than " + depth + " for expression "+ expr);
  }
  return eval;
}
