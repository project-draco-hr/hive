{
  if (!isEnabled) {
    return FORWARD;
  }
 else   if (topN == 0) {
    return EXCLUDE;
  }
  for (  TopNHash partHash : partitionHeaps.values()) {
    usage=usage - partHash.usage;
    partHash.startVectorizedBatch(size);
    usage=usage + partHash.usage;
    updateLargest(partHash);
  }
  batchSize=size;
  if (batchIndexToResult == null || batchIndexToResult.length < batchSize) {
    batchIndexToResult=new int[Math.max(batchSize,VectorizedRowBatch.DEFAULT_SIZE)];
  }
  indexesWithNullPartKey.clear();
  return 0;
}
