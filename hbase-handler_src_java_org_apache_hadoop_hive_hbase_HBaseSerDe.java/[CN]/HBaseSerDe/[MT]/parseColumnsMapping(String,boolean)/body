{
  if (columnsMappingSpec == null) {
    throw new SerDeException("Error: hbase.columns.mapping missing for this HBase table.");
  }
  if (columnsMappingSpec.equals("") || columnsMappingSpec.equals(HBASE_KEY_COL)) {
    throw new SerDeException("Error: hbase.columns.mapping specifies only the HBase table" + " row key. A valid Hive-HBase table must specify at least one additional column.");
  }
  int rowKeyIndex=-1;
  List<ColumnMapping> columnsMapping=new ArrayList<ColumnMapping>();
  String[] columnSpecs=columnsMappingSpec.split(",");
  ColumnMapping columnMapping=null;
  for (int i=0; i < columnSpecs.length; i++) {
    String mappingSpec=columnSpecs[i].trim();
    String[] mapInfo=mappingSpec.split("#");
    String colInfo=mapInfo[0];
    int idxFirst=colInfo.indexOf(":");
    int idxLast=colInfo.lastIndexOf(":");
    if (idxFirst < 0 || !(idxFirst == idxLast)) {
      throw new SerDeException("Error: the HBase columns mapping contains a badly formed " + "column family, column qualifier specification.");
    }
    columnMapping=new ColumnMapping();
    if (colInfo.equals(HBASE_KEY_COL)) {
      rowKeyIndex=i;
      columnMapping.familyName=colInfo;
      columnMapping.familyNameBytes=Bytes.toBytes(colInfo);
      columnMapping.qualifierName=null;
      columnMapping.qualifierNameBytes=null;
      columnMapping.hbaseRowKey=true;
    }
 else {
      String[] parts=colInfo.split(":");
      assert(parts.length > 0 && parts.length <= 2);
      columnMapping.familyName=parts[0];
      columnMapping.familyNameBytes=Bytes.toBytes(parts[0]);
      columnMapping.hbaseRowKey=false;
      if (parts.length == 2) {
        if (doColumnRegexMatching && parts[1].endsWith(".*")) {
          columnMapping.qualifierPrefix=parts[1].substring(0,parts[1].length() - 2);
          columnMapping.qualifierPrefixBytes=Bytes.toBytes(columnMapping.qualifierPrefix);
          columnMapping.qualifierName=null;
          columnMapping.qualifierNameBytes=null;
        }
 else {
          columnMapping.qualifierName=parts[1];
          columnMapping.qualifierNameBytes=Bytes.toBytes(parts[1]);
          ;
        }
      }
 else {
        columnMapping.qualifierName=null;
        columnMapping.qualifierNameBytes=null;
      }
    }
    columnMapping.mappingSpec=mappingSpec;
    columnsMapping.add(columnMapping);
  }
  if (rowKeyIndex == -1) {
    columnMapping=new ColumnMapping();
    columnMapping.familyName=HBASE_KEY_COL;
    columnMapping.familyNameBytes=Bytes.toBytes(HBASE_KEY_COL);
    columnMapping.qualifierName=null;
    columnMapping.qualifierNameBytes=null;
    columnMapping.hbaseRowKey=true;
    columnMapping.mappingSpec=HBASE_KEY_COL;
    columnsMapping.add(0,columnMapping);
  }
  return columnsMapping;
}
