{
  byte separator='.';
  long max=Long.MIN_VALUE / radix;
  long result=0, end=start + length;
  while (offset < end) {
    int digit=LazyUtils.digit(bytes[offset++],radix);
    if (digit == -1 || max > result) {
      if (bytes[offset - 1] == separator) {
        break;
      }
      throw new NumberFormatException(LazyUtils.convertToString(bytes,start,length));
    }
    long next=result * radix - digit;
    if (next > result) {
      throw new NumberFormatException(LazyUtils.convertToString(bytes,start,length));
    }
    result=next;
  }
  while (offset < end) {
    int digit=LazyUtils.digit(bytes[offset++],radix);
    if (digit == -1) {
      throw new NumberFormatException(LazyUtils.convertToString(bytes,start,length));
    }
  }
  if (!negative) {
    result=-result;
    if (result < 0) {
      throw new NumberFormatException(LazyUtils.convertToString(bytes,start,length));
    }
  }
  return result;
}
