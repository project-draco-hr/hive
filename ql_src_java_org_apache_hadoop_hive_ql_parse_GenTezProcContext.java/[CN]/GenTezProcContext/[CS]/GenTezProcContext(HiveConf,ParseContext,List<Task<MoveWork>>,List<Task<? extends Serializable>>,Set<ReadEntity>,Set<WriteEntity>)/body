{
  this.conf=conf;
  this.parseContext=parseContext;
  this.moveTask=moveTask;
  this.rootTasks=rootTasks;
  this.inputs=inputs;
  this.outputs=outputs;
  this.currentTask=(TezTask)TaskFactory.get(new TezWork(conf.getVar(HiveConf.ConfVars.HIVEQUERYID)),conf);
  this.leafOperatorToFollowingWork=new HashMap<Operator<?>,BaseWork>();
  this.linkOpWithWorkMap=new HashMap<Operator<?>,Map<BaseWork,TezEdgeProperty>>();
  this.linkWorkWithReduceSinkMap=new HashMap<BaseWork,List<ReduceSinkOperator>>();
  this.mapJoinWorkMap=new HashMap<MapJoinOperator,List<BaseWork>>();
  this.rootToWorkMap=new HashMap<Operator<?>,BaseWork>();
  this.childToWorkMap=new HashMap<Operator<?>,List<BaseWork>>();
  this.mapJoinParentMap=new HashMap<MapJoinOperator,List<Operator<?>>>();
  this.currentMapJoinOperators=new HashSet<MapJoinOperator>();
  this.linkChildOpWithDummyOp=new HashMap<Operator<?>,List<Operator<?>>>();
  this.dependencyTask=(DependencyCollectionTask)TaskFactory.get(new DependencyCollectionWork(),conf);
  this.unionWorkMap=new HashMap<Operator<?>,BaseWork>();
  this.currentUnionOperators=new LinkedList<UnionOperator>();
  this.workWithUnionOperators=new HashSet<BaseWork>();
  this.clonedReduceSinks=new HashSet<ReduceSinkOperator>();
  this.linkedFileSinks=new HashMap<Path,List<FileSinkDesc>>();
  this.fileSinkSet=new HashSet<FileSinkOperator>();
  this.connectedReduceSinks=new HashSet<ReduceSinkOperator>();
  rootTasks.add(currentTask);
}
