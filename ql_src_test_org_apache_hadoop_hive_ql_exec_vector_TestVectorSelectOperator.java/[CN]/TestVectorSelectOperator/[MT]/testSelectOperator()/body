{
  Map<String,Integer> columnMap=new HashMap<String,Integer>();
  columnMap.put("a",0);
  columnMap.put("b",1);
  columnMap.put("c",2);
  VectorizationContext vc=new VectorizationContext(columnMap,3);
  SelectDesc selDesc=new SelectDesc(false);
  List<ExprNodeDesc> colList=new ArrayList<ExprNodeDesc>();
  ExprNodeColumnDesc colDesc1=new ExprNodeColumnDesc(Long.class,"a","table",false);
  ExprNodeColumnDesc colDesc2=new ExprNodeColumnDesc(Long.class,"b","table",false);
  ExprNodeColumnDesc colDesc3=new ExprNodeColumnDesc(Long.class,"c","table",false);
  ExprNodeGenericFuncDesc plusDesc=new ExprNodeGenericFuncDesc();
  GenericUDF gudf=new GenericUDFBridge("+",true,UDFOPPlus.class.getCanonicalName());
  plusDesc.setGenericUDF(gudf);
  List<ExprNodeDesc> children=new ArrayList<ExprNodeDesc>();
  children.add(colDesc1);
  children.add(colDesc2);
  plusDesc.setChildExprs(children);
  plusDesc.setTypeInfo(TypeInfoFactory.longTypeInfo);
  colList.add(plusDesc);
  colList.add(colDesc3);
  selDesc.setColList(colList);
  List<String> outputColNames=new ArrayList<String>();
  outputColNames.add("_col0");
  outputColNames.add("_col1");
  selDesc.setOutputColumnNames(outputColNames);
  ValidatorVectorSelectOperator vso=new ValidatorVectorSelectOperator(vc,selDesc);
  VectorizedRowBatch vrg=VectorizedRowGroupGenUtil.getVectorizedRowBatch(VectorizedRowBatch.DEFAULT_SIZE,4,17);
  vso.processOp(vrg,0);
}
