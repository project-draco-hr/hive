{
  VectorSelectOperator vso=new VectorSelectOperator(null,new SelectDesc(false));
  VectorizedRowBatch vrg=VectorizedRowGroupGenUtil.getVectorizedRowBatch(VectorizedRowBatch.DEFAULT_SIZE,4,17);
  LongColAddLongColumn lcalcExpr=new LongColAddLongColumn(0,1,2);
  IdentityExpression iexpr=new IdentityExpression(3,"long");
  VectorExpression[] ves=new VectorExpression[]{lcalcExpr,iexpr};
  vso.setSelectExpressions(ves);
  vso.processOp(vrg,0);
  VectorizedRowBatch output=vso.getOutput();
  assertEquals(2,output.numCols);
  LongColumnVector out0=(LongColumnVector)output.cols[0];
  LongColumnVector out1=(LongColumnVector)output.cols[1];
  LongColumnVector in0=(LongColumnVector)vrg.cols[0];
  LongColumnVector in1=(LongColumnVector)vrg.cols[1];
  LongColumnVector in2=(LongColumnVector)vrg.cols[2];
  LongColumnVector in3=(LongColumnVector)vrg.cols[3];
  for (int i=0; i < VectorizedRowBatch.DEFAULT_SIZE; i++) {
    assertEquals(in0.vector[i] + in1.vector[i],out0.vector[i]);
    assertEquals(in2.vector[i],out0.vector[i]);
    assertEquals(in3.vector[i],out1.vector[i]);
  }
}
