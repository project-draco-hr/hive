{
  return new VectorExpressionWriterLong(){
    private Date dt;
    private Object obj;
    public VectorExpressionWriter init(    SettableDateObjectInspector objInspector) throws HiveException {
      super.init(objInspector);
      dt=new Date(0);
      obj=initValue(null);
      return this;
    }
    @Override public Object writeValue(    long value){
      dt.setTime(DateWritable.daysToMillis((int)value));
      ((SettableDateObjectInspector)this.objectInspector).set(obj,dt);
      return obj;
    }
    @Override public Object setValue(    Object field,    long value){
      if (null == field) {
        field=initValue(null);
      }
      dt.setTime(DateWritable.daysToMillis((int)value));
      ((SettableDateObjectInspector)this.objectInspector).set(field,dt);
      return field;
    }
    @Override public Object initValue(    Object ignored){
      return ((SettableDateObjectInspector)this.objectInspector).create(new Date(0));
    }
  }
.init(fieldObjInspector);
}
