{
  return new VectorExpressionWriterLong(){
    private Object obj;
    private Timestamp ts;
    public VectorExpressionWriter init(    SettableTimestampObjectInspector objInspector) throws HiveException {
      super.init(objInspector);
      ts=new Timestamp(0);
      obj=initValue(null);
      return this;
    }
    @Override public Object writeValue(    long value){
      TimestampUtils.assignTimeInNanoSec(value,ts);
      ((SettableTimestampObjectInspector)this.objectInspector).set(obj,ts);
      return obj;
    }
    @Override public Object setValue(    Object field,    long value){
      if (null == field) {
        field=initValue(null);
      }
      TimestampUtils.assignTimeInNanoSec(value,ts);
      ((SettableTimestampObjectInspector)this.objectInspector).set(field,ts);
      return field;
    }
    @Override public Object initValue(    Object ignored){
      return ((SettableTimestampObjectInspector)this.objectInspector).create(new Timestamp(0));
    }
  }
.init(fieldObjInspector);
}
