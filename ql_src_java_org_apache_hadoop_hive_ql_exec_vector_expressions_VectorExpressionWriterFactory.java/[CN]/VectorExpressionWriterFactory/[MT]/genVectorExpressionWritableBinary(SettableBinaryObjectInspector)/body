{
  return new VectorExpressionWriterBytes(){
    private Object obj;
    private byte[] bytes;
    public VectorExpressionWriter init(    SettableBinaryObjectInspector objInspector) throws HiveException {
      super.init(objInspector);
      this.bytes=ArrayUtils.EMPTY_BYTE_ARRAY;
      this.obj=initValue(null);
      return this;
    }
    @Override public Object writeValue(    byte[] value,    int start,    int length) throws HiveException {
      bytes=Arrays.copyOfRange(value,start,start + length);
      ((SettableBinaryObjectInspector)this.objectInspector).set(this.obj,bytes);
      return this.obj;
    }
    @Override public Object setValue(    Object field,    byte[] value,    int start,    int length) throws HiveException {
      if (null == field) {
        field=initValue(null);
      }
      bytes=Arrays.copyOfRange(value,start,start + length);
      ((SettableBinaryObjectInspector)this.objectInspector).set(field,bytes);
      return field;
    }
    @Override public Object initValue(    Object ignored){
      return ((SettableBinaryObjectInspector)this.objectInspector).create(ArrayUtils.EMPTY_BYTE_ARRAY);
    }
  }
.init(fieldObjInspector);
}
