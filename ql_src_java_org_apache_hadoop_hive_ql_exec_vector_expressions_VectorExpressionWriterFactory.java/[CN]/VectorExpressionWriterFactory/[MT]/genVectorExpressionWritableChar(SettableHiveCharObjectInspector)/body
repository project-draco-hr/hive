{
  return new VectorExpressionWriterBytes(){
    private Object obj;
    private Text text;
    public VectorExpressionWriter init(    SettableHiveCharObjectInspector objInspector) throws HiveException {
      super.init(objInspector);
      this.text=new Text();
      this.obj=initValue(null);
      return this;
    }
    @Override public Object writeValue(    byte[] value,    int start,    int length) throws HiveException {
      text.set(value,start,length);
      ((SettableHiveCharObjectInspector)this.objectInspector).set(this.obj,text.toString());
      return this.obj;
    }
    @Override public Object setValue(    Object field,    byte[] value,    int start,    int length) throws HiveException {
      if (null == field) {
        field=initValue(null);
      }
      text.set(value,start,length);
      ((SettableHiveCharObjectInspector)this.objectInspector).set(field,text.toString());
      return field;
    }
    @Override public Object initValue(    Object ignored){
      return ((SettableHiveCharObjectInspector)this.objectInspector).create(new HiveChar(StringUtils.EMPTY,-1));
    }
  }
.init(fieldObjInspector);
}
