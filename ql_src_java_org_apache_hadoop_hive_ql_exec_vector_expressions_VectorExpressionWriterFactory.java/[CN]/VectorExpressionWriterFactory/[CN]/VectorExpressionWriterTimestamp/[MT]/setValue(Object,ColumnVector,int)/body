{
  TimestampColumnVector dcv=(TimestampColumnVector)column;
  TimestampWritable timestampWritable=(TimestampWritable)dcv.getScratchWritable();
  if (timestampWritable == null) {
    timestampWritable=new TimestampWritable();
    dcv.setScratchWritable(timestampWritable);
  }
  if (dcv.noNulls && !dcv.isRepeating) {
    return setValue(field,TimestampUtils.timestampColumnVectorWritable(dcv,row,timestampWritable));
  }
 else   if (dcv.noNulls && dcv.isRepeating) {
    return setValue(field,TimestampUtils.timestampColumnVectorWritable(dcv,0,timestampWritable));
  }
 else   if (!dcv.noNulls && !dcv.isRepeating && !dcv.isNull[row]) {
    return setValue(field,TimestampUtils.timestampColumnVectorWritable(dcv,row,timestampWritable));
  }
 else   if (!dcv.noNulls && !dcv.isRepeating && dcv.isNull[row]) {
    return null;
  }
 else   if (!dcv.noNulls && dcv.isRepeating && !dcv.isNull[0]) {
    return setValue(field,TimestampUtils.timestampColumnVectorWritable(dcv,0,timestampWritable));
  }
 else   if (!dcv.noNulls && dcv.isRepeating && dcv.isNull[0]) {
    return null;
  }
  throw new HiveException(String.format("Incorrect null/repeating: row:%d noNulls:%b isRepeating:%b isNull[row]:%b isNull[0]:%b",row,dcv.noNulls,dcv.isRepeating,dcv.isNull[row],dcv.isNull[0]));
}
