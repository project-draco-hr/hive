{
  if (localWork == null || localWorkInited) {
    return;
  }
  localWorkInited=true;
  this.localWork=localWork;
  fetchOperators=new HashMap<String,FetchOperator>();
  for (  Map.Entry<String,FetchWork> entry : localWork.getAliasToFetchWork().entrySet()) {
    fetchOperators.put(entry.getKey(),new FetchOperator(entry.getValue(),new JobConf(hconf)));
    if (l4j != null) {
      l4j.info("fetchoperator for " + entry.getKey() + " created");
    }
  }
  for (  Map.Entry<String,FetchOperator> entry : fetchOperators.entrySet()) {
    Operator<? extends Serializable> forwardOp=localWork.getAliasToWork().get(entry.getKey());
    forwardOp.setExecContext(this.getExecContext());
    forwardOp.initialize(this.getExecContext().getJc(),new ObjectInspector[]{entry.getValue().getOutputObjectInspector()});
    l4j.info("fetchoperator for " + entry.getKey() + " initialized");
  }
}
