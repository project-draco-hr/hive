{
  super.initializeOp(hconf);
  firstRow=true;
  closeCalled=false;
  this.firstFetchHappened=false;
  this.inputFileChanged=false;
  int maxAlias=0;
  for (  Byte alias : order) {
    if (alias > maxAlias) {
      maxAlias=alias;
    }
  }
  maxAlias+=1;
  nextGroupStorage=new RowContainer[maxAlias];
  candidateStorage=new RowContainer[maxAlias];
  keyWritables=new ArrayList[maxAlias];
  nextKeyWritables=new ArrayList[maxAlias];
  fetchDone=new boolean[maxAlias];
  foundNextKeyGroup=new boolean[maxAlias];
  int bucketSize=HiveConf.getIntVar(hconf,HiveConf.ConfVars.HIVEMAPJOINBUCKETCACHESIZE);
  byte storePos=(byte)0;
  for (  Byte alias : order) {
    RowContainer rc=JoinUtil.getRowContainer(hconf,rowContainerStandardObjectInspectors.get(storePos),alias,bucketSize,spillTableDesc,conf,noOuterJoin);
    nextGroupStorage[storePos]=rc;
    RowContainer candidateRC=JoinUtil.getRowContainer(hconf,rowContainerStandardObjectInspectors.get((byte)storePos),alias,bucketSize,spillTableDesc,conf,noOuterJoin);
    candidateStorage[alias]=candidateRC;
    storePos++;
  }
  tagToAlias=conf.getTagToAlias();
  for (  Byte alias : order) {
    if (alias != (byte)posBigTable) {
      fetchDone[alias]=false;
    }
    foundNextKeyGroup[alias]=false;
  }
}
