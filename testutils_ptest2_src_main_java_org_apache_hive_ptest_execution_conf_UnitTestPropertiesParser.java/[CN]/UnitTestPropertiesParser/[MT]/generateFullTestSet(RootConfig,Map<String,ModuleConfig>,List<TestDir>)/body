{
  LinkedHashMap<String,LinkedHashSet<TestInfo>> result=new LinkedHashMap<>();
  for (  TestDir unitTestDir : unitTestDirs) {
    for (    File classFile : fileListProvider.listFiles(unitTestDir.path,new String[]{"class"},true)) {
      String className=classFile.getName();
      if (className.startsWith("Test") && !className.contains("$")) {
        String testName=className.replaceAll("\\.class$","");
        String pathPrefix=getPathPrefix(classFile,rootConfig.subDirForPrefix);
        String moduleName=getModuleNameFromPathPrefix(pathPrefix);
        logger.debug("In {}, found class {} with pathPrefix={}, moduleName={}",unitTestDir.path,className,pathPrefix,moduleName);
        ModuleConfig moduleConfig=moduleConfigs.get(moduleName);
        if (moduleConfig == null) {
          moduleConfig=FAKE_MODULE_CONFIG;
        }
        TestInfo testInfo=checkAndGetTestInfo(moduleName,pathPrefix,testName,rootConfig,moduleConfig);
        if (testInfo != null) {
          logger.info("Adding test: " + testInfo);
          addTestToResult(result,testInfo);
        }
      }
 else {
        logger.trace("In {}, found class {} with pathPrefix={}. Not a test",unitTestDir.path,className);
      }
    }
  }
  return result;
}
