{
  List<TestBatch> testBatches=new LinkedList<>();
  for (  Map.Entry<String,LinkedHashSet<TestInfo>> entry : allTests.entrySet()) {
    logger.info("Creating test batches for module={}, numTests={}",entry.getKey(),entry.getValue().size());
    String currentModule=entry.getKey();
    String currentPathPrefix=getPathPrefixFromModuleName(currentModule);
    int batchSize=rootConfig.batchSize;
    if (moduleConfigs.containsKey(currentModule)) {
      ModuleConfig moduleConfig=moduleConfigs.get(currentModule);
      int batchSizeModule=moduleConfig.batchSize;
      if (batchSizeModule != DEFAULT_PROP_BATCH_SIZE_NOT_SPECIFIED) {
        batchSize=batchSizeModule;
      }
    }
    if (batchSize == DEFAULT_PROP_BATCH_SIZE_INCLUDE_ALL) {
      batchSize=Integer.MAX_VALUE;
    }
    logger.info("batchSize determined to be {} for module={}",batchSize,currentModule);
    List<String> currentList=new LinkedList<>();
    for (    TestInfo testInfo : entry.getValue()) {
      if (testInfo.isIsolated || testInfo.skipBatching) {
        UnitTestBatch unitTestBatch=new UnitTestBatch(testCasePropertyName,Collections.singletonList(testInfo.testName),currentPathPrefix,!testInfo.isIsolated);
        testBatches.add(unitTestBatch);
      }
 else {
        currentList.add(testInfo.testName);
        if (currentList.size() == batchSize) {
          UnitTestBatch unitTestBatch=new UnitTestBatch(testCasePropertyName,Collections.unmodifiableList(currentList),currentPathPrefix,true);
          testBatches.add(unitTestBatch);
          currentList=new LinkedList<>();
        }
      }
    }
    if (!currentList.isEmpty()) {
      UnitTestBatch unitTestBatch=new UnitTestBatch(testCasePropertyName,Collections.unmodifiableList(currentList),currentPathPrefix,true);
      testBatches.add(unitTestBatch);
    }
  }
  return testBatches;
}
