{
  logger.info("{} created with sourceDirectory={}, testCasePropertyName={}, excludedProvide={}","fileListProvider={}, inTest={}",UnitTestPropertiesParser.class.getSimpleName(),sourceDirectory,testCasePropertyName,excludedProvided,(fileListProvider == null ? "null" : fileListProvider.getClass().getSimpleName()),inTest);
  Preconditions.checkNotNull(batchIdCounter,"batchIdCounter cannot be null");
  Preconditions.checkNotNull(testContext,"testContext cannot be null");
  Preconditions.checkNotNull(testCasePropertyName,"testCasePropertyName cannot be null");
  Preconditions.checkNotNull(sourceDirectory,"sourceDirectory cannot be null");
  Preconditions.checkNotNull(logger,"logger must be specified");
  this.batchIdCounter=batchIdCounter;
  this.unitRootContext=new Context(testContext.getSubProperties(Joiner.on(".").join(PROP_PREFIX_ROOT,"")));
  this.unitModuleContext=new Context(testContext.getSubProperties(Joiner.on(".").join(PROP_PREFIX_MODULE,"")));
  this.sourceDirectory=sourceDirectory;
  this.testCasePropertyName=testCasePropertyName;
  this.logger=logger;
  if (excludedProvided != null) {
    this.excludedProvided=excludedProvided;
  }
 else {
    this.excludedProvided=new HashSet<>();
  }
  if (fileListProvider != null) {
    this.fileListProvider=fileListProvider;
  }
 else {
    this.fileListProvider=new DefaultFileListProvider();
  }
  this.inTest=inTest;
}
