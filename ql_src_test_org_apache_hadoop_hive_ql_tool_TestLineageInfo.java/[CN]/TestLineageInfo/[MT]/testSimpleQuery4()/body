{
  LineageInfo lep=new LineageInfo();
  try {
    lep.getLineageInfo("FROM ( FROM ( FROM src1 src1 SELECT src1.key AS c1, src1.value AS c2 WHERE src1.key > 10 and src1.key < 20) a RIGHT OUTER JOIN ( FROM src2 src2 SELECT src2.key AS c3, src2.value AS c4 WHERE src2.key > 15 and src2.key < 25) b ON (a.c1 = b.c3) SELECT a.c1 AS c1, a.c2 AS c2, b.c3 AS c3, b.c4 AS c4) c SELECT c.c1, c.c2, c.c3, c.c4");
    TreeSet<String> i=new TreeSet<String>();
    TreeSet<String> o=new TreeSet<String>();
    i.add("src1");
    i.add("src2");
    if (!i.equals(lep.getInputTableList())) {
      fail("Input table not same");
    }
    if (!o.equals(lep.getOutputTableList())) {
      fail("Output table not same");
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
    fail("Failed");
  }
}
