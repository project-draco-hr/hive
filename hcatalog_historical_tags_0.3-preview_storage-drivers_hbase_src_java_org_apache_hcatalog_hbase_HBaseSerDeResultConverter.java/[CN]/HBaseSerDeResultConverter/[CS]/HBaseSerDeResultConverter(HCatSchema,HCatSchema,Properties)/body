{
  hbaseColumnMapping=hcatProperties.getProperty(HBaseConstants.PROPERTY_COLUMN_MAPPING_KEY);
  hcatProperties.setProperty(HBaseSerDe.HBASE_COLUMNS_MAPPING,hbaseColumnMapping);
  if (hcatProperties.containsKey(HBaseConstants.PROPERTY_OUTPUT_VERSION_KEY))   outputVersion=Long.parseLong(hcatProperties.getProperty(HBaseConstants.PROPERTY_OUTPUT_VERSION_KEY));
 else   outputVersion=null;
  this.schema=schema;
  if (outputSchema == null) {
    this.outputSchema=schema;
  }
 else {
    this.outputSchema=outputSchema;
  }
  hCatRecordOI=createStructObjectInspector();
  try {
    serDe=new HBaseSerDe();
    serDe.initialize(new Configuration(),hcatProperties);
    lazyHBaseRowOI=(StructObjectInspector)serDe.getObjectInspector();
  }
 catch (  SerDeException e) {
    throw new IOException("SerDe initialization failed",e);
  }
}
