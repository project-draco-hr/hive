{
  Configuration conf=getConf();
  args=new GenericOptionsParser(conf,args).getRemainingArgs();
  String serverUri=args[0];
  String inputTableName=args[1];
  String outputTableName=args[2];
  String dbName=null;
  String principalID=System.getProperty(HCatConstants.HCAT_METASTORE_PRINCIPAL);
  if (principalID != null)   conf.set(HCatConstants.HCAT_METASTORE_PRINCIPAL,principalID);
  Job job=new Job(conf,"WriteRC");
  HCatInputFormat.setInput(job,InputJobInfo.create(dbName,inputTableName,null,serverUri,principalID));
  job.setInputFormatClass(HCatInputFormat.class);
  job.setJarByClass(WriteRC.class);
  job.setMapperClass(Map.class);
  job.setOutputKeyClass(WritableComparable.class);
  job.setOutputValueClass(DefaultHCatRecord.class);
  job.setNumReduceTasks(0);
  HCatOutputFormat.setOutput(job,OutputJobInfo.create(dbName,outputTableName,null,serverUri,principalID));
  HCatSchema s=HCatInputFormat.getTableSchema(job);
  System.err.println("INFO: output schema explicitly set for writing:" + s);
  HCatOutputFormat.setSchema(job,s);
  job.setOutputFormatClass(HCatOutputFormat.class);
  return (job.waitForCompletion(true) ? 0 : 1);
}
