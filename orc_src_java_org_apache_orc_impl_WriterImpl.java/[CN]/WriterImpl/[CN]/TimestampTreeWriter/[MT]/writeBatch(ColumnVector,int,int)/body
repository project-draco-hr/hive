{
  super.writeBatch(vector,offset,length);
  TimestampColumnVector vec=(TimestampColumnVector)vector;
  Timestamp val;
  if (vector.isRepeating) {
    if (vector.noNulls || !vector.isNull[0]) {
      val=vec.asScratchTimestamp(0);
      long millis=val.getTime();
      indexStatistics.updateTimestamp(millis);
      if (createBloomFilter) {
        bloomFilter.addLong(millis);
      }
      final long secs=millis / MILLIS_PER_SECOND - base_timestamp;
      final long nano=formatNanos(val.getNanos());
      for (int i=0; i < length; ++i) {
        seconds.write(secs);
        nanos.write(nano);
      }
    }
  }
 else {
    for (int i=0; i < length; ++i) {
      if (vec.noNulls || !vec.isNull[i + offset]) {
        val=vec.asScratchTimestamp(i + offset);
        long millis=val.getTime();
        long secs=millis / MILLIS_PER_SECOND - base_timestamp;
        seconds.write(secs);
        nanos.write(formatNanos(val.getNanos()));
        indexStatistics.updateTimestamp(millis);
        if (createBloomFilter) {
          bloomFilter.addLong(millis);
        }
      }
    }
  }
}
