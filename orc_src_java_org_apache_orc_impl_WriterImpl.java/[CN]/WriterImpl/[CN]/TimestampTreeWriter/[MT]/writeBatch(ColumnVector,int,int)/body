{
  super.writeBatch(vector,offset,length);
  TimestampColumnVector vec=(TimestampColumnVector)vector;
  if (vector.isRepeating) {
    if (vector.noNulls || !vector.isNull[0]) {
      long millis=vec.getEpochMilliseconds(0);
      int adjustedNanos=vec.getSignedNanos(0);
      if (adjustedNanos < 0) {
        adjustedNanos+=NANOS_PER_SECOND;
      }
      indexStatistics.updateTimestamp(millis);
      if (createBloomFilter) {
        bloomFilter.addLong(millis);
      }
      final long secs=vec.getEpochSeconds(0) - base_timestamp;
      final long nano=formatNanos(adjustedNanos);
      for (int i=0; i < length; ++i) {
        seconds.write(secs);
        nanos.write(nano);
      }
    }
  }
 else {
    for (int i=0; i < length; ++i) {
      if (vec.noNulls || !vec.isNull[i + offset]) {
        long secs=vec.getEpochSeconds(i + offset) - base_timestamp;
        long millis=vec.getEpochMilliseconds(i + offset);
        int adjustedNanos=vec.getSignedNanos(i + offset);
        if (adjustedNanos < 0) {
          adjustedNanos+=NANOS_PER_SECOND;
        }
        seconds.write(secs);
        nanos.write(formatNanos(adjustedNanos));
        indexStatistics.updateTimestamp(millis);
        if (createBloomFilter) {
          bloomFilter.addLong(millis);
        }
      }
    }
  }
}
