{
  Vertex vertex=dag.getVertex(vertexName);
  ProcessorDescriptor processorDescriptor=vertex.getProcessorDescriptor();
  List<RootInputLeafOutput<InputDescriptor,InputInitializerDescriptor>> inputs=vertex.getInputs();
  List<RootInputLeafOutput<OutputDescriptor,OutputCommitterDescriptor>> outputs=vertex.getOutputs();
  Preconditions.checkState(inputs.size() == 1);
  Preconditions.checkState(outputs.size() == 1);
  List<InputSpec> inputSpecs=new ArrayList<>();
  for (  RootInputLeafOutput<InputDescriptor,InputInitializerDescriptor> input : inputs) {
    InputSpec inputSpec=new InputSpec(input.getName(),input.getIODescriptor(),1);
    inputSpecs.add(inputSpec);
  }
  List<OutputSpec> outputSpecs=new ArrayList<>();
  for (  RootInputLeafOutput<OutputDescriptor,OutputCommitterDescriptor> output : outputs) {
    OutputSpec outputSpec=new OutputSpec(output.getName(),output.getIODescriptor(),1);
    outputSpecs.add(outputSpec);
  }
  TezDAGID dagId=TezDAGID.getInstance(appId,0);
  TezVertexID vertexId=TezVertexID.getInstance(dagId,0);
  TezTaskID taskId=TezTaskID.getInstance(vertexId,index);
  TezTaskAttemptID taskAttemptId=TezTaskAttemptID.getInstance(taskId,0);
  return new TaskSpec(taskAttemptId,dag.getName(),vertexName,numSplits,processorDescriptor,inputSpecs,outputSpecs,null);
}
