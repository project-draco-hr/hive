{
  ObjectInspector inspector=field.getFieldObjectInspector();
  if (inspector.getCategory() != ObjectInspector.Category.STRUCT) {
    throw new IllegalStateException("invalid type value " + inspector.getTypeName());
  }
  output.reset();
  StructObjectInspector structOI=(StructObjectInspector)inspector;
  List<Object> elements=structOI.getStructFieldsDataAsList(object);
  List<? extends StructField> fields=structOI.getAllStructFieldRefs();
  for (int i=0; i < elements.size(); i++) {
    Object o=elements.get(i);
    StructField structField=fields.get(i);
    if (output.getLength() > 0) {
      output.write(separator);
    }
    serializer.writeWithLevel(structField.getFieldObjectInspector(),o,output,rowIdMapping,1);
  }
  return output.toByteArray();
}
