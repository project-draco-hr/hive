{
  DataInputStream in=new DataInputStream(new ByteBufferBackedInputStream(payload));
  try {
    String columnName=in.readUTF();
    LOG.info("Source of event: " + sourceName);
    List<SourceInfo> infos=this.sourceInfoMap.get(sourceName);
    if (infos == null) {
      throw new IllegalStateException("no source info for event source: " + sourceName);
    }
    SourceInfo info=null;
    for (    SourceInfo si : infos) {
      if (columnName.equals(si.columnName)) {
        info=si;
        break;
      }
    }
    if (info == null) {
      throw new IllegalStateException("no source info for column: " + columnName);
    }
    if (info.skipPruning.get()) {
    }
 else {
      boolean skip=in.readBoolean();
      if (skip) {
        info.skipPruning.set(true);
      }
 else {
        while (payload.hasRemaining()) {
          writable.readFields(in);
          Object row=info.deserializer.deserialize(writable);
          Object value=info.soi.getStructFieldData(row,info.field);
          value=ObjectInspectorUtils.copyToStandardObject(value,info.fieldInspector);
          if (LOG.isDebugEnabled()) {
            LOG.debug("Adding: " + value + " to list of required partitions");
          }
          info.values.add(value);
        }
      }
    }
  }
  finally {
    if (in != null) {
      in.close();
    }
  }
  return sourceName;
}
