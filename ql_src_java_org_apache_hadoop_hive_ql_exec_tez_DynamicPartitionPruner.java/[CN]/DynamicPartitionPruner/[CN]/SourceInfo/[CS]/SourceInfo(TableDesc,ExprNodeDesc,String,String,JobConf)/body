{
  this.skipPruning.set(false);
  this.partKey=partKey;
  this.columnName=columnName;
  this.columnType=columnType;
  deserializer=ReflectionUtils.newInstance(table.getDeserializerClass(),null);
  deserializer.initialize(jobConf,table.getProperties());
  ObjectInspector inspector=deserializer.getObjectInspector();
  LOG.debug("Type of obj insp: " + inspector.getTypeName());
  soi=(StructObjectInspector)inspector;
  List<? extends StructField> fields=soi.getAllStructFieldRefs();
  if (fields.size() > 1) {
    LOG.error("expecting single field in input");
  }
  field=fields.get(0);
  fieldInspector=ObjectInspectorUtils.getStandardObjectInspector(field.getFieldObjectInspector());
}
