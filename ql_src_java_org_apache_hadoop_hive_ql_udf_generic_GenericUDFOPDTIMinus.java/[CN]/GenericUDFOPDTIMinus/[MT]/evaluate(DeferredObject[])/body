{
switch (minusOpType) {
case INTERVALYM_MINUS_INTERVALYM:
{
      HiveIntervalYearMonth iym1=PrimitiveObjectInspectorUtils.getHiveIntervalYearMonth(arguments[intervalArg1Idx].get(),inputOIs[intervalArg1Idx]);
      HiveIntervalYearMonth iym2=PrimitiveObjectInspectorUtils.getHiveIntervalYearMonth(arguments[intervalArg2Idx].get(),inputOIs[intervalArg2Idx]);
      return handleIntervalYearMonthResult(dtm.subtract(iym1,iym2));
    }
case DATE_MINUS_INTERVALYM:
{
    HiveIntervalYearMonth iym1=PrimitiveObjectInspectorUtils.getHiveIntervalYearMonth(arguments[intervalArg1Idx].get(),inputOIs[intervalArg1Idx]);
    Date dt1=PrimitiveObjectInspectorUtils.getDate(arguments[dtArg1Idx].get(),inputOIs[dtArg1Idx]);
    return handleDateResult(dtm.subtract(dt1,iym1));
  }
case TIMESTAMP_MINUS_INTERVALYM:
{
  HiveIntervalYearMonth iym1=PrimitiveObjectInspectorUtils.getHiveIntervalYearMonth(arguments[intervalArg1Idx].get(),inputOIs[intervalArg1Idx]);
  Timestamp ts1=PrimitiveObjectInspectorUtils.getTimestamp(arguments[dtArg1Idx].get(),inputOIs[dtArg1Idx]);
  return handleTimestampResult(dtm.subtract(ts1,iym1));
}
case INTERVALDT_MINUS_INTERVALDT:
{
HiveIntervalDayTime idt1=PrimitiveObjectInspectorUtils.getHiveIntervalDayTime(arguments[intervalArg1Idx].get(),inputOIs[intervalArg1Idx]);
HiveIntervalDayTime idt2=PrimitiveObjectInspectorUtils.getHiveIntervalDayTime(arguments[intervalArg2Idx].get(),inputOIs[intervalArg2Idx]);
return handleIntervalDayTimeResult(dtm.subtract(idt1,idt2));
}
case TIMESTAMP_MINUS_INTERVALDT:
{
HiveIntervalDayTime idt1=PrimitiveObjectInspectorUtils.getHiveIntervalDayTime(arguments[intervalArg1Idx].get(),inputOIs[intervalArg1Idx]);
Timestamp ts1=PrimitiveObjectInspectorUtils.getTimestamp(arguments[dtArg1Idx].get(),inputOIs[dtArg1Idx]);
return handleTimestampResult(dtm.subtract(ts1,idt1));
}
case TIMESTAMP_MINUS_TIMESTAMP:
{
Timestamp ts1=PrimitiveObjectInspectorUtils.getTimestamp(arguments[dtArg1Idx].get(),inputOIs[dtArg1Idx]);
Timestamp ts2=PrimitiveObjectInspectorUtils.getTimestamp(arguments[dtArg2Idx].get(),inputOIs[dtArg2Idx]);
return handleIntervalDayTimeResult(dtm.subtract(ts1,ts2));
}
default :
throw new HiveException("Unknown PlusOpType " + minusOpType);
}
}
