{
  ArrayList<String> outputColumns=new ArrayList<String>();
  for (int i=0; i < 2; i++) {
    outputColumns.add("_col" + i);
  }
  Operator<ReduceSinkDesc> op0=OperatorFactory.get(PlanUtils.getReduceSinkDesc(Utilities.makeList(getStringColumn("0")),Utilities.makeList(getStringColumn("0"),getStringColumn("1")),outputColumns,false,-1,1,-1));
  Operator<SelectDesc> op4=OperatorFactory.get(new SelectDesc(Utilities.makeList(getStringColumn("key"),getStringColumn("value")),outputColumns),op0);
  addMapWork(mr,src,"a",op4);
  ReduceWork rWork=new ReduceWork();
  mr.setReduceWork(rWork);
  rWork.setNumReduceTasks(Integer.valueOf(1));
  rWork.setKeyDesc(op0.getConf().getKeySerializeInfo());
  rWork.getTagToValueDesc().add(op0.getConf().getValueSerializeInfo());
  Operator<FileSinkDesc> op3=OperatorFactory.get(new FileSinkDesc(tmpdir + File.separator + "mapredplan5.out",Utilities.defaultTd,false));
  Operator<ExtractDesc> op2=OperatorFactory.get(new ExtractDesc(getStringColumn(Utilities.ReduceField.VALUE.toString())),op3);
  rWork.setReducer(op2);
}
