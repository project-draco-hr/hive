{
  mr.setNumReduceTasks(Integer.valueOf(1));
  ArrayList<String> outputColumns=new ArrayList<String>();
  for (int i=0; i < 2; i++)   outputColumns.add("_col" + i);
  Operator<reduceSinkDesc> op1=OperatorFactory.get(PlanUtils.getReduceSinkDesc(Utilities.makeList(getStringColumn("tkey")),Utilities.makeList(getStringColumn("tkey"),getStringColumn("tvalue")),outputColumns,false,-1,1,-1));
  Operator<scriptDesc> op0=OperatorFactory.get(new scriptDesc("\'/bin/cat\'",PlanUtils.getDefaultTableDesc("" + Utilities.tabCode,"tkey,tvalue"),PlanUtils.getDefaultTableDesc("" + Utilities.tabCode,"tkey,tvalue"),TextRecordReader.class),op1);
  Operator<selectDesc> op4=OperatorFactory.get(new selectDesc(Utilities.makeList(getStringColumn("key"),getStringColumn("value")),outputColumns),op0);
  Utilities.addMapWork(mr,src,"a",op4);
  mr.setKeyDesc(op1.getConf().getKeySerializeInfo());
  mr.getTagToValueDesc().add(op1.getConf().getValueSerializeInfo());
  Operator<fileSinkDesc> op3=OperatorFactory.get(new fileSinkDesc(tmpdir + "mapredplan6.out",Utilities.defaultTd,false));
  Operator<filterDesc> op2=OperatorFactory.get(getTestFilterDesc("0"),op3);
  Operator<extractDesc> op5=OperatorFactory.get(new extractDesc(getStringColumn(Utilities.ReduceField.VALUE.toString())),op2);
  mr.setReducer(op5);
}
