{
  List<? extends Node> children=nd.getChildren();
  opStack.push(nd);
  Boolean skip=dispatchAndReturn(nd,opStack);
  Operator<? extends OperatorDesc> currentRoot=ctx.currentRootOperator;
  Operator<? extends OperatorDesc> parentOfRoot=ctx.parentOfRoot;
  List<UnionOperator> currentUnionOperators=ctx.currentUnionOperators;
  BaseWork preceedingWork=ctx.preceedingWork;
  if (skip == null || !skip) {
    for (    Node ch : children) {
      ctx.currentRootOperator=currentRoot;
      ctx.parentOfRoot=parentOfRoot;
      ctx.preceedingWork=preceedingWork;
      ctx.currentUnionOperators=new ArrayList<>();
      ctx.currentUnionOperators.addAll(currentUnionOperators);
      walk(ch);
    }
  }
  opStack.pop();
}
