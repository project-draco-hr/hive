{
  FileSystem dstFs=null;
  Path toPath=null;
  try {
    Path fromPath=work.getFromPath();
    toPath=work.getToPath();
    console.printInfo("Copying data from " + fromPath.toString()," to " + toPath.toString());
    FileSystem srcFs=fromPath.getFileSystem(conf);
    dstFs=toPath.getFileSystem(conf);
    FileStatus[] srcs=LoadSemanticAnalyzer.matchFilesOrDir(srcFs,fromPath);
    if (srcs == null || srcs.length == 0) {
      if (work.isErrorOnSrcEmpty()) {
        console.printError("No files matching path: " + fromPath.toString());
        return 3;
      }
 else {
        return 0;
      }
    }
    boolean inheritPerms=conf.getBoolVar(HiveConf.ConfVars.HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS);
    if (!FileUtils.mkdir(dstFs,toPath,inheritPerms,conf)) {
      console.printError("Cannot make target directory: " + toPath.toString());
      return 2;
    }
    for (    FileStatus oneSrc : srcs) {
      console.printInfo("Copying file: " + oneSrc.getPath().toString());
      LOG.debug("Copying file: " + oneSrc.getPath().toString());
      if (!FileUtils.copy(srcFs,oneSrc.getPath(),dstFs,toPath,false,true,conf)) {
        console.printError("Failed to copy: '" + oneSrc.getPath().toString() + "to: '"+ toPath.toString()+ "'");
        return 1;
      }
    }
    return 0;
  }
 catch (  Exception e) {
    console.printError("Failed with exception " + e.getMessage(),"\n" + StringUtils.stringifyException(e));
    return (1);
  }
}
