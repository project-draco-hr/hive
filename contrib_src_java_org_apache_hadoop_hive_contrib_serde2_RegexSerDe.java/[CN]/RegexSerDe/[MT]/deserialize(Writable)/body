{
  if (inputPattern == null) {
    throw new SerDeException("This table does not have serde property \"input.regex\"!");
  }
  Text rowText=(Text)blob;
  Matcher m=inputPattern.matcher(rowText.toString());
  if (!m.matches()) {
    unmatchedRows++;
    if (unmatchedRows >= nextUnmatchedRows) {
      nextUnmatchedRows=getNextNumberToDisplay(nextUnmatchedRows);
      LOG.warn("" + unmatchedRows + " unmatched rows are found: "+ rowText);
    }
    return null;
  }
  for (int c=0; c < numColumns; c++) {
    try {
      row.set(c,m.group(c + 1));
    }
 catch (    RuntimeException e) {
      partialMatchedRows++;
      if (partialMatchedRows >= nextPartialMatchedRows) {
        nextPartialMatchedRows=getNextNumberToDisplay(nextPartialMatchedRows);
        LOG.warn("" + partialMatchedRows + " partially unmatched rows are found, "+ " cannot find group "+ c+ ": "+ rowText);
      }
      row.set(c,null);
    }
  }
  return row;
}
