{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetDbName()).compareTo(other.isSetDbName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDbName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.dbName,other.dbName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTableName()).compareTo(other.isSetTableName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTableName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.tableName,other.tableName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRootPath()).compareTo(other.isSetRootPath());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRootPath()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.rootPath,other.rootPath);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetSharedSDPartitionSpec()).compareTo(other.isSetSharedSDPartitionSpec());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSharedSDPartitionSpec()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.sharedSDPartitionSpec,other.sharedSDPartitionSpec);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetPartitionList()).compareTo(other.isSetPartitionList());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetPartitionList()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.partitionList,other.partitionList);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
