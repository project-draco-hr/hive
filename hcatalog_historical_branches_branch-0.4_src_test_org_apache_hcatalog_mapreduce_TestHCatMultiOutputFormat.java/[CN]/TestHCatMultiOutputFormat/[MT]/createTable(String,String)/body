{
  Table tbl=new Table();
  tbl.setDbName(DATABASE);
  tbl.setTableName(tableName);
  StorageDescriptor sd=new StorageDescriptor();
  sd.setCols(ColumnHolder.colMapping.get(tableName));
  tbl.setSd(sd);
  sd.setParameters(new HashMap<String,String>());
  sd.setSerdeInfo(new SerDeInfo());
  sd.getSerdeInfo().setName(tbl.getTableName());
  sd.getSerdeInfo().setParameters(new HashMap<String,String>());
  sd.setInputFormat(org.apache.hadoop.hive.ql.io.RCFileInputFormat.class.getName());
  sd.setOutputFormat(org.apache.hadoop.hive.ql.io.RCFileOutputFormat.class.getName());
  sd.getSerdeInfo().getParameters().put(org.apache.hadoop.hive.serde.Constants.SERIALIZATION_FORMAT,"1");
  sd.getSerdeInfo().setSerializationLib(org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe.class.getName());
  tbl.setPartitionKeys(ColumnHolder.partitionCols);
  hmsc.createTable(tbl);
  FileSystem fs=FileSystem.get(mrConf);
  fs.setPermission(new Path(warehousedir,tableName),new FsPermission(tablePerm));
}
