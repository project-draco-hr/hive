{
  PrimitiveTypeInfo[] inputObjInspectorsTypeInfos=VectorizedBatchUtil.primitiveTypeInfosFromStructObjectInspector((StructObjectInspector)inputObjInspectors[posBigTable]);
  List<Integer> projectedColumns=vContext.getProjectedColumns();
  int projectionSize=vContext.getProjectedColumns().size();
  List<TypeInfo> typeInfoList=new ArrayList<TypeInfo>();
  List<Integer> noNullsProjectionList=new ArrayList<Integer>();
  for (int i=0; i < projectionSize; i++) {
    int projectedColumn=projectedColumns.get(i);
    if (batch.cols[projectedColumn] != null) {
      typeInfoList.add(inputObjInspectorsTypeInfos[i]);
      noNullsProjectionList.add(projectedColumn);
    }
  }
  int[] noNullsProjection=ArrayUtils.toPrimitive(noNullsProjectionList.toArray(new Integer[0]));
  int noNullsProjectionSize=noNullsProjection.length;
  bigTableTypeInfos=typeInfoList.toArray(new TypeInfo[0]);
  bigTableVectorSerializeRow=new VectorSerializeRow<LazyBinarySerializeWrite>(new LazyBinarySerializeWrite(noNullsProjectionSize));
  bigTableVectorSerializeRow.init(bigTableTypeInfos,noNullsProjection);
  bigTableVectorDeserializeRow=new VectorDeserializeRow<LazyBinaryDeserializeRead>(new LazyBinaryDeserializeRead(bigTableTypeInfos));
  bigTableVectorDeserializeRow.init(noNullsProjection);
}
