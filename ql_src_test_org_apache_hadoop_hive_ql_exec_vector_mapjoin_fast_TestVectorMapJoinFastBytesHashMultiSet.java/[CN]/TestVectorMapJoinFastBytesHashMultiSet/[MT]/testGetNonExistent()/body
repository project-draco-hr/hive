{
  random=new Random(98222);
  VectorMapJoinFastMultiKeyHashMultiSet map=new VectorMapJoinFastMultiKeyHashMultiSet(false,CAPACITY,LOAD_FACTOR,WB_SIZE);
  VerifyFastBytesHashMultiSet verifyTable=new VerifyFastBytesHashMultiSet();
  byte[] key1=new byte[random.nextInt(MAX_KEY_LENGTH)];
  random.nextBytes(key1);
  map.testPutRow(key1);
  verifyTable.add(key1);
  verifyTable.verify(map);
  byte[] key2=new byte[random.nextInt(MAX_KEY_LENGTH)];
  random.nextBytes(key2);
  VectorMapJoinHashMultiSetResult hashMultiSetResult=map.createHashMultiSetResult();
  JoinUtil.JoinResult joinResult=map.contains(key2,0,key2.length,hashMultiSetResult);
  assertTrue(joinResult == JoinUtil.JoinResult.NOMATCH);
  map.testPutRow(key2);
  verifyTable.add(key2);
  verifyTable.verify(map);
  byte[] key3=new byte[random.nextInt(MAX_KEY_LENGTH)];
  random.nextBytes(key3);
  hashMultiSetResult=map.createHashMultiSetResult();
  joinResult=map.contains(key3,0,key3.length,hashMultiSetResult);
  assertTrue(joinResult == JoinUtil.JoinResult.NOMATCH);
  assertEquals(hashMultiSetResult.count(),0);
}
