{
  int totalResource=context.getTotalAvailableResource().getMemory();
  int taskResource=context.getVertexTaskResource().getMemory();
  int availableSlots=totalResource / taskResource;
  float waves=conf.getFloat(TezConfiguration.TEZ_AM_GROUPING_SPLIT_WAVES,TezConfiguration.TEZ_AM_GROUPING_SPLIT_WAVES_DEFAULT);
  MapWork work=Utilities.getMapWork(jobConf);
  LOG.info("Grouping splits for " + work.getName() + ". "+ availableSlots+ " available slots, "+ waves+ " waves. Input format is: "+ realInputFormatName);
  InputFormat<?,?> inputFormat=(InputFormat<?,?>)ReflectionUtils.newInstance(Class.forName(realInputFormatName),jobConf);
  InputSplit[] splits=inputFormat.getSplits(jobConf,(int)(availableSlots * waves));
  LOG.info("Number of input splits: " + splits.length);
  Multimap<Integer,InputSplit> bucketSplitMultiMap=ArrayListMultimap.<Integer,InputSplit>create();
  Class<?> previousInputFormatClass=null;
  String previousDeserializerClass=null;
  Map<Map<String,PartitionDesc>,Map<String,PartitionDesc>> cache=new HashMap<Map<String,PartitionDesc>,Map<String,PartitionDesc>>();
  int i=0;
  for (  InputSplit s : splits) {
    Path path=((FileSplit)s).getPath();
    PartitionDesc pd=HiveFileFormatUtils.getPartitionDescFromPathRecursively(work.getPathToPartitionInfo(),path,cache);
    String currentDeserializerClass=pd.getDeserializerClassName();
    Class<?> currentInputFormatClass=pd.getInputFileFormatClass();
    if ((currentInputFormatClass != previousInputFormatClass) || (!currentDeserializerClass.equals(previousDeserializerClass))) {
      ++i;
    }
    previousInputFormatClass=currentInputFormatClass;
    previousDeserializerClass=currentDeserializerClass;
    if (LOG.isDebugEnabled()) {
      LOG.debug("Adding split " + path + " to src group "+ i);
    }
    bucketSplitMultiMap.put(i,s);
  }
  LOG.info("# Src groups for split generation: " + (i + 1));
  Multimap<Integer,InputSplit> groupedSplits=grouper.group(jobConf,bucketSplitMultiMap,availableSlots,waves);
  InputSplit[] flatSplits=groupedSplits.values().toArray(new InputSplit[0]);
  LOG.info("Number of grouped splits: " + flatSplits.length);
  List<TaskLocationHint> locationHints=grouper.createTaskLocationHints(flatSplits);
  Utilities.clearWork(jobConf);
  return new InputSplitInfoMem(flatSplits,locationHints,flatSplits.length,null,jobConf);
}
