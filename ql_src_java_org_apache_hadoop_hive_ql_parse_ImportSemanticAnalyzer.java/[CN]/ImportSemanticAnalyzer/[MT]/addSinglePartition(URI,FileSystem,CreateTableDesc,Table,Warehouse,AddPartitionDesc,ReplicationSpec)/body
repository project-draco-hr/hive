{
  AddPartitionDesc.OnePartitionDesc partSpec=addPartitionDesc.getPartition(0);
  if (tblDesc.isExternal() && tblDesc.getLocation() == null) {
    LOG.debug("Importing in-place: adding AddPart for partition " + partSpecToString(partSpec.getPartSpec()));
    Task<?> addPartTask=TaskFactory.get(new DDLWork(getInputs(),getOutputs(),addPartitionDesc),conf);
    return addPartTask;
  }
 else {
    String srcLocation=partSpec.getLocation();
    fixLocationInPartSpec(fs,tblDesc,table,wh,replicationSpec,partSpec);
    LOG.debug("adding dependent CopyWork/AddPart/MoveWork for partition " + partSpecToString(partSpec.getPartSpec()) + " with source location: "+ srcLocation);
    Path tgtLocation=new Path(partSpec.getLocation());
    Path tmpPath=ctx.getExternalTmpPath(tgtLocation);
    Task<?> copyTask=TaskFactory.get(new CopyWork(new Path(srcLocation),tmpPath,false),conf);
    Task<?> addPartTask=TaskFactory.get(new DDLWork(getInputs(),getOutputs(),addPartitionDesc),conf);
    LoadTableDesc loadTableWork=new LoadTableDesc(tmpPath,Utilities.getTableDesc(table),partSpec.getPartSpec(),true);
    loadTableWork.setInheritTableSpecs(false);
    Task<?> loadPartTask=TaskFactory.get(new MoveWork(getInputs(),getOutputs(),loadTableWork,null,false),conf);
    copyTask.addDependentTask(loadPartTask);
    addPartTask.addDependentTask(loadPartTask);
    rootTasks.add(copyTask);
    return addPartTask;
  }
}
