{
  if (authenticator != null) {
    return;
  }
  try {
    authenticator=HiveUtils.getAuthenticator(getConf(),HiveConf.ConfVars.HIVE_AUTHENTICATOR_MANAGER);
    if (userName != null) {
      authenticator=new SessionStateUserAuthenticator(this);
    }
    authenticator.setSessionState(this);
    authorizer=HiveUtils.getAuthorizeProviderManager(getConf(),HiveConf.ConfVars.HIVE_AUTHORIZATION_MANAGER,authenticator,true);
    if (authorizer == null) {
      HiveAuthorizerFactory authorizerFactory=HiveUtils.getAuthorizerFactory(getConf(),HiveConf.ConfVars.HIVE_AUTHORIZATION_MANAGER);
      authorizerV2=authorizerFactory.createHiveAuthorizer(new HiveMetastoreClientFactoryImpl(),getConf(),authenticator);
      getConf().setVar(ConfVars.HIVE_AUTHORIZATION_TABLE_OWNER_GRANTS,"insert,select,update,delete");
      String hooks=getConf().getVar(ConfVars.PREEXECHOOKS).trim();
      if (hooks.isEmpty()) {
        hooks=DisallowTransformHook.class.getName();
      }
 else {
        hooks=hooks + "," + DisallowTransformHook.class.getName();
      }
      LOG.debug("Configuring hooks : " + hooks);
      getConf().setVar(ConfVars.PREEXECHOOKS,hooks);
    }
    createTableGrants=CreateTableAutomaticGrant.create(getConf());
  }
 catch (  HiveException e) {
    throw new RuntimeException(e);
  }
  if (LOG.isDebugEnabled()) {
    Object authorizationClass=getAuthorizationMode() == AuthorizationMode.V1 ? getAuthorizer() : getAuthorizerV2();
    LOG.debug("Session is using authorization class " + authorizationClass.getClass());
  }
  return;
}
