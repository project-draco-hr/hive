{
  if (canDownloadResource(value)) {
    getConsole().printInfo("converting to local " + value);
    String location=getConf().getVar(HiveConf.ConfVars.DOWNLOADED_RESOURCES_DIR);
    String destinationName=new Path(value).getName();
    String prefix=destinationName;
    String postfix=null;
    int index=destinationName.lastIndexOf(".");
    if (index > 0) {
      prefix=destinationName.substring(0,index);
      postfix=destinationName.substring(index);
    }
    if (prefix.length() < 3) {
      prefix+=".tmp";
    }
    File resourceDir=new File(location);
    if (resourceDir.exists() && !resourceDir.isDirectory()) {
      throw new RuntimeException("The resource directory is not a directory, " + "resourceDir is set to " + resourceDir);
    }
    if (!resourceDir.exists() && !resourceDir.mkdirs()) {
      throw new RuntimeException("Couldn't create directory " + resourceDir);
    }
    File destinationFile;
    try {
      destinationFile=File.createTempFile(prefix,postfix,resourceDir);
    }
 catch (    Exception e) {
      throw new RuntimeException("Failed to create temporary file for " + value,e);
    }
    try {
      FileSystem fs=FileSystem.get(new URI(value),conf);
      fs.copyToLocalFile(new Path(value),new Path(destinationFile.getCanonicalPath()));
      value=destinationFile.getCanonicalPath();
      if (convertToUnix && DosToUnix.isWindowsScript(destinationFile)) {
        try {
          DosToUnix.convertWindowsScriptToUnix(destinationFile);
        }
 catch (        Exception e) {
          throw new RuntimeException("Caught exception while converting file " + destinationFile + " to unix line endings",e);
        }
      }
    }
 catch (    Exception e) {
      throw new RuntimeException("Failed to read external resource " + value,e);
    }
  }
  return value;
}
