{
  HiveConf conf=getConf();
  Path rootHDFSDirPath=createRootHDFSDir(conf);
  String scratchDirPermission=HiveConf.getVar(conf,HiveConf.ConfVars.SCRATCHDIRPERMISSION);
  Path path;
  path=new Path(rootHDFSDirPath,userName);
  hdfsScratchDirURIString=path.toUri().toString();
  createPath(conf,path,scratchDirPermission,false,false);
  path=new Path(HiveConf.getVar(conf,HiveConf.ConfVars.LOCALSCRATCHDIR));
  createPath(conf,path,scratchDirPermission,true,false);
  path=new Path(HiveConf.getVar(conf,HiveConf.ConfVars.DOWNLOADED_RESOURCES_DIR));
  createPath(conf,path,scratchDirPermission,true,false);
  String sessionId=getSessionId();
  hdfsSessionPath=new Path(hdfsScratchDirURIString,sessionId);
  createPath(conf,hdfsSessionPath,scratchDirPermission,false,true);
  conf.set(HDFS_SESSION_PATH_KEY,hdfsSessionPath.toUri().toString());
  if (conf.getBoolVar(HiveConf.ConfVars.HIVE_SCRATCH_DIR_LOCK)) {
    FileSystem fs=hdfsSessionPath.getFileSystem(conf);
    FSDataOutputStream hdfsSessionPathInfoFile=fs.create(new Path(hdfsSessionPath,INFO_FILE_NAME),true);
    hdfsSessionPathInfoFile.writeUTF("process: " + ManagementFactory.getRuntimeMXBean().getName() + "\n");
    hdfsSessionPathInfoFile.close();
    hdfsSessionPathLockFile=fs.create(new Path(hdfsSessionPath,LOCK_FILE_NAME),true);
  }
  localSessionPath=new Path(HiveConf.getVar(conf,HiveConf.ConfVars.LOCALSCRATCHDIR),sessionId);
  createPath(conf,localSessionPath,scratchDirPermission,true,true);
  conf.set(LOCAL_SESSION_PATH_KEY,localSessionPath.toUri().toString());
  hdfsTmpTableSpace=new Path(hdfsSessionPath,TMP_PREFIX);
  createPath(conf,hdfsTmpTableSpace,scratchDirPermission,false,false);
  conf.set(TMP_TABLE_SPACE_KEY,hdfsTmpTableSpace.toUri().toString());
}
