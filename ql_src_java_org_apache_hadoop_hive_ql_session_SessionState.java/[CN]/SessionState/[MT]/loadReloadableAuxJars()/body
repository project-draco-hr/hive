{
  final Set<String> reloadedAuxJars=new HashSet<String>();
  final String renewableJarPath=sessionConf.getVar(ConfVars.HIVERELOADABLEJARS);
  if (renewableJarPath == null || renewableJarPath.isEmpty()) {
    return;
  }
  Set<String> jarPaths=FileUtils.getJarFilesByPath(renewableJarPath,sessionConf);
  if (!jarPaths.isEmpty()) {
    reloadedAuxJars.addAll(jarPaths);
  }
  if (preReloadableAuxJars != null && !preReloadableAuxJars.isEmpty()) {
    Utilities.removeFromClassPath(preReloadableAuxJars.toArray(new String[0]));
  }
  if (reloadedAuxJars != null && !reloadedAuxJars.isEmpty()) {
    URLClassLoader currentCLoader=(URLClassLoader)SessionState.get().getConf().getClassLoader();
    currentCLoader=(URLClassLoader)Utilities.addToClassPath(currentCLoader,reloadedAuxJars.toArray(new String[0]));
    sessionConf.setClassLoader(currentCLoader);
    Thread.currentThread().setContextClassLoader(currentCLoader);
  }
  preReloadableAuxJars.clear();
  preReloadableAuxJars.addAll(reloadedAuxJars);
}
