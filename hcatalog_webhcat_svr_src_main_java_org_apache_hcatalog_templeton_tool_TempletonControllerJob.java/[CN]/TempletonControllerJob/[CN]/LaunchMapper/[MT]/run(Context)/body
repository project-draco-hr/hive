{
  Configuration conf=context.getConfiguration();
  Process proc=startJob(context,conf.get("user.name"),conf.get(OVERRIDE_CLASSPATH));
  String statusdir=conf.get(STATUSDIR_NAME);
  ExecutorService pool=Executors.newCachedThreadPool();
  executeWatcher(pool,conf,context.getJobID(),proc.getInputStream(),statusdir,STDOUT_FNAME);
  executeWatcher(pool,conf,context.getJobID(),proc.getErrorStream(),statusdir,STDERR_FNAME);
  KeepAlive keepAlive=startCounterKeepAlive(pool,context);
  proc.waitFor();
  keepAlive.sendReport=false;
  pool.shutdown();
  if (!pool.awaitTermination(WATCHER_TIMEOUT_SECS,TimeUnit.SECONDS))   pool.shutdownNow();
  writeExitValue(conf,proc.exitValue(),statusdir);
  JobState state=new JobState(context.getJobID().toString(),conf);
  state.setExitValue(proc.exitValue());
  state.setCompleteStatus("done");
  state.close();
  if (proc.exitValue() != 0)   System.err.println("templeton: job failed with exit code " + proc.exitValue());
 else   System.err.println("templeton: job completed with exit code 0");
}
