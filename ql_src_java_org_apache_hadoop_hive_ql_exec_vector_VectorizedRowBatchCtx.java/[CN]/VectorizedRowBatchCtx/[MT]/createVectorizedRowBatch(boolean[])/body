{
  if (columnsToIncludeTruncated == null) {
    return createVectorizedRowBatch();
  }
  LOG.info("createVectorizedRowBatch columnsToIncludeTruncated " + Arrays.toString(columnsToIncludeTruncated));
  int totalColumnCount=rowColumnTypeInfos.length + scratchColumnTypeNames.length;
  VectorizedRowBatch result=new VectorizedRowBatch(totalColumnCount);
  for (int i=0; i < dataColumnCount; i++) {
    TypeInfo typeInfo=rowColumnTypeInfos[i];
    result.cols[i]=VectorizedBatchUtil.createColumnVector(typeInfo);
  }
  for (int i=dataColumnCount; i < dataColumnCount + partitionColumnCount; i++) {
    TypeInfo typeInfo=rowColumnTypeInfos[i];
    result.cols[i]=VectorizedBatchUtil.createColumnVector(typeInfo);
  }
  for (int i=0; i < scratchColumnTypeNames.length; i++) {
    String typeName=scratchColumnTypeNames[i];
    result.cols[rowColumnTypeInfos.length + i]=VectorizedBatchUtil.createColumnVector(typeName);
  }
  result.setPartitionInfo(dataColumnCount,partitionColumnCount);
  result.reset();
  return result;
}
