{
  setWorkOutputPath(context);
  context.getConfiguration().set("mapred.output.key.class",NullWritable.class.getName());
  String jobInfoString=context.getConfiguration().get(HCatConstants.HCAT_KEY_OUTPUT_INFO);
  OutputJobInfo jobInfo=(OutputJobInfo)HCatUtil.deserialize(jobInfoString);
  StorerInfo storeInfo=jobInfo.getTableInfo().getStorerInfo();
  HCatStorageHandler storageHandler=HCatUtil.getStorageHandler(context.getConfiguration(),storeInfo);
  Class<? extends SerDe> serde=storageHandler.getSerDeClass();
  SerDe sd=(SerDe)ReflectionUtils.newInstance(serde,context.getConfiguration());
  context.getConfiguration().set("mapred.output.value.class",sd.getSerializedClass().getName());
  RecordWriter<WritableComparable<?>,HCatRecord> rw=new FileRecordWriterContainer(HCatBaseOutputFormat.getJobInfo(context).isDynamicPartitioningUsed() ? null : getBaseOutputFormat().getRecordWriter(null,new JobConf(context.getConfiguration()),FileOutputFormat.getUniqueName(new JobConf(context.getConfiguration()),"part"),InternalUtil.createReporter(context)),context);
  return rw;
}
