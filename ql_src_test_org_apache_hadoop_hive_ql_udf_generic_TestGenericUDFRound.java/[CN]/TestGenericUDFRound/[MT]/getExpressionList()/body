{
  List<ExprNodeDesc> exprs=new ArrayList<ExprNodeDesc>(cols.length);
  for (int i=0; i < cols.length; i++) {
    exprs.add(OperatorTestUtils.getStringColumn(cols[i]));
  }
  ExprNodeDesc[] scales={new ExprNodeConstantDesc(TypeInfoFactory.intTypeInfo,-2),new ExprNodeConstantDesc(TypeInfoFactory.byteTypeInfo,(byte)0),new ExprNodeConstantDesc(TypeInfoFactory.shortTypeInfo,(short)3),new ExprNodeConstantDesc(TypeInfoFactory.intTypeInfo,0),new ExprNodeConstantDesc(TypeInfoFactory.longTypeInfo,-2L),new ExprNodeConstantDesc(TypeInfoFactory.intTypeInfo,0),new ExprNodeConstantDesc(TypeInfoFactory.intTypeInfo,-2),new ExprNodeConstantDesc(TypeInfoFactory.intTypeInfo,3)};
  List<ExprNodeDesc> earr=new ArrayList<ExprNodeDesc>();
  for (int j=0; j < cols.length; j++) {
    ExprNodeDesc r=TypeCheckProcFactory.DefaultExprProcessor.getFuncExprNodeDesc("round",exprs.get(j),scales[j]);
    earr.add(r);
  }
  return earr;
}
