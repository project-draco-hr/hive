{
  TypeDescription schema=TypeDescription.createLong();
  long[] inp=new long[]{-4513343538618202711l,-2911390882471569739l,-2,Long.MAX_VALUE};
  List<Long> input=Lists.newArrayList(Longs.asList(inp));
  Writer writer=OrcFile.createWriter(testFilePath,OrcFile.writerOptions(conf).setSchema(schema).stripeSize(100000).compress(CompressionKind.NONE).bufferSize(10000));
  VectorizedRowBatch batch=schema.createRowBatch();
  for (  Long l : input) {
    appendLong(batch,l);
  }
  writer.addRowBatch(batch);
  writer.close();
  Reader reader=OrcFile.createReader(testFilePath,OrcFile.readerOptions(conf).filesystem(fs));
  RecordReader rows=reader.rows();
  batch=reader.getSchema().createRowBatch();
  int idx=0;
  while (rows.nextBatch(batch)) {
    for (int r=0; r < batch.size; ++r) {
      assertEquals(input.get(idx++).longValue(),((LongColumnVector)batch.cols[0]).vector[r]);
    }
  }
}
