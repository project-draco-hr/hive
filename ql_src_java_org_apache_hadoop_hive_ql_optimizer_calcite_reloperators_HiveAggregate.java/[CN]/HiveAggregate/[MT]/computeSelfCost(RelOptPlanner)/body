{
  checkInputCorrectBucketing();
  if (this.bucketedInput) {
    return HiveCost.FACTORY.makeZeroCost();
  }
 else {
    final Double rCount=RelMetadataQuery.getRowCount(this.getInput());
    if (rCount == null) {
      return null;
    }
    final double cpuCost=HiveCostUtil.computeSortCPUCost(rCount);
    final Double rAverageSize=RelMetadataQuery.getAverageRowSize(this.getInput());
    if (rAverageSize == null) {
      return null;
    }
    final double ioCost=HiveCostUtil.computeSortIOCost(new Pair<Double,Double>(rCount,rAverageSize));
    return HiveCost.FACTORY.makeCost(rCount,cpuCost,ioCost);
  }
}
