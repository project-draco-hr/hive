{
  Matcher jar=JAR_COMPLETE.matcher(line);
  if (jar.find())   return jar.group().trim();
  Matcher pig=PIG_COMPLETE.matcher(line);
  if (pig.find())   return pig.group().trim();
  Matcher hive=HIVE_COMPLETE.matcher(line);
  if (hive.find()) {
    return "map " + hive.group(1) + " reduce "+ hive.group(2);
  }
  Matcher tez=TEZ_COMPLETE.matcher(line);
  if (tez.find()) {
    int totalTasks=0;
    int completedTasks=0;
    do {
      Matcher counts=TEZ_COUNTERS.matcher(tez.group());
      List<String> items=new ArrayList<String>(4);
      while (counts.find()) {
        items.add(counts.group());
      }
      completedTasks+=Integer.parseInt(items.get(1));
      if (items.size() == 3) {
        totalTasks+=Integer.parseInt(items.get(2));
      }
 else {
        totalTasks+=Integer.parseInt(items.get(3));
      }
    }
 while (tez.find());
    if (totalTasks == 0) {
      return "0% complete (0 total tasks)";
    }
    return completedTasks * 100 / totalTasks + "% complete";
  }
  return null;
}
