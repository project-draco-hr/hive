{
  StringBuilder sb=new StringBuilder("START").append(header).append(":\n");
  List<String> propKeys=new ArrayList<String>(map.keySet());
  Collections.sort(propKeys);
  for (  String propKey : propKeys) {
    if (propKey.toLowerCase().contains("path")) {
      StringTokenizer st=new StringTokenizer(map.get(propKey),File.pathSeparator);
      if (st.countTokens() > 1) {
        sb.append(propKey).append("=\n");
        while (st.hasMoreTokens()) {
          sb.append("    ").append(st.nextToken()).append(File.pathSeparator).append('\n');
        }
      }
 else {
        sb.append(propKey).append('=').append(map.get(propKey)).append('\n');
      }
    }
 else {
      sb.append(propKey).append('=').append(LogUtils.maskIfPassword(propKey,map.get(propKey)));
      sb.append('\n');
    }
  }
  return sb.append("END").append(header).append('\n');
}
