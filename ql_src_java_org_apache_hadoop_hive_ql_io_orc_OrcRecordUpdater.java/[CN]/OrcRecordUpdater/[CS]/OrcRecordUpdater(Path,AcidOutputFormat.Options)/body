{
  this.options=options;
  if (options.getTableProperties() != null) {
    this.acidOperationalProperties=AcidUtils.getAcidOperationalProperties(options.getTableProperties());
  }
 else {
    this.acidOperationalProperties=AcidUtils.getAcidOperationalProperties(options.getConfiguration());
  }
  this.bucket.set(options.getBucket());
  this.path=AcidUtils.createFilename(path,options);
  this.deleteEventWriter=null;
  this.deleteEventPath=null;
  FileSystem fs=options.getFilesystem();
  if (fs == null) {
    fs=path.getFileSystem(options.getConfiguration());
  }
  this.fs=fs;
  Path formatFile=new Path(path,ACID_FORMAT);
  if (!fs.exists(formatFile)) {
    try (FSDataOutputStream strm=fs.create(formatFile,false)){
      strm.writeInt(ORC_ACID_VERSION);
    }
 catch (    IOException ioe) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Failed to create " + path + "/"+ ACID_FORMAT+ " with "+ ioe);
      }
    }
  }
  if (options.getMinimumTransactionId() != options.getMaximumTransactionId() && !options.isWritingBase()) {
    flushLengths=fs.create(OrcAcidUtils.getSideFile(this.path),true,8,options.getReporter());
  }
 else {
    flushLengths=null;
  }
  this.writerOptions=null;
  if (options.isWritingBase()) {
    if (options instanceof OrcOptions) {
      writerOptions=((OrcOptions)options).getOrcOptions();
    }
    if (writerOptions == null) {
      writerOptions=OrcFile.writerOptions(options.getTableProperties(),options.getConfiguration());
    }
  }
 else {
    AcidOutputFormat.Options optionsCloneForDelta=options.clone();
    if (optionsCloneForDelta instanceof OrcOptions) {
      writerOptions=((OrcOptions)optionsCloneForDelta).getOrcOptions();
    }
    if (writerOptions == null) {
      writerOptions=OrcFile.writerOptions(optionsCloneForDelta.getTableProperties(),optionsCloneForDelta.getConfiguration());
    }
    int baseBufferSizeValue=writerOptions.getBufferSize();
    long baseStripeSizeValue=writerOptions.getStripeSize();
    int ratio=(int)OrcConf.BASE_DELTA_RATIO.getLong(options.getConfiguration());
    writerOptions.bufferSize(baseBufferSizeValue / ratio);
    writerOptions.stripeSize(baseStripeSizeValue / ratio);
    writerOptions.blockPadding(false);
  }
  writerOptions.fileSystem(fs).callback(indexBuilder);
  rowInspector=(StructObjectInspector)options.getInspector();
  writerOptions.inspector(createEventSchema(findRecId(options.getInspector(),options.getRecordIdColumn())));
  this.writer=OrcFile.createWriter(this.path,writerOptions);
  if (this.acidOperationalProperties.isSplitUpdate()) {
    this.deleteEventPath=AcidUtils.createFilename(path,options.writingDeleteDelta(true));
  }
  item=new OrcStruct(FIELDS);
  item.setFieldValue(OPERATION,operation);
  item.setFieldValue(CURRENT_TRANSACTION,currentTransaction);
  item.setFieldValue(ORIGINAL_TRANSACTION,originalTransaction);
  item.setFieldValue(BUCKET,bucket);
  item.setFieldValue(ROW_ID,rowId);
}
