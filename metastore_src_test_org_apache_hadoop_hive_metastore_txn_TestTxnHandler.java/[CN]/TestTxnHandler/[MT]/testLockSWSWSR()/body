{
  LockComponent comp=new LockComponent(LockType.SHARED_WRITE,LockLevel.DB,"mydb");
  comp.setTablename("mytable");
  comp.setPartitionname("mypartition");
  comp.setOperationType(DataOperationType.UPDATE);
  List<LockComponent> components=new ArrayList<LockComponent>(1);
  components.add(comp);
  LockRequest req=new LockRequest(components,"me","localhost");
  req.setTxnid(openTxn());
  LockResponse res=txnHandler.lock(req);
  assertTrue(res.getState() == LockState.ACQUIRED);
  comp=new LockComponent(LockType.SHARED_WRITE,LockLevel.DB,"mydb");
  comp.setTablename("mytable");
  comp.setPartitionname("mypartition");
  comp.setOperationType(DataOperationType.DELETE);
  components.clear();
  components.add(comp);
  req=new LockRequest(components,"me","localhost");
  req.setTxnid(openTxn());
  res=txnHandler.lock(req);
  assertTrue(res.getState() == LockState.WAITING);
  comp=new LockComponent(LockType.SHARED_READ,LockLevel.DB,"mydb");
  comp.setTablename("mytable");
  comp.setPartitionname("mypartition");
  comp.setOperationType(DataOperationType.INSERT);
  components.clear();
  components.add(comp);
  req=new LockRequest(components,"me","localhost");
  res=txnHandler.lock(req);
  assertTrue(res.getState() == LockState.ACQUIRED);
}
