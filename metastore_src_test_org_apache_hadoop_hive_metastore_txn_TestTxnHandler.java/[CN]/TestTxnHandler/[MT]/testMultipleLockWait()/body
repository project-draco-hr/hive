{
  LockComponent comp=new LockComponent(LockType.EXCLUSIVE,LockLevel.DB,"mydb");
  comp.setTablename("mytable");
  comp.setPartitionname("mypartition");
  List<LockComponent> components=new ArrayList<LockComponent>(2);
  components.add(comp);
  comp=new LockComponent(LockType.EXCLUSIVE,LockLevel.DB,"mydb");
  comp.setTablename("mytable");
  comp.setPartitionname("anotherpartition");
  components.add(comp);
  LockRequest req=new LockRequest(components,"me","localhost");
  LockResponse res=txnHandler.lock(req);
  long lockid1=res.getLockid();
  assertTrue(res.getState() == LockState.ACQUIRED);
  comp=new LockComponent(LockType.EXCLUSIVE,LockLevel.DB,"mydb");
  comp.setTablename("mytable");
  comp.setPartitionname("mypartition");
  components=new ArrayList<LockComponent>(1);
  components.add(comp);
  req=new LockRequest(components,"me","localhost");
  res=txnHandler.lock(req);
  long lockid2=res.getLockid();
  assertTrue(res.getState() == LockState.WAITING);
  txnHandler.unlock(new UnlockRequest(lockid1));
  res=txnHandler.checkLock(new CheckLockRequest(lockid2));
  assertTrue(res.getState() == LockState.ACQUIRED);
}
