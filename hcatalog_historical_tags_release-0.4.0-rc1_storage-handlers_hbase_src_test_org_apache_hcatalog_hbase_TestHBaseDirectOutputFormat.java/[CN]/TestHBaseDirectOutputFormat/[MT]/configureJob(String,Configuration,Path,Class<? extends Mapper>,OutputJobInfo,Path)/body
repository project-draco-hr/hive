{
  Job job=new Job(conf,jobName);
  job.setWorkingDirectory(workingDir);
  job.setJarByClass(this.getClass());
  job.setMapperClass(mapperClass);
  job.setInputFormatClass(TextInputFormat.class);
  TextInputFormat.setInputPaths(job,inputPath);
  job.setOutputFormatClass(HCatOutputFormat.class);
  HCatOutputFormat.setOutput(job,outputJobInfo);
  String txnString=job.getConfiguration().get(HBaseConstants.PROPERTY_WRITE_TXN_KEY);
  HCatOutputFormat.setOutput(job,outputJobInfo);
  assertEquals(txnString,job.getConfiguration().get(HBaseConstants.PROPERTY_WRITE_TXN_KEY));
  String jobString=job.getConfiguration().get(HCatConstants.HCAT_KEY_OUTPUT_INFO);
  outputJobInfo=(OutputJobInfo)HCatUtil.deserialize(jobString);
  Job job2=new Job(conf);
  HCatOutputFormat.setOutput(job2,outputJobInfo);
  assertEquals(txnString,job2.getConfiguration().get(HBaseConstants.PROPERTY_WRITE_TXN_KEY));
  job.setMapOutputKeyClass(BytesWritable.class);
  job.setMapOutputValueClass(HCatRecord.class);
  job.setOutputKeyClass(BytesWritable.class);
  job.setOutputValueClass(HCatRecord.class);
  job.setNumReduceTasks(0);
  return job;
}
