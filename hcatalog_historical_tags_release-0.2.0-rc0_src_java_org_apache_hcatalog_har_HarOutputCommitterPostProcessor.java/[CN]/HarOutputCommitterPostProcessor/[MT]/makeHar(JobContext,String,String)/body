{
  int lastSep=harFile.lastIndexOf(Path.SEPARATOR_CHAR);
  Path archivePath=new Path(harFile.substring(0,lastSep));
  final String[] args={"-archiveName",harFile.substring(lastSep + 1,harFile.length()),"-p",dir,"*",archivePath.toString()};
  try {
    Configuration newConf=new Configuration();
    FileSystem fs=archivePath.getFileSystem(newConf);
    newConf.set("mapreduce.job.credentials.binary",System.getenv("HADOOP_TOKEN_FILE_LOCATION"));
    final HadoopArchives har=new HadoopArchives(newConf);
    int rc=ToolRunner.run(har,args);
    if (rc != 0) {
      throw new Exception("Har returned error code " + rc);
    }
    fs.delete(new Path(dir),true);
  }
 catch (  Exception e) {
    throw new HCatException("Error creating Har [" + harFile + "] from ["+ dir+ "]",e);
  }
}
