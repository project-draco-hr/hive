{
  if (other == null) {
    return;
  }
  if (nbins == 0 || nusedbins == 0) {
    nbins=(int)(other.get(0).get());
    nusedbins=(other.size() - 1) / 2;
    bins=new Coord[nbins + 1];
    for (int i=1; i < other.size(); i+=2) {
      bins[(i - 1) / 2]=new Coord();
      bins[(i - 1) / 2].x=other.get(i).get();
      bins[(i - 1) / 2].y=other.get(i + 1).get();
    }
  }
 else {
    Coord[] tmp_bins=new Coord[nusedbins + (other.size() - 1) / 2];
    for (int j=0; j < tmp_bins.length; j++) {
      tmp_bins[j]=new Coord();
    }
    int i;
    for (i=0; i < nusedbins; i++) {
      tmp_bins[i].x=bins[i].x;
      tmp_bins[i].y=bins[i].y;
    }
    for (int j=1; j < other.size(); j+=2, i++) {
      tmp_bins[i].x=other.get(j).get();
      tmp_bins[i].y=other.get(j + 1).get();
    }
    Arrays.sort(tmp_bins);
    bins=tmp_bins;
    nusedbins+=(other.size() - 1) / 2;
    trim();
  }
}
