{
  while (nusedbins > nbins) {
    double smallestdiff=bins[1].x - bins[0].x;
    int smallestdiffloc=0, smallestdiffcount=1;
    for (int i=1; i < nusedbins - 1; i++) {
      double diff=bins[i + 1].x - bins[i].x;
      if (diff < smallestdiff) {
        smallestdiff=diff;
        smallestdiffloc=i;
        smallestdiffcount=1;
      }
 else {
        if (diff == smallestdiff && prng.nextDouble() <= (1.0 / ++smallestdiffcount)) {
          smallestdiffloc=i;
        }
      }
    }
    double d=bins[smallestdiffloc].y + bins[smallestdiffloc + 1].y;
    bins[smallestdiffloc].x*=bins[smallestdiffloc].y / d;
    bins[smallestdiffloc].x+=bins[smallestdiffloc + 1].x / d * bins[smallestdiffloc + 1].y;
    bins[smallestdiffloc].y=d;
    for (int i=smallestdiffloc + 1; i < nusedbins - 1; i++) {
      bins[i].x=bins[i + 1].x;
      bins[i].y=bins[i + 1].y;
    }
    nusedbins--;
  }
}
