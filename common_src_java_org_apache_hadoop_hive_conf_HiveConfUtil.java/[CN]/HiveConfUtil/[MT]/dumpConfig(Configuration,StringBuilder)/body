{
  Set<String> hiddenSet=getHiddenSet(originalConf);
  sb.append("Values omitted for security reason if present: ").append(hiddenSet).append("\n");
  Configuration conf=new Configuration(originalConf);
  stripConfigurations(conf,hiddenSet);
  Iterator<Map.Entry<String,String>> configIter=conf.iterator();
  List<Map.Entry<String,String>> configVals=new ArrayList<>();
  while (configIter.hasNext()) {
    configVals.add(configIter.next());
  }
  Collections.sort(configVals,new Comparator<Map.Entry<String,String>>(){
    @Override public int compare(    Map.Entry<String,String> ent,    Map.Entry<String,String> ent2){
      return ent.getKey().compareTo(ent2.getKey());
    }
  }
);
  for (  Map.Entry<String,String> entry : configVals) {
    if (entry.getKey().toLowerCase().contains("path")) {
      StringTokenizer st=new StringTokenizer(conf.get(entry.getKey()),File.pathSeparator);
      sb.append(entry.getKey()).append("=\n");
      while (st.hasMoreTokens()) {
        sb.append("    ").append(st.nextToken()).append(File.pathSeparator).append('\n');
      }
    }
 else {
      sb.append(entry.getKey()).append('=').append(conf.get(entry.getKey())).append('\n');
    }
  }
}
