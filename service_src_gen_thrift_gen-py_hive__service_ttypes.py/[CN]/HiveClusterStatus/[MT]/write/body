def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('HiveClusterStatus')
    if (self.taskTrackers != None):
        oprot.writeFieldBegin('taskTrackers', TType.I32, 1)
        oprot.writeI32(self.taskTrackers)
        oprot.writeFieldEnd()
    if (self.mapTasks != None):
        oprot.writeFieldBegin('mapTasks', TType.I32, 2)
        oprot.writeI32(self.mapTasks)
        oprot.writeFieldEnd()
    if (self.reduceTasks != None):
        oprot.writeFieldBegin('reduceTasks', TType.I32, 3)
        oprot.writeI32(self.reduceTasks)
        oprot.writeFieldEnd()
    if (self.maxMapTasks != None):
        oprot.writeFieldBegin('maxMapTasks', TType.I32, 4)
        oprot.writeI32(self.maxMapTasks)
        oprot.writeFieldEnd()
    if (self.maxReduceTasks != None):
        oprot.writeFieldBegin('maxReduceTasks', TType.I32, 5)
        oprot.writeI32(self.maxReduceTasks)
        oprot.writeFieldEnd()
    if (self.state != None):
        oprot.writeFieldBegin('state', TType.I32, 6)
        oprot.writeI32(self.state)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()

    def validate(self):
        return
