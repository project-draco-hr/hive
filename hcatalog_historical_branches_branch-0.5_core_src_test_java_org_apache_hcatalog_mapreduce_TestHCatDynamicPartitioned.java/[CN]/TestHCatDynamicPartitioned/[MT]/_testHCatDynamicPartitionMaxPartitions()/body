{
  HiveConf hc=new HiveConf(this.getClass());
  int maxParts=hiveConf.getIntVar(HiveConf.ConfVars.DYNAMICPARTITIONMAXPARTS);
  LOG.info("Max partitions allowed = {}",maxParts);
  IOException exc=null;
  try {
    generateWriteRecords(maxParts + 5,maxParts + 2,10);
    runMRCreate(null,dataColumns,writeRecords,maxParts + 5,false);
  }
 catch (  IOException e) {
    exc=e;
  }
  if (HCatConstants.HCAT_IS_DYNAMIC_MAX_PTN_CHECK_ENABLED) {
    assertTrue(exc != null);
    assertTrue(exc instanceof HCatException);
    assertEquals(ErrorType.ERROR_TOO_MANY_DYNAMIC_PTNS,((HCatException)exc).getErrorType());
  }
 else {
    assertTrue(exc == null);
    runMRRead(maxParts + 5);
  }
  query="show partitions " + tableName;
  retCode=driver.run(query).getResponseCode();
  if (retCode != 0) {
    throw new Exception("Error " + retCode + " running query "+ query);
  }
  res=new ArrayList<String>();
  driver.getResults(res);
  assertEquals(NUM_PARTITIONS,res.size());
  query="select * from " + tableName;
  retCode=driver.run(query).getResponseCode();
  if (retCode != 0) {
    throw new Exception("Error " + retCode + " running query "+ query);
  }
  res=new ArrayList<String>();
  driver.getResults(res);
  assertEquals(NUM_RECORDS,res.size());
}
