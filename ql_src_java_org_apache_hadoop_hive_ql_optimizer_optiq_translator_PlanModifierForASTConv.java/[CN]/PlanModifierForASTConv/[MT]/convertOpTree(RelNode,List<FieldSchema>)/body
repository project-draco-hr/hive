{
  RelNode newTopNode=rel;
  if (LOG.isDebugEnabled()) {
    LOG.debug("Original plan for PlanModifier\n " + RelOptUtil.toString(newTopNode));
  }
  if (!(newTopNode instanceof ProjectRelBase) && !(newTopNode instanceof SortRel)) {
    newTopNode=introduceDerivedTable(newTopNode);
    if (LOG.isDebugEnabled()) {
      LOG.debug("Plan after top-level introduceDerivedTable\n " + RelOptUtil.toString(newTopNode));
    }
  }
  convertOpTree(newTopNode,(RelNode)null);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Plan after nested convertOpTree\n " + RelOptUtil.toString(newTopNode));
  }
  Pair<RelNode,RelNode> topSelparentPair=HiveOptiqUtil.getTopLevelSelect(newTopNode);
  fixTopOBSchema(newTopNode,topSelparentPair,resultSchema);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Plan after fixTopOBSchema\n " + RelOptUtil.toString(newTopNode));
  }
  topSelparentPair=HiveOptiqUtil.getTopLevelSelect(newTopNode);
  newTopNode=renameTopLevelSelectInResultSchema(newTopNode,topSelparentPair,resultSchema);
  if (LOG.isDebugEnabled()) {
    LOG.debug("Final plan after modifier\n " + RelOptUtil.toString(newTopNode));
  }
  return newTopNode;
}
