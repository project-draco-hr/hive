{
  RelNode parentOforiginalProjRel=topSelparentPair.getKey();
  HiveProjectRel originalProjRel=(HiveProjectRel)topSelparentPair.getValue();
  List<RexNode> rootChildExps=originalProjRel.getChildExps();
  if (resultSchema.size() != rootChildExps.size()) {
    throw new OptiqSemanticException("Result Schema didn't match Optiq Optimized Op Tree Schema");
  }
  List<String> newSelAliases=new ArrayList<String>();
  String colAlias;
  for (int i=0; i < rootChildExps.size(); i++) {
    colAlias=resultSchema.get(i).getName();
    if (colAlias.startsWith("_"))     colAlias=colAlias.substring(1);
    newSelAliases.add(colAlias);
  }
  HiveProjectRel replacementProjectRel=HiveProjectRel.create(originalProjRel.getChild(),originalProjRel.getChildExps(),newSelAliases);
  if (rootRel == originalProjRel) {
    return replacementProjectRel;
  }
 else {
    parentOforiginalProjRel.replaceInput(0,replacementProjectRel);
    return rootRel;
  }
}
