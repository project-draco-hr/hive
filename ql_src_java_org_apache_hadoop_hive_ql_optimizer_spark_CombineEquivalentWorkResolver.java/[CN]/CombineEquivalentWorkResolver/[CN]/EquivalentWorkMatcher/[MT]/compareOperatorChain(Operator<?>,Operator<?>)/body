{
  boolean result=compareCurrentOperator(firstOperator,secondOperator);
  if (!result) {
    return result;
  }
  List<Operator<? extends OperatorDesc>> firstOperatorChildOperators=firstOperator.getChildOperators();
  List<Operator<? extends OperatorDesc>> secondOperatorChildOperators=secondOperator.getChildOperators();
  if (firstOperatorChildOperators == null && secondOperatorChildOperators != null) {
    return false;
  }
 else   if (firstOperatorChildOperators != null && secondOperatorChildOperators == null) {
    return false;
  }
 else   if (firstOperatorChildOperators != null && secondOperatorChildOperators != null) {
    if (firstOperatorChildOperators.size() != secondOperatorChildOperators.size()) {
      return false;
    }
    int size=firstOperatorChildOperators.size();
    for (int i=0; i < size; i++) {
      result=compareOperatorChain(firstOperatorChildOperators.get(i),secondOperatorChildOperators.get(i));
      if (!result) {
        return false;
      }
    }
  }
  return true;
}
