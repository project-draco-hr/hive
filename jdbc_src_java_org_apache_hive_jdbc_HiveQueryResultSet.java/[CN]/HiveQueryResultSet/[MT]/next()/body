{
  if (isClosed) {
    throw new SQLException("Resultset is closed");
  }
  if (emptyResultSet || (maxRows > 0 && rowsFetched >= maxRows)) {
    return false;
  }
  try {
    if (fetchedRows == null || !fetchedRowsItr.hasNext()) {
      TFetchResultsReq fetchReq=new TFetchResultsReq(stmtHandle,TFetchOrientation.FETCH_NEXT,fetchSize);
      TFetchResultsResp fetchResp=client.FetchResults(fetchReq);
      Utils.verifySuccessWithInfo(fetchResp.getStatus());
      fetchedRows=fetchResp.getResults().getRows();
      fetchedRowsItr=fetchedRows.iterator();
    }
    String rowStr="";
    if (fetchedRowsItr.hasNext()) {
      row=fetchedRowsItr.next();
    }
 else {
      return false;
    }
    rowsFetched++;
    if (LOG.isDebugEnabled()) {
      LOG.debug("Fetched row string: " + rowStr);
    }
  }
 catch (  SQLException eS) {
    throw eS;
  }
catch (  Exception ex) {
    ex.printStackTrace();
    throw new SQLException("Error retrieving next row",ex);
  }
  return true;
}
