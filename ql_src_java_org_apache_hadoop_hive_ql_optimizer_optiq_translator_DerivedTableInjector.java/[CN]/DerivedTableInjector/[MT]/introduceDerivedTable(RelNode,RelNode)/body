{
  int i=0;
  int pos=-1;
  List<RelNode> childList=parent.getInputs();
  for (  RelNode child : childList) {
    if (child == rel) {
      pos=i;
      break;
    }
    i++;
  }
  if (pos == -1) {
    throw new RuntimeException("Couldn't find child node in parent's inputs");
  }
  List<RexNode> projectList=Lists.transform(rel.getRowType().getFieldList(),new Function<RelDataTypeField,RexNode>(){
    public RexNode apply(    RelDataTypeField field){
      return rel.getCluster().getRexBuilder().makeInputRef(field.getType(),field.getIndex());
    }
  }
);
  HiveProjectRel select=HiveProjectRel.create(rel.getCluster(),rel,projectList,rel.getRowType(),rel.getCollationList());
  parent.replaceInput(pos,select);
}
