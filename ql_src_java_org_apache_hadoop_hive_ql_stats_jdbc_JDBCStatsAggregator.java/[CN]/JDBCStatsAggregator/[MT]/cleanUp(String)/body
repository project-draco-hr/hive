{
  Utilities.SQLCommand<Void> execUpdate=new Utilities.SQLCommand<Void>(){
    @Override public Void run(    PreparedStatement stmt) throws SQLException {
      stmt.executeUpdate();
      return null;
    }
  }
;
  try {
    PreparedStatement delStmt=Utilities.prepareWithRetry(conn,JDBCStatsUtils.getDeleteAggr(rowID,comment),waitWindow,maxRetries);
    for (int failures=0; ; failures++) {
      try {
        Utilities.executeWithRetry(execUpdate,delStmt,waitWindow,maxRetries);
        return true;
      }
 catch (      SQLRecoverableException e) {
        if (failures >= maxRetries) {
          return false;
        }
        closeConnection();
        long waitTime=Utilities.getRandomWaitTime(waitWindow,failures,r);
        try {
          Thread.sleep(waitTime);
        }
 catch (        InterruptedException iex) {
        }
        if (!connect(hiveconf)) {
          LOG.error("Error during clean-up. " + e);
          return false;
        }
      }
catch (      SQLException e) {
        LOG.error("Error during clean-up. " + e);
        return false;
      }
    }
  }
 catch (  SQLException e) {
    LOG.error("Error during publishing aggregation. " + e);
    return false;
  }
}
