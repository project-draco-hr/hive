{
  ShowDatabasesDesc showDatabases=work.getShowDatabasesDesc();
  if (showDatabases != null) {
    authorize(HiveOperation.SHOWDATABASES.getInputRequiredPrivileges(),HiveOperation.SHOWDATABASES.getOutputRequiredPrivileges());
  }
  DropDatabaseDesc dropDb=work.getDropDatabaseDesc();
  if (dropDb != null) {
    Database db=cntxt.getHive().getDatabase(dropDb.getDatabaseName());
    if (db != null) {
      authorize(db,Privilege.DROP);
    }
  }
  DescDatabaseDesc descDb=work.getDescDatabaseDesc();
  if (descDb != null) {
    Database db=cntxt.getHive().getDatabase(descDb.getDatabaseName());
    authorize(db,Privilege.SELECT);
  }
  SwitchDatabaseDesc switchDb=work.getSwitchDatabaseDesc();
  if (switchDb != null) {
    Database db=cntxt.getHive().getDatabase(switchDb.getDatabaseName());
    authorize(db,Privilege.SELECT);
  }
  ShowTablesDesc showTables=work.getShowTblsDesc();
  if (showTables != null) {
    String dbName=showTables.getDbName() == null ? SessionState.get().getCurrentDatabase() : showTables.getDbName();
    authorize(cntxt.getHive().getDatabase(dbName),Privilege.SELECT);
  }
  ShowTableStatusDesc showTableStatus=work.getShowTblStatusDesc();
  if (showTableStatus != null) {
    String dbName=showTableStatus.getDbName() == null ? SessionState.get().getCurrentDatabase() : showTableStatus.getDbName();
    authorize(cntxt.getHive().getDatabase(dbName),Privilege.SELECT);
  }
  DropTableDesc dropTable=work.getDropTblDesc();
  if (dropTable != null) {
    if (dropTable.getPartSpecs() == null) {
    }
 else {
      for (      DropTableDesc.PartSpec partSpec : dropTable.getPartSpecs()) {
        Table table=hive.getTable(SessionState.get().getCurrentDatabase(),dropTable.getTableName());
        List<Partition> partitions=null;
        try {
          partitions=hive.getPartitionsByFilter(table,partSpec.getPartSpec().getExprString());
        }
 catch (        Exception e) {
          throw new HiveException(e);
        }
        for (        Partition part : partitions) {
          authorize(part,Privilege.DROP);
        }
      }
    }
  }
  AlterTableDesc alterTable=work.getAlterTblDesc();
  if (alterTable != null) {
    Table table=hive.getTable(SessionState.get().getCurrentDatabase(),Utilities.getDbTableName(alterTable.getOldName())[1],false);
    Partition part=null;
    if (alterTable.getPartSpec() != null) {
      part=hive.getPartition(table,alterTable.getPartSpec(),false);
    }
    String newLocation=alterTable.getNewLocation();
    if (alterTable.getOp() == AlterTableDesc.AlterTableTypes.ALTERLOCATION) {
      if (part != null) {
        authorize(part,Privilege.ALTER_DATA);
        part.setLocation(newLocation);
        authorize(part,Privilege.ALTER_DATA);
      }
 else {
        authorize(table,Privilege.ALTER_DATA);
        table.getTTable().getSd().setLocation(newLocation);
        authorize(table,Privilege.ALTER_DATA);
      }
    }
  }
  DescTableDesc descTable=work.getDescTblDesc();
  if (descTable != null) {
    String tableName=extractTableName(descTable.getTableName());
    authorizeTable(cntxt.getHive(),tableName,Privilege.SELECT);
  }
  ShowPartitionsDesc showParts=work.getShowPartsDesc();
  if (showParts != null) {
    String tableName=extractTableName(showParts.getTabName());
    authorizeTable(cntxt.getHive(),tableName,Privilege.SELECT);
  }
}
