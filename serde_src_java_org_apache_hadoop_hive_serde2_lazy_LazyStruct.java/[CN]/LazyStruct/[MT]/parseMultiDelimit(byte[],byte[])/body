{
  if (rawRow == null || fieldDelimit == null) {
    return;
  }
  if (fields == null) {
    List<? extends StructField> fieldRefs=oi.getAllStructFieldRefs();
    fields=new LazyObject[fieldRefs.size()];
    for (int i=0; i < fields.length; i++) {
      fields[i]=LazyFactory.createLazyObject(fieldRefs.get(i).getFieldObjectInspector());
    }
    fieldInited=new boolean[fields.length];
    startPosition=new int[fields.length + 1];
  }
  int[] delimitIndexes=findIndexes(rawRow,fieldDelimit);
  int diff=fieldDelimit.length - 1;
  startPosition[0]=0;
  for (int i=1; i < fields.length; i++) {
    if (delimitIndexes[i - 1] != -1) {
      int start=delimitIndexes[i - 1] + fieldDelimit.length;
      startPosition[i]=start - i * diff;
    }
 else {
      startPosition[i]=length + 1;
    }
  }
  startPosition[fields.length]=length + 1;
  Arrays.fill(fieldInited,false);
  parsed=true;
}
