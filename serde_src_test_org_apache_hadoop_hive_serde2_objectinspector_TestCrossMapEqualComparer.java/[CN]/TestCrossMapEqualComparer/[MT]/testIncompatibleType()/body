{
  StringTextMapHolder o1=new StringTextMapHolder();
  StructObjectInspector oi1=(StructObjectInspector)ObjectInspectorFactory.getReflectionObjectInspector(StringTextMapHolder.class,ObjectInspectorOptions.JAVA);
  LazySimpleSerDe serde=new LazySimpleSerDe();
  Configuration conf=new Configuration();
  Properties tbl=new Properties();
  tbl.setProperty(serdeConstants.LIST_COLUMNS,ObjectInspectorUtils.getFieldNames(oi1));
  tbl.setProperty(serdeConstants.LIST_COLUMN_TYPES,ObjectInspectorUtils.getFieldTypes(oi1));
  SerDeParameters serdeParams=LazySimpleSerDe.initSerdeParams(conf,tbl,LazySimpleSerDe.class.getName());
  SerDeUtils.initializeSerDe(serde,conf,tbl,null);
  ObjectInspector oi2=serde.getObjectInspector();
  Object o2=serializeAndDeserialize(o1,oi1,serde,serdeParams);
  int rc=ObjectInspectorUtils.compare(o1,oi1,o2,oi2,new CrossMapEqualComparer());
  assertEquals(0,rc);
  o1.mMap.put("42",new Text("The answer to Life, Universe And Everything"));
  o1.mMap.put("1729",new Text("A taxi cab number"));
  o2=serializeAndDeserialize(o1,oi1,serde,serdeParams);
  rc=ObjectInspectorUtils.compare(o1,oi1,o2,oi2,new CrossMapEqualComparer());
  assertEquals(0,rc);
  o1.mMap.put("1729",new Text("Hardy-Ramanujan Number"));
  rc=ObjectInspectorUtils.compare(o1,oi1,o2,oi2,new CrossMapEqualComparer());
  assertFalse(0 == rc);
}
