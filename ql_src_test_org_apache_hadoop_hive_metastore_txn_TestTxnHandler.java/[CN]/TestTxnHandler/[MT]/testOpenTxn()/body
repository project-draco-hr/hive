{
  long first=openTxn();
  assertEquals(1L,first);
  long second=openTxn();
  assertEquals(2L,second);
  GetOpenTxnsInfoResponse txnsInfo=txnHandler.getOpenTxnsInfo();
  assertEquals(2L,txnsInfo.getTxn_high_water_mark());
  assertEquals(2,txnsInfo.getOpen_txns().size());
  assertEquals(1L,txnsInfo.getOpen_txns().get(0).getId());
  assertEquals(TxnState.OPEN,txnsInfo.getOpen_txns().get(0).getState());
  assertEquals(2L,txnsInfo.getOpen_txns().get(1).getId());
  assertEquals(TxnState.OPEN,txnsInfo.getOpen_txns().get(1).getState());
  assertEquals("me",txnsInfo.getOpen_txns().get(1).getUser());
  assertEquals("localhost",txnsInfo.getOpen_txns().get(1).getHostname());
  GetOpenTxnsResponse txns=txnHandler.getOpenTxns();
  assertEquals(2L,txns.getTxn_high_water_mark());
  assertEquals(2,txns.getOpen_txns().size());
  boolean[] saw=new boolean[3];
  for (int i=0; i < saw.length; i++)   saw[i]=false;
  for (  Long tid : txns.getOpen_txns()) {
    saw[tid.intValue()]=true;
  }
  for (int i=1; i < saw.length; i++)   assertTrue(saw[i]);
}
