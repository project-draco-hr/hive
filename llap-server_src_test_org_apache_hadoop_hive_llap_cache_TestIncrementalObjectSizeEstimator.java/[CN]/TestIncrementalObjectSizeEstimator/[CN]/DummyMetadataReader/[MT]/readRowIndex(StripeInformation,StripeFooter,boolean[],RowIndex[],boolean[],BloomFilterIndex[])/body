{
  if (isEmpty) {
    return new RecordReaderImpl.Index(new RowIndex[]{},new BloomFilterIndex[]{});
  }
  ColumnStatistics cs=ColumnStatistics.newBuilder().setBucketStatistics(BucketStatistics.newBuilder().addCount(0)).setStringStatistics(StringStatistics.newBuilder().setMaximum("zzz").setMinimum("aaa")).setBinaryStatistics(BinaryStatistics.newBuilder().setSum(5)).setDateStatistics(DateStatistics.newBuilder().setMinimum(4545).setMaximum(6656)).setDecimalStatistics(DecimalStatistics.newBuilder().setMaximum("zzz").setMinimum("aaa")).setDoubleStatistics(DoubleStatistics.newBuilder().setMinimum(0.5).setMaximum(1.5)).setIntStatistics(IntegerStatistics.newBuilder().setMaximum(10).setMinimum(5)).setTimestampStatistics(TimestampStatistics.newBuilder().setMaximum(10)).build();
  RowIndex ri=RowIndex.newBuilder().addEntry(RowIndexEntry.newBuilder().addPositions(1)).addEntry(RowIndexEntry.newBuilder().addPositions(0).addPositions(2).setStatistics(cs)).build();
  RowIndex ri2=RowIndex.newBuilder().addEntry(RowIndexEntry.newBuilder().addPositions(3)).build();
  BloomFilterIndex bfi=BloomFilterIndex.newBuilder().addBloomFilter(BloomFilter.newBuilder().addBitset(0).addBitset(1)).build();
  if (doStreamStep) {
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    CodedOutputStream cos=CodedOutputStream.newInstance(baos);
    ri.writeTo(cos);
    cos.flush();
    ri=RowIndex.newBuilder().mergeFrom(baos.toByteArray()).build();
    baos=new ByteArrayOutputStream();
    cos=CodedOutputStream.newInstance(baos);
    ri2.writeTo(cos);
    cos.flush();
    ri2=RowIndex.newBuilder().mergeFrom(baos.toByteArray()).build();
    baos=new ByteArrayOutputStream();
    cos=CodedOutputStream.newInstance(baos);
    bfi.writeTo(cos);
    cos.flush();
    bfi=BloomFilterIndex.newBuilder().mergeFrom(baos.toByteArray()).build();
  }
  return new RecordReaderImpl.Index(new RowIndex[]{ri,ri2},new BloomFilterIndex[]{bfi});
}
