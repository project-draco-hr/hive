{
switch (((PrimitiveTypeInfo)basePrimitiveTypeInfo).getPrimitiveCategory()) {
case BOOLEAN:
    return (HCatContext.INSTANCE.getConf().isPresent() && HCatContext.INSTANCE.getConf().get().getBoolean(HCatConstants.HCAT_DATA_CONVERT_BOOLEAN_TO_INTEGER,HCatConstants.HCAT_DATA_CONVERT_BOOLEAN_TO_INTEGER_DEFAULT)) ? Type.INT : Type.BOOLEAN;
case BYTE:
  return (HCatContext.INSTANCE.getConf().isPresent() && HCatContext.INSTANCE.getConf().get().getBoolean(HCatConstants.HCAT_DATA_TINY_SMALL_INT_PROMOTION,HCatConstants.HCAT_DATA_TINY_SMALL_INT_PROMOTION_DEFAULT)) ? Type.INT : Type.TINYINT;
case DOUBLE:
return Type.DOUBLE;
case FLOAT:
return Type.FLOAT;
case INT:
return Type.INT;
case LONG:
return Type.BIGINT;
case SHORT:
return (HCatContext.INSTANCE.getConf().isPresent() && HCatContext.INSTANCE.getConf().get().getBoolean(HCatConstants.HCAT_DATA_TINY_SMALL_INT_PROMOTION,HCatConstants.HCAT_DATA_TINY_SMALL_INT_PROMOTION_DEFAULT)) ? Type.INT : Type.SMALLINT;
case STRING:
return Type.STRING;
case BINARY:
return Type.BINARY;
default :
throw new TypeNotPresentException(((PrimitiveTypeInfo)basePrimitiveTypeInfo).getTypeName(),null);
}
}
