{
  try {
    RCFileKeyBufferWrapper key=null;
    if (k instanceof CombineHiveKey) {
      key=(RCFileKeyBufferWrapper)((CombineHiveKey)k).getKey();
    }
 else {
      key=(RCFileKeyBufferWrapper)k;
    }
    fixTmpPathAlterTable(key.inputPath.getParent());
    if (outWriter == null) {
      codec=key.codec;
      columnNumber=key.keyBuffer.getColumnNumber();
      RCFileOutputFormat.setColumnNumber(jc,columnNumber);
      outWriter=new RCFile.Writer(fs,jc,outPath,null,codec);
    }
    boolean sameCodec=((codec == key.codec) || codec.getClass().equals(key.codec.getClass()));
    if ((key.keyBuffer.getColumnNumber() != columnNumber) || (!sameCodec)) {
      throw new IOException("RCFileMerge failed because the input files use different CompressionCodec or have different column number setting.");
    }
    outWriter.flushBlock(key.keyBuffer,value.valueBuffer,key.recordLength,key.keyLength,key.compressedKeyLength);
  }
 catch (  Throwable e) {
    this.exception=true;
    close();
    throw new IOException(e);
  }
}
