{
  assertEquals(AddPartitionReplicationTask.class,rtask.getClass());
  assertEquals(true,rtask.needsStagingDirs());
  assertEquals(false,rtask.isActionable());
  rtask.withSrcStagingDirProvider(stagingDirectoryProvider).withDstStagingDirProvider(stagingDirectoryProvider).withDbNameMapping(debugMapping).withTableNameMapping(debugMapping);
  assertEquals(true,rtask.isActionable());
  List<? extends Command> srcCommands=Lists.newArrayList(rtask.getSrcWhCommands());
  assertEquals(2,srcCommands.size());
  assertEquals(ExportCommand.class,srcCommands.get(0).getClass());
  assertEquals(ExportCommand.class,srcCommands.get(1).getClass());
  ExportCommand exportCommand1=getExpectedExportCommand(rtask,getPtnDesc(table,addedPtns.get(0)),false);
  ExportCommand exportCommand2=getExpectedExportCommand(rtask,getPtnDesc(table,addedPtns.get(1)),false);
  CommandTestUtils.compareCommands(exportCommand1,srcCommands.get(0),true);
  CommandTestUtils.compareCommands(exportCommand2,srcCommands.get(1),true);
  List<? extends Command> dstCommands=Lists.newArrayList(rtask.getDstWhCommands());
  assertEquals(2,dstCommands.size());
  assertEquals(ImportCommand.class,dstCommands.get(0).getClass());
  assertEquals(ImportCommand.class,dstCommands.get(1).getClass());
  ImportCommand importCommand1=getExpectedImportCommand(rtask,getPtnDesc(table,addedPtns.get(0)),false);
  ImportCommand importCommand2=getExpectedImportCommand(rtask,getPtnDesc(table,addedPtns.get(1)),false);
  CommandTestUtils.compareCommands(importCommand1,dstCommands.get(0),true);
  CommandTestUtils.compareCommands(importCommand2,dstCommands.get(1),true);
}
