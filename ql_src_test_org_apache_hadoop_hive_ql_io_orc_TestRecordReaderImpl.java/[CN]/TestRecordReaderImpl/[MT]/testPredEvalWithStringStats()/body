{
  PredicateLeaf pred=TestSearchArgumentImpl.createPredicateLeaf(PredicateLeaf.Operator.NULL_SAFE_EQUALS,PredicateLeaf.Type.LONG,"x",100L,null);
  assertEquals(TruthValue.YES_NO,RecordReaderImpl.evaluatePredicateProto(createStringStats("10","1000"),pred,null));
  pred=TestSearchArgumentImpl.createPredicateLeaf(PredicateLeaf.Operator.NULL_SAFE_EQUALS,PredicateLeaf.Type.FLOAT,"x",100.0,null);
  assertEquals(TruthValue.YES_NO,RecordReaderImpl.evaluatePredicateProto(createStringStats("10","1000"),pred,null));
  pred=TestSearchArgumentImpl.createPredicateLeaf(PredicateLeaf.Operator.NULL_SAFE_EQUALS,PredicateLeaf.Type.STRING,"x","100",null);
  assertEquals(TruthValue.YES_NO,RecordReaderImpl.evaluatePredicateProto(createStringStats("10","1000"),pred,null));
  pred=TestSearchArgumentImpl.createPredicateLeaf(PredicateLeaf.Operator.NULL_SAFE_EQUALS,PredicateLeaf.Type.DATE,"x",new DateWritable(100).get(),null);
  assertEquals(TruthValue.YES_NO,RecordReaderImpl.evaluatePredicateProto(createDateStats(10,1000),pred,null));
  pred=TestSearchArgumentImpl.createPredicateLeaf(PredicateLeaf.Operator.NULL_SAFE_EQUALS,PredicateLeaf.Type.DECIMAL,"x",new HiveDecimalWritable("100"),null);
  assertEquals(TruthValue.YES_NO,RecordReaderImpl.evaluatePredicateProto(createStringStats("10","1000"),pred,null));
  pred=TestSearchArgumentImpl.createPredicateLeaf(PredicateLeaf.Operator.NULL_SAFE_EQUALS,PredicateLeaf.Type.TIMESTAMP,"x",new Timestamp(100),null);
  assertEquals(TruthValue.YES_NO,RecordReaderImpl.evaluatePredicateProto(createStringStats("10","1000"),pred,null));
}
