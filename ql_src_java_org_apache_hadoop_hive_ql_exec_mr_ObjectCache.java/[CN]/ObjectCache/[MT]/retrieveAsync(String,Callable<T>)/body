{
  final T value=retrieve(key,fn);
  return new Future<T>(){
    @Override public boolean cancel(    boolean mayInterruptIfRunning){
      return false;
    }
    @Override public boolean isCancelled(){
      return false;
    }
    @Override public boolean isDone(){
      return true;
    }
    @Override public T get() throws InterruptedException, ExecutionException {
      return value;
    }
    @Override public T get(    long timeout,    TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException {
      return value;
    }
  }
;
}
