{
  Task<? extends Serializable> task=(Task<? extends Serializable>)nd;
  if (task instanceof SparkTask) {
    SparkWork sparkWork=((SparkTask)task).getWork();
    if (sparkWork.getAllReduceWork().isEmpty()) {
      return null;
    }
    SparkSkewJoinProcCtx skewJoinProcCtx=new SparkSkewJoinProcCtx(task,physicalContext.getParseContext());
    Map<Rule,NodeProcessor> opRules=new LinkedHashMap<Rule,NodeProcessor>();
    opRules.put(new RuleRegExp("R1",CommonJoinOperator.getOperatorName() + "%"),SparkSkewJoinProcFactory.getJoinProc());
    Dispatcher disp=new DefaultRuleDispatcher(SparkSkewJoinProcFactory.getDefaultProc(),opRules,skewJoinProcCtx);
    GraphWalker ogw=new DefaultGraphWalker(disp);
    ArrayList<Node> topNodes=new ArrayList<Node>();
    for (    ReduceWork reduceWork : sparkWork.getAllReduceWork()) {
      topNodes.add(reduceWork.getReducer());
      skewJoinProcCtx.getReducerToReduceWork().put(reduceWork.getReducer(),reduceWork);
    }
    ogw.startWalking(topNodes,null);
  }
  return null;
}
