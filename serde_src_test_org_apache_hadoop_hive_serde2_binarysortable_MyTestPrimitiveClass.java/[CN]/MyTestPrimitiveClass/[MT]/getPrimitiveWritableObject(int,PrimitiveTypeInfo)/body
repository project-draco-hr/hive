{
  int field=0;
  if (index == field++) {
    return (myBool == null ? null : PrimitiveObjectInspectorFactory.writableBooleanObjectInspector.create((boolean)myBool));
  }
 else   if (index == field++) {
    return (myByte == null ? null : PrimitiveObjectInspectorFactory.writableByteObjectInspector.create((byte)myByte));
  }
 else   if (index == field++) {
    return (myShort == null ? null : PrimitiveObjectInspectorFactory.writableShortObjectInspector.create((short)myShort));
  }
 else   if (index == field++) {
    return (myInt == null ? null : PrimitiveObjectInspectorFactory.writableIntObjectInspector.create((int)myInt));
  }
 else   if (index == field++) {
    return (myLong == null ? null : PrimitiveObjectInspectorFactory.writableLongObjectInspector.create((long)myLong));
  }
 else   if (index == field++) {
    return (myFloat == null ? null : PrimitiveObjectInspectorFactory.writableFloatObjectInspector.create((float)myFloat));
  }
 else   if (index == field++) {
    return (myDouble == null ? null : PrimitiveObjectInspectorFactory.writableDoubleObjectInspector.create((double)myDouble));
  }
 else   if (index == field++) {
    return (myString == null ? null : PrimitiveObjectInspectorFactory.writableStringObjectInspector.create(myString));
  }
 else   if (index == field++) {
    if (myHiveChar == null) {
      return null;
    }
    CharTypeInfo charTypeInfo=(CharTypeInfo)primitiveTypeInfo;
    WritableHiveCharObjectInspector writableCharObjectInspector=new WritableHiveCharObjectInspector(charTypeInfo);
    return writableCharObjectInspector.create(myHiveChar);
  }
 else   if (index == field++) {
    if (myHiveVarchar == null) {
      return null;
    }
    VarcharTypeInfo varcharTypeInfo=(VarcharTypeInfo)primitiveTypeInfo;
    WritableHiveVarcharObjectInspector writableVarcharObjectInspector=new WritableHiveVarcharObjectInspector(varcharTypeInfo);
    return writableVarcharObjectInspector.create(myHiveVarchar);
  }
 else   if (index == field++) {
    return (myBinary == null ? null : PrimitiveObjectInspectorFactory.writableBinaryObjectInspector.create(myBinary));
  }
 else   if (index == field++) {
    if (myDecimal == null) {
      return null;
    }
    DecimalTypeInfo decimalTypeInfo=(DecimalTypeInfo)primitiveTypeInfo;
    WritableHiveDecimalObjectInspector writableDecimalObjectInspector=new WritableHiveDecimalObjectInspector(decimalTypeInfo);
    return writableDecimalObjectInspector.create(myDecimal);
  }
 else   if (index == field++) {
    return (myDate == null ? null : PrimitiveObjectInspectorFactory.writableDateObjectInspector.create(myDate));
  }
 else   if (index == field++) {
    return (myTimestamp == null ? null : PrimitiveObjectInspectorFactory.writableTimestampObjectInspector.create(myTimestamp));
  }
 else   if (index == field++) {
    return (myIntervalYearMonth == null ? null : PrimitiveObjectInspectorFactory.writableHiveIntervalYearMonthObjectInspector.create(myIntervalYearMonth));
  }
 else   if (index == field++) {
    return (myIntervalDayTime == null ? null : PrimitiveObjectInspectorFactory.writableHiveIntervalDayTimeObjectInspector.create(myIntervalDayTime));
  }
 else {
    throw new Error("Field " + " field not handled");
  }
}
