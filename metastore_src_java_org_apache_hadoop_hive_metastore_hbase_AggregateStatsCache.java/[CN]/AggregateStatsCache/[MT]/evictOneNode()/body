{
  Key lruKey=null;
  AggrColStatsList lruValue=null;
  for (  Map.Entry<Key,AggrColStatsList> entry : cacheStore.entrySet()) {
    Key key=entry.getKey();
    AggrColStatsList value=entry.getValue();
    if (lruKey == null) {
      lruKey=key;
      lruValue=value;
      continue;
    }
    if ((value.lastAccessTime < lruValue.lastAccessTime) && !(value.nodes.isEmpty())) {
      lruKey=key;
      lruValue=value;
    }
  }
  AggrColStatsList candidateList=cacheStore.get(lruKey);
  boolean isLocked=false;
  try {
    isLocked=candidateList.writeLock.tryLock(maxWriterWaitTime,TimeUnit.MILLISECONDS);
    if (isLocked) {
      AggrColStatsCached candidate;
      AggrColStatsCached lruNode=null;
      int currentIndex=0;
      int deleteIndex=0;
      for (Iterator<AggrColStatsCached> iterator=candidateList.nodes.iterator(); iterator.hasNext(); ) {
        candidate=iterator.next();
        if (isExpired(candidate)) {
          iterator.remove();
          currentNodes.getAndDecrement();
          return;
        }
        if (lruNode == null) {
          lruNode=candidate;
          ++currentIndex;
          continue;
        }
        if (lruNode != null) {
          if (candidate.lastAccessTime < lruNode.lastAccessTime) {
            lruNode=candidate;
            deleteIndex=currentIndex;
          }
        }
      }
      candidateList.nodes.remove(deleteIndex);
      currentNodes.getAndDecrement();
    }
  }
 catch (  InterruptedException e) {
    LOG.debug(e);
  }
 finally {
    if (isLocked) {
      candidateList.writeLock.unlock();
    }
  }
}
