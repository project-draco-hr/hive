{
  indexLookup[addIndex]=new KeyLookupHelper();
  String typeName=VectorizationContext.mapTypeNameSynonyms(outputType);
  TypeInfo typeInfo=TypeInfoUtils.getTypeInfoFromTypeString(typeName);
  Type columnVectorType=VectorizationContext.getColumnVectorTypeFromTypeInfo(typeInfo);
switch (columnVectorType) {
case LONG:
    longIndices[longIndicesIndex]=addIndex;
  indexLookup[addIndex].setLong(longIndicesIndex);
++longIndicesIndex;
break;
case DOUBLE:
doubleIndices[doubleIndicesIndex]=addIndex;
indexLookup[addIndex].setDouble(doubleIndicesIndex);
++doubleIndicesIndex;
break;
case BYTES:
stringIndices[stringIndicesIndex]=addIndex;
indexLookup[addIndex].setString(stringIndicesIndex);
++stringIndicesIndex;
break;
case DECIMAL:
decimalIndices[decimalIndicesIndex]=addIndex;
indexLookup[addIndex].setDecimal(decimalIndicesIndex);
++decimalIndicesIndex;
break;
default :
throw new HiveException("Unexpected column vector type " + columnVectorType);
}
addIndex++;
}
