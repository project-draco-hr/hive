{
  boolean wasCreated=false;
  try {
    zk.create().creatingParentsIfNeeded().withMode(CreateMode.PERSISTENT).withACL(Ids.OPEN_ACL_UNSAFE).forPath(makeZnode(type,id));
    wasCreated=true;
  }
 catch (  KeeperException.NodeExistsException ex) {
  }
catch (  Exception ex) {
    throw new IOException("Error creating " + makeZnode(type,id),ex);
  }
  if (wasCreated) {
    try {
      if (type.equals(Type.JOB)) {
        JobStateTracker jt=new JobStateTracker(id,zk,false,job_trackingpath);
        jt.create();
      }
    }
 catch (    Exception e) {
      LOG.error("Error tracking (jobId=" + id + "): "+ e.getMessage());
      try {
        zk.delete().forPath(makeZnode(type,id));
      }
 catch (      Exception ex) {
        throw new IOException("Failed to delete " + makeZnode(type,id) + ":"+ ex);
      }
    }
  }
  try {
    if (zk.checkExists().forPath(makeZnode(type,id)) == null) {
      throw new IOException("Unable to create " + makeZnode(type,id));
    }
  }
 catch (  Exception ex) {
    throw new IOException(ex);
  }
  if (wasCreated) {
    try {
      saveField(type,id,"created",Long.toString(System.currentTimeMillis()));
    }
 catch (    NotFoundException nfe) {
      throw new IOException("Couldn't write to node " + id,nfe);
    }
  }
}
