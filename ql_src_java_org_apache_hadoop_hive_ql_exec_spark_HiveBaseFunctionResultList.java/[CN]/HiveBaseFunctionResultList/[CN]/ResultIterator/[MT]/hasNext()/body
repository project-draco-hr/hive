{
  if (lastRecordOutput.hasNext()) {
    return true;
  }
  lastRecordOutput.clear();
  while (inputIterator.hasNext() && !processingDone()) {
    try {
      processNextRecord(inputIterator.next());
      if (lastRecordOutput.hasNext()) {
        return true;
      }
    }
 catch (    IOException ex) {
      throw new IllegalStateException("Error while processing input.",ex);
    }
  }
  if (!isClosed) {
    closeRecordProcessor();
    isClosed=true;
  }
  if (lastRecordOutput.hasNext()) {
    return true;
  }
  lastRecordOutput.clear();
  return false;
}
