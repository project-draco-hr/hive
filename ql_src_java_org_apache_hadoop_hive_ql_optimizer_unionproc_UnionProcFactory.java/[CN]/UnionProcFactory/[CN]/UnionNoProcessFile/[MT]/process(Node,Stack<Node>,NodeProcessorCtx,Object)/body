{
  FileSinkOperator fileSinkOp=(FileSinkOperator)nd;
  if (fileSinkOp.getConf().isLinkedFileSink()) {
    return null;
  }
  int size=stack.size();
  int pos=size - 2;
  UnionOperator union=null;
  while (pos >= 0) {
    Operator<? extends OperatorDesc> operator=(Operator<? extends OperatorDesc>)stack.get(pos);
    if (operator.getChildOperators() != null && operator.getChildOperators().size() > 1) {
      return null;
    }
    if (operator instanceof UnionOperator) {
      union=(UnionOperator)operator;
      break;
    }
    if (!operator.supportUnionRemoveOptimization()) {
      return null;
    }
    pos--;
  }
  UnionProcContext ctx=(UnionProcContext)procCtx;
  UnionParseContext uCtx=ctx.getUnionParseContext(union);
  if ((uCtx != null) && (uCtx.allMapOnlySubQ())) {
    return null;
  }
  pos++;
  pushOperatorsAboveUnion(union,stack,pos);
  return null;
}
