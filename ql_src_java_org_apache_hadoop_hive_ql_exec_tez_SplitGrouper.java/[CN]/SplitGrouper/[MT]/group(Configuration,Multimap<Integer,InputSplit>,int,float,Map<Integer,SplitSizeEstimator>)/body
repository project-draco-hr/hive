{
  Map<Integer,Integer> bucketTaskMap=estimateBucketSizes(availableSlots,waves,bucketSplitMultimap.asMap());
  Multimap<Integer,InputSplit> bucketGroupedSplitMultimap=ArrayListMultimap.<Integer,InputSplit>create();
  for (  int bucketId : bucketSplitMultimap.keySet()) {
    Collection<InputSplit> inputSplitCollection=bucketSplitMultimap.get(bucketId);
    SplitSizeEstimator splitSizeEstimator=splitSizeEstimatorMap == null ? null : splitSizeEstimatorMap.get(bucketId);
    InputSplit[] rawSplits=inputSplitCollection.toArray(new InputSplit[0]);
    InputSplit[] groupedSplits=tezGrouper.getGroupedSplits(conf,rawSplits,bucketTaskMap.get(bucketId),HiveInputFormat.class.getName(),splitSizeEstimator);
    LOG.info("Original split size is " + rawSplits.length + " grouped split size is "+ groupedSplits.length+ ", for bucket: "+ bucketId+ " SplitSizeEstimator: "+ splitSizeEstimator.getClass().getSimpleName());
    for (    InputSplit inSplit : groupedSplits) {
      bucketGroupedSplitMultimap.put(bucketId,inSplit);
    }
  }
  return bucketGroupedSplitMultimap;
}
