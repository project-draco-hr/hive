{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.status != null) {
    oprot.writeFieldBegin(STATUS_FIELD_DESC);
    struct.status.write(oprot);
    oprot.writeFieldEnd();
  }
  if (struct.serverProtocolVersion != null) {
    oprot.writeFieldBegin(SERVER_PROTOCOL_VERSION_FIELD_DESC);
    oprot.writeI32(struct.serverProtocolVersion.getValue());
    oprot.writeFieldEnd();
  }
  if (struct.sessionHandle != null) {
    if (struct.isSetSessionHandle()) {
      oprot.writeFieldBegin(SESSION_HANDLE_FIELD_DESC);
      struct.sessionHandle.write(oprot);
      oprot.writeFieldEnd();
    }
  }
  if (struct.configuration != null) {
    if (struct.isSetConfiguration()) {
      oprot.writeFieldBegin(CONFIGURATION_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,struct.configuration.size()));
        for (        Map.Entry<String,String> _iter156 : struct.configuration.entrySet()) {
          oprot.writeString(_iter156.getKey());
          oprot.writeString(_iter156.getValue());
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
