{
  List<ResourceUri> resources=null;
  ASTNode resourcesNode=(ASTNode)ast.getFirstChildWithType(HiveParser.TOK_RESOURCE_LIST);
  if (resourcesNode != null) {
    resources=new ArrayList<ResourceUri>();
    for (int idx=0; idx < resourcesNode.getChildCount(); ++idx) {
      ASTNode resNode=(ASTNode)resourcesNode.getChild(idx);
      if (resNode.getToken().getType() != HiveParser.TOK_RESOURCE_URI) {
        throw new SemanticException("Expected token type TOK_RESOURCE_URI but found " + resNode.getToken().toString());
      }
      if (resNode.getChildCount() != 2) {
        throw new SemanticException("Expected 2 child nodes of TOK_RESOURCE_URI but found " + resNode.getChildCount());
      }
      ASTNode resTypeNode=(ASTNode)resNode.getChild(0);
      ASTNode resUriNode=(ASTNode)resNode.getChild(1);
      ResourceType resourceType=getResourceType(resTypeNode);
      resources.add(new ResourceUri(resourceType,PlanUtils.stripQuotes(resUriNode.getText())));
    }
  }
  return resources;
}
