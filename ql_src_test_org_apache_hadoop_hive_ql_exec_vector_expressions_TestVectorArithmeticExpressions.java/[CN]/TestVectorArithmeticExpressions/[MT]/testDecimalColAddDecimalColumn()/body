{
  VectorizedRowBatch b=getVectorizedRowBatch3DecimalCols();
  VectorExpression expr=new DecimalColAddDecimalColumn(0,1,2);
  DecimalColumnVector r=(DecimalColumnVector)b.cols[2];
  expr.evaluate(b);
  assertTrue(r.vector[0].getHiveDecimal().equals(HiveDecimal.create("2.20")));
  assertTrue(r.vector[1].getHiveDecimal().equals(HiveDecimal.create("-2.30")));
  assertTrue(r.vector[2].getHiveDecimal().equals(HiveDecimal.create("1.00")));
  b=getVectorizedRowBatch3DecimalCols();
  DecimalColumnVector c0=(DecimalColumnVector)b.cols[0];
  c0.noNulls=false;
  c0.isNull[0]=true;
  r=(DecimalColumnVector)b.cols[2];
  expr.evaluate(b);
  assertTrue(!r.noNulls && r.isNull[0]);
  assertTrue(r.vector[0].getHiveDecimal().equals(HiveDecimal.create("0.01")));
  b=getVectorizedRowBatch3DecimalCols();
  c0=(DecimalColumnVector)b.cols[0];
  c0.vector[0].set(HiveDecimal.create("9999999999999999.99"));
  r=(DecimalColumnVector)b.cols[2];
  expr.evaluate(b);
  assertTrue(!r.noNulls && r.isNull[0]);
  assertTrue(r.vector[0].getHiveDecimal().equals(HiveDecimal.create("0.01")));
  b=getVectorizedRowBatch3DecimalCols();
  c0=(DecimalColumnVector)b.cols[0];
  c0.isRepeating=true;
  r=(DecimalColumnVector)b.cols[2];
  expr.evaluate(b);
  assertTrue(r.vector[0].getHiveDecimal().equals(HiveDecimal.create("2.20")));
  assertTrue(r.vector[1].getHiveDecimal().equals(HiveDecimal.create("2.20")));
  assertTrue(r.vector[2].getHiveDecimal().equals(HiveDecimal.create("2.20")));
  DecimalColumnVector c1=(DecimalColumnVector)b.cols[1];
  c1.isRepeating=true;
  expr.evaluate(b);
  assertTrue(r.isRepeating);
  assertTrue(r.vector[0].getHiveDecimal().equals(HiveDecimal.create("2.20")));
  b=getVectorizedRowBatch3DecimalCols();
  c1=(DecimalColumnVector)b.cols[1];
  c1.isRepeating=true;
  c1.vector[0].set(HiveDecimal.create("2.00"));
  r=(DecimalColumnVector)b.cols[2];
  expr.evaluate(b);
  assertTrue(r.vector[2].getHiveDecimal().equals(HiveDecimal.create("2.00")));
}
