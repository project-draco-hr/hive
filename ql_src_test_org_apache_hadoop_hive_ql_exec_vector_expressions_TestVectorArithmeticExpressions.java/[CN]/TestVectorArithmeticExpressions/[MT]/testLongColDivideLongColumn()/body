{
  final double eps=1e-7d;
  VectorizedRowBatch batch=getVectorizedRowBatch2LongInDoubleOut();
  LongColDivideLongColumn expr=new LongColDivideLongColumn(0,1,2);
  batch.cols[0].isNull[1]=true;
  batch.cols[0].noNulls=false;
  batch.cols[1].noNulls=false;
  DoubleColumnVector out=(DoubleColumnVector)batch.cols[2];
  out.noNulls=true;
  out.isRepeating=true;
  expr.evaluate(batch);
  assertTrue(Double.isNaN(out.vector[0]));
  assertTrue(out.isNull[1]);
  assertTrue(Double.isNaN(out.vector[1]));
  for (int i=2; i != batch.size; i++) {
    assertTrue(out.vector[i] > 1.0d - eps && out.vector[i] < 1.0d + eps);
  }
  assertFalse(out.noNulls);
  assertFalse(out.isRepeating);
}
