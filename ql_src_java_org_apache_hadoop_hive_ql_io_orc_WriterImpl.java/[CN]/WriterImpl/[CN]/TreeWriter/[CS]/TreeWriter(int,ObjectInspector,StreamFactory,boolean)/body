{
  this.streamFactory=streamFactory;
  this.isCompressed=streamFactory.isCompressed();
  this.id=columnId;
  this.inspector=inspector;
  if (nullable) {
    isPresentOutStream=streamFactory.createStream(id,OrcProto.Stream.Kind.PRESENT);
    isPresent=new BitFieldWriter(isPresentOutStream,1);
  }
 else {
    isPresent=null;
  }
  this.foundNulls=false;
  createBloomFilter=streamFactory.getBloomFilterColumns()[columnId];
  indexStatistics=ColumnStatisticsImpl.create(inspector);
  stripeColStatistics=ColumnStatisticsImpl.create(inspector);
  fileStatistics=ColumnStatisticsImpl.create(inspector);
  childrenWriters=new TreeWriter[0];
  rowIndex=OrcProto.RowIndex.newBuilder();
  rowIndexEntry=OrcProto.RowIndexEntry.newBuilder();
  rowIndexPosition=new RowIndexPositionRecorder(rowIndexEntry);
  stripeStatsBuilders=Lists.newArrayList();
  if (streamFactory.buildIndex()) {
    rowIndexStream=streamFactory.createStream(id,OrcProto.Stream.Kind.ROW_INDEX);
  }
 else {
    rowIndexStream=null;
  }
  if (createBloomFilter) {
    bloomFilterEntry=OrcProto.BloomFilter.newBuilder();
    bloomFilterIndex=OrcProto.BloomFilterIndex.newBuilder();
    bloomFilterStream=streamFactory.createStream(id,OrcProto.Stream.Kind.BLOOM_FILTER);
    bloomFilter=new BloomFilterIO(streamFactory.getRowIndexStride(),streamFactory.getBloomFilterFPP());
  }
 else {
    bloomFilterEntry=null;
    bloomFilterIndex=null;
    bloomFilterStream=null;
    bloomFilter=null;
  }
}
