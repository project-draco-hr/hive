{
  long result=0;
  long numVals=child.fileStatistics.getNumberOfValues();
switch (((PrimitiveObjectInspector)oi).getPrimitiveCategory()) {
case BOOLEAN:
case BYTE:
case SHORT:
case INT:
case FLOAT:
    return numVals * JavaDataModel.get().primitive1();
case LONG:
case DOUBLE:
  return numVals * JavaDataModel.get().primitive2();
case STRING:
child=(StringTreeWriter)child;
StringColumnStatistics scs=(StringColumnStatistics)child.fileStatistics;
numVals=numVals == 0 ? 1 : numVals;
int avgStringLen=(int)(scs.getSum() / numVals);
return numVals * JavaDataModel.get().lengthForStringOfLength(avgStringLen);
case DECIMAL:
return numVals * JavaDataModel.get().lengthOfDecimal();
case DATE:
return numVals * JavaDataModel.get().lengthOfDate();
case BINARY:
BinaryColumnStatistics bcs=(BinaryColumnStatistics)child.fileStatistics;
return bcs.getSum();
case TIMESTAMP:
return numVals * JavaDataModel.get().lengthOfTimestamp();
default :
LOG.debug("Unknown primitive category.");
break;
}
return result;
}
