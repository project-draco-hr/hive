{
switch (kind) {
case NONE:
    return null;
case ZLIB:
  return new ZlibCodec();
case SNAPPY:
return new SnappyCodec();
case LZO:
try {
Class<? extends CompressionCodec> lzo=(Class<? extends CompressionCodec>)Class.forName("org.apache.hadoop.hive.ql.io.orc.LzoCodec");
return lzo.newInstance();
}
 catch (ClassNotFoundException e) {
throw new IllegalArgumentException("LZO is not available.",e);
}
catch (InstantiationException e) {
throw new IllegalArgumentException("Problem initializing LZO",e);
}
catch (IllegalAccessException e) {
throw new IllegalArgumentException("Insufficient access to LZO",e);
}
default :
throw new IllegalArgumentException("Unknown compression codec: " + kind);
}
}
