{
  try {
    String tableName="table_for_testpartition";
    try {
      hm.dropTable(MetaStoreUtils.DEFAULT_DATABASE_NAME,tableName);
    }
 catch (    HiveException e) {
      System.err.println(StringUtils.stringifyException(e));
      assertTrue("Unable to drop table: " + tableName,false);
    }
    LinkedList<String> cols=new LinkedList<String>();
    cols.add("key");
    cols.add("value");
    LinkedList<String> part_cols=new LinkedList<String>();
    part_cols.add("ds");
    part_cols.add("hr");
    try {
      hm.createTable(tableName,cols,part_cols,TextInputFormat.class,HiveIgnoreKeyTextOutputFormat.class);
    }
 catch (    HiveException e) {
      System.err.println(StringUtils.stringifyException(e));
      assertTrue("Unable to create table: " + tableName,false);
    }
    Table tbl=null;
    try {
      tbl=hm.getTable(MetaStoreUtils.DEFAULT_DATABASE_NAME,tableName);
    }
 catch (    HiveException e) {
      System.err.println(StringUtils.stringifyException(e));
      assertTrue("Unable to fetch table: " + tableName,false);
    }
    HashMap<String,String> part_spec=new HashMap<String,String>();
    part_spec.clear();
    part_spec.put("ds","2008-04-08");
    part_spec.put("hr","12");
    try {
      hm.createPartition(tbl,part_spec);
    }
 catch (    HiveException e) {
      System.err.println(StringUtils.stringifyException(e));
      assertTrue("Unable to create parition for table: " + tableName,false);
    }
    hm.dropTable(MetaStoreUtils.DEFAULT_DATABASE_NAME,tableName);
  }
 catch (  Throwable e) {
    System.err.println(StringUtils.stringifyException(e));
    System.err.println("testPartition() failed");
    throw e;
  }
}
