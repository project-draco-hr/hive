{
  try {
    String tableName="table_for_testtable";
    try {
      hm.dropTable(MetaStoreUtils.DEFAULT_DATABASE_NAME,tableName);
    }
 catch (    HiveException e1) {
      e1.printStackTrace();
      assertTrue("Unable to drop table",false);
    }
    Table tbl=new Table(MetaStoreUtils.DEFAULT_DATABASE_NAME,tableName);
    List<FieldSchema> fields=tbl.getCols();
    fields.add(new FieldSchema("col1",serdeConstants.INT_TYPE_NAME,"int -- first column"));
    fields.add(new FieldSchema("col2",serdeConstants.STRING_TYPE_NAME,"string -- second column"));
    fields.add(new FieldSchema("col3",serdeConstants.DOUBLE_TYPE_NAME,"double -- thrift column"));
    tbl.setFields(fields);
    tbl.setOutputFormatClass(HiveIgnoreKeyTextOutputFormat.class);
    tbl.setInputFormatClass(SequenceFileInputFormat.class);
    tbl.setProperty("comment","this is a test table created as part junit tests");
    List<String> bucketCols=tbl.getBucketCols();
    bucketCols.add("col1");
    try {
      tbl.setBucketCols(bucketCols);
    }
 catch (    HiveException e) {
      e.printStackTrace();
      assertTrue("Unable to set bucket column for table: " + tableName,false);
    }
    List<FieldSchema> partCols=new ArrayList<FieldSchema>();
    partCols.add(new FieldSchema("ds",serdeConstants.STRING_TYPE_NAME,"partition column, date but in string format as date type is not yet supported in QL"));
    tbl.setPartCols(partCols);
    tbl.setNumBuckets((short)512);
    tbl.setOwner("pchakka");
    tbl.setRetention(10);
    tbl.setSerdeParam(serdeConstants.FIELD_DELIM,"1");
    tbl.setSerdeParam(serdeConstants.LINE_DELIM,"\n");
    tbl.setSerdeParam(serdeConstants.MAPKEY_DELIM,"3");
    tbl.setSerdeParam(serdeConstants.COLLECTION_DELIM,"2");
    tbl.setSerdeParam(serdeConstants.FIELD_DELIM,"1");
    tbl.setSerializationLib(LazySimpleSerDe.class.getName());
    tbl.setStoredAsSubDirectories(false);
    setNullCreateTableGrants();
    try {
      hm.createTable(tbl);
    }
 catch (    HiveException e) {
      e.printStackTrace();
      assertTrue("Unable to create table: " + tableName,false);
    }
    validateTable(tbl,tableName);
    try {
      hm.dropTable(MetaStoreUtils.DEFAULT_DATABASE_NAME,tableName,true,false);
      Table ft2=hm.getTable(MetaStoreUtils.DEFAULT_DATABASE_NAME,tableName,false);
      assertNull("Unable to drop table ",ft2);
    }
 catch (    HiveException e) {
      assertTrue("Unable to drop table: " + tableName,false);
    }
  }
 catch (  Throwable e) {
    System.err.println(StringUtils.stringifyException(e));
    System.err.println("testTable failed");
    throw e;
  }
}
