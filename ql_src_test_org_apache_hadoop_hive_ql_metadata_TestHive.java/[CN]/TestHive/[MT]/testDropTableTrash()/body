{
  if (!ShimLoader.getHadoopShims().supportTrashFeature()) {
    return;
  }
  try {
    String dbName="db_for_testdroptable";
    hm.dropDatabase(dbName,true,true,true);
    Database db=new Database();
    db.setName(dbName);
    hm.createDatabase(db);
    List<String> ts=new ArrayList<String>(2);
    String tableBaseName="droptable";
    ts.add(tableBaseName + "1");
    ts.add(tableBaseName + "2");
    Table tbl1=createTestTable(dbName,ts.get(0));
    hm.createTable(tbl1);
    Table tbl2=createTestTable(dbName,ts.get(1));
    hm.createTable(tbl2);
    Table table1=hm.getTable(dbName,ts.get(0));
    assertNotNull(table1);
    assertEquals(ts.get(0),table1.getTableName());
    Path path1=table1.getPath();
    FileSystem fs=path1.getFileSystem(hiveConf);
    assertTrue(fs.exists(path1));
    Path trashDir=ShimLoader.getHadoopShims().getCurrentTrashPath(hiveConf,fs);
    assertNotNull("trash directory should not be null",trashDir);
    Path trash1=mergePaths(trashDir,path1);
    Path pathglob=trash1.suffix("*");
    ;
    FileStatus before[]=fs.globStatus(pathglob);
    hm.dropTable(dbName,ts.get(0));
    assertFalse(fs.exists(path1));
    FileStatus after[]=fs.globStatus(pathglob);
    assertTrue("trash dir before and after DROP TABLE noPURGE are not different",before.length != after.length);
    Table table2=hm.getTable(dbName,ts.get(1));
    assertNotNull(table2);
    assertEquals(ts.get(1),table2.getTableName());
    Path path2=table2.getPath();
    assertTrue(fs.exists(path2));
    Path trash2=mergePaths(trashDir,path2);
    System.out.println("trashDir2 is " + trash2);
    pathglob=trash2.suffix("*");
    before=fs.globStatus(pathglob);
    hm.dropTable(dbName,ts.get(1),true,true,true);
    assertFalse(fs.exists(path2));
    after=fs.globStatus(pathglob);
    Arrays.sort(before);
    Arrays.sort(after);
    assertEquals("trash dir before and after DROP TABLE PURGE are different",before.length,after.length);
    assertTrue("trash dir before and after DROP TABLE PURGE are different",Arrays.equals(before,after));
    for (    String tableName : hm.getAllTables(dbName)) {
      Table table=hm.getTable(dbName,tableName);
      hm.dropTable(dbName,tableName);
      assertFalse(fs.exists(table.getPath()));
    }
    hm.dropDatabase(dbName);
  }
 catch (  Throwable e) {
    System.err.println(StringUtils.stringifyException(e));
    System.err.println("testDropTableTrash() failed");
    throw e;
  }
}
