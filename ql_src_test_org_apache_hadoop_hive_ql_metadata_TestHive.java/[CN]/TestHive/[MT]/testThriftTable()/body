{
  String tableName="table_for_test_thrifttable";
  try {
    try {
      this.hm.dropTable(MetaStoreUtils.DEFAULT_DATABASE_NAME,tableName);
    }
 catch (    HiveException e1) {
      System.err.println(StringUtils.stringifyException(e1));
      assertTrue("Unable to drop table",false);
    }
    Table tbl=new Table(tableName);
    tbl.setInputFormatClass(SequenceFileInputFormat.class.getName());
    tbl.setOutputFormatClass(SequenceFileOutputFormat.class.getName());
    tbl.setSerializationLib(ThriftDeserializer.class.getName());
    tbl.setSerdeParam(Constants.SERIALIZATION_CLASS,Complex.class.getName());
    tbl.setSerdeParam(Constants.SERIALIZATION_FORMAT,TBinaryProtocol.class.getName());
    try {
      hm.createTable(tbl);
    }
 catch (    HiveException e) {
      System.err.println(StringUtils.stringifyException(e));
      assertTrue("Unable to create table: " + tableName,false);
    }
    Warehouse wh=new Warehouse(hiveConf);
    Table ft=null;
    try {
      ft=hm.getTable(MetaStoreUtils.DEFAULT_DATABASE_NAME,tableName);
      assertNotNull("Unable to fetch table",ft);
      ft.checkValidity();
      assertEquals("Table names didn't match for table: " + tableName,tbl.getName(),ft.getName());
      assertEquals("Table owners didn't match for table: " + tableName,tbl.getOwner(),ft.getOwner());
      assertEquals("Table retention didn't match for table: " + tableName,tbl.getRetention(),ft.getRetention());
      assertEquals("Data location is not set correctly",wh.getDefaultTablePath(MetaStoreUtils.DEFAULT_DATABASE_NAME,tableName).toString(),ft.getDataLocation().toString());
      tbl.setDataLocation(ft.getDataLocation());
      assertTrue("Tables  doesn't match: " + tableName,ft.getTTable().equals(tbl.getTTable()));
      assertEquals("SerializationLib is not set correctly",tbl.getSerializationLib(),ThriftDeserializer.class.getName());
      assertEquals("Serde is not set correctly",tbl.getDeserializer().getClass().getName(),ft.getDeserializer().getClass().getName());
    }
 catch (    HiveException e) {
      System.err.println(StringUtils.stringifyException(e));
      assertTrue("Unable to fetch table correctly: " + tableName,false);
    }
    hm.dropTable(MetaStoreUtils.DEFAULT_DATABASE_NAME,tableName);
  }
 catch (  Throwable e) {
    System.err.println(StringUtils.stringifyException(e));
    System.err.println("testThriftTable() failed");
    throw e;
  }
}
