{
  DecimalColumnVector dcv=new DecimalColumnVector(4,20,13);
  HiveDecimal d1=HiveDecimal.create("19.56778");
  HiveDecimal expected1=HiveDecimal.create("20");
  DecimalUtil.ceiling(0,d1,dcv);
  Assert.assertEquals(0,expected1.compareTo(dcv.vector[0].getHiveDecimal()));
  HiveDecimal d2=HiveDecimal.create("23.00000");
  Assert.assertEquals(5,d2.scale());
  HiveDecimal expected2=HiveDecimal.create("23");
  DecimalUtil.ceiling(0,d2,dcv);
  Assert.assertEquals(0,expected2.compareTo(dcv.vector[0].getHiveDecimal()));
  HiveDecimal d3=HiveDecimal.create("-25.34567");
  HiveDecimal expected3=HiveDecimal.create("-25");
  DecimalUtil.ceiling(0,d3,dcv);
  Assert.assertEquals(0,expected3.compareTo(dcv.vector[0].getHiveDecimal()));
  HiveDecimal d4=HiveDecimal.create("-17.00000");
  Assert.assertEquals(5,d4.scale());
  HiveDecimal expected4=HiveDecimal.create("-17");
  DecimalUtil.ceiling(0,d4,dcv);
  Assert.assertEquals(0,expected4.compareTo(dcv.vector[0].getHiveDecimal()));
  HiveDecimal d5=HiveDecimal.create("-0.30000");
  Assert.assertEquals(5,d5.scale());
  HiveDecimal expected5=HiveDecimal.create("0");
  DecimalUtil.ceiling(0,d5,dcv);
  Assert.assertEquals(0,expected5.compareTo(dcv.vector[0].getHiveDecimal()));
  HiveDecimal d6=HiveDecimal.create("0.30000");
  Assert.assertEquals(5,d6.scale());
  HiveDecimal expected6=HiveDecimal.create("1");
  DecimalUtil.ceiling(0,d6,dcv);
  Assert.assertEquals(0,expected6.compareTo(dcv.vector[0].getHiveDecimal()));
}
