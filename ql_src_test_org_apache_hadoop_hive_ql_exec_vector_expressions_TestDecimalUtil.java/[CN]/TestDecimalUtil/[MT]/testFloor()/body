{
  DecimalColumnVector dcv=new DecimalColumnVector(4,20,13);
  Decimal128 d1=new Decimal128(19.56778,(short)5);
  Decimal128 expected1=new Decimal128(19,(short)0);
  DecimalUtil.floor(0,d1,dcv);
  Assert.assertEquals(0,expected1.compareTo(dcv.vector[0]));
  Decimal128 d2=new Decimal128(23.0,(short)5);
  Decimal128 expected2=new Decimal128(23,(short)0);
  DecimalUtil.floor(0,d2,dcv);
  Assert.assertEquals(0,expected2.compareTo(dcv.vector[0]));
  Decimal128 d3=new Decimal128(-25.34567,(short)5);
  Decimal128 expected3=new Decimal128(-26,(short)0);
  DecimalUtil.floor(0,d3,dcv);
  Assert.assertEquals(0,expected3.compareTo(dcv.vector[0]));
  Decimal128 d4=new Decimal128(-17,(short)5);
  Decimal128 expected4=new Decimal128(-17,(short)0);
  DecimalUtil.floor(0,d4,dcv);
  Assert.assertEquals(0,expected4.compareTo(dcv.vector[0]));
  Decimal128 d5=new Decimal128(-0.3,(short)5);
  Decimal128 expected5=new Decimal128(-1,(short)0);
  DecimalUtil.floor(0,d5,dcv);
  Assert.assertEquals(0,expected5.compareTo(dcv.vector[0]));
  Decimal128 d6=new Decimal128(0.3,(short)5);
  Decimal128 expected6=new Decimal128(0,(short)0);
  DecimalUtil.floor(0,d6,dcv);
  Assert.assertEquals(0,expected6.compareTo(dcv.vector[0]));
}
