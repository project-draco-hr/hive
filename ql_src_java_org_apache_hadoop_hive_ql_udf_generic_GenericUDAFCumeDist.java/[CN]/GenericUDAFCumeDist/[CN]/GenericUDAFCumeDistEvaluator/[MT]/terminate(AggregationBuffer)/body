{
  List<IntWritable> ranks=((RankBuffer)agg).rowNums;
  int ranksSize=ranks.size();
  double ranksSizeDouble=ranksSize;
  List<DoubleWritable> distances=new ArrayList<DoubleWritable>(ranksSize);
  int last=-1;
  int current=-1;
  int elementsAtRank=1;
  for (int index=0; index < ranksSize; index++) {
    current=ranks.get(index).get();
    if (index == 0) {
      last=current;
    }
 else     if (last == current) {
      elementsAtRank++;
    }
 else {
      last=current;
      double distance=((double)index) / ranksSizeDouble;
      while (elementsAtRank-- > 0) {
        distances.add(new DoubleWritable(distance));
      }
      elementsAtRank=1;
    }
  }
  if (ranksSize > 0 && last == current) {
    double distance=((double)ranksSize) / ranksSizeDouble;
    while (elementsAtRank-- > 0) {
      distances.add(new DoubleWritable(distance));
    }
  }
  return distances;
}
