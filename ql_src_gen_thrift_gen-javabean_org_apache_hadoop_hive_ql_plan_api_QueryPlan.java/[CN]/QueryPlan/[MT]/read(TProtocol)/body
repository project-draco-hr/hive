{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == TType.LIST) {
{
          TList _list64=iprot.readListBegin();
          this.queries=new ArrayList<Query>(_list64.size);
          for (int _i65=0; _i65 < _list64.size; ++_i65) {
            Query _elem66;
            _elem66=new Query();
            _elem66.read(iprot);
            this.queries.add(_elem66);
          }
          iprot.readListEnd();
        }
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == TType.BOOL) {
    this.done=iprot.readBool();
    setDoneIsSet(true);
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == TType.BOOL) {
this.started=iprot.readBool();
setStartedIsSet(true);
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
default :
TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
