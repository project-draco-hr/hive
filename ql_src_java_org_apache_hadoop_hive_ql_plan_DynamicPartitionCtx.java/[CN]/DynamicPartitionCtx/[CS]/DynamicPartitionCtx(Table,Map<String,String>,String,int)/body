{
  this.partSpec=partSpec;
  this.spNames=new ArrayList<String>();
  this.dpNames=new ArrayList<String>();
  this.numBuckets=0;
  this.maxPartsPerNode=maxParts;
  this.defaultPartName=defaultPartName;
  for (  Map.Entry<String,String> me : partSpec.entrySet()) {
    if (me.getValue() == null) {
      dpNames.add(me.getKey());
    }
 else {
      spNames.add(me.getKey());
    }
  }
  this.numDPCols=dpNames.size();
  this.numSPCols=spNames.size();
  if (this.numSPCols > 0) {
    this.spPath=Warehouse.makeDynamicPartName(partSpec);
  }
 else {
    this.spPath=null;
  }
  String confVal;
  try {
    confVal=Hive.get().getMetaConf(ConfVars.METASTORE_PARTITION_NAME_WHITELIST_PATTERN.varname);
  }
 catch (  HiveException e) {
    throw new SemanticException(e);
  }
  this.whiteListPattern=confVal == null || confVal.isEmpty() ? null : Pattern.compile(confVal);
}
