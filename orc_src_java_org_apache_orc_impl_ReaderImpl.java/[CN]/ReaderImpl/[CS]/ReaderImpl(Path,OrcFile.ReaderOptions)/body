{
  FileSystem fs=options.getFilesystem();
  if (fs == null) {
    fs=path.getFileSystem(options.getConfiguration());
  }
  this.fileSystem=fs;
  this.path=path;
  this.conf=options.getConfiguration();
  this.maxLength=options.getMaxLength();
  FileMetadata fileMetadata=options.getFileMetadata();
  if (fileMetadata != null) {
    this.compressionKind=fileMetadata.getCompressionKind();
    this.bufferSize=fileMetadata.getCompressionBufferSize();
    this.codec=WriterImpl.createCodec(compressionKind);
    this.metadataSize=fileMetadata.getMetadataSize();
    this.stripeStats=fileMetadata.getStripeStats();
    this.versionList=fileMetadata.getVersionList();
    this.writerVersion=OrcFile.WriterVersion.from(fileMetadata.getWriterVersionNum());
    this.types=fileMetadata.getTypes();
    this.rowIndexStride=fileMetadata.getRowIndexStride();
    this.contentLength=fileMetadata.getContentLength();
    this.numberOfRows=fileMetadata.getNumberOfRows();
    this.fileStats=fileMetadata.getFileStats();
    this.stripes=fileMetadata.getStripes();
    this.userMetadata=null;
  }
 else {
    OrcTail orcTail=options.getOrcTail();
    if (orcTail == null) {
      tail=extractFileTail(fs,path,options.getMaxLength());
      options.orcTail(tail);
    }
 else {
      tail=orcTail;
    }
    this.compressionKind=tail.getCompressionKind();
    this.codec=tail.getCompressionCodec();
    this.bufferSize=tail.getCompressionBufferSize();
    this.metadataSize=tail.getMetadataSize();
    this.versionList=tail.getPostScript().getVersionList();
    this.types=tail.getFooter().getTypesList();
    this.rowIndexStride=tail.getFooter().getRowIndexStride();
    this.contentLength=tail.getFooter().getContentLength();
    this.numberOfRows=tail.getFooter().getNumberOfRows();
    this.userMetadata=tail.getFooter().getMetadataList();
    this.fileStats=tail.getFooter().getStatisticsList();
    this.writerVersion=tail.getWriterVersion();
    this.stripes=tail.getStripes();
    this.stripeStats=tail.getStripeStatisticsProto();
  }
  this.schema=OrcUtils.convertTypeFromProtobuf(this.types,0);
}
