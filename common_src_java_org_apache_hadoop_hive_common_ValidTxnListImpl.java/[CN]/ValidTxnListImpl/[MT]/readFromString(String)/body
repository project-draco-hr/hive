{
  if (src == null) {
    highWatermark=Long.MAX_VALUE;
    exceptions=new long[0];
  }
 else {
    String[] values;
    if (src.charAt(0) == COMPRESSION_MARKER) {
      try {
        int colon=src.indexOf(':');
        int len=Integer.valueOf(src.substring(1,colon));
        ByteArrayInputStream byteBuf=new ByteArrayInputStream(src.substring(colon + 1).getBytes(STRING_ENCODING));
        GZIPInputStream gzip=new GZIPInputStream(byteBuf);
        byte[] buf=new byte[len];
        int bytesRead=0;
        int offset=0;
        int maxReadLen=len;
        do {
          bytesRead=gzip.read(buf,offset,maxReadLen);
          offset+=bytesRead;
          maxReadLen-=bytesRead;
        }
 while (maxReadLen > 0);
        values=new String(buf).split(":");
      }
 catch (      IOException e) {
        LOG.error("Unable to decode compressed transaction list, " + e.getMessage());
        throw new RuntimeException(e);
      }
    }
 else {
      values=src.split(":");
    }
    highWatermark=Long.parseLong(values[0]);
    exceptions=new long[values.length - 1];
    for (int i=1; i < values.length; ++i) {
      exceptions[i - 1]=Long.parseLong(values[i]);
    }
  }
}
