{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt64Size(1,lastAnalyzed_);
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(2,getColumnTypeBytes());
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt64Size(3,numNulls_);
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt64Size(4,numDistinctValues_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(5,boolStats_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(6,longStats_);
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(7,doubleStats_);
  }
  if (((bitField0_ & 0x00000080) == 0x00000080)) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(8,stringStats_);
  }
  if (((bitField0_ & 0x00000100) == 0x00000100)) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(9,binaryStats_);
  }
  if (((bitField0_ & 0x00000200) == 0x00000200)) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(10,decimalStats_);
  }
  if (((bitField0_ & 0x00000400) == 0x00000400)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(11,getColumnNameBytes());
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
