{
  initFields();
  int mutable_bitField0_=0;
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder();
  try {
    boolean done=false;
    while (!done) {
      int tag=input.readTag();
switch (tag) {
case 0:
        done=true;
      break;
default :
{
      if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
        done=true;
      }
      break;
    }
case 8:
{
    bitField0_|=0x00000001;
    lastAnalyzed_=input.readInt64();
    break;
  }
case 18:
{
  bitField0_|=0x00000002;
  columnType_=input.readBytes();
  break;
}
case 24:
{
bitField0_|=0x00000004;
numNulls_=input.readInt64();
break;
}
case 32:
{
bitField0_|=0x00000008;
numDistinctValues_=input.readInt64();
break;
}
case 42:
{
org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.BooleanStats.Builder subBuilder=null;
if (((bitField0_ & 0x00000010) == 0x00000010)) {
subBuilder=boolStats_.toBuilder();
}
boolStats_=input.readMessage(org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.BooleanStats.PARSER,extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(boolStats_);
boolStats_=subBuilder.buildPartial();
}
bitField0_|=0x00000010;
break;
}
case 50:
{
org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.LongStats.Builder subBuilder=null;
if (((bitField0_ & 0x00000020) == 0x00000020)) {
subBuilder=longStats_.toBuilder();
}
longStats_=input.readMessage(org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.LongStats.PARSER,extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(longStats_);
longStats_=subBuilder.buildPartial();
}
bitField0_|=0x00000020;
break;
}
case 58:
{
org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.DoubleStats.Builder subBuilder=null;
if (((bitField0_ & 0x00000040) == 0x00000040)) {
subBuilder=doubleStats_.toBuilder();
}
doubleStats_=input.readMessage(org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.DoubleStats.PARSER,extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(doubleStats_);
doubleStats_=subBuilder.buildPartial();
}
bitField0_|=0x00000040;
break;
}
case 66:
{
org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.StringStats.Builder subBuilder=null;
if (((bitField0_ & 0x00000080) == 0x00000080)) {
subBuilder=stringStats_.toBuilder();
}
stringStats_=input.readMessage(org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.StringStats.PARSER,extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(stringStats_);
stringStats_=subBuilder.buildPartial();
}
bitField0_|=0x00000080;
break;
}
case 74:
{
org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.StringStats.Builder subBuilder=null;
if (((bitField0_ & 0x00000100) == 0x00000100)) {
subBuilder=binaryStats_.toBuilder();
}
binaryStats_=input.readMessage(org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.StringStats.PARSER,extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(binaryStats_);
binaryStats_=subBuilder.buildPartial();
}
bitField0_|=0x00000100;
break;
}
case 82:
{
org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.DecimalStats.Builder subBuilder=null;
if (((bitField0_ & 0x00000200) == 0x00000200)) {
subBuilder=decimalStats_.toBuilder();
}
decimalStats_=input.readMessage(org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.ColumnStats.DecimalStats.PARSER,extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(decimalStats_);
decimalStats_=subBuilder.buildPartial();
}
bitField0_|=0x00000200;
break;
}
}
}
}
 catch (com.google.protobuf.InvalidProtocolBufferException e) {
throw e.setUnfinishedMessage(this);
}
catch (java.io.IOException e) {
throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
}
 finally {
this.unknownFields=unknownFields.build();
makeExtensionsImmutable();
}
}
