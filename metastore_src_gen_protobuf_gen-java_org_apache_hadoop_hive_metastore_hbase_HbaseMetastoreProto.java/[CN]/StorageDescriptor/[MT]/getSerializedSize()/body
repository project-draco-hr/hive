{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  for (int i=0; i < cols_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(1,cols_.get(i));
  }
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(2,getInputFormatBytes());
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(3,getOutputFormatBytes());
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    size+=com.google.protobuf.CodedOutputStream.computeBoolSize(4,isCompressed_);
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    size+=com.google.protobuf.CodedOutputStream.computeSInt32Size(5,numBuckets_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(6,serdeInfo_);
  }
{
    int dataSize=0;
    for (int i=0; i < bucketCols_.size(); i++) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeBytesSizeNoTag(bucketCols_.getByteString(i));
    }
    size+=dataSize;
    size+=1 * getBucketColsList().size();
  }
  for (int i=0; i < sortCols_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(8,sortCols_.get(i));
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(9,skewedInfo_);
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    size+=com.google.protobuf.CodedOutputStream.computeBoolSize(10,storedAsSubDirectories_);
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
