{
  initFields();
  int mutable_bitField0_=0;
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder();
  try {
    boolean done=false;
    while (!done) {
      int tag=input.readTag();
switch (tag) {
case 0:
        done=true;
      break;
default :
{
      if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
        done=true;
      }
      break;
    }
case 10:
{
    bitField0_|=0x00000001;
    owner_=input.readBytes();
    break;
  }
case 16:
{
  bitField0_|=0x00000002;
  createTime_=input.readInt64();
  break;
}
case 24:
{
bitField0_|=0x00000004;
lastAccessTime_=input.readInt64();
break;
}
case 32:
{
bitField0_|=0x00000008;
retention_=input.readInt64();
break;
}
case 42:
{
bitField0_|=0x00000010;
location_=input.readBytes();
break;
}
case 50:
{
org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.Parameters.Builder subBuilder=null;
if (((bitField0_ & 0x00000020) == 0x00000020)) {
subBuilder=sdParameters_.toBuilder();
}
sdParameters_=input.readMessage(org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.Parameters.PARSER,extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(sdParameters_);
sdParameters_=subBuilder.buildPartial();
}
bitField0_|=0x00000020;
break;
}
case 58:
{
bitField0_|=0x00000040;
sdHash_=input.readBytes();
break;
}
case 66:
{
if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
partitionKeys_=new java.util.ArrayList<org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.FieldSchema>();
mutable_bitField0_|=0x00000080;
}
partitionKeys_.add(input.readMessage(org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.FieldSchema.PARSER,extensionRegistry));
break;
}
case 74:
{
org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.Parameters.Builder subBuilder=null;
if (((bitField0_ & 0x00000080) == 0x00000080)) {
subBuilder=parameters_.toBuilder();
}
parameters_=input.readMessage(org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.Parameters.PARSER,extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(parameters_);
parameters_=subBuilder.buildPartial();
}
bitField0_|=0x00000080;
break;
}
case 82:
{
bitField0_|=0x00000100;
viewOriginalText_=input.readBytes();
break;
}
case 90:
{
bitField0_|=0x00000200;
viewExpandedText_=input.readBytes();
break;
}
case 98:
{
bitField0_|=0x00000400;
tableType_=input.readBytes();
break;
}
case 106:
{
org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.PrincipalPrivilegeSet.Builder subBuilder=null;
if (((bitField0_ & 0x00000800) == 0x00000800)) {
subBuilder=privileges_.toBuilder();
}
privileges_=input.readMessage(org.apache.hadoop.hive.metastore.hbase.HbaseMetastoreProto.PrincipalPrivilegeSet.PARSER,extensionRegistry);
if (subBuilder != null) {
subBuilder.mergeFrom(privileges_);
privileges_=subBuilder.buildPartial();
}
bitField0_|=0x00000800;
break;
}
case 112:
{
bitField0_|=0x00001000;
isTemporary_=input.readBool();
break;
}
}
}
}
 catch (com.google.protobuf.InvalidProtocolBufferException e) {
throw e.setUnfinishedMessage(this);
}
catch (java.io.IOException e) {
throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
}
 finally {
if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
partitionKeys_=java.util.Collections.unmodifiableList(partitionKeys_);
}
this.unknownFields=unknownFields.build();
makeExtensionsImmutable();
}
}
