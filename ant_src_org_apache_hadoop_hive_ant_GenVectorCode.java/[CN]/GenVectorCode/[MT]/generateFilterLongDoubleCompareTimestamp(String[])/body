{
  String operatorName=tdesc[1];
  String operandType=tdesc[2];
  String camelCaseOperandType=getCamelCaseType(operandType);
  String operatorSymbol=tdesc[3];
  String inputColumnVectorType1=this.getColumnVectorType(operandType);
  String className="Filter" + getCamelCaseType(operandType) + tdesc[4]+ operatorName+ "Timestamp"+ tdesc[5];
  String baseClassName;
  if (tdesc[5].equals("Scalar")) {
    baseClassName="org.apache.hadoop.hive.ql.exec.vector.expressions.gen." + "Filter" + camelCaseOperandType + "Col"+ operatorName+ camelCaseOperandType+ "Scalar";
  }
 else {
    baseClassName="";
  }
  String fileName="FilterLongDouble" + (tdesc[4].equals("Col") ? "Column" : tdesc[4]) + "CompareTimestamp"+ tdesc[5];
  File templateFile=new File(joinPath(this.expressionTemplateDirectory,fileName + ".txt"));
  String templateString=readFile(templateFile);
  templateString=templateString.replaceAll("<ClassName>",className);
  if (baseClassName.length() > 0) {
    templateString=templateString.replaceAll("<BaseClassName>",baseClassName);
  }
  templateString=templateString.replaceAll("<OperandType>",operandType);
  templateString=templateString.replaceAll("<OperatorSymbol>",operatorSymbol);
  templateString=templateString.replaceAll("<InputColumnVectorType1>",inputColumnVectorType1);
  templateString=templateString.replaceAll("<GetTimestampLongDoubleMethod>",timestampLongDoubleMethod(operandType));
  writeFile(templateFile.lastModified(),expressionOutputDirectory,expressionClassesDirectory,className,templateString);
}
