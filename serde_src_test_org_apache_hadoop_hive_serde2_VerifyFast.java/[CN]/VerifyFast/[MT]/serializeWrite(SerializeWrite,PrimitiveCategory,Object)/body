{
  if (object == null) {
    serializeWrite.writeNull();
    return;
  }
switch (primitiveCategory) {
case BOOLEAN:
{
      boolean value=(Boolean)object;
      serializeWrite.writeBoolean(value);
    }
  break;
case BYTE:
{
  byte value=(Byte)object;
  serializeWrite.writeByte(value);
}
break;
case SHORT:
{
short value=(Short)object;
serializeWrite.writeShort(value);
}
break;
case INT:
{
int value=(Integer)object;
serializeWrite.writeInt(value);
}
break;
case LONG:
{
long value=(Long)object;
serializeWrite.writeLong(value);
}
break;
case FLOAT:
{
float value=(Float)object;
serializeWrite.writeFloat(value);
}
break;
case DOUBLE:
{
double value=(Double)object;
serializeWrite.writeDouble(value);
}
break;
case STRING:
{
String value=(String)object;
byte[] stringBytes=value.getBytes();
int stringLength=stringBytes.length;
serializeWrite.writeString(stringBytes,0,stringLength);
}
break;
case CHAR:
{
HiveChar value=(HiveChar)object;
serializeWrite.writeHiveChar(value);
}
break;
case VARCHAR:
{
HiveVarchar value=(HiveVarchar)object;
serializeWrite.writeHiveVarchar(value);
}
break;
case DECIMAL:
{
HiveDecimal value=(HiveDecimal)object;
serializeWrite.writeHiveDecimal(value);
}
break;
case DATE:
{
Date value=(Date)object;
serializeWrite.writeDate(value);
}
break;
case TIMESTAMP:
{
Timestamp value=(Timestamp)object;
serializeWrite.writeTimestamp(value);
}
break;
case INTERVAL_YEAR_MONTH:
{
HiveIntervalYearMonth value=(HiveIntervalYearMonth)object;
serializeWrite.writeHiveIntervalYearMonth(value);
}
break;
case INTERVAL_DAY_TIME:
{
HiveIntervalDayTime value=(HiveIntervalDayTime)object;
serializeWrite.writeHiveIntervalDayTime(value);
}
break;
case BINARY:
{
byte[] binaryBytes=(byte[])object;
int length=binaryBytes.length;
serializeWrite.writeBinary(binaryBytes,0,length);
}
break;
default :
throw new Error("Unknown primitive category " + primitiveCategory.name());
}
}
