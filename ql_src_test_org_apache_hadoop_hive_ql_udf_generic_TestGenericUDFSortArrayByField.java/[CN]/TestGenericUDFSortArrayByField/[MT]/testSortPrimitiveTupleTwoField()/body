{
  List<ObjectInspector> tuple=new ArrayList<ObjectInspector>();
  tuple.add(PrimitiveObjectInspectorFactory.writableStringObjectInspector);
  tuple.add(PrimitiveObjectInspectorFactory.writableStringObjectInspector);
  ObjectInspector[] inputOIs={ObjectInspectorFactory.getStandardListObjectInspector(ObjectInspectorFactory.getStandardStructObjectInspector(asList("Company","Department"),tuple)),PrimitiveObjectInspectorFactory.writableStringObjectInspector,PrimitiveObjectInspectorFactory.writableHiveVarcharObjectInspector};
  udf.initialize(inputOIs);
  Object i1=asList(new Text("Linkedin"),new Text("HR"));
  Object i2=asList(new Text("Linkedin"),new Text("IT"));
  Object i3=asList(new Text("Linkedin"),new Text("Finance"));
  Object i4=asList(new Text("Facebook"),new Text("IT"));
  Object i5=asList(new Text("Facebook"),new Text("Finance"));
  Object i6=asList(new Text("Facebook"),new Text("HR"));
  Object i7=asList(new Text("Google"),new Text("Logistics"));
  Object i8=asList(new Text("Google"),new Text("Finance"));
  Object i9=asList(new Text("Google"),new Text("HR"));
  HiveVarchar vc=new HiveVarchar();
  vc.setValue("Department");
  GenericUDF.DeferredJavaObject[] argas={new GenericUDF.DeferredJavaObject(asList(i1,i2,i3,i4,i5,i6,i7,i8,i9)),new GenericUDF.DeferredJavaObject(new Text("Company")),new GenericUDF.DeferredJavaObject(new HiveVarcharWritable(vc))};
  runAndVerify(argas,asList(i5,i6,i4,i8,i9,i7,i3,i1,i2));
}
