{
  List<ObjectInspector> tuple=new ArrayList<ObjectInspector>();
  tuple.add(PrimitiveObjectInspectorFactory.writableStringObjectInspector);
  tuple.add(PrimitiveObjectInspectorFactory.writableDoubleObjectInspector);
  ObjectInspector[] inputOIs={ObjectInspectorFactory.getStandardListObjectInspector(ObjectInspectorFactory.getStandardStructObjectInspector(asList("Company","Salary"),tuple)),PrimitiveObjectInspectorFactory.writableHiveVarcharObjectInspector,PrimitiveObjectInspectorFactory.writableHiveVarcharObjectInspector};
  udf.initialize(inputOIs);
  Object i1=asList(new Text("Facebook"),new DoubleWritable(80223.25));
  Object i2=asList(new Text("Facebook"),new DoubleWritable(50223.25));
  Object i3=asList(new Text("Facebook"),new DoubleWritable(40223.25));
  Object i4=asList(new Text("Facebook"),new DoubleWritable(60223.25));
  HiveVarchar vc=new HiveVarchar();
  vc.setValue("Salary");
  HiveVarchar order=new HiveVarchar();
  order.setValue("ASC");
  GenericUDF.DeferredJavaObject[] argas={new GenericUDF.DeferredJavaObject(asList(i1,i2,i3,i4)),new GenericUDF.DeferredJavaObject(new HiveVarcharWritable(vc)),new GenericUDF.DeferredJavaObject(new HiveVarcharWritable(order))};
  runAndVerify(argas,asList(i3,i2,i4,i1));
}
