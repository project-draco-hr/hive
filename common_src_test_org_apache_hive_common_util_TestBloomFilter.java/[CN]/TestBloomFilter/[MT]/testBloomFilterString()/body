{
  BloomFilter bf=new BloomFilter(100000);
  String val="bloo";
  String val1="bloom fil";
  String val2="bloom filter";
  String val3="cuckoo filter";
  assertEquals(false,bf.testString(val));
  assertEquals(false,bf.testString(val1));
  assertEquals(false,bf.testString(val2));
  assertEquals(false,bf.testString(val3));
  bf.addString(val);
  assertEquals(true,bf.testString(val));
  assertEquals(false,bf.testString(val1));
  assertEquals(false,bf.testString(val2));
  assertEquals(false,bf.testString(val3));
  bf.addString(val1);
  assertEquals(true,bf.testString(val));
  assertEquals(true,bf.testString(val1));
  assertEquals(false,bf.testString(val2));
  assertEquals(false,bf.testString(val3));
  bf.addString(val2);
  assertEquals(true,bf.testString(val));
  assertEquals(true,bf.testString(val1));
  assertEquals(true,bf.testString(val2));
  assertEquals(false,bf.testString(val3));
  bf.addString(val3);
  assertEquals(true,bf.testString(val));
  assertEquals(true,bf.testString(val1));
  assertEquals(true,bf.testString(val2));
  assertEquals(true,bf.testString(val3));
  long randVal=0;
  for (int i=0; i < COUNT; i++) {
    randVal=rand.nextLong();
    bf.addString(Long.toString(randVal));
  }
  assertEquals(true,bf.testString(Long.toString(randVal)));
  assertEquals(false,bf.testString(Long.toString(-120)));
  assertEquals(77944,bf.sizeInBytes());
}
