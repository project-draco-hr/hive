{
  LOG.debug("setLocation with location :" + location);
  List<HCatSchema> rv=HCatEximInputFormat.setInput(job,location,null);
  tableSchema=rv.get(0);
  partitionSchema=rv.get(1);
  List<HCatFieldSchema> colsPlusPartKeys=new ArrayList<HCatFieldSchema>();
  colsPlusPartKeys.addAll(tableSchema.getFields());
  colsPlusPartKeys.addAll(partitionSchema.getFields());
  outputSchema=new HCatSchema(colsPlusPartKeys);
  UDFContext udfContext=UDFContext.getUDFContext();
  Properties props=udfContext.getUDFProperties(this.getClass(),new String[]{signature});
  RequiredFieldList requiredFieldsInfo=(RequiredFieldList)props.get(PRUNE_PROJECTION_INFO);
  if (requiredFieldsInfo != null) {
    ArrayList<HCatFieldSchema> fcols=new ArrayList<HCatFieldSchema>();
    for (    RequiredField rf : requiredFieldsInfo.getFields()) {
      fcols.add(tableSchema.getFields().get(rf.getIndex()));
    }
    outputSchema=new HCatSchema(fcols);
    try {
      HCatBaseInputFormat.setOutputSchema(job,outputSchema);
    }
 catch (    Exception e) {
      throw new IOException(e);
    }
  }
}
