{
  String execBreakdownHeader=String.format(OPERATION_SUMMARY,OPERATION,DURATION);
  console.printInfo(SEPARATOR);
  reprintLineWithColorAsBold(execBreakdownHeader,Ansi.Color.CYAN);
  console.printInfo(SEPARATOR);
  long compile=perfLogger.getEndTime(PerfLogger.COMPILE) - perfLogger.getStartTime(PerfLogger.DRIVER_RUN);
  console.printInfo(String.format(OPERATION_SUMMARY,"Compile Query",secondsFormat.format(compile / 1000.0) + "s"));
  long totalDAGPrep=perfLogger.getStartTime(PerfLogger.TEZ_SUBMIT_DAG) - perfLogger.getEndTime(PerfLogger.COMPILE);
  console.printInfo(String.format(OPERATION_SUMMARY,"Prepare Plan",secondsFormat.format(totalDAGPrep / 1000.0) + "s"));
  long submitToAccept=perfLogger.getStartTime(PerfLogger.TEZ_RUN_DAG) - perfLogger.getStartTime(PerfLogger.TEZ_SUBMIT_DAG);
  console.printInfo(String.format(OPERATION_SUMMARY,"Submit Plan",secondsFormat.format(submitToAccept / 1000.0) + "s"));
  long acceptToStart=perfLogger.getDuration(PerfLogger.TEZ_SUBMIT_TO_RUNNING);
  console.printInfo(String.format(OPERATION_SUMMARY,"Start",secondsFormat.format(acceptToStart / 1000.0) + "s"));
  long startToEnd=perfLogger.getEndTime(PerfLogger.TEZ_RUN_DAG) - perfLogger.getEndTime(PerfLogger.TEZ_SUBMIT_TO_RUNNING);
  console.printInfo(String.format(OPERATION_SUMMARY,"Finish",secondsFormat.format(startToEnd / 1000.0) + "s"));
}
