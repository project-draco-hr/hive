{
  String db="testdb";
  String tableOne="testTable1";
  String tableTwo="testTable2";
  HCatClient client=HCatClient.create(new Configuration(hcatConf));
  client.dropDatabase(db,true,HCatClient.DropDBMode.CASCADE);
  HCatCreateDBDesc dbDesc=HCatCreateDBDesc.create(db).ifNotExists(false).build();
  client.createDatabase(dbDesc);
  List<String> dbNames=client.listDatabaseNamesByPattern("*");
  assertTrue(dbNames.contains("default"));
  assertTrue(dbNames.contains(db));
  HCatDatabase testDb=client.getDatabase(db);
  assertTrue(testDb.getComment() == null);
  assertTrue(testDb.getProperties().size() == 0);
  String warehouseDir=System.getProperty(ConfVars.METASTOREWAREHOUSE.varname,"/user/hive/warehouse");
  assertTrue(testDb.getLocation().equals("file:" + warehouseDir + "/"+ db+ ".db"));
  ArrayList<HCatFieldSchema> cols=new ArrayList<HCatFieldSchema>();
  cols.add(new HCatFieldSchema("id",Type.INT,"id comment"));
  cols.add(new HCatFieldSchema("value",Type.STRING,"value comment"));
  HCatCreateTableDesc tableDesc=HCatCreateTableDesc.create(db,tableOne,cols).fileFormat("rcfile").build();
  client.createTable(tableDesc);
  HCatTable table1=client.getTable(db,tableOne);
  assertTrue(table1.getInputFileFormat().equalsIgnoreCase(RCFileInputFormat.class.getName()));
  assertTrue(table1.getOutputFileFormat().equalsIgnoreCase(RCFileOutputFormat.class.getName()));
  assertTrue(table1.getSerdeLib().equalsIgnoreCase(ColumnarSerDe.class.getName()));
  assertTrue(table1.getCols().equals(cols));
  try {
    client.createTable(tableDesc);
  }
 catch (  HCatException e) {
    assertTrue(e.getMessage().contains("AlreadyExistsException while creating table."));
  }
  client.dropTable(db,tableOne,true);
  HCatCreateTableDesc tableDesc2=HCatCreateTableDesc.create(db,tableTwo,cols).build();
  client.createTable(tableDesc2);
  HCatTable table2=client.getTable(db,tableTwo);
  assertTrue(table2.getInputFileFormat().equalsIgnoreCase(TextInputFormat.class.getName()));
  assertTrue(table2.getOutputFileFormat().equalsIgnoreCase(IgnoreKeyTextOutputFormat.class.getName()));
  assertTrue(table2.getLocation().equalsIgnoreCase("file:" + warehouseDir + "/"+ db+ ".db/"+ tableTwo));
  client.close();
}
