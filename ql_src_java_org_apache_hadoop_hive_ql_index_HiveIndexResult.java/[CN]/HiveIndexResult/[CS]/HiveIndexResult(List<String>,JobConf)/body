{
  job=conf;
  bytesRef[0]=new BytesRefWritable();
  bytesRef[1]=new BytesRefWritable();
  ignoreHdfsLoc=HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_INDEX_IGNORE_HDFS_LOC);
  if (indexFiles != null && indexFiles.size() > 0) {
    List<Path> paths=new ArrayList<Path>();
    for (    String indexFile : indexFiles) {
      Path indexFilePath=new Path(indexFile);
      FileSystem fs=indexFilePath.getFileSystem(conf);
      FileStatus indexStat=fs.getFileStatus(indexFilePath);
      if (indexStat.isDir()) {
        FileStatus[] fss=fs.listStatus(indexFilePath,FileUtils.HIDDEN_FILES_PATH_FILTER);
        for (        FileStatus f : fss) {
          paths.add(f.getPath());
        }
      }
 else {
        paths.add(indexFilePath);
      }
    }
    long maxEntriesToLoad=HiveConf.getLongVar(conf,HiveConf.ConfVars.HIVE_INDEX_COMPACT_QUERY_MAX_ENTRIES);
    if (maxEntriesToLoad < 0) {
      maxEntriesToLoad=Long.MAX_VALUE;
    }
    long lineCounter=0;
    for (    Path indexFinalPath : paths) {
      FileSystem fs=indexFinalPath.getFileSystem(conf);
      FSDataInputStream ifile=fs.open(indexFinalPath);
      LineReader lr=new LineReader(ifile,conf);
      try {
        Text line=new Text();
        while (lr.readLine(line) > 0) {
          if (++lineCounter > maxEntriesToLoad) {
            throw new HiveException("Number of compact index entries loaded during the query exceeded the maximum of " + maxEntriesToLoad + " set in "+ HiveConf.ConfVars.HIVE_INDEX_COMPACT_QUERY_MAX_ENTRIES.varname);
          }
          add(line);
        }
      }
  finally {
        lr.close();
      }
    }
  }
}
