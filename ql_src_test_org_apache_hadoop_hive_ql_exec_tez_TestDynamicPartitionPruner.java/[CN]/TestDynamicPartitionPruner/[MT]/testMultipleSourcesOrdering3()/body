{
  InputInitializerContext mockInitContext=mock(InputInitializerContext.class);
  doReturn(2).when(mockInitContext).getVertexNumTasks("v1");
  doReturn(3).when(mockInitContext).getVertexNumTasks("v2");
  MapWork mapWork=createMockMapWork(new TestSource("v1",2),new TestSource("v2",1));
  DynamicPartitionPruner pruner=new DynamicPartitionPrunerForEventTesting(mockInitContext,mapWork);
  PruneRunnable pruneRunnable=new PruneRunnable(pruner);
  Thread t=new Thread(pruneRunnable);
  t.start();
  try {
    pruneRunnable.start();
    InputInitializerEvent eventV1=InputInitializerEvent.create("FakeTarget","TargetInput",ByteBuffer.allocate(0));
    eventV1.setSourceVertexName("v1");
    InputInitializerEvent eventV2=InputInitializerEvent.create("FakeTarget","TargetInput",ByteBuffer.allocate(0));
    eventV2.setSourceVertexName("v2");
    pruner.addEvent(eventV1);
    pruner.addEvent(eventV1);
    pruner.processVertex("v1");
    pruner.addEvent(eventV1);
    pruner.addEvent(eventV1);
    pruner.addEvent(eventV2);
    pruner.processVertex("v2");
    pruner.addEvent(eventV2);
    pruner.addEvent(eventV2);
    pruneRunnable.awaitEnd();
    assertFalse(pruneRunnable.inError.get());
  }
  finally {
    t.interrupt();
    t.join();
  }
}
