{
  GenericUDFUtils.ReturnObjectInspectorResolver returnOIResolver;
  returnOIResolver=new GenericUDFUtils.ReturnObjectInspectorResolver(true);
  for (int i=0; i < arguments.length; i++) {
    if (!returnOIResolver.update(arguments[i])) {
      throw new UDFArgumentTypeException(i,"Argument type \"" + arguments[i].getTypeName() + "\" is different from preceding arguments. "+ "Previous type was \""+ arguments[i - 1].getTypeName()+ "\"");
    }
  }
  converters=new Converter[arguments.length];
  ObjectInspector returnOI=returnOIResolver.get();
  if (returnOI == null) {
    returnOI=PrimitiveObjectInspectorFactory.getPrimitiveJavaObjectInspector(PrimitiveObjectInspector.PrimitiveCategory.STRING);
  }
  for (int i=0; i < arguments.length; i++) {
    converters[i]=ObjectInspectorConverters.getConverter(arguments[i],returnOI);
  }
  return ObjectInspectorFactory.getStandardListObjectInspector(returnOI);
}
