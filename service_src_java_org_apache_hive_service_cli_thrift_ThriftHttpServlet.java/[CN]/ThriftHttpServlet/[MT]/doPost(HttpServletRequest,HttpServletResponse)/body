{
  String clientUserName=null;
  String clientIpAddress;
  boolean requireNewCookie=false;
  try {
    if (isCookieAuthEnabled) {
      clientUserName=validateCookie(request);
      requireNewCookie=(clientUserName == null);
      if (requireNewCookie) {
        LOG.info("Could not validate cookie sent, will try to generate a new cookie");
      }
    }
    if (clientUserName == null) {
      if (isKerberosAuthMode(authType)) {
        String delegationToken=request.getHeader(HIVE_DELEGATION_TOKEN_HEADER);
        if ((delegationToken != null) && (!delegationToken.isEmpty())) {
          clientUserName=doTokenAuth(request,response);
        }
 else {
          clientUserName=doKerberosAuth(request);
        }
      }
 else {
        clientUserName=doPasswdAuth(request,authType);
      }
    }
    LOG.debug("Client username: " + clientUserName);
    SessionManager.setUserName(clientUserName);
    String doAsQueryParam=getDoAsQueryParam(request.getQueryString());
    if (doAsQueryParam != null) {
      SessionManager.setProxyUserName(doAsQueryParam);
    }
    clientIpAddress=request.getRemoteAddr();
    LOG.debug("Client IP Address: " + clientIpAddress);
    SessionManager.setIpAddress(clientIpAddress);
    String forwarded_for=request.getHeader(X_FORWARDED_FOR);
    if (forwarded_for != null) {
      LOG.debug("{}:{}",X_FORWARDED_FOR,forwarded_for);
      List<String> forwardedAddresses=Arrays.asList(forwarded_for.split(","));
      SessionManager.setForwardedAddresses(forwardedAddresses);
    }
 else {
      SessionManager.setForwardedAddresses(Collections.<String>emptyList());
    }
    if (requireNewCookie && !authType.equalsIgnoreCase(HiveAuthFactory.AuthTypes.NOSASL.toString())) {
      String cookieToken=HttpAuthUtils.createCookieToken(clientUserName);
      Cookie hs2Cookie=createCookie(signer.signCookie(cookieToken));
      if (isHttpOnlyCookie) {
        response.setHeader("SET-COOKIE",getHttpOnlyCookieHeader(hs2Cookie));
      }
 else {
        response.addCookie(hs2Cookie);
      }
      LOG.info("Cookie added for clientUserName " + clientUserName);
    }
    super.doPost(request,response);
  }
 catch (  HttpAuthenticationException e) {
    LOG.error("Error: ",e);
    response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);
    if (isKerberosAuthMode(authType)) {
      response.addHeader(HttpAuthUtils.WWW_AUTHENTICATE,HttpAuthUtils.NEGOTIATE);
    }
    response.getWriter().println("Authentication Error: " + e.getMessage());
  }
 finally {
    SessionManager.clearUserName();
    SessionManager.clearIpAddress();
    SessionManager.clearProxyUserName();
    SessionManager.clearForwardedAddresses();
  }
}
