{
  HiveCommand hiveCommand=HiveCommand.find(cmd);
  if (hiveCommand == null || isBlank(cmd[0])) {
    return null;
  }
  if (conf == null) {
    conf=new HiveConf();
  }
  Set<String> availableCommands=new HashSet<String>();
  if (!HiveAuthorizerFactory.class.isAssignableFrom(conf.getClass(ConfVars.HIVE_AUTHORIZATION_MANAGER.varname,DefaultHiveAuthorizationProvider.class))) {
    for (    String availableCommand : conf.getVar(HiveConf.ConfVars.HIVE_SECURITY_COMMAND_WHITELIST).split(",")) {
      availableCommands.add(availableCommand.toLowerCase().trim());
    }
  }
  if (conf.getBoolVar(ConfVars.HIVE_IN_TEST)) {
    availableCommands.add("set");
    availableCommands.add("dfs");
  }
  if (!availableCommands.contains(cmd[0].trim().toLowerCase())) {
    throw new SQLException("Insufficient privileges to execute " + cmd[0],"42000");
  }
switch (hiveCommand) {
case SET:
    return new SetProcessor();
case RESET:
  return new ResetProcessor();
case DFS:
SessionState ss=SessionState.get();
return new DfsProcessor(ss.getConf());
case ADD:
return new AddResourceProcessor();
case DELETE:
return new DeleteResourceProcessor();
case COMPILE:
return new CompileProcessor();
default :
throw new AssertionError("Unknown HiveCommand " + hiveCommand);
}
}
