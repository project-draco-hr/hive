{
  List<Order> colList=new ArrayList<Order>();
  int numCh=ast.getChildCount();
  for (int i=0; i < numCh; i++) {
    ASTNode child=(ASTNode)ast.getChild(i);
    if (child.getToken().getType() == HiveParser.TOK_TABSORTCOLNAMEASC) {
      child=(ASTNode)child.getChild(0);
      if (child.getToken().getType() == HiveParser.TOK_NULLS_FIRST) {
        colList.add(new Order(unescapeIdentifier(child.getChild(0).getText()).toLowerCase(),HIVE_COLUMN_ORDER_ASC,HIVE_COLUMN_NULLS_FIRST));
      }
 else {
        colList.add(new Order(unescapeIdentifier(child.getChild(0).getText()).toLowerCase(),HIVE_COLUMN_ORDER_ASC,HIVE_COLUMN_NULLS_LAST));
      }
    }
 else {
      child=(ASTNode)child.getChild(0);
      if (child.getToken().getType() == HiveParser.TOK_NULLS_LAST) {
        colList.add(new Order(unescapeIdentifier(child.getChild(0).getText()).toLowerCase(),HIVE_COLUMN_ORDER_DESC,HIVE_COLUMN_NULLS_LAST));
      }
 else {
        colList.add(new Order(unescapeIdentifier(child.getChild(0).getText()).toLowerCase(),HIVE_COLUMN_ORDER_DESC,HIVE_COLUMN_NULLS_FIRST));
      }
    }
  }
  return colList;
}
