{
  if ((astNode == null) || (astNode.getChildren() == null) || (astNode.getChildren().size() <= 1)) {
    return;
  }
  TypeCheckCtx typeCheckCtx=new TypeCheckCtx(null);
  for (  Node childNode : astNode.getChildren()) {
    ASTNode childASTNode=(ASTNode)childNode;
    if (childASTNode.getType() != HiveParser.TOK_PARTVAL) {
      getPartExprNodeDesc(childASTNode,astExprNodeMap);
    }
 else {
      if (childASTNode.getChildren().size() <= 1) {
        throw new HiveException("This is dynamic partitioning");
      }
      ASTNode partValASTChild=(ASTNode)childASTNode.getChildren().get(1);
      astExprNodeMap.put((ASTNode)childASTNode.getChildren().get(0),TypeCheckProcFactory.genExprNode(partValASTChild,typeCheckCtx).get(partValASTChild));
    }
  }
}
