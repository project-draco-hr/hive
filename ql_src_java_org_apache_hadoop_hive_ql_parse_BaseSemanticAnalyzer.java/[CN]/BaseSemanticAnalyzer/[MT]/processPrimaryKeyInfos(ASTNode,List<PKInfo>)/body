{
  if (child.getChildCount() < 6) {
    throw new SemanticException(ErrorMsg.INVALID_PK_SYNTAX.getMsg());
  }
  boolean userSpecifiedConstraintName=child.getChildCount() == 7;
  int relyIndex=child.getChildCount() == 7 ? 4 : 3;
  for (int j=0; j < child.getChild(1).getChildCount(); j++) {
    Tree grandChild=child.getChild(1).getChild(j);
    boolean rely=child.getChild(relyIndex).getType() == HiveParser.TOK_VALIDATE;
    boolean enable=child.getChild(relyIndex + 1).getType() == HiveParser.TOK_ENABLE;
    boolean validate=child.getChild(relyIndex + 2).getType() == HiveParser.TOK_VALIDATE;
    if (enable) {
      throw new SemanticException(ErrorMsg.INVALID_PK_SYNTAX.getMsg(" ENABLE feature not supported yet"));
    }
    if (validate) {
      throw new SemanticException(ErrorMsg.INVALID_PK_SYNTAX.getMsg(" VALIDATE feature not supported yet"));
    }
    pkInfos.add(new PKInfo(unescapeIdentifier(grandChild.getText().toLowerCase()),(userSpecifiedConstraintName ? unescapeIdentifier(child.getChild(3).getText().toLowerCase()) : null),rely));
  }
}
