{
  assert(b.charAt(0) == '\'');
  assert(b.charAt(b.length() - 1) == '\'');
  StringBuilder sb=new StringBuilder(b.length());
  int i=1;
  while (i < (b.length() - 1)) {
    if (b.charAt(i) == '\\' && (i + 4 < b.length())) {
      char i1=b.charAt(i + 1);
      char i2=b.charAt(i + 2);
      char i3=b.charAt(i + 3);
      if ((i1 >= '0' && i1 <= '1') && (i2 >= '0' && i2 <= '7') && (i3 >= '0' && i3 <= '7')) {
        byte bVal=(byte)((i3 - '0') + ((i2 - '0') * 8) + ((i1 - '0') * 8 * 8));
        byte[] bValArr=new byte[1];
        bValArr[0]=bVal;
        String tmp=new String(bValArr);
        sb.append(tmp);
        i+=4;
        continue;
      }
    }
    if (b.charAt(i) == '\\' && (i + 2 < b.length())) {
      char n=b.charAt(i + 1);
switch (n) {
case '0':
        sb.append("\0");
      break;
case '\'':
    sb.append("'");
  break;
case '"':
sb.append("\"");
break;
case 'b':
sb.append("\b");
break;
case 'n':
sb.append("\n");
break;
case 'r':
sb.append("\r");
break;
case 't':
sb.append("\t");
break;
case 'Z':
sb.append("\u001A");
break;
case '\\':
sb.append("\\");
break;
case '%':
sb.append("\\%");
break;
case '_':
sb.append("\\_");
break;
default :
sb.append(n);
}
i++;
}
 else {
sb.append(b.charAt(i));
}
i++;
}
return sb.toString();
}
