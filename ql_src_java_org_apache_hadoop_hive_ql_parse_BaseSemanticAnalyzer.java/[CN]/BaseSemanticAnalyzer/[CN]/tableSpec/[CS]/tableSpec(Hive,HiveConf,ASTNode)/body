{
  assert(ast.getToken().getType() == HiveParser.TOK_TAB || ast.getToken().getType() == HiveParser.TOK_TABLE_PARTITION || ast.getToken().getType() == HiveParser.TOK_TABTYPE);
  int childIndex=0;
  numDynParts=0;
  try {
    tableName=getUnescapedName((ASTNode)ast.getChild(0));
    boolean testMode=conf.getBoolVar(HiveConf.ConfVars.HIVETESTMODE);
    if (testMode) {
      tableName=conf.getVar(HiveConf.ConfVars.HIVETESTMODEPREFIX) + tableName;
    }
    tableHandle=db.getTable(tableName);
  }
 catch (  InvalidTableException ite) {
    throw new SemanticException(ErrorMsg.INVALID_TABLE.getMsg(ast.getChild(0)),ite);
  }
catch (  HiveException e) {
    throw new SemanticException(ErrorMsg.GENERIC_ERROR.getMsg(ast.getChild(childIndex),e.getMessage()),e);
  }
  if (ast.getChildCount() == 2) {
    childIndex=1;
    ASTNode partspec=(ASTNode)ast.getChild(1);
    partitions=new ArrayList<Partition>();
    partSpec=new LinkedHashMap<String,String>(partspec.getChildCount());
    for (int i=0; i < partspec.getChildCount(); ++i) {
      ASTNode partspec_val=(ASTNode)partspec.getChild(i);
      String val=null;
      String colName=unescapeIdentifier(partspec_val.getChild(0).getText().toLowerCase());
      if (partspec_val.getChildCount() < 2) {
        ++numDynParts;
      }
 else {
        val=stripQuotes(partspec_val.getChild(1).getText());
      }
      partSpec.put(colName,val);
    }
    Utilities.validatePartSpec(tableHandle,partSpec);
    if (numDynParts > 0) {
      List<FieldSchema> parts=tableHandle.getPartitionKeys();
      int numStaPart=parts.size() - numDynParts;
      if (numStaPart == 0 && conf.getVar(HiveConf.ConfVars.DYNAMICPARTITIONINGMODE).equalsIgnoreCase("strict")) {
        throw new SemanticException(ErrorMsg.DYNAMIC_PARTITION_STRICT_MODE.getMsg());
      }
      for (      FieldSchema fs : parts) {
        if (partSpec.get(fs.getName().toLowerCase()) == null) {
          if (numStaPart > 0) {
            throw new SemanticException(ErrorMsg.PARTITION_DYN_STA_ORDER.getMsg(ast.getChild(childIndex)));
          }
          break;
        }
 else {
          --numStaPart;
        }
      }
      partHandle=null;
      specType=SpecType.DYNAMIC_PARTITION;
    }
 else {
      try {
        partHandle=db.getPartition(tableHandle,partSpec,false);
        if (partHandle == null) {
          partHandle=new Partition(tableHandle,partSpec,null);
        }
 else {
          partitions.add(partHandle);
        }
      }
 catch (      HiveException e) {
        throw new SemanticException(ErrorMsg.INVALID_PARTITION.getMsg(ast.getChild(childIndex)));
      }
      specType=SpecType.STATIC_PARTITION;
    }
  }
 else {
    specType=SpecType.TABLE_ONLY;
  }
}
