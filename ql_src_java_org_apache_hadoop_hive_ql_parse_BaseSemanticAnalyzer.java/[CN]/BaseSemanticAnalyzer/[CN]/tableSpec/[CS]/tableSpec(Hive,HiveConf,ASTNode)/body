{
  assert(ast.getToken().getType() == HiveParser.TOK_TAB);
  int childIndex=0;
  try {
    tableName=unescapeIdentifier(ast.getChild(0).getText());
    boolean testMode=conf.getBoolVar(HiveConf.ConfVars.HIVETESTMODE);
    if (testMode) {
      tableName=conf.getVar(HiveConf.ConfVars.HIVETESTMODEPREFIX) + tableName;
    }
    tableHandle=db.getTable(MetaStoreUtils.DEFAULT_DATABASE_NAME,tableName);
  }
 catch (  InvalidTableException ite) {
    throw new SemanticException(ErrorMsg.INVALID_TABLE.getMsg(ast.getChild(0)),ite);
  }
catch (  HiveException e) {
    throw new SemanticException(ErrorMsg.GENERIC_ERROR.getMsg(ast.getChild(childIndex),e.getMessage()),e);
  }
  if (ast.getChildCount() == 2) {
    childIndex=1;
    ASTNode partspec=(ASTNode)ast.getChild(1);
    partSpec=new LinkedHashMap<String,String>();
    for (int i=0; i < partspec.getChildCount(); ++i) {
      ASTNode partspec_val=(ASTNode)partspec.getChild(i);
      String val=stripQuotes(partspec_val.getChild(1).getText());
      partSpec.put(unescapeIdentifier(partspec_val.getChild(0).getText().toLowerCase()),val);
    }
    try {
      partHandle=new Partition(tableHandle,partSpec,null);
    }
 catch (    HiveException e) {
      throw new SemanticException(ErrorMsg.INVALID_PARTITION.getMsg(ast.getChild(childIndex)));
    }
  }
}
