{
  try {
    client.execute("set hive.support.concurrency = false");
    client.execute("drop table " + tableName);
  }
 catch (  Exception ex) {
  }
  client.execute("create table " + tableName + " (num int)");
  client.execute("load data local inpath '" + dataFilePath.toString() + "' into table "+ tableName);
  client.execute("SET hive.mapred.mode = nonstrict");
  Schema schema=client.getSchema();
  assertEquals(schema.getFieldSchemasSize(),0);
  assertEquals(schema.getPropertiesSize(),0);
  Schema thriftschema=client.getThriftSchema();
  assertEquals(thriftschema.getFieldSchemasSize(),0);
  assertEquals(thriftschema.getPropertiesSize(),0);
  assertEquals(client.fetchOne(),"");
  assertEquals(client.fetchN(10).size(),0);
  assertEquals(client.fetchAll().size(),0);
  client.execute("select * from " + tableName + " limit 10");
  client.fetchOne();
  client.execute("SET hive.mapred.mode = nonstrict");
  schema=client.getSchema();
  assertEquals(schema.getFieldSchemasSize(),0);
  assertEquals(schema.getPropertiesSize(),0);
  thriftschema=client.getThriftSchema();
  assertEquals(thriftschema.getFieldSchemasSize(),0);
  assertEquals(thriftschema.getPropertiesSize(),0);
  assertEquals(client.fetchOne(),"");
  assertEquals(client.fetchN(10).size(),0);
  assertEquals(client.fetchAll().size(),0);
  client.execute("drop table " + tableName);
}
