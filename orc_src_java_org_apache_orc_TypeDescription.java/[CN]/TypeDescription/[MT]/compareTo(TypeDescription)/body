{
  if (this == other) {
    return 0;
  }
 else   if (other == null) {
    return -1;
  }
 else {
    int result=category.compareTo(other.category);
    if (result == 0) {
switch (category) {
case CHAR:
case VARCHAR:
        return maxLength - other.maxLength;
case DECIMAL:
      if (precision != other.precision) {
        return precision - other.precision;
      }
    return scale - other.scale;
case UNION:
case LIST:
case MAP:
  if (children.size() != other.children.size()) {
    return children.size() - other.children.size();
  }
for (int c=0; result == 0 && c < children.size(); ++c) {
  result=children.get(c).compareTo(other.children.get(c));
}
break;
case STRUCT:
if (children.size() != other.children.size()) {
return children.size() - other.children.size();
}
for (int c=0; result == 0 && c < children.size(); ++c) {
result=fieldNames.get(c).compareTo(other.fieldNames.get(c));
if (result == 0) {
result=children.get(c).compareTo(other.children.get(c));
}
}
break;
default :
}
}
return result;
}
}
