{
  Configuration conf=context.getConfiguration();
  copyLocal(COPY_NAME,conf);
  String[] jarArgs=TempletonUtils.decodeArray(conf.get(JAR_ARGS_NAME));
  ArrayList<String> removeEnv=new ArrayList<String>();
  removeEnv.add("HADOOP_ROOT_LOGGER");
  removeEnv.add("hadoop-command");
  removeEnv.add("CLASS");
  removeEnv.add("mapredcommand");
  Map<String,String> env=TempletonUtils.hadoopUserEnv(user,overrideClasspath);
  List<String> jarArgsList=new LinkedList<String>(Arrays.asList(jarArgs));
  String tokenFile=System.getenv("HADOOP_TOKEN_FILE_LOCATION");
  if (tokenFile != null) {
    tokenFile=tokenFile.replaceAll("\"","");
    String tokenArg="mapreduce.job.credentials.binary=" + tokenFile;
    if (Shell.WINDOWS) {
      try {
        tokenArg=TempletonUtils.quoteForWindows(tokenArg);
      }
 catch (      BadParam e) {
        throw new IOException("cannot pass " + tokenFile + " to mapreduce.job.credentials.binary",e);
      }
    }
    for (int i=0; i < jarArgsList.size(); i++) {
      String newArg=jarArgsList.get(i).replace(TOKEN_FILE_ARG_PLACEHOLDER,tokenArg);
      jarArgsList.set(i,newArg);
    }
  }
 else {
    Iterator<String> it=jarArgsList.iterator();
    while (it.hasNext()) {
      String arg=it.next();
      if (arg.contains(TOKEN_FILE_ARG_PLACEHOLDER)) {
        it.remove();
      }
    }
  }
  return execService.run(jarArgsList,removeEnv,env);
}
