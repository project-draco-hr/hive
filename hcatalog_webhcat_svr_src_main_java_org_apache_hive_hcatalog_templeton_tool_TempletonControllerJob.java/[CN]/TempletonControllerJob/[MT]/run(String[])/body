{
  if (LOG.isDebugEnabled()) {
    LOG.debug("Preparing to submit job: " + Arrays.toString(args));
  }
  Configuration conf=getConf();
  conf.set(JAR_ARGS_NAME,TempletonUtils.encodeArray(args));
  String memoryMb=appConf.mapperMemoryMb();
  if (memoryMb != null && memoryMb.length() != 0) {
    conf.set(AppConfig.HADOOP_MAP_MEMORY_MB,memoryMb);
  }
  String amMemoryMB=appConf.amMemoryMb();
  if (amMemoryMB != null && !amMemoryMB.isEmpty()) {
    conf.set(AppConfig.HADOOP_MR_AM_MEMORY_MB,amMemoryMB);
  }
  String amJavaOpts=appConf.controllerAMChildOpts();
  if (amJavaOpts != null && !amJavaOpts.isEmpty()) {
    conf.set(AppConfig.HADOOP_MR_AM_JAVA_OPTS,amJavaOpts);
  }
  String user=UserGroupInformation.getCurrentUser().getShortUserName();
  conf.set("user.name",user);
  Job job=new Job(conf);
  job.setJarByClass(LaunchMapper.class);
  job.setJobName(TempletonControllerJob.class.getSimpleName());
  job.setMapperClass(LaunchMapper.class);
  job.setMapOutputKeyClass(Text.class);
  job.setMapOutputValueClass(Text.class);
  job.setInputFormatClass(SingleInputFormat.class);
  NullOutputFormat<NullWritable,NullWritable> of=new NullOutputFormat<NullWritable,NullWritable>();
  job.setOutputFormatClass(of.getClass());
  job.setNumReduceTasks(0);
  JobClient jc=new JobClient(new JobConf(job.getConfiguration()));
  Token<DelegationTokenIdentifier> mrdt=jc.getDelegationToken(new Text("mr token"));
  job.getCredentials().addToken(new Text("mr token"),mrdt);
  String metastoreTokenStrForm=addHMSToken(job,user);
  job.submit();
  submittedJobId=job.getJobID();
  if (metastoreTokenStrForm != null) {
    DelegationTokenCache.getStringFormTokenCache().storeDelegationToken(submittedJobId.toString(),metastoreTokenStrForm);
    LOG.debug("Added metastore delegation token for jobId=" + submittedJobId.toString() + " user="+ user);
  }
  return 0;
}
