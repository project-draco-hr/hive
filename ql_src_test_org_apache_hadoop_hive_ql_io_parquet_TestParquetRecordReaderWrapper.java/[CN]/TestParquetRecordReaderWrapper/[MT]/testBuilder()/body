{
  SearchArgument sarg=SearchArgumentFactory.newBuilder().startNot().startOr().isNull("x",PredicateLeaf.Type.LONG).between("y",PredicateLeaf.Type.LONG,10L,20L).in("z",PredicateLeaf.Type.LONG,1L,2L,3L).nullSafeEquals("a",PredicateLeaf.Type.STRING,"stinger").end().end().build();
  MessageType schema=MessageTypeParser.parseMessageType("message test {" + " optional int32 x; required int32 y; required int32 z;" + " optional binary a;}");
  FilterPredicate p=ParquetFilterPredicateConverter.toFilterPredicate(sarg,schema);
  String expected="and(and(and(not(eq(x, null)), not(and(lteq(y, 20), not(lt(y, 10))))), not(or(or(eq(z, 1), " + "eq(z, 2)), eq(z, 3)))), not(eq(a, Binary{\"stinger\"})))";
  assertEquals(expected,p.toString());
}
