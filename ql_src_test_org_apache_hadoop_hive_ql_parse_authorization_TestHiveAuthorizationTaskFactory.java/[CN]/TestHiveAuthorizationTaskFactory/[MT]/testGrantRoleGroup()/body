{
  DDLWork work=analyze("GRANT ROLE " + ROLE + " TO GROUP "+ GROUP);
  GrantRevokeRoleDDL grantDesc=work.getGrantRevokeRoleDDL();
  Assert.assertNotNull("Grant should not be null",grantDesc);
  Assert.assertTrue("Expected grant ",grantDesc.getGrant());
  Assert.assertTrue("Grant option is always true ",grantDesc.isGrantOption());
  Assert.assertEquals(currentUser,grantDesc.getGrantor());
  Assert.assertEquals(PrincipalType.USER,grantDesc.getGrantorType());
  for (  String role : ListSizeMatcher.inList(grantDesc.getRoles()).ofSize(1)) {
    Assert.assertEquals(ROLE,role);
  }
  for (  PrincipalDesc principal : ListSizeMatcher.inList(grantDesc.getPrincipalDesc()).ofSize(1)) {
    Assert.assertEquals(PrincipalType.GROUP,principal.getType());
    Assert.assertEquals(GROUP,principal.getName());
  }
}
