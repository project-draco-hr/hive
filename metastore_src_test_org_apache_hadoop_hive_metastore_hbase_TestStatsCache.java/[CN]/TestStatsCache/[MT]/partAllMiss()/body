{
  String dbName="default";
  String tableName="misspart";
  List<List<String>> partVals=Arrays.asList(Arrays.asList("today"),Arrays.asList("yesterday"));
  List<String> partNames=Arrays.asList("ds=today","ds=yeserday");
  long now=System.currentTimeMillis();
  ColumnStatistics cs=new ColumnStatistics();
  ColumnStatisticsDesc desc=new ColumnStatisticsDesc(false,dbName,tableName);
  desc.setLastAnalyzed(now);
  desc.setPartName(partNames.get(0));
  cs.setStatsDesc(desc);
  ColumnStatisticsObj obj=new ColumnStatisticsObj();
  obj.setColName("col1");
  obj.setColType("boolean");
  ColumnStatisticsData data=new ColumnStatisticsData();
  data.setBooleanStats(new BooleanColumnStatsData());
  obj.setStatsData(data);
  cs.addToStatsObj(obj);
  byte[] serialized=HBaseUtils.serializeStatsForOneColumn(cs,obj);
  Put put=new Put(HBaseUtils.buildKey(dbName,tableName,partNames.get(0)));
  put.add(HBaseReadWrite.STATS_CF,"col1".getBytes(HBaseUtils.ENCODING),serialized);
  puts[0]=put;
  cs=new ColumnStatistics();
  desc=new ColumnStatisticsDesc(false,dbName,tableName);
  desc.setLastAnalyzed(now);
  desc.setPartName(partNames.get(1));
  cs.setStatsDesc(desc);
  obj=new ColumnStatisticsObj();
  obj.setColName("col2");
  obj.setColType("long");
  data=new ColumnStatisticsData();
  data.setLongStats(new LongColumnStatsData());
  obj.setStatsData(data);
  cs.addToStatsObj(obj);
  serialized=HBaseUtils.serializeStatsForOneColumn(cs,obj);
  put=new Put(HBaseUtils.buildKey(dbName,tableName,partNames.get(1)));
  put.add(HBaseReadWrite.STATS_CF,"col2".getBytes(HBaseUtils.ENCODING),serialized);
  puts[1]=put;
  List<ColumnStatistics> results=hrw.getPartitionStatistics(dbName,tableName,partNames,partVals,Arrays.asList("col1","col2","col3"));
  Assert.assertEquals(2,results.size());
  for (int i=0; i < results.size(); i++) {
    Assert.assertEquals(now,results.get(i).getStatsDesc().getLastAnalyzed());
    Assert.assertEquals(dbName,results.get(i).getStatsDesc().getDbName());
    Assert.assertEquals(tableName,results.get(i).getStatsDesc().getTableName());
    Assert.assertEquals(partNames.get(i),results.get(i).getStatsDesc().getPartName());
    Assert.assertFalse(cs.getStatsDesc().isIsTblLevel());
    Assert.assertEquals(1,results.get(i).getStatsObjSize());
    for (    ColumnStatisticsObj csobj : cs.getStatsObj()) {
      if (csobj.getColName().equals("col1")) {
        Assert.assertEquals(ColumnStatisticsData._Fields.BOOLEAN_STATS,csobj.getStatsData().getSetField());
      }
 else       if (csobj.getColName().equals("col2")) {
        Assert.assertEquals(ColumnStatisticsData._Fields.LONG_STATS,csobj.getStatsData().getSetField());
      }
 else {
        Assert.fail("Unknown column");
      }
    }
  }
}
