{
  UserGroupInformation currUser=UserGroupInformation.getCurrentUser();
  UserGroupInformation ownerUgi=UserGroupInformation.createRemoteUser(owner);
  if (!ownerUgi.getShortUserName().equals(currUser.getShortUserName())) {
    ownerUgi=UserGroupInformation.createProxyUser(owner,UserGroupInformation.getCurrentUser());
    ProxyUsers.authorize(ownerUgi,remoteAddr,null);
  }
  return ownerUgi.doAs(new PrivilegedExceptionAction<String>(){
    @Override public String run() throws IOException {
      return secretManager.getDelegationToken(renewer);
    }
  }
);
}
