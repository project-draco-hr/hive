{
  _Fields setField=_Fields.findByThriftId(fieldID);
  if (setField != null) {
switch (setField) {
case INT_VALUE:
      Integer intValue;
    intValue=iprot.readI32();
  return intValue;
case LONG_VALUE:
Long longValue;
longValue=iprot.readI64();
return longValue;
case STRING_VALUE:
String stringValue;
stringValue=iprot.readString();
return stringValue;
case DOUBLE_VALUE:
Double doubleValue;
doubleValue=iprot.readDouble();
return doubleValue;
case FLAG:
Boolean flag;
flag=iprot.readBool();
return flag;
case L_STRING:
List<String> lString;
{
org.apache.thrift.protocol.TList _list9=iprot.readListBegin();
lString=new ArrayList<String>(_list9.size);
String _elem10;
for (int _i11=0; _i11 < _list9.size; ++_i11) {
_elem10=iprot.readString();
lString.add(_elem10);
}
iprot.readListEnd();
}
return lString;
case UNION_MSTRING_STRING:
Map<String,String> unionMStringString;
{
org.apache.thrift.protocol.TMap _map12=iprot.readMapBegin();
unionMStringString=new HashMap<String,String>(2 * _map12.size);
String _key13;
String _val14;
for (int _i15=0; _i15 < _map12.size; ++_i15) {
_key13=iprot.readString();
_val14=iprot.readString();
unionMStringString.put(_key13,_val14);
}
iprot.readMapEnd();
}
return unionMStringString;
default :
throw new IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
}
}
 else {
throw new TProtocolException("Couldn't find a field with field id " + fieldID);
}
}
