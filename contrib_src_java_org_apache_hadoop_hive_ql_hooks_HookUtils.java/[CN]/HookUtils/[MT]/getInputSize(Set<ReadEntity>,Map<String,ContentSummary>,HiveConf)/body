{
  URI defaultPathUri=new URI(conf.getVar(HiveConf.ConfVars.METASTOREWAREHOUSE));
  String defaultPath=defaultPathUri.getPath();
  String defaultPrefix=defaultPathUri.toString().substring(0,defaultPathUri.toString().lastIndexOf(defaultPath));
  Map<String,Path> locationToPath=new HashMap<String,Path>();
  for (  ReadEntity re : inputs) {
    Path p=null;
switch (re.getType()) {
case TABLE:
      Table table=re.getTable();
    if (table.isPartitioned()) {
      continue;
    }
  if (table.isView()) {
    continue;
  }
p=table.getPath();
break;
case PARTITION:
Partition partition=re.getPartition();
if (partition.getTable().isView()) {
continue;
}
p=partition.getPartitionPath();
break;
default :
continue;
}
String location=re.getLocation().toString();
if (location.equals(defaultPath) || location.startsWith(defaultPath.endsWith("/") ? defaultPath : defaultPath + "/")) {
location=defaultPrefix + location;
}
if (!location.endsWith("/")) {
location+="/";
}
locationToPath.put(location,p);
}
String[] locations=new String[locationToPath.size()];
locations=locationToPath.keySet().toArray(locations);
Arrays.sort(locations);
String lastLocation=null;
long totalInputSize=0;
for (String formattedLocation : locations) {
if (lastLocation != null && formattedLocation.startsWith(lastLocation)) {
continue;
}
Path p=locationToPath.get(formattedLocation);
lastLocation=formattedLocation;
String pathStr=p.toString();
if (LOG.isDebugEnabled()) {
LOG.debug("Finding from cache Content Summary for " + pathStr);
}
ContentSummary cs=(inputToCS == null) ? null : inputToCS.get(pathStr);
if (cs == null) {
if (LOG.isDebugEnabled()) {
LOG.debug("Fetch Content Summary for " + pathStr);
}
FileSystem fs=p.getFileSystem(conf);
cs=fs.getContentSummary(p);
inputToCS.put(pathStr,cs);
}
totalInputSize+=cs.getLength();
if (LOG.isDebugEnabled()) {
LOG.debug("Length for file: " + pathStr + " = "+ cs.getLength());
}
}
return totalInputSize;
}
