{
  if (this.o_rdonly_) {
    throw new RuntimeException("cannot perform write operation on a read-only table");
  }
  String newName=schema.getProperty(Constants.META_TABLE_NAME);
  String newLoc=schema.getProperty(Constants.META_TABLE_LOCATION);
  if (newName.equals(this.tableName_) == false) {
    Path newPath=newLoc.equals(this.whPath_.toUri().toASCIIString()) ? this.parent_.getDefaultTablePath(newName) : new Path(newLoc);
    try {
      this.whPath_.getFileSystem(this.conf_).rename(this.whPath_,newPath);
    }
 catch (    IOException e) {
      LOG.warn("got IOException in rename table: " + e.getMessage());
    }
    this.whPath_=newPath;
    schema.setProperty(Constants.META_TABLE_LOCATION,newPath.toUri().toASCIIString());
    this.store_.rename(this.parent_,this.tableName_,this.parent_,newName);
    this.tableName_=newName;
  }
 else   if (newLoc.equals(this.schema_.getProperty(Constants.META_TABLE_LOCATION))) {
    Path newPath=new Path(newLoc);
    try {
      this.whPath_.getFileSystem(this.conf_).rename(this.whPath_,newPath);
      this.whPath_=newPath;
      schema.setProperty(Constants.META_TABLE_LOCATION,this.whPath_.toUri().toASCIIString());
    }
 catch (    IOException e) {
      LOG.warn("got IOException in rename table: " + e.getMessage());
    }
  }
  this.schema_=schema;
  save(true);
}
