{
  if (LOG.isDebugEnabled()) {
    LOG.debug("Parsing command: " + command);
  }
  HiveLexerX lexer=new HiveLexerX(new ANTLRNoCaseStringStream(command));
  TokenRewriteStream tokens=new TokenRewriteStream(lexer);
  if (ctx != null) {
    ctx.setTokenRewriteStream(tokens);
  }
  HiveParser parser=new HiveParser(tokens);
  parser.setTreeAdaptor(adaptor);
  HiveParser_SelectClauseParser.selectClause_return r=null;
  try {
    r=parser.selectClause();
  }
 catch (  RecognitionException e) {
    e.printStackTrace();
    throw new ParseException(parser.errors);
  }
  if (lexer.getErrors().size() == 0 && parser.errors.size() == 0) {
    LOG.debug("Parse Completed");
  }
 else   if (lexer.getErrors().size() != 0) {
    throw new ParseException(lexer.getErrors());
  }
 else {
    throw new ParseException(parser.errors);
  }
  return (ASTNode)r.getTree();
}
