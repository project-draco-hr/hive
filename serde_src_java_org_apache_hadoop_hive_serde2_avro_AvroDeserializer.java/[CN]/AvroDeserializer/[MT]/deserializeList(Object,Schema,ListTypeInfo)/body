{
  if (recordSchema.getType().equals(Schema.Type.FIXED)) {
    GenericData.Fixed fixed=(GenericData.Fixed)datum;
    List<Byte> asList=new ArrayList<Byte>(fixed.bytes().length);
    for (int j=0; j < fixed.bytes().length; j++) {
      asList.add(fixed.bytes()[j]);
    }
    return asList;
  }
 else   if (recordSchema.getType().equals(Schema.Type.BYTES)) {
    ByteBuffer bb=(ByteBuffer)datum;
    List<Byte> asList=new ArrayList<Byte>(bb.capacity());
    byte[] array=bb.array();
    for (int j=0; j < array.length; j++) {
      asList.add(array[j]);
    }
    return asList;
  }
 else {
    List listData=(List)datum;
    Schema listSchema=recordSchema.getElementType();
    List<Object> listContents=new ArrayList<Object>(listData.size());
    for (    Object obj : listData) {
      listContents.add(worker(obj,listSchema,columnType.getListElementTypeInfo()));
    }
    return listContents;
  }
}
