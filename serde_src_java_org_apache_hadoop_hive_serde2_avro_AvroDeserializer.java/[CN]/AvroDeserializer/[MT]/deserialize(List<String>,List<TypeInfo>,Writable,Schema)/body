{
  if (!(writable instanceof AvroGenericRecordWritable)) {
    throw new AvroSerdeException("Expecting a AvroGenericRecordWritable");
  }
  if (row == null || row.size() != columnNames.size()) {
    row=new ArrayList<Object>(columnNames.size());
  }
 else {
    row.clear();
  }
  AvroGenericRecordWritable recordWritable=(AvroGenericRecordWritable)writable;
  GenericRecord r=recordWritable.getRecord();
  Schema fileSchema=recordWritable.getFileSchema();
  UID recordReaderId=recordWritable.getRecordReaderID();
  if (!noEncodingNeeded.contains(recordReaderId)) {
    SchemaReEncoder reEncoder=null;
    if (reEncoderCache.containsKey(recordReaderId)) {
      reEncoder=reEncoderCache.get(recordReaderId);
    }
 else     if (!r.getSchema().equals(readerSchema)) {
      reEncoder=new SchemaReEncoder(r.getSchema(),readerSchema);
      reEncoderCache.put(recordReaderId,reEncoder);
    }
 else {
      LOG.debug("Adding new valid RRID :" + recordReaderId);
      noEncodingNeeded.add(recordReaderId);
    }
    if (reEncoder != null) {
      if (!warnedOnce) {
        LOG.warn("Received different schemas.  Have to re-encode: " + r.getSchema().toString(false) + "\nSIZE"+ reEncoderCache+ " ID "+ recordReaderId);
        warnedOnce=true;
      }
      r=reEncoder.reencode(r);
    }
  }
  workerBase(row,fileSchema,columnNames,columnTypes,r);
  return row;
}
