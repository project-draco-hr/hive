{
  Entry<ColumnEncoding,ColumnEncoding> stringString=Maps.immutableEntry(ColumnEncoding.STRING,ColumnEncoding.STRING), stringBinary=Maps.immutableEntry(ColumnEncoding.STRING,ColumnEncoding.BINARY), binaryBinary=Maps.immutableEntry(ColumnEncoding.BINARY,ColumnEncoding.BINARY), binaryString=Maps.immutableEntry(ColumnEncoding.BINARY,ColumnEncoding.STRING);
  Assert.assertEquals(stringString,ColumnEncoding.getMapEncoding("s:s"));
  Assert.assertEquals(stringString,ColumnEncoding.getMapEncoding("s:string"));
  Assert.assertEquals(stringString,ColumnEncoding.getMapEncoding("string:s"));
  Assert.assertEquals(stringString,ColumnEncoding.getMapEncoding("string:string"));
  Assert.assertEquals(stringBinary,ColumnEncoding.getMapEncoding("s:b"));
  Assert.assertEquals(stringBinary,ColumnEncoding.getMapEncoding("string:b"));
  Assert.assertEquals(stringBinary,ColumnEncoding.getMapEncoding("s:binary"));
  Assert.assertEquals(stringBinary,ColumnEncoding.getMapEncoding("string:binary"));
  Assert.assertEquals(binaryString,ColumnEncoding.getMapEncoding("b:s"));
  Assert.assertEquals(binaryString,ColumnEncoding.getMapEncoding("b:string"));
  Assert.assertEquals(binaryString,ColumnEncoding.getMapEncoding("binary:s"));
  Assert.assertEquals(binaryString,ColumnEncoding.getMapEncoding("binary:string"));
  Assert.assertEquals(binaryBinary,ColumnEncoding.getMapEncoding("b:b"));
  Assert.assertEquals(binaryBinary,ColumnEncoding.getMapEncoding("binary:b"));
  Assert.assertEquals(binaryBinary,ColumnEncoding.getMapEncoding("b:binary"));
  Assert.assertEquals(binaryBinary,ColumnEncoding.getMapEncoding("binary:binary"));
}
