def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('ThriftType')
    if (self.is_container != None):
        oprot.writeFieldBegin('is_container', TType.BOOL, 1)
        oprot.writeBool(self.is_container)
        oprot.writeFieldEnd()
    if (self.simple_type != None):
        oprot.writeFieldBegin('simple_type', TType.STRUCT, 2)
        self.simple_type.write(oprot)
        oprot.writeFieldEnd()
    if (self.container_type != None):
        oprot.writeFieldBegin('container_type', TType.STRUCT, 3)
        self.container_type.write(oprot)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
