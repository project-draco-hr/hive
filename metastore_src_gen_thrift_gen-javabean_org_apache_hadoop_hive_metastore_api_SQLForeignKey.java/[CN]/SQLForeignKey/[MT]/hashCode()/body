{
  List<Object> list=new ArrayList<Object>();
  boolean present_pktable_db=true && (isSetPktable_db());
  list.add(present_pktable_db);
  if (present_pktable_db)   list.add(pktable_db);
  boolean present_pktable_name=true && (isSetPktable_name());
  list.add(present_pktable_name);
  if (present_pktable_name)   list.add(pktable_name);
  boolean present_pkcolumn_name=true && (isSetPkcolumn_name());
  list.add(present_pkcolumn_name);
  if (present_pkcolumn_name)   list.add(pkcolumn_name);
  boolean present_fktable_db=true && (isSetFktable_db());
  list.add(present_fktable_db);
  if (present_fktable_db)   list.add(fktable_db);
  boolean present_fktable_name=true && (isSetFktable_name());
  list.add(present_fktable_name);
  if (present_fktable_name)   list.add(fktable_name);
  boolean present_fkcolumn_name=true && (isSetFkcolumn_name());
  list.add(present_fkcolumn_name);
  if (present_fkcolumn_name)   list.add(fkcolumn_name);
  boolean present_key_seq=true;
  list.add(present_key_seq);
  if (present_key_seq)   list.add(key_seq);
  boolean present_update_rule=true;
  list.add(present_update_rule);
  if (present_update_rule)   list.add(update_rule);
  boolean present_delete_rule=true;
  list.add(present_delete_rule);
  if (present_delete_rule)   list.add(delete_rule);
  boolean present_fk_name=true && (isSetFk_name());
  list.add(present_fk_name);
  if (present_fk_name)   list.add(fk_name);
  boolean present_pk_name=true && (isSetPk_name());
  list.add(present_pk_name);
  if (present_pk_name)   list.add(pk_name);
  boolean present_enable_cstr=true;
  list.add(present_enable_cstr);
  if (present_enable_cstr)   list.add(enable_cstr);
  boolean present_validate_cstr=true;
  list.add(present_validate_cstr);
  if (present_validate_cstr)   list.add(validate_cstr);
  boolean present_rely_cstr=true;
  list.add(present_rely_cstr);
  if (present_rely_cstr)   list.add(rely_cstr);
  return list.hashCode();
}
