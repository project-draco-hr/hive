{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(14);
  if (incoming.get(0)) {
    struct.pktable_db=iprot.readString();
    struct.setPktable_dbIsSet(true);
  }
  if (incoming.get(1)) {
    struct.pktable_name=iprot.readString();
    struct.setPktable_nameIsSet(true);
  }
  if (incoming.get(2)) {
    struct.pkcolumn_name=iprot.readString();
    struct.setPkcolumn_nameIsSet(true);
  }
  if (incoming.get(3)) {
    struct.fktable_db=iprot.readString();
    struct.setFktable_dbIsSet(true);
  }
  if (incoming.get(4)) {
    struct.fktable_name=iprot.readString();
    struct.setFktable_nameIsSet(true);
  }
  if (incoming.get(5)) {
    struct.fkcolumn_name=iprot.readString();
    struct.setFkcolumn_nameIsSet(true);
  }
  if (incoming.get(6)) {
    struct.key_seq=iprot.readI32();
    struct.setKey_seqIsSet(true);
  }
  if (incoming.get(7)) {
    struct.update_rule=iprot.readI32();
    struct.setUpdate_ruleIsSet(true);
  }
  if (incoming.get(8)) {
    struct.delete_rule=iprot.readI32();
    struct.setDelete_ruleIsSet(true);
  }
  if (incoming.get(9)) {
    struct.fk_name=iprot.readString();
    struct.setFk_nameIsSet(true);
  }
  if (incoming.get(10)) {
    struct.pk_name=iprot.readString();
    struct.setPk_nameIsSet(true);
  }
  if (incoming.get(11)) {
    struct.enable_cstr=iprot.readBool();
    struct.setEnable_cstrIsSet(true);
  }
  if (incoming.get(12)) {
    struct.validate_cstr=iprot.readBool();
    struct.setValidate_cstrIsSet(true);
  }
  if (incoming.get(13)) {
    struct.rely_cstr=iprot.readBool();
    struct.setRely_cstrIsSet(true);
  }
}
