{
  Operator<? extends OperatorDesc> startOperator=reduceSink;
  while (startOperator != null && startOperator != stopBacktrackFlagOp) {
    startOperator=startOperator.getParentOperators().get(0);
    Map<String,ExprNodeDesc> colExprMap=startOperator.getColumnExprMap();
    if (colExprMap == null || colExprMap.size() == 0) {
      continue;
    }
    Iterator<String> keyIter=columnMapping.keySet().iterator();
    while (keyIter.hasNext()) {
      String key=keyIter.next();
      String oldCol=columnMapping.get(key);
      ExprNodeDesc exprNode=colExprMap.get(oldCol);
      if (exprNode instanceof ExprNodeColumnDesc) {
        String col=((ExprNodeColumnDesc)exprNode).getColumn();
        columnMapping.put(key,col);
      }
 else {
        return false;
      }
    }
  }
  return true;
}
