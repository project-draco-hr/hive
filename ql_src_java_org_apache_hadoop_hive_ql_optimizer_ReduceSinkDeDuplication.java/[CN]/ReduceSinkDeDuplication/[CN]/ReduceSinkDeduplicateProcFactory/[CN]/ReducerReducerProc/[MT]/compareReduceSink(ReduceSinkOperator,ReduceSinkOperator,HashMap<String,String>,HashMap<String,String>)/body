{
  ArrayList<ExprNodeDesc> childPartitionCols=childReduceSink.getConf().getPartitionCols();
  ArrayList<ExprNodeDesc> parentPartitionCols=parentRS.getConf().getPartitionCols();
  boolean ret=compareExprNodes(childColumnMapping,parentColumnMapping,childPartitionCols,parentPartitionCols);
  if (!ret) {
    return false;
  }
  ArrayList<ExprNodeDesc> childReduceKeyCols=childReduceSink.getConf().getKeyCols();
  ArrayList<ExprNodeDesc> parentReduceKeyCols=parentRS.getConf().getKeyCols();
  ret=compareExprNodes(childColumnMapping,parentColumnMapping,childReduceKeyCols,parentReduceKeyCols);
  if (!ret) {
    return false;
  }
  String childRSOrder=childReduceSink.getConf().getOrder();
  String parentRSOrder=parentRS.getConf().getOrder();
  boolean moveChildRSOrderToParent=false;
  if (childRSOrder != null && !(childRSOrder.trim().equals(""))) {
    if (parentRSOrder == null || !childRSOrder.trim().equals(parentRSOrder.trim())) {
      return false;
    }
  }
 else {
    if (parentRSOrder == null || parentRSOrder.trim().equals("")) {
      moveChildRSOrderToParent=true;
    }
  }
  int childNumReducers=childReduceSink.getConf().getNumReducers();
  int parentNumReducers=parentRS.getConf().getNumReducers();
  boolean moveChildReducerNumToParent=false;
  if (childNumReducers != parentNumReducers) {
    if (childNumReducers == -1) {
    }
 else     if (parentNumReducers == -1) {
      moveChildReducerNumToParent=true;
    }
 else {
      return false;
    }
  }
  if (moveChildRSOrderToParent) {
    parentRS.getConf().setOrder(childRSOrder);
  }
  if (moveChildReducerNumToParent) {
    parentRS.getConf().setNumReducers(childNumReducers);
  }
  return true;
}
