{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  TFetchResultsReq typedOther=(TFetchResultsReq)other;
  lastComparison=Boolean.valueOf(isSetOperationHandle()).compareTo(typedOther.isSetOperationHandle());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetOperationHandle()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.operationHandle,typedOther.operationHandle);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetOrientation()).compareTo(typedOther.isSetOrientation());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetOrientation()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.orientation,typedOther.orientation);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetMaxRows()).compareTo(typedOther.isSetMaxRows());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMaxRows()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.maxRows,typedOther.maxRows);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
