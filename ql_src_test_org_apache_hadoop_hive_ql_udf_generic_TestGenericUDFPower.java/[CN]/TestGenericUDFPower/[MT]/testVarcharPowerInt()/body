{
  GenericUDFPower udf=new GenericUDFPower();
  HiveVarcharWritable left=new HiveVarcharWritable();
  left.set("3.14");
  IntWritable right=new IntWritable(2);
  ObjectInspector[] inputOIs={PrimitiveObjectInspectorFactory.writableHiveVarcharObjectInspector,PrimitiveObjectInspectorFactory.writableIntObjectInspector};
  DeferredObject[] args={new DeferredJavaObject(left),new DeferredJavaObject(right)};
  PrimitiveObjectInspector oi=(PrimitiveObjectInspector)udf.initialize(inputOIs);
  Assert.assertEquals(oi.getTypeInfo(),TypeInfoFactory.doubleTypeInfo);
  DoubleWritable res=(DoubleWritable)udf.evaluate(args);
  Assert.assertEquals(new Double(3.14 * 3.14),new Double(res.get()));
}
