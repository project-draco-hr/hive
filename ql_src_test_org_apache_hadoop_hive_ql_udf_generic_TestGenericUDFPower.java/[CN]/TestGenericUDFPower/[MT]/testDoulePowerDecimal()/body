{
  GenericUDFPower udf=new GenericUDFPower();
  DoubleWritable left=new DoubleWritable(-4.52);
  HiveDecimalWritable right=new HiveDecimalWritable(HiveDecimal.create("3"));
  ObjectInspector[] inputOIs={PrimitiveObjectInspectorFactory.writableDoubleObjectInspector,PrimitiveObjectInspectorFactory.getPrimitiveWritableObjectInspector(TypeInfoFactory.getDecimalTypeInfo(5,2))};
  DeferredObject[] args={new DeferredJavaObject(left),new DeferredJavaObject(right)};
  PrimitiveObjectInspector oi=(PrimitiveObjectInspector)udf.initialize(inputOIs);
  Assert.assertEquals(TypeInfoFactory.doubleTypeInfo,oi.getTypeInfo());
  DoubleWritable res=(DoubleWritable)udf.evaluate(args);
  Assert.assertEquals(new Double(-4.52 * 4.52 * 4.52),new Double(res.get()));
}
