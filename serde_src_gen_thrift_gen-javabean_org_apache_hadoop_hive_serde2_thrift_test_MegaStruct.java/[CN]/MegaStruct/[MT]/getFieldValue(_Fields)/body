{
switch (field) {
case MY_BOOL:
    return isMy_bool();
case MY_BYTE:
  return getMy_byte();
case MY_16BIT_INT:
return getMy_16bit_int();
case MY_32BIT_INT:
return getMy_32bit_int();
case MY_64BIT_INT:
return getMy_64bit_int();
case MY_DOUBLE:
return getMy_double();
case MY_STRING:
return getMy_string();
case MY_BINARY:
return getMy_binary();
case MY_STRING_STRING_MAP:
return getMy_string_string_map();
case MY_STRING_ENUM_MAP:
return getMy_string_enum_map();
case MY_ENUM_STRING_MAP:
return getMy_enum_string_map();
case MY_ENUM_STRUCT_MAP:
return getMy_enum_struct_map();
case MY_ENUM_STRINGLIST_MAP:
return getMy_enum_stringlist_map();
case MY_ENUM_STRUCTLIST_MAP:
return getMy_enum_structlist_map();
case MY_STRINGLIST:
return getMy_stringlist();
case MY_STRUCTLIST:
return getMy_structlist();
case MY_ENUMLIST:
return getMy_enumlist();
case MY_STRINGSET:
return getMy_stringset();
case MY_ENUMSET:
return getMy_enumset();
case MY_STRUCTSET:
return getMy_structset();
}
throw new IllegalStateException();
}
