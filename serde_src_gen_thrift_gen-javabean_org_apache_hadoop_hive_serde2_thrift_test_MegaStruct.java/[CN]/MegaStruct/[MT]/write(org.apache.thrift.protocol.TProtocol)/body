{
  validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (isSetMy_bool()) {
    oprot.writeFieldBegin(MY_BOOL_FIELD_DESC);
    oprot.writeBool(this.my_bool);
    oprot.writeFieldEnd();
  }
  if (isSetMy_byte()) {
    oprot.writeFieldBegin(MY_BYTE_FIELD_DESC);
    oprot.writeByte(this.my_byte);
    oprot.writeFieldEnd();
  }
  if (isSetMy_16bit_int()) {
    oprot.writeFieldBegin(MY_16BIT_INT_FIELD_DESC);
    oprot.writeI16(this.my_16bit_int);
    oprot.writeFieldEnd();
  }
  if (isSetMy_32bit_int()) {
    oprot.writeFieldBegin(MY_32BIT_INT_FIELD_DESC);
    oprot.writeI32(this.my_32bit_int);
    oprot.writeFieldEnd();
  }
  if (isSetMy_64bit_int()) {
    oprot.writeFieldBegin(MY_64BIT_INT_FIELD_DESC);
    oprot.writeI64(this.my_64bit_int);
    oprot.writeFieldEnd();
  }
  if (isSetMy_double()) {
    oprot.writeFieldBegin(MY_DOUBLE_FIELD_DESC);
    oprot.writeDouble(this.my_double);
    oprot.writeFieldEnd();
  }
  if (this.my_string != null) {
    if (isSetMy_string()) {
      oprot.writeFieldBegin(MY_STRING_FIELD_DESC);
      oprot.writeString(this.my_string);
      oprot.writeFieldEnd();
    }
  }
  if (this.my_binary != null) {
    if (isSetMy_binary()) {
      oprot.writeFieldBegin(MY_BINARY_FIELD_DESC);
      oprot.writeBinary(this.my_binary);
      oprot.writeFieldEnd();
    }
  }
  if (this.my_string_string_map != null) {
    if (isSetMy_string_string_map()) {
      oprot.writeFieldBegin(MY_STRING_STRING_MAP_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,this.my_string_string_map.size()));
        for (        Map.Entry<String,String> _iter48 : this.my_string_string_map.entrySet()) {
          oprot.writeString(_iter48.getKey());
          oprot.writeString(_iter48.getValue());
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (this.my_string_enum_map != null) {
    if (isSetMy_string_enum_map()) {
      oprot.writeFieldBegin(MY_STRING_ENUM_MAP_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.I32,this.my_string_enum_map.size()));
        for (        Map.Entry<String,MyEnum> _iter49 : this.my_string_enum_map.entrySet()) {
          oprot.writeString(_iter49.getKey());
          oprot.writeI32(_iter49.getValue().getValue());
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (this.my_enum_string_map != null) {
    if (isSetMy_enum_string_map()) {
      oprot.writeFieldBegin(MY_ENUM_STRING_MAP_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32,org.apache.thrift.protocol.TType.STRING,this.my_enum_string_map.size()));
        for (        Map.Entry<MyEnum,String> _iter50 : this.my_enum_string_map.entrySet()) {
          oprot.writeI32(_iter50.getKey().getValue());
          oprot.writeString(_iter50.getValue());
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (this.my_enum_struct_map != null) {
    if (isSetMy_enum_struct_map()) {
      oprot.writeFieldBegin(MY_ENUM_STRUCT_MAP_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32,org.apache.thrift.protocol.TType.STRUCT,this.my_enum_struct_map.size()));
        for (        Map.Entry<MyEnum,MiniStruct> _iter51 : this.my_enum_struct_map.entrySet()) {
          oprot.writeI32(_iter51.getKey().getValue());
          _iter51.getValue().write(oprot);
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (this.my_enum_stringlist_map != null) {
    if (isSetMy_enum_stringlist_map()) {
      oprot.writeFieldBegin(MY_ENUM_STRINGLIST_MAP_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32,org.apache.thrift.protocol.TType.LIST,this.my_enum_stringlist_map.size()));
        for (        Map.Entry<MyEnum,List<String>> _iter52 : this.my_enum_stringlist_map.entrySet()) {
          oprot.writeI32(_iter52.getKey().getValue());
{
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,_iter52.getValue().size()));
            for (            String _iter53 : _iter52.getValue()) {
              oprot.writeString(_iter53);
            }
            oprot.writeListEnd();
          }
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (this.my_enum_structlist_map != null) {
    if (isSetMy_enum_structlist_map()) {
      oprot.writeFieldBegin(MY_ENUM_STRUCTLIST_MAP_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32,org.apache.thrift.protocol.TType.LIST,this.my_enum_structlist_map.size()));
        for (        Map.Entry<MyEnum,List<MiniStruct>> _iter54 : this.my_enum_structlist_map.entrySet()) {
          oprot.writeI32(_iter54.getKey().getValue());
{
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,_iter54.getValue().size()));
            for (            MiniStruct _iter55 : _iter54.getValue()) {
              _iter55.write(oprot);
            }
            oprot.writeListEnd();
          }
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (this.my_stringlist != null) {
    if (isSetMy_stringlist()) {
      oprot.writeFieldBegin(MY_STRINGLIST_FIELD_DESC);
{
        oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,this.my_stringlist.size()));
        for (        String _iter56 : this.my_stringlist) {
          oprot.writeString(_iter56);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (this.my_structlist != null) {
    if (isSetMy_structlist()) {
      oprot.writeFieldBegin(MY_STRUCTLIST_FIELD_DESC);
{
        oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,this.my_structlist.size()));
        for (        MiniStruct _iter57 : this.my_structlist) {
          _iter57.write(oprot);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (this.my_enumlist != null) {
    if (isSetMy_enumlist()) {
      oprot.writeFieldBegin(MY_ENUMLIST_FIELD_DESC);
{
        oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32,this.my_enumlist.size()));
        for (        MyEnum _iter58 : this.my_enumlist) {
          oprot.writeI32(_iter58.getValue());
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (this.my_stringset != null) {
    if (isSetMy_stringset()) {
      oprot.writeFieldBegin(MY_STRINGSET_FIELD_DESC);
{
        oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRING,this.my_stringset.size()));
        for (        String _iter59 : this.my_stringset) {
          oprot.writeString(_iter59);
        }
        oprot.writeSetEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (this.my_enumset != null) {
    if (isSetMy_enumset()) {
      oprot.writeFieldBegin(MY_ENUMSET_FIELD_DESC);
{
        oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32,this.my_enumset.size()));
        for (        MyEnum _iter60 : this.my_enumset) {
          oprot.writeI32(_iter60.getValue());
        }
        oprot.writeSetEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (this.my_structset != null) {
    if (isSetMy_structset()) {
      oprot.writeFieldBegin(MY_STRUCTSET_FIELD_DESC);
{
        oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.STRUCT,this.my_structset.size()));
        for (        MiniStruct _iter61 : this.my_structset) {
          _iter61.write(oprot);
        }
        oprot.writeSetEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
