{
switch (field) {
case MY_BOOL:
    if (value == null) {
      unsetMy_bool();
    }
 else {
      setMy_bool((Boolean)value);
    }
  break;
case MY_BYTE:
if (value == null) {
  unsetMy_byte();
}
 else {
  setMy_byte((Byte)value);
}
break;
case MY_16BIT_INT:
if (value == null) {
unsetMy_16bit_int();
}
 else {
setMy_16bit_int((Short)value);
}
break;
case MY_32BIT_INT:
if (value == null) {
unsetMy_32bit_int();
}
 else {
setMy_32bit_int((Integer)value);
}
break;
case MY_64BIT_INT:
if (value == null) {
unsetMy_64bit_int();
}
 else {
setMy_64bit_int((Long)value);
}
break;
case MY_DOUBLE:
if (value == null) {
unsetMy_double();
}
 else {
setMy_double((Double)value);
}
break;
case MY_STRING:
if (value == null) {
unsetMy_string();
}
 else {
setMy_string((String)value);
}
break;
case MY_BINARY:
if (value == null) {
unsetMy_binary();
}
 else {
setMy_binary((ByteBuffer)value);
}
break;
case MY_STRING_STRING_MAP:
if (value == null) {
unsetMy_string_string_map();
}
 else {
setMy_string_string_map((Map<String,String>)value);
}
break;
case MY_STRING_ENUM_MAP:
if (value == null) {
unsetMy_string_enum_map();
}
 else {
setMy_string_enum_map((Map<String,MyEnum>)value);
}
break;
case MY_ENUM_STRING_MAP:
if (value == null) {
unsetMy_enum_string_map();
}
 else {
setMy_enum_string_map((Map<MyEnum,String>)value);
}
break;
case MY_ENUM_STRUCT_MAP:
if (value == null) {
unsetMy_enum_struct_map();
}
 else {
setMy_enum_struct_map((Map<MyEnum,MiniStruct>)value);
}
break;
case MY_ENUM_STRINGLIST_MAP:
if (value == null) {
unsetMy_enum_stringlist_map();
}
 else {
setMy_enum_stringlist_map((Map<MyEnum,List<String>>)value);
}
break;
case MY_ENUM_STRUCTLIST_MAP:
if (value == null) {
unsetMy_enum_structlist_map();
}
 else {
setMy_enum_structlist_map((Map<MyEnum,List<MiniStruct>>)value);
}
break;
case MY_STRINGLIST:
if (value == null) {
unsetMy_stringlist();
}
 else {
setMy_stringlist((List<String>)value);
}
break;
case MY_STRUCTLIST:
if (value == null) {
unsetMy_structlist();
}
 else {
setMy_structlist((List<MiniStruct>)value);
}
break;
case MY_ENUMLIST:
if (value == null) {
unsetMy_enumlist();
}
 else {
setMy_enumlist((List<MyEnum>)value);
}
break;
case MY_STRINGSET:
if (value == null) {
unsetMy_stringset();
}
 else {
setMy_stringset((Set<String>)value);
}
break;
case MY_ENUMSET:
if (value == null) {
unsetMy_enumset();
}
 else {
setMy_enumset((Set<MyEnum>)value);
}
break;
case MY_STRUCTSET:
if (value == null) {
unsetMy_structset();
}
 else {
setMy_structset((Set<MiniStruct>)value);
}
break;
}
}
