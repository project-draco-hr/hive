{
  ExprNodeDesc leftExpr=childExpr.get(0);
  leftExpr=foldConstantsForUnaryExpression(leftExpr);
  VectorExpression v1=getVectorExpression(leftExpr);
  String colType=v1.getOutputType();
  String outputType="long";
  if (colType.equalsIgnoreCase("timestamp")) {
    int inputCol=v1.getOutputColumn();
    int outputCol=ocm.allocateOutputColumn(outputType);
    String pkg="org.apache.hadoop.hive.ql.exec.vector.expressions";
    String vectorUDF=pkg + ".Vector" + udf+ "Long";
    try {
      VectorExpression v2=(VectorExpression)Class.forName(vectorUDF).getDeclaredConstructors()[0].newInstance(inputCol,outputCol);
      return v2;
    }
 catch (    Exception e) {
      e.printStackTrace();
      throw new HiveException("Udf: Vector" + udf + ", could not be initialized for "+ colType,e);
    }
  }
  throw new HiveException("Udf: " + udf + ", is not supported for "+ colType);
}
