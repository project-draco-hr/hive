{
  if (null == scalar) {
    return null;
  }
  PrimitiveTypeInfo ptinfo=(PrimitiveTypeInfo)type;
  String typename=type.getTypeName();
  HiveDecimal rawDecimal;
switch (ptinfo.getPrimitiveCategory()) {
case FLOAT:
    rawDecimal=HiveDecimal.create(String.valueOf(scalar));
  break;
case DOUBLE:
rawDecimal=HiveDecimal.create(String.valueOf(scalar));
break;
case BYTE:
rawDecimal=HiveDecimal.create((Byte)scalar);
break;
case SHORT:
rawDecimal=HiveDecimal.create((Short)scalar);
break;
case INT:
rawDecimal=HiveDecimal.create((Integer)scalar);
break;
case LONG:
rawDecimal=HiveDecimal.create((Long)scalar);
break;
case DECIMAL:
rawDecimal=(HiveDecimal)scalar;
break;
default :
throw new HiveException("Unsupported type " + typename + " for cast to HiveDecimal");
}
if (rawDecimal == null) {
if (LOG.isDebugEnabled()) {
LOG.debug("Casting constant scalar " + scalar + " to HiveDecimal resulted in null");
}
return null;
}
return rawDecimal;
}
