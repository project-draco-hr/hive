{
  List<ExprNodeDesc> constantFoldedChildren=foldConstantsForUnaryExprs(childExpr);
  childExpr=constantFoldedChildren;
  if (udf instanceof GenericUDFBetween) {
    return getBetweenFilterExpression(childExpr,mode,returnType);
  }
 else   if (udf instanceof GenericUDFIn) {
    return getInExpression(childExpr,mode,returnType);
  }
 else   if (udf instanceof GenericUDFOPPositive) {
    return getIdentityExpression(childExpr);
  }
 else   if (udf instanceof GenericUDFCoalesce) {
    return getCoalesceExpression(childExpr,returnType);
  }
 else   if (udf instanceof GenericUDFBridge) {
    VectorExpression v=getGenericUDFBridgeVectorExpression((GenericUDFBridge)udf,childExpr,mode,returnType);
    if (v != null) {
      return v;
    }
  }
 else   if (udf instanceof GenericUDFToDecimal) {
    return getCastToDecimal(childExpr,returnType);
  }
  Class<?> udfClass=udf.getClass();
  if (udf instanceof GenericUDFBridge) {
    udfClass=((GenericUDFBridge)udf).getUdfClass();
  }
  VectorExpression ve=getVectorExpressionForUdf(udfClass,constantFoldedChildren,mode,returnType);
  if (ve == null) {
    throw new HiveException("Udf: " + udf.getClass().getSimpleName() + ", is not supported");
  }
  return ve;
}
