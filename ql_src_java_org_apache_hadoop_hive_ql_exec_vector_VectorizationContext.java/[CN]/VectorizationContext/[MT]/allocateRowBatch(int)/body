{
  int columnCount=firstOutputColumnIndex + ocm.getNumOfOutputColumn();
  VectorizedRowBatch ret=new VectorizedRowBatch(columnCount,rowCount);
  for (int i=0; i < columnCount; ++i) {
    String columnTypeName=ocm.getOutputColumnType(i);
    for (    Object[] columnType : columnTypes) {
      if (columnTypeName.equalsIgnoreCase((String)columnType[0])) {
        Class<? extends ColumnVector> columnTypeClass=(Class<? extends ColumnVector>)columnType[1];
        try {
          Constructor<? extends ColumnVector> ctor=columnTypeClass.getConstructor(int.class);
          ret.cols[i]=ctor.newInstance(rowCount);
        }
 catch (        Exception e) {
          throw new HiveException(String.format("Internal exception occured trying to allocate a vectorized column %d of type %s",i,columnTypeName),e);
        }
      }
    }
  }
  return ret;
}
