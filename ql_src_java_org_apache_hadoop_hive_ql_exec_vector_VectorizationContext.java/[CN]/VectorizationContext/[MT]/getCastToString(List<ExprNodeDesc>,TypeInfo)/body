{
  ExprNodeDesc child=childExpr.get(0);
  String inputType=childExpr.get(0).getTypeString();
  if (child instanceof ExprNodeConstantDesc) {
    Object constantValue=((ExprNodeConstantDesc)child).getValue();
    String strValue=castConstantToString(constantValue,child.getTypeInfo());
    return getConstantVectorExpression(strValue,returnType,Mode.PROJECTION);
  }
  if (inputType.equals("boolean")) {
    return createVectorExpression(CastBooleanToStringViaLongToString.class,childExpr,Mode.PROJECTION,null);
  }
 else   if (isIntFamily(inputType)) {
    return createVectorExpression(CastLongToString.class,childExpr,Mode.PROJECTION,null);
  }
 else   if (isDecimalFamily(inputType)) {
    return createVectorExpression(CastDecimalToString.class,childExpr,Mode.PROJECTION,returnType);
  }
 else   if (isDateFamily(inputType)) {
    return createVectorExpression(CastDateToString.class,childExpr,Mode.PROJECTION,returnType);
  }
  throw new HiveException("Unhandled cast input type: " + inputType);
}
