{
  if (!(exprDesc instanceof ExprNodeGenericFuncDesc)) {
    return exprDesc;
  }
  if (exprDesc.getChildren() == null || (exprDesc.getChildren().size() != 1)) {
    return exprDesc;
  }
  ExprNodeConstantDesc foldedChild=null;
  if (!(exprDesc.getChildren().get(0) instanceof ExprNodeConstantDesc)) {
    ExprNodeDesc expr=evaluateCastOnConstants(exprDesc.getChildren().get(0));
    if (expr instanceof ExprNodeConstantDesc) {
      foldedChild=(ExprNodeConstantDesc)expr;
    }
  }
 else {
    foldedChild=(ExprNodeConstantDesc)exprDesc.getChildren().get(0);
  }
  if (foldedChild == null) {
    return exprDesc;
  }
  ObjectInspector childoi=foldedChild.getWritableObjectInspector();
  GenericUDF gudf=((ExprNodeGenericFuncDesc)exprDesc).getGenericUDF();
  if (gudf instanceof GenericUDFOPNegative || gudf instanceof GenericUDFOPPositive || castExpressionUdfs.contains(gudf.getClass())|| ((gudf instanceof GenericUDFBridge) && castExpressionUdfs.contains(((GenericUDFBridge)gudf).getUdfClass()))) {
    ExprNodeEvaluator<?> evaluator=ExprNodeEvaluatorFactory.get(exprDesc);
    ObjectInspector output=evaluator.initialize(childoi);
    Object constant=evaluator.evaluate(null);
    Object java=ObjectInspectorUtils.copyToStandardJavaObject(constant,output);
    return new ExprNodeConstantDesc(exprDesc.getTypeInfo(),java);
  }
  return exprDesc;
}
