{
  StringBuilder sb=new StringBuilder(32);
  sb.append("Context key ").append(getFileKey()).append(", ");
  Comparator<Integer> comparerInteger=new Comparator<Integer>(){
    @Override public int compare(    Integer o1,    Integer o2){
      return o1.compareTo(o2);
    }
  }
;
  Map<Integer,String> sortedColumnMap=new TreeMap<Integer,String>(comparerInteger);
  for (  Map.Entry<String,Integer> entry : projectionColumnMap.entrySet()) {
    sortedColumnMap.put(entry.getValue(),entry.getKey());
  }
  sb.append("sortedProjectionColumnMap ").append(sortedColumnMap).append(", ");
  Map<Integer,String> sortedScratchColumnTypeMap=new TreeMap<Integer,String>(comparerInteger);
  sortedScratchColumnTypeMap.putAll(getScratchColumnTypeMap());
  sb.append("sortedScratchColumnTypeMap ").append(sortedScratchColumnTypeMap);
  return sb.toString();
}
