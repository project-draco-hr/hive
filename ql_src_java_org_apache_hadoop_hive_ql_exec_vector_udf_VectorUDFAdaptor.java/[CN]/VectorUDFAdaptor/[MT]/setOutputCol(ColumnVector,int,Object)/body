{
  if (outputOI instanceof WritableStringObjectInspector) {
    BytesColumnVector bv=(BytesColumnVector)colVec;
    Text t;
    if (value instanceof String) {
      t=new Text((String)value);
    }
 else {
      t=((WritableStringObjectInspector)outputOI).getPrimitiveWritableObject(value);
    }
    bv.setVal(i,t.getBytes(),0,t.getLength());
  }
 else   if (outputOI instanceof WritableIntObjectInspector) {
    LongColumnVector lv=(LongColumnVector)colVec;
    if (value instanceof Integer) {
      lv.vector[i]=(Integer)value;
    }
 else {
      lv.vector[i]=((WritableIntObjectInspector)outputOI).get(value);
    }
  }
 else   if (outputOI instanceof WritableLongObjectInspector) {
    LongColumnVector lv=(LongColumnVector)colVec;
    if (value instanceof Long) {
      lv.vector[i]=(Long)value;
    }
 else {
      lv.vector[i]=((WritableLongObjectInspector)outputOI).get(value);
    }
  }
 else   if (outputOI instanceof WritableDoubleObjectInspector) {
    DoubleColumnVector dv=(DoubleColumnVector)colVec;
    if (value instanceof Double) {
      dv.vector[i]=(Double)value;
    }
 else {
      dv.vector[i]=((WritableDoubleObjectInspector)outputOI).get(value);
    }
  }
 else   if (outputOI instanceof WritableFloatObjectInspector) {
    DoubleColumnVector dv=(DoubleColumnVector)colVec;
    if (value instanceof Float) {
      dv.vector[i]=(Float)value;
    }
 else {
      dv.vector[i]=((WritableFloatObjectInspector)outputOI).get(value);
    }
  }
 else   if (outputOI instanceof WritableShortObjectInspector) {
    LongColumnVector lv=(LongColumnVector)colVec;
    if (value instanceof Short) {
      lv.vector[i]=(Short)value;
    }
 else {
      lv.vector[i]=((WritableShortObjectInspector)outputOI).get(value);
    }
  }
 else   if (outputOI instanceof WritableByteObjectInspector) {
    LongColumnVector lv=(LongColumnVector)colVec;
    if (value instanceof Byte) {
      lv.vector[i]=(Byte)value;
    }
 else {
      lv.vector[i]=((WritableByteObjectInspector)outputOI).get(value);
    }
  }
 else   if (outputOI instanceof WritableTimestampObjectInspector) {
    LongColumnVector lv=(LongColumnVector)colVec;
    Timestamp ts;
    if (value instanceof Timestamp) {
      ts=(Timestamp)value;
    }
 else {
      ts=((WritableTimestampObjectInspector)outputOI).getPrimitiveJavaObject(value);
    }
    long l=ts.getTime() * 1000000 + ts.getNanos() % 1000000;
    lv.vector[i]=l;
  }
 else   if (outputOI instanceof WritableDateObjectInspector) {
    LongColumnVector lv=(LongColumnVector)colVec;
    Date ts;
    if (value instanceof Date) {
      ts=(Date)value;
    }
 else {
      ts=((WritableDateObjectInspector)outputOI).getPrimitiveJavaObject(value);
    }
    long l=DateWritable.dateToDays(ts);
    lv.vector[i]=l;
  }
 else   if (outputOI instanceof WritableBooleanObjectInspector) {
    LongColumnVector lv=(LongColumnVector)colVec;
    if (value instanceof Boolean) {
      lv.vector[i]=(Boolean)value ? 1 : 0;
    }
 else {
      lv.vector[i]=((WritableBooleanObjectInspector)outputOI).get(value) ? 1 : 0;
    }
  }
 else {
    throw new RuntimeException("Unhandled object type " + outputOI.getTypeName());
  }
}
