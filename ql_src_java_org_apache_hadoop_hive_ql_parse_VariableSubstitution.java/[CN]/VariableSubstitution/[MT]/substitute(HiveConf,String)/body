{
  if (conf.getBoolVar(ConfVars.HIVEVARIABLESUBSTITUTE)) {
    l4j.debug("Substitution is on: " + expr);
  }
 else {
    return expr;
  }
  if (expr == null) {
    return null;
  }
  Matcher match=varPat.matcher("");
  String eval=expr;
  for (int s=0; s < conf.getIntVar(ConfVars.HIVEVARIABLESUBSTITUTEDEPTH); s++) {
    match.reset(eval);
    if (!match.find()) {
      return eval;
    }
    String var=match.group();
    var=var.substring(2,var.length() - 1);
    String val=getSubstitute(conf,var);
    if (val == null) {
      l4j.debug("Interpolation result: " + eval);
      return eval;
    }
    eval=eval.substring(0,match.start()) + val + eval.substring(match.end());
  }
  throw new IllegalStateException("Variable substitution depth too large: " + conf.getIntVar(ConfVars.HIVEVARIABLESUBSTITUTEDEPTH) + " "+ expr);
}
