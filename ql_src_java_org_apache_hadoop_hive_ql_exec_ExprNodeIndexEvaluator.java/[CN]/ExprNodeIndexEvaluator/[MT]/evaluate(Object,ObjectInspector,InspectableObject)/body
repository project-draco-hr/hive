{
  assert(result != null);
  mainEvaluator.evaluate(row,rowInspector,mainInspectableObject);
  indexEvaluator.evaluate(row,rowInspector,indexInspectableObject);
  if (mainInspectableObject.oi.getCategory() == Category.LIST) {
    PrimitiveObjectInspector poi=((PrimitiveObjectInspector)indexInspectableObject.oi);
    Object indexObject=poi.getPrimitiveJavaObject(indexInspectableObject.o);
    int index=((Number)indexObject).intValue();
    ListObjectInspector loi=(ListObjectInspector)mainInspectableObject.oi;
    result.oi=loi.getListElementObjectInspector();
    result.o=loi.getListElement(mainInspectableObject.o,index);
  }
 else   if (mainInspectableObject.oi.getCategory() == Category.MAP) {
    PrimitiveObjectInspector poi=((PrimitiveObjectInspector)indexInspectableObject.oi);
    MapObjectInspector moi=(MapObjectInspector)mainInspectableObject.oi;
    result.oi=moi.getMapValueObjectInspector();
    if (((PrimitiveObjectInspector)moi.getMapKeyObjectInspector()).isWritable()) {
      Object indexObject=poi.getPrimitiveWritableObject(indexInspectableObject.o);
      result.o=moi.getMapValueElement(mainInspectableObject.o,indexObject);
    }
 else {
      Object indexObject=poi.getPrimitiveJavaObject(indexInspectableObject.o);
      result.o=moi.getMapValueElement(mainInspectableObject.o,indexObject);
    }
  }
 else {
    throw new RuntimeException("Hive 2 Internal error: cannot evaluate index expression on " + mainInspectableObject.oi.getTypeName());
  }
}
