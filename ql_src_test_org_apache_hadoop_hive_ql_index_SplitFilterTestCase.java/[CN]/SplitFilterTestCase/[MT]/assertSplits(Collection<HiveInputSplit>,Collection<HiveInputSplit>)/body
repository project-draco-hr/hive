{
  SplitFilter.HiveInputSplitComparator hiveInputSplitComparator=new SplitFilter.HiveInputSplitComparator();
  List<HiveInputSplit> sortedExpectedSplits=new ArrayList<>(expectedSplits);
  Collections.sort(sortedExpectedSplits,hiveInputSplitComparator);
  List<HiveInputSplit> sortedActualSplits=new ArrayList<>(actualSplits);
  Collections.sort(sortedActualSplits,hiveInputSplitComparator);
  assertEquals("Number of selected splits.",sortedExpectedSplits.size(),sortedActualSplits.size());
  for (int i=0; i < sortedExpectedSplits.size(); i++) {
    HiveInputSplit expectedSplit=sortedExpectedSplits.get(i);
    HiveInputSplit actualSplit=sortedActualSplits.get(i);
    String splitName="Split #" + i;
    assertEquals(splitName + " path.",expectedSplit.getPath(),actualSplit.getPath());
    assertEquals(splitName + " start.",expectedSplit.getStart(),actualSplit.getStart());
    assertEquals(splitName + " length.",expectedSplit.getLength(),actualSplit.getLength());
  }
}
