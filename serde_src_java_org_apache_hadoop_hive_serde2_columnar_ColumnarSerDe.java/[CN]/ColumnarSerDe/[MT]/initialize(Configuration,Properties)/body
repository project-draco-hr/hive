{
  serdeParams=LazySimpleSerDe.initSerdeParams(job,tbl,getClass().getName());
  cachedObjectInspector=LazyFactory.createColumnarStructInspector(serdeParams.getColumnNames(),serdeParams.getColumnTypes(),serdeParams.getSeparators(),serdeParams.getNullSequence(),serdeParams.isEscaped(),serdeParams.getEscapeChar());
  java.util.ArrayList<Integer> notSkipIDs=ColumnProjectionUtils.getReadColumnIDs(job);
  cachedLazyStruct=new ColumnarStruct(cachedObjectInspector,notSkipIDs,serdeParams.getNullSequence());
  int size=serdeParams.getColumnTypes().size();
  field=new BytesRefWritable[size];
  for (int i=0; i < size; i++) {
    field[i]=new BytesRefWritable();
    serializeCache.set(i,field[i]);
  }
  LOG.debug("ColumnarSerDe initialized with: columnNames=" + serdeParams.getColumnNames() + " columnTypes="+ serdeParams.getColumnTypes()+ " separator="+ Arrays.asList(serdeParams.getSeparators())+ " nullstring="+ serdeParams.getNullString());
  serializedSize=0;
  stats=new SerDeStats();
  lastOperationSerialize=false;
  lastOperationDeserialize=false;
}
