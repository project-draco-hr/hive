{
  SMBMapJoinOperator smbJop=new SMBMapJoinOperator(mapJoinOp);
  SMBJoinDesc smbJoinDesc=new SMBJoinDesc(mapJoinOp.getConf());
  smbJop.setConf(smbJoinDesc);
  HashMap<Byte,String> tagToAlias=new HashMap<Byte,String>();
  for (int i=0; i < srcs.length; i++) {
    tagToAlias.put((byte)i,srcs[i]);
  }
  smbJoinDesc.setTagToAlias(tagToAlias);
  int indexInListMapJoinNoReducer=this.pGraphContext.getListMapJoinOpsNoReducer().indexOf(mapJoinOp);
  if (indexInListMapJoinNoReducer >= 0) {
    this.pGraphContext.getListMapJoinOpsNoReducer().remove(indexInListMapJoinNoReducer);
    this.pGraphContext.getListMapJoinOpsNoReducer().add(indexInListMapJoinNoReducer,smbJop);
  }
  List<? extends Operator> parentOperators=mapJoinOp.getParentOperators();
  for (int i=0; i < parentOperators.size(); i++) {
    Operator par=parentOperators.get(i);
    int index=par.getChildOperators().indexOf(mapJoinOp);
    par.getChildOperators().remove(index);
    par.getChildOperators().add(index,smbJop);
  }
  List<? extends Operator> childOps=mapJoinOp.getChildOperators();
  for (int i=0; i < childOps.size(); i++) {
    Operator child=childOps.get(i);
    int index=child.getParentOperators().indexOf(mapJoinOp);
    child.getParentOperators().remove(index);
    child.getParentOperators().add(index,smbJop);
  }
  return smbJop;
}
