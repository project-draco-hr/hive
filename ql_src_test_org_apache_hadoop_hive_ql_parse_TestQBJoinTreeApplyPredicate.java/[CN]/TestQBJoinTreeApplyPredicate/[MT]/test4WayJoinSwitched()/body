{
  QBJoinTree jT1=createJoinTree(JoinType.INNER,"a",null,"b");
  QBJoinTree jT2=createJoinTree(JoinType.INNER,"b",jT1,"c");
  QBJoinTree jT=createJoinTree(JoinType.INNER,"c",jT2,"d");
  ASTNode joinCond1=applyEqPredicate(jT,"b","y","a","x");
  ASTNode joinCond2=applyEqPredicate(jT,"b","y","c","z");
  ASTNode joinCond3=applyEqPredicate(jT,"c","z","a","x");
  Assert.assertEquals(jT1.getExpressions().get(0).get(0),joinCond1.getChild(1));
  Assert.assertEquals(jT1.getExpressions().get(1).get(0),joinCond1.getChild(0));
  Assert.assertEquals(jT2.getExpressions().get(0).get(0),joinCond2.getChild(0));
  Assert.assertEquals(jT2.getExpressions().get(1).get(0),joinCond2.getChild(1));
  Assert.assertEquals(jT2.getExpressions().get(0).get(1),joinCond3.getChild(1));
  Assert.assertEquals(jT2.getExpressions().get(1).get(1),joinCond3.getChild(0));
}
