{
  ASTNode joinCond=constructEqualityCond(lTbl,lCol,rTbl,rCol);
  ASTNode leftCondn=(ASTNode)joinCond.getChild(0);
  ASTNode rightCondn=(ASTNode)joinCond.getChild(1);
  List<String> leftSrc=new ArrayList<String>();
  ArrayList<String> leftCondAl1=new ArrayList<String>();
  ArrayList<String> leftCondAl2=new ArrayList<String>();
  ArrayList<String> rightCondAl1=new ArrayList<String>();
  ArrayList<String> rightCondAl2=new ArrayList<String>();
  sA.parseJoinCondPopulateAlias(jT,leftCondn,leftCondAl1,leftCondAl2,null,null);
  sA.parseJoinCondPopulateAlias(jT,rightCondn,rightCondAl1,rightCondAl2,null,null);
  sA.applyEqualityPredicateToQBJoinTree(jT,JoinType.INNER,leftSrc,joinCond,leftCondn,rightCondn,leftCondAl1,leftCondAl2,rightCondAl1,rightCondAl2);
  return joinCond;
}
