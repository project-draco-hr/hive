{
  this.conf=conf;
  transportMode=conf.getVar(HiveConf.ConfVars.HIVE_SERVER2_TRANSPORT_MODE);
  authTypeStr=conf.getVar(HiveConf.ConfVars.HIVE_SERVER2_AUTHENTICATION);
  hadoopAuth=conf.get(HADOOP_SECURITY_AUTHENTICATION,"simple");
  if ("http".equalsIgnoreCase(transportMode)) {
    if (authTypeStr == null) {
      authTypeStr=AuthTypes.NOSASL.getAuthName();
    }
  }
 else {
    if (authTypeStr == null) {
      authTypeStr=AuthTypes.NONE.getAuthName();
    }
    if (hadoopAuth.equalsIgnoreCase("kerberos") && !authTypeStr.equalsIgnoreCase(AuthTypes.NOSASL.getAuthName())) {
      saslServer=ShimLoader.getHadoopThriftAuthBridge().createServer(conf.getVar(ConfVars.HIVE_SERVER2_KERBEROS_KEYTAB),conf.getVar(ConfVars.HIVE_SERVER2_KERBEROS_PRINCIPAL));
      try {
        HMSHandler baseHandler=null;
        String tokenStoreClass=conf.getVar(HiveConf.ConfVars.METASTORE_CLUSTER_DELEGATION_TOKEN_STORE_CLS);
        if (tokenStoreClass.equals(DBTokenStore.class.getName())) {
          baseHandler=new HiveMetaStore.HMSHandler("new db based metaserver",conf,true);
        }
        saslServer.startDelegationTokenSecretManager(conf,baseHandler,ServerMode.HIVESERVER2);
      }
 catch (      MetaException|IOException e) {
        throw new TTransportException("Failed to start token manager",e);
      }
    }
  }
}
