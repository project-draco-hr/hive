{
  this.conf=conf;
  transportMode=conf.getVar(HiveConf.ConfVars.HIVE_SERVER2_TRANSPORT_MODE);
  authTypeStr=conf.getVar(HiveConf.ConfVars.HIVE_SERVER2_AUTHENTICATION);
  hadoopAuth=conf.get(HADOOP_SECURITY_AUTHENTICATION,"simple");
  if (authTypeStr == null) {
    if ("http".equalsIgnoreCase(transportMode)) {
      authTypeStr=AuthTypes.NOSASL.getAuthName();
    }
 else {
      authTypeStr=AuthTypes.NONE.getAuthName();
    }
  }
  if (hadoopAuth.equalsIgnoreCase("kerberos") && !authTypeStr.equalsIgnoreCase(AuthTypes.NOSASL.getAuthName())) {
    saslServer=ShimLoader.getHadoopThriftAuthBridge().createServer(conf.getVar(ConfVars.HIVE_SERVER2_KERBEROS_KEYTAB),conf.getVar(ConfVars.HIVE_SERVER2_KERBEROS_PRINCIPAL));
    delegationTokenManager=new HiveDelegationTokenManager();
    try {
      Object baseHandler=null;
      String tokenStoreClass=conf.getVar(HiveConf.ConfVars.METASTORE_CLUSTER_DELEGATION_TOKEN_STORE_CLS);
      if (tokenStoreClass.equals(DBTokenStore.class.getName())) {
        baseHandler=Hive.class;
      }
      delegationTokenManager.startDelegationTokenSecretManager(conf,baseHandler,ServerMode.HIVESERVER2);
      saslServer.setSecretManager(delegationTokenManager.getSecretManager());
    }
 catch (    IOException e) {
      throw new TTransportException("Failed to start token manager",e);
    }
  }
}
