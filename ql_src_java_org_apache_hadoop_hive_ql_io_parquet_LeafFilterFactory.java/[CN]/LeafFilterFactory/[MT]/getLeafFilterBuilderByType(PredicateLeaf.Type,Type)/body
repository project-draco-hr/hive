{
switch (type) {
case LONG:
    if (parquetType.asPrimitiveType().getPrimitiveTypeName() == PrimitiveType.PrimitiveTypeName.INT32) {
      return new IntFilterPredicateLeafBuilder();
    }
 else {
      return new LongFilterPredicateLeafBuilder();
    }
case FLOAT:
  if (parquetType.asPrimitiveType().getPrimitiveTypeName() == PrimitiveType.PrimitiveTypeName.FLOAT) {
    return new FloatFilterPredicateLeafBuilder();
  }
 else {
    return new DoubleFilterPredicateLeafBuilder();
  }
case STRING:
return new BinaryFilterPredicateLeafBuilder();
case BOOLEAN:
return new BooleanFilterPredicateLeafBuilder();
case DATE:
case DECIMAL:
case TIMESTAMP:
default :
LOG.debug("Conversion to Parquet FilterPredicate not supported for " + type);
return null;
}
}
