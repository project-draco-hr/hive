{
  if (zkSecretManager == null) {
    throw new ServiceException("Operation not supported on unsecure cluster");
  }
  UserGroupInformation ugi=null;
  Token<LlapTokenIdentifier> token=null;
  try {
    ugi=UserGroupInformation.getCurrentUser();
    token=zkSecretManager.createLlapToken(request.getAppId(),null);
  }
 catch (  IOException e) {
    throw new ServiceException(e);
  }
  if (restrictedToUser != null && !restrictedToUser.equals(ugi.getShortUserName())) {
    throw new ServiceException("Management protocol ACL is too permissive. The access has been" + " automatically restricted to " + restrictedToUser + "; "+ ugi.getShortUserName()+ " is denied acccess. Please set "+ ConfVars.LLAP_VALIDATE_ACLS.varname+ " to false,"+ " or adjust "+ ConfVars.LLAP_MANAGEMENT_ACL.varname+ " and "+ ConfVars.LLAP_MANAGEMENT_ACL_DENY.varname+ " to a more restrictive ACL.");
  }
  ByteArrayDataOutput out=ByteStreams.newDataOutput();
  try {
    token.write(out);
  }
 catch (  IOException e) {
    throw new ServiceException(e);
  }
  ByteString bs=ByteString.copyFrom(out.toByteArray());
  GetTokenResponseProto response=GetTokenResponseProto.newBuilder().setToken(bs).build();
  return response;
}
