{
  final Configuration conf=getConfig();
  final BlockingService daemonImpl=LlapDaemonProtocolProtos.LlapDaemonProtocol.newReflectiveBlockingService(this);
  final BlockingService managementImpl=LlapDaemonProtocolProtos.LlapManagementProtocol.newReflectiveBlockingService(this);
  if (!UserGroupInformation.isSecurityEnabled()) {
    startProtocolServers(conf,daemonImpl,managementImpl);
    return;
  }
  if (isPermissiveManagementAcl(conf)) {
    LOG.warn("Management protocol has a '*' ACL.");
    try {
      this.restrictedToUser=UserGroupInformation.getCurrentUser().getShortUserName();
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
  }
  String llapPrincipal=HiveConf.getVar(conf,ConfVars.LLAP_KERBEROS_PRINCIPAL), llapKeytab=HiveConf.getVar(conf,ConfVars.LLAP_KERBEROS_KEYTAB_FILE);
  zkSecretManager=SecretManager.createSecretManager(conf,llapPrincipal,llapKeytab,daemonId.getClusterString());
  UserGroupInformation daemonUgi=null;
  try {
    daemonUgi=LlapUtil.loginWithKerberos(llapPrincipal,llapKeytab);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  daemonUgi.doAs(new PrivilegedAction<Void>(){
    @Override public Void run(){
      startProtocolServers(conf,daemonImpl,managementImpl);
      return null;
    }
  }
);
}
