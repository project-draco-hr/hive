{
  StringBuilder sb=new StringBuilder();
  Map<String,Set<String>> inputMap=new HashMap<String,Set<String>>();
  for (  ReadEntity input : inputs) {
    Partition inputPartition=input.getP();
    if (inputPartition == null) {
      continue;
    }
    if (!inputMap.containsKey(inputPartition.getTable().getTableName())) {
      inputMap.put(inputPartition.getTable().getTableName(),new HashSet<String>());
    }
    inputMap.get(inputPartition.getTable().getTableName()).add(inputPartition.getName().split("/")[0]);
  }
  if (inputMap.isEmpty()) {
    return "";
  }
  sb.append("(");
  boolean firstTable=true;
  for (  Entry<String,Set<String>> entry : inputMap.entrySet()) {
    if (!firstTable) {
      sb.append(" OR ");
    }
 else {
      firstTable=false;
    }
    sb.append("(table_name = '" + entry.getKey() + "' AND ds IN (");
    boolean firstPartition=true;
    for (    String part : entry.getValue()) {
      if (!firstPartition) {
        sb.append(", ");
      }
 else {
        firstPartition=false;
      }
      sb.append("'" + part + "'");
    }
    sb.append("))");
  }
  sb.append(")");
  return sb.toString();
}
