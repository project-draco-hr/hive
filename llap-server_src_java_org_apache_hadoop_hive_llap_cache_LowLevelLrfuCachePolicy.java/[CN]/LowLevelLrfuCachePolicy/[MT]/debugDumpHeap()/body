{
  StringBuilder result=new StringBuilder("List: ");
  dumpList(result,listHead,listTail);
  result.append("\nHeap:");
  if (heapSize == 0) {
    result.append(" <empty>\n");
    return result.toString();
  }
  result.append("\n");
  int levels=32 - Integer.numberOfLeadingZeros(heapSize);
  int ix=0;
  int spacesCount=heap[0].toStringForCache().length() + 3;
  String full=StringUtils.repeat(" ",spacesCount), half=StringUtils.repeat(" ",spacesCount / 2);
  int maxWidth=1 << (levels - 1);
  for (int i=0; i < levels; ++i) {
    int width=1 << i;
    int middleGap=(maxWidth - width) / width;
    for (int j=0; j < (middleGap >>> 1); ++j) {
      result.append(full);
    }
    if ((middleGap & 1) == 1) {
      result.append(half);
    }
    for (int j=0; j < width && ix < heapSize; ++j, ++ix) {
      if (j != 0) {
        for (int k=0; k < middleGap; ++k) {
          result.append(full);
        }
        if (middleGap == 0) {
          result.append(" ");
        }
      }
      if ((j & 1) == 0) {
        result.append("(");
      }
      result.append(heap[ix].toStringForCache());
      if ((j & 1) == 1) {
        result.append(")");
      }
    }
    result.append("\n");
  }
  return result.toString();
}
