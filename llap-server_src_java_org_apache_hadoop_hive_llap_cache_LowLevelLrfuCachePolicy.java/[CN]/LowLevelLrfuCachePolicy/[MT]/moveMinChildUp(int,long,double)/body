{
  int leftIx=(targetPos << 1) + 1, rightIx=leftIx + 1;
  if (leftIx >= heapSize)   return -1;
  LlapCacheableBuffer left=heap[leftIx], right=null;
  if (rightIx < heapSize) {
    right=heap[rightIx];
  }
  double leftPri=getHeapifyPriority(left,time), rightPri=getHeapifyPriority(right,time);
  if (comparePri >= 0 && comparePri <= leftPri && comparePri <= rightPri) {
    return -1;
  }
  if (leftPri <= rightPri) {
    heap[targetPos]=left;
    left.indexInHeap=targetPos;
    return leftIx;
  }
 else {
    heap[targetPos]=right;
    right.indexInHeap=targetPos;
    return rightIx;
  }
}
