{
  lambda=HiveConf.getFloatVar(conf,HiveConf.ConfVars.LLAP_LRFU_LAMBDA);
  int maxBuffers=(int)Math.ceil((maxSize * 1.0) / minBufferSize);
  int maxHeapSize=-1;
  if (lambda == 0) {
    maxHeapSize=maxBuffers;
  }
 else {
    int lrfuThreshold=(int)((Math.log(1 - Math.pow(0.5,lambda)) / Math.log(0.5)) / lambda);
    maxHeapSize=Math.min(lrfuThreshold,maxBuffers);
  }
  if (LlapIoImpl.LOGL.isInfoEnabled()) {
    LlapIoImpl.LOG.info("LRFU cache policy with min buffer size " + minBufferSize + " and lambda "+ lambda+ " (heap size "+ maxHeapSize+ ")");
  }
  heap=new LlapCacheableBuffer[maxHeapSize];
  listHead=listTail=null;
}
