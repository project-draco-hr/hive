{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
        struct.statsDesc=new ColumnStatisticsDesc();
        struct.statsDesc.read(iprot);
        struct.setStatsDescIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
{
      org.apache.thrift.protocol.TList _list228=iprot.readListBegin();
      struct.statsObj=new ArrayList<ColumnStatisticsObj>(_list228.size);
      for (int _i229=0; _i229 < _list228.size; ++_i229) {
        ColumnStatisticsObj _elem230;
        _elem230=new ColumnStatisticsObj();
        _elem230.read(iprot);
        struct.statsObj.add(_elem230);
      }
      iprot.readListEnd();
    }
    struct.setStatsObjIsSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
