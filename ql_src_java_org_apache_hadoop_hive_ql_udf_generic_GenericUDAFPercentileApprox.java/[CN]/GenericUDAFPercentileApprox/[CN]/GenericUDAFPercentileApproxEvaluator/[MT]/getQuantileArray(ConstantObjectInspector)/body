{
  double[] result=null;
  Object quantileObj=quantileOI.getWritableConstantValue();
  if (quantileOI instanceof ListObjectInspector) {
    ObjectInspector elemOI=((ListObjectInspector)quantileOI).getListElementObjectInspector();
    result=new double[((List<?>)quantileObj).size()];
    assert(result.length >= 1);
    for (int ii=0; ii < result.length; ++ii) {
      result[ii]=PrimitiveObjectInspectorUtils.getDouble(((List<?>)quantileObj).get(ii),(PrimitiveObjectInspector)elemOI);
    }
  }
 else {
    result=new double[1];
    result[0]=PrimitiveObjectInspectorUtils.getDouble(quantileObj,(PrimitiveObjectInspector)quantileOI);
  }
  for (int ii=0; ii < result.length; ++ii) {
    if (result[ii] <= 0 || result[ii] >= 1) {
      throw new HiveException(getClass().getSimpleName() + " requires percentile values to " + "lie strictly between 0 and 1, but you supplied "+ result[ii]);
    }
  }
  return result;
}
