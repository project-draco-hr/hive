{
  List<HiveLock> locks;
  if (isTxnOpen()) {
    DbLockManager.DbHiveLock dummyLock=new DbLockManager.DbHiveLock(0L);
    locks=new ArrayList<>(1);
    locks.add(dummyLock);
  }
 else {
    locks=lockMgr.getLocks(false,false);
  }
  if (LOG.isInfoEnabled()) {
    StringBuilder sb=new StringBuilder("Sending heartbeat for ").append(JavaUtils.txnIdToString(txnId)).append(" and");
    for (    HiveLock lock : locks) {
      sb.append(" ").append(lock.toString());
    }
    LOG.info(sb.toString());
  }
  if (!isTxnOpen() && locks.isEmpty()) {
    return;
  }
  for (  HiveLock lock : locks) {
    long lockId=((DbLockManager.DbHiveLock)lock).lockId;
    try {
      client.heartbeat(txnId,lockId);
    }
 catch (    NoSuchLockException e) {
      LOG.error("Unable to find lock " + JavaUtils.lockIdToString(lockId));
      throw new LockException(e,ErrorMsg.LOCK_NO_SUCH_LOCK,JavaUtils.lockIdToString(lockId));
    }
catch (    NoSuchTxnException e) {
      LOG.error("Unable to find transaction " + JavaUtils.txnIdToString(txnId));
      throw new LockException(e,ErrorMsg.TXN_NO_SUCH_TRANSACTION,JavaUtils.txnIdToString(txnId));
    }
catch (    TxnAbortedException e) {
      LockException le=new LockException(e,ErrorMsg.TXN_ABORTED,JavaUtils.txnIdToString(txnId),e.getMessage());
      LOG.error(le.getMessage());
      throw le;
    }
catch (    TException e) {
      throw new LockException(ErrorMsg.METASTORE_COMMUNICATION_FAILED.getMsg() + "(" + JavaUtils.txnIdToString(txnId)+ ","+ lock.toString()+ ")",e);
    }
  }
}
