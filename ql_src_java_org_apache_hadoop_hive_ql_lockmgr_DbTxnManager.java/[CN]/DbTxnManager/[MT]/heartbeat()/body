{
  LOG.debug("Heartbeating lock and transaction " + JavaUtils.txnIdToString(txnId));
  List<HiveLock> locks=lockMgr.getLocks(false,false);
  if (locks.size() == 0) {
    if (!isTxnOpen()) {
      return;
    }
 else {
      DbLockManager.DbHiveLock dummyLock=new DbLockManager.DbHiveLock(0L);
      locks.add(dummyLock);
    }
  }
  for (  HiveLock lock : locks) {
    long lockId=((DbLockManager.DbHiveLock)lock).lockId;
    try {
      client.heartbeat(txnId,lockId);
    }
 catch (    NoSuchLockException e) {
      LOG.error("Unable to find lock " + JavaUtils.lockIdToString(lockId));
      throw new LockException(e,ErrorMsg.LOCK_NO_SUCH_LOCK,JavaUtils.lockIdToString(lockId));
    }
catch (    NoSuchTxnException e) {
      LOG.error("Unable to find transaction " + JavaUtils.txnIdToString(txnId));
      throw new LockException(e,ErrorMsg.TXN_NO_SUCH_TRANSACTION,JavaUtils.txnIdToString(txnId));
    }
catch (    TxnAbortedException e) {
      LOG.error("Transaction aborted " + JavaUtils.txnIdToString(txnId));
      throw new LockException(e,ErrorMsg.TXN_ABORTED,JavaUtils.txnIdToString(txnId));
    }
catch (    TException e) {
      throw new LockException(ErrorMsg.METASTORE_COMMUNICATION_FAILED.getMsg(),e);
    }
  }
}
