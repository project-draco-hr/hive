{
  Random rand=new Random(294729777L);
  for (int nanosPrecision=0; nanosPrecision <= 4; ++nanosPrecision) {
    for (int i=0; i < 10000; ++i) {
      long millis=randomMillis(MIN_FOUR_DIGIT_YEAR_MILLIS,MAX_FOUR_DIGIT_YEAR_MILLIS,rand);
      Timestamp ts=new Timestamp(millis);
      int nanos=randomNanos(rand,nanosPrecision);
      ts.setNanos(nanos);
      TimestampWritable tsw=new TimestampWritable(ts);
      double asDouble=tsw.getDouble();
      int recoveredNanos=(int)(Math.round((asDouble - Math.floor(asDouble)) * Math.pow(10,nanosPrecision)) * Math.pow(10,9 - nanosPrecision));
      assertEquals(String.format("Invalid nanosecond part recovered from %f",asDouble),nanos,recoveredNanos);
      assertEquals(ts,TimestampWritable.doubleToTimestamp(asDouble));
      assertEquals(ts,TimestampWritable.decimalToTimestamp(new HiveDecimal(BigDecimal.valueOf(asDouble))));
    }
  }
}
