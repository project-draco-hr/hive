{
  if (hasVC=vcCols != null && !vcCols.isEmpty()) {
    List<String> names=new ArrayList<String>(vcCols.size());
    List<ObjectInspector> inspectors=new ArrayList<ObjectInspector>(vcCols.size());
    for (    VirtualColumn vc : vcCols) {
      inspectors.add(PrimitiveObjectInspectorFactory.getPrimitiveWritableObjectInspector(vc.getTypeInfo().getPrimitiveCategory()));
      names.add(vc.getName());
    }
    vcsOI=ObjectInspectorFactory.getStandardStructObjectInspector(names,inspectors);
    vcValues=new Writable[vcCols.size()];
  }
  isPartitioned=work.isPartitioned();
  tblDataDone=false;
  if (hasVC && isPartitioned) {
    row=new Object[3];
  }
 else   if (hasVC || isPartitioned) {
    row=new Object[2];
  }
 else {
    row=new Object[1];
  }
  if (work.getTblDesc() != null) {
    isNativeTable=!work.getTblDesc().isNonNative();
  }
 else {
    isNativeTable=true;
  }
  if (hasVC || work.getSplitSample() != null) {
    context=new ExecMapperContext();
    if (operator != null) {
      operator.setExecContext(context);
    }
  }
}
