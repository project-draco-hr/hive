{
  if (isStatReader) {
    outputOI=work.getStatRowOI();
    return;
  }
  if (hasVC) {
    List<String> names=new ArrayList<String>(vcCols.size());
    List<ObjectInspector> inspectors=new ArrayList<ObjectInspector>(vcCols.size());
    for (    VirtualColumn vc : vcCols) {
      inspectors.add(vc.getObjectInspector());
      names.add(vc.getName());
    }
    vcsOI=ObjectInspectorFactory.getStandardStructObjectInspector(names,inspectors);
    vcValues=new Object[vcCols.size()];
  }
  if (hasVC && isPartitioned) {
    row=new Object[3];
  }
 else   if (hasVC || isPartitioned) {
    row=new Object[2];
  }
 else {
    row=new Object[1];
  }
  if (isPartitioned) {
    iterPath=work.getPartDir().iterator();
    iterPartDesc=work.getPartDesc().iterator();
  }
 else {
    iterPath=Arrays.asList(work.getTblDir()).iterator();
    iterPartDesc=Iterators.cycle(new PartitionDesc(work.getTblDesc(),null));
  }
  outputOI=setupOutputObjectInspector();
  context=setupExecContext(operator,work.getPathLists());
}
