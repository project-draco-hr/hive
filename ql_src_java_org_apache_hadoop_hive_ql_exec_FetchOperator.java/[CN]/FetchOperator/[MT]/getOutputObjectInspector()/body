{
  try {
    if (work.isNotPartitioned()) {
      return getRowInspectorFromTable(work.getTblDesc());
    }
    List<PartitionDesc> listParts=work.getPartDesc();
    if (listParts == null || listParts.isEmpty()) {
      return getRowInspectorFromPartitionedTable(work.getTblDesc());
    }
    PartitionDesc partition=listParts.get(0);
    Deserializer tblSerde=partition.getTableDesc().getDeserializerClass().newInstance();
    tblSerde.initialize(job,partition.getTableDesc().getProperties());
    partitionedTableOI=null;
    ObjectInspector tableOI=tblSerde.getObjectInspector();
    for (    PartitionDesc listPart : listParts) {
      partition=listPart;
      Deserializer partSerde=listPart.getDeserializerClass().newInstance();
      partSerde.initialize(job,listPart.getOverlayedProperties());
      partitionedTableOI=ObjectInspectorConverters.getConvertedOI(partSerde.getObjectInspector(),tableOI,oiSettableProperties);
      if (!partitionedTableOI.equals(tableOI)) {
        break;
      }
    }
    return getRowInspectorFromPartition(partition,partitionedTableOI);
  }
 catch (  Exception e) {
    throw new HiveException("Failed with exception " + e.getMessage() + org.apache.hadoop.util.StringUtils.stringifyException(e));
  }
 finally {
    currPart=null;
  }
}
