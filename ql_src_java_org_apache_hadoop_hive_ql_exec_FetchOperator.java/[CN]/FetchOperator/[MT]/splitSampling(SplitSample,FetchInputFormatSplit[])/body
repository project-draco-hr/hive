{
  long totalSize=0;
  for (  FetchInputFormatSplit split : splits) {
    totalSize+=split.getLength();
  }
  List<FetchInputFormatSplit> result=new ArrayList<FetchInputFormatSplit>();
  long targetSize=(long)(totalSize * splitSample.getPercent() / 100D);
  int startIndex=splitSample.getSeedNum() % splits.length;
  long size=0;
  for (int i=0; i < splits.length; i++) {
    FetchInputFormatSplit split=splits[(startIndex + i) % splits.length];
    result.add(split);
    long splitgLength=split.getLength();
    if (size + splitgLength >= targetSize) {
      if (size + splitgLength > targetSize) {
        split.shrinkedLength=targetSize - size;
      }
      break;
    }
    size+=splitgLength;
  }
  return result.toArray(new FetchInputFormatSplit[result.size()]);
}
