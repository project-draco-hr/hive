{
  CliDriver cli=new CliDriver();
  cli.setHiveVariables(oproc.getHiveVariables());
  cli.processSelectDatabase(ss);
  cli.processInitFiles(ss);
  if (ss.execString != null) {
    int cmdProcessStatus=cli.processLine(ss.execString);
    return cmdProcessStatus;
  }
  try {
    if (ss.fileName != null) {
      return cli.processFile(ss.fileName);
    }
  }
 catch (  FileNotFoundException e) {
    System.err.println("Could not open input file for reading. (" + e.getMessage() + ")");
    return 3;
  }
  setupConsoleReader();
  String line;
  int ret=0;
  String prefix="";
  String curDB=getFormattedDb(conf,ss);
  String curPrompt=prompt + curDB;
  String dbSpaces=spacesForString(curDB);
  while ((line=reader.readLine(curPrompt + "> ")) != null) {
    if (!prefix.equals("")) {
      prefix+='\n';
    }
    if (line.trim().endsWith(";") && !line.trim().endsWith("\\;")) {
      line=prefix + line;
      ret=cli.processLine(line,true);
      prefix="";
      curDB=getFormattedDb(conf,ss);
      curPrompt=prompt + curDB;
      dbSpaces=dbSpaces.length() == curDB.length() ? dbSpaces : spacesForString(curDB);
    }
 else {
      prefix=prefix + line;
      curPrompt=prompt2 + dbSpaces;
      continue;
    }
  }
  return ret;
}
