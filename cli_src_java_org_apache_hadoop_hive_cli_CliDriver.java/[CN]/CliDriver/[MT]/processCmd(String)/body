{
  String[] tokens=cmd.split("\\s+");
  String cmd_1=cmd.substring(tokens[0].length());
  int ret=0;
  if (tokens[0].equals("set")) {
    ret=sp.run(cmd_1);
  }
 else   if (cmd.equals("quit") || cmd.equals("exit")) {
    System.exit(0);
  }
 else   if (cmd.startsWith("!")) {
    SessionState ss=SessionState.get();
    String shell_cmd=cmd.substring(1);
    if (shell_cmd.endsWith(";")) {
      shell_cmd=shell_cmd.substring(0,shell_cmd.length() - 1);
    }
    try {
      Process executor=Runtime.getRuntime().exec(shell_cmd);
      StreamPrinter outPrinter=new StreamPrinter(executor.getInputStream(),null,ss.out);
      StreamPrinter errPrinter=new StreamPrinter(executor.getErrorStream(),null,ss.err);
      outPrinter.start();
      errPrinter.start();
      int exitVal=executor.waitFor();
      if (exitVal != 0) {
        ss.err.write((new String("Command failed with exit code = " + exitVal)).getBytes());
      }
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
  }
 else   if (cmd.startsWith("dfs")) {
    SessionState ss=SessionState.get();
    if (dfs == null)     dfs=new FsShell(ss.getConf());
    String hadoopCmd=cmd.replaceFirst("dfs\\s+","");
    hadoopCmd=hadoopCmd.trim();
    if (hadoopCmd.endsWith(";")) {
      hadoopCmd=hadoopCmd.substring(0,hadoopCmd.length() - 1);
    }
    String[] args=hadoopCmd.split("\\s+");
    try {
      PrintStream oldOut=System.out;
      System.setOut(ss.out);
      int val=dfs.run(args);
      System.setOut(oldOut);
      if (val != 0) {
        ss.err.write((new String("Command failed with exit code = " + val)).getBytes());
      }
    }
 catch (    Exception e) {
      ss.err.println("Exception raised from DFSShell.run " + e.getLocalizedMessage());
    }
  }
 else {
    ret=qp.run(cmd);
    Vector<String> res=new Vector<String>();
    while (qp.getResults(res)) {
      for (      String r : res) {
        SessionState ss=SessionState.get();
        PrintStream out=ss.out;
        out.println(r);
      }
      res.clear();
    }
    int cret=qp.close();
    if (ret == 0) {
      ret=cret;
    }
  }
  return ret;
}
