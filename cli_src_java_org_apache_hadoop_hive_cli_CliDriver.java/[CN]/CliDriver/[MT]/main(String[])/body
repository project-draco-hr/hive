{
  OptionsProcessor oproc=new OptionsProcessor();
  if (!oproc.process_stage1(args)) {
    System.exit(1);
  }
  SessionState.initHiveLog4j();
  CliSessionState ss=new CliSessionState(new HiveConf(SessionState.class));
  ss.in=System.in;
  try {
    ss.out=new PrintStream(System.out,true,"UTF-8");
    ss.err=new PrintStream(System.err,true,"UTF-8");
  }
 catch (  UnsupportedEncodingException e) {
    System.exit(3);
  }
  SessionState.start(ss);
  if (!oproc.process_stage2(ss)) {
    System.exit(2);
  }
  sp=new SetProcessor();
  qp=new Driver();
  if (ss.execString != null) {
    System.exit(processLine(ss.execString));
  }
  try {
    if (ss.fileName != null) {
      System.exit(processReader(new BufferedReader(new FileReader(ss.fileName))));
    }
  }
 catch (  FileNotFoundException e) {
    System.err.println("Could not open input file for reading. (" + e.getMessage() + ")");
    System.exit(3);
  }
  Character mask=null;
  String trigger=null;
  ConsoleReader reader=new ConsoleReader();
  reader.setBellEnabled(false);
  List<SimpleCompletor> completors=new LinkedList<SimpleCompletor>();
  completors.add(new SimpleCompletor(new String[]{"set","from","create","load","describe","quit","exit"}));
  reader.addCompletor(new ArgumentCompletor(completors));
  String line;
  PrintWriter out=new PrintWriter(System.out);
  final String HISTORYFILE=".hivehistory";
  String historyFile=System.getProperty("user.home") + File.separator + HISTORYFILE;
  reader.setHistory(new History(new File(historyFile)));
  int ret=0;
  Log LOG=LogFactory.getLog("CliDriver");
  LogHelper console=new LogHelper(LOG);
  while ((line=reader.readLine(prompt + "> ")) != null) {
    long start=System.currentTimeMillis();
    ret=processLine(line);
    long end=System.currentTimeMillis();
    if (end > start) {
      double timeTaken=(double)(end - start) / 1000.0;
      console.printInfo("Time taken: " + timeTaken + " seconds",null);
    }
  }
  System.exit(ret);
}
