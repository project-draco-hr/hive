{
  Set<SQLPrivTypeGrant> privs=new HashSet<SQLPrivTypeGrant>();
  LOG.debug("Checking fs privileges for {} {}",fileStatus.toString(),(recurse ? "recursively" : "without recursion"));
  if (FileUtils.isOwnerOfFileHierarchy(fs,fileStatus,userName,recurse)) {
    privs.add(SQLPrivTypeGrant.OWNER_PRIV);
  }
  if (FileUtils.isActionPermittedForFileHierarchy(fs,fileStatus,userName,FsAction.WRITE,recurse)) {
    privs.add(SQLPrivTypeGrant.INSERT_NOGRANT);
    privs.add(SQLPrivTypeGrant.DELETE_NOGRANT);
  }
  if (FileUtils.isActionPermittedForFileHierarchy(fs,fileStatus,userName,FsAction.READ,recurse)) {
    privs.add(SQLPrivTypeGrant.SELECT_NOGRANT);
  }
  LOG.debug("addPrivilegesFromFS:[{}] asked for privileges on [{}] with recurse={} and obtained:[{}]",userName,fileStatus,recurse,privs);
  return privs;
}
