{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.sessionHandle != null) {
    oprot.writeFieldBegin(SESSION_HANDLE_FIELD_DESC);
    struct.sessionHandle.write(oprot);
    oprot.writeFieldEnd();
  }
  if (struct.statement != null) {
    oprot.writeFieldBegin(STATEMENT_FIELD_DESC);
    oprot.writeString(struct.statement);
    oprot.writeFieldEnd();
  }
  if (struct.confOverlay != null) {
    if (struct.isSetConfOverlay()) {
      oprot.writeFieldBegin(CONF_OVERLAY_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,struct.confOverlay.size()));
        for (        Map.Entry<String,String> _iter166 : struct.confOverlay.entrySet()) {
          oprot.writeString(_iter166.getKey());
          oprot.writeString(_iter166.getValue());
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  if (struct.isSetRunAsync()) {
    oprot.writeFieldBegin(RUN_ASYNC_FIELD_DESC);
    oprot.writeBool(struct.runAsync);
    oprot.writeFieldEnd();
  }
  if (struct.isSetQueryTimeout()) {
    oprot.writeFieldBegin(QUERY_TIMEOUT_FIELD_DESC);
    oprot.writeI64(struct.queryTimeout);
    oprot.writeFieldEnd();
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
