{
  HBaseSplit hbaseSplit=(HBaseSplit)split;
  byte[] tableNameBytes;
  String hbaseTableName=job.get(HBaseSerDe.HBASE_TABLE_NAME);
  hbaseInputFormat.setHBaseTable(new HTable(new HBaseConfiguration(job),Bytes.toBytes(hbaseTableName)));
  String columnMapping=hbaseSplit.getColumnsMapping();
  List<String> columns=HBaseSerDe.parseColumnMapping(columnMapping);
  List<Integer> readColIDs=ColumnProjectionUtils.getReadColumnIDs(job);
  if (columns.size() < readColIDs.size()) {
    throw new IOException("Cannot read more columns than the given table contains.");
  }
  List<byte[]> scanColumns=new ArrayList<byte[]>();
  boolean addAll=(readColIDs.size() == 0);
  if (!addAll) {
    for (    int iColumn : readColIDs) {
      String column=columns.get(iColumn);
      if (HBaseSerDe.isSpecialColumn(column)) {
        continue;
      }
      scanColumns.add(Bytes.toBytes(column));
    }
  }
  if (scanColumns.isEmpty()) {
    for (    String column : columns) {
      if (HBaseSerDe.isSpecialColumn(column)) {
        continue;
      }
      scanColumns.add(Bytes.toBytes(column));
      if (!addAll) {
        break;
      }
    }
  }
  hbaseInputFormat.setScanColumns(scanColumns.toArray(new byte[0][]));
  return (RecordReader<K,V>)hbaseInputFormat.getRecordReader(hbaseSplit.getSplit(),job,reporter);
}
