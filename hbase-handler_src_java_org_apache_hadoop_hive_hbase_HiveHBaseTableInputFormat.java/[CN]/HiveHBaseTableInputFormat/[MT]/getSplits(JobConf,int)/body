{
  Path[] tableNames=FileInputFormat.getInputPaths(job);
  String hbaseTableName=job.get(HBaseSerDe.HBASE_TABLE_NAME);
  hbaseInputFormat.setHBaseTable(new HTable(new HBaseConfiguration(job),hbaseTableName));
  String hbaseSchemaMapping=job.get(HBaseSerDe.HBASE_COL_MAPPING);
  if (hbaseSchemaMapping == null) {
    throw new IOException("hbase.columns.mapping required for HBase Table.");
  }
  List<String> columns=HBaseSerDe.parseColumnMapping(hbaseSchemaMapping);
  List<byte[]> inputColumns=new ArrayList<byte[]>();
  for (  String column : columns) {
    if (HBaseSerDe.isSpecialColumn(column)) {
      continue;
    }
    inputColumns.add(Bytes.toBytes(column));
  }
  hbaseInputFormat.setScanColumns(inputColumns.toArray(new byte[0][]));
  InputSplit[] splits=hbaseInputFormat.getSplits(job,numSplits <= 0 ? 1 : numSplits);
  InputSplit[] results=new InputSplit[splits.length];
  for (int i=0; i < splits.length; i++) {
    results[i]=new HBaseSplit((TableSplit)splits[i],hbaseSchemaMapping,tableNames[0]);
  }
  return results;
}
