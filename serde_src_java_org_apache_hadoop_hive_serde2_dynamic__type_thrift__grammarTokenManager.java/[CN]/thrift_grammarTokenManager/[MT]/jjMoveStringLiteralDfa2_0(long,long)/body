{
  if (((active0&=old0)) == 0L) {
    return jjStartNfa_0(0,old0,0L);
  }
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(1,active0,0L);
    return 2;
  }
switch (curChar) {
case 50:
    if ((active0 & 0x100000000L) != 0L) {
      return jjStartNfaWithStates_0(2,32,35);
    }
  break;
case 52:
if ((active0 & 0x200000000L) != 0L) {
  return jjStartNfaWithStates_0(2,33,35);
}
break;
case 54:
if ((active0 & 0x80000000L) != 0L) {
return jjStartNfaWithStates_0(2,31,35);
}
break;
case 95:
return jjMoveStringLiteralDfa3_0(active0,0x20000L);
case 97:
return jjMoveStringLiteralDfa3_0(active0,0x300000L);
case 98:
return jjMoveStringLiteralDfa3_0(active0,0x80000L);
case 99:
return jjMoveStringLiteralDfa3_0(active0,0x100008004000L);
case 100:
return jjMoveStringLiteralDfa3_0(active0,0x7c00000L);
case 104:
return jjMoveStringLiteralDfa3_0(active0,0x8000L);
case 105:
return jjMoveStringLiteralDfa3_0(active0,0x8001010000000L);
case 109:
return jjMoveStringLiteralDfa3_0(active0,0x200L);
case 110:
return jjMoveStringLiteralDfa3_0(active0,0x2000000100L);
case 111:
return jjMoveStringLiteralDfa3_0(active0,0x20000000L);
case 112:
if ((active0 & 0x4000000000L) != 0L) {
return jjStartNfaWithStates_0(2,38,35);
}
return jjMoveStringLiteralDfa3_0(active0,0x40000011c00L);
case 113:
return jjMoveStringLiteralDfa3_0(active0,0x2000000000000L);
case 114:
return jjMoveStringLiteralDfa3_0(active0,0xc80800040000L);
case 115:
return jjMoveStringLiteralDfa3_0(active0,0x8000000000L);
case 116:
if ((active0 & 0x10000000000L) != 0L) {
return jjStartNfaWithStates_0(2,40,35);
}
return jjMoveStringLiteralDfa3_0(active0,0x4200040000000L);
case 117:
return jjMoveStringLiteralDfa3_0(active0,0x1000400000000L);
case 118:
return jjMoveStringLiteralDfa3_0(active0,0x2000L);
case 121:
return jjMoveStringLiteralDfa3_0(active0,0x20000000000L);
default :
break;
}
return jjStartNfa_0(1,active0,0L);
}
