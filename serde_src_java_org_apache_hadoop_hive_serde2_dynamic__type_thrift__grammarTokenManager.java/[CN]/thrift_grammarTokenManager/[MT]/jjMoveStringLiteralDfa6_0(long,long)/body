{
  if (((active0&=old0)) == 0L) {
    return jjStartNfa_0(4,old0,0L);
  }
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(5,active0,0L);
    return 6;
  }
switch (curChar) {
case 95:
    return jjMoveStringLiteralDfa7_0(active0,0x8000L);
case 97:
  return jjMoveStringLiteralDfa7_0(active0,0x40000003c2200L);
case 99:
return jjMoveStringLiteralDfa7_0(active0,0x800L);
case 101:
if ((active0 & 0x8000000L) != 0L) {
return jjStartNfaWithStates_0(6,27,35);
}
 else if ((active0 & 0x800000000000L) != 0L) {
return jjStartNfaWithStates_0(6,47,35);
}
return jjMoveStringLiteralDfa7_0(active0,0x2000000000000L);
case 102:
if ((active0 & 0x40000000000L) != 0L) {
return jjStartNfaWithStates_0(6,42,35);
}
break;
case 105:
return jjMoveStringLiteralDfa7_0(active0,0x100000000000L);
case 108:
if ((active0 & 0x400000L) != 0L) {
return jjStartNfaWithStates_0(6,22,35);
}
return jjMoveStringLiteralDfa7_0(active0,0x1000000L);
case 109:
return jjMoveStringLiteralDfa7_0(active0,0x2010400L);
case 112:
return jjMoveStringLiteralDfa7_0(active0,0x5000L);
case 115:
if ((active0 & 0x200000000000L) != 0L) {
return jjStartNfaWithStates_0(6,45,35);
}
break;
case 116:
return jjMoveStringLiteralDfa7_0(active0,0x4800000L);
case 117:
return jjMoveStringLiteralDfa7_0(active0,0x20000L);
default :
break;
}
return jjStartNfa_0(5,active0,0L);
}
