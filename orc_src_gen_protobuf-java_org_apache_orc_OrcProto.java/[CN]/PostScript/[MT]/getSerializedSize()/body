{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt64Size(1,footerLength_);
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeEnumSize(2,compression_.getNumber());
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt64Size(3,compressionBlockSize_);
  }
{
    int dataSize=0;
    for (int i=0; i < version_.size(); i++) {
      dataSize+=com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(version_.get(i));
    }
    size+=dataSize;
    if (!getVersionList().isEmpty()) {
      size+=1;
      size+=com.google.protobuf.CodedOutputStream.computeInt32SizeNoTag(dataSize);
    }
    versionMemoizedSerializedSize=dataSize;
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt64Size(5,metadataLength_);
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    size+=com.google.protobuf.CodedOutputStream.computeUInt32Size(6,writerVersion_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(8000,getMagicBytes());
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
