{
  List<HCatFieldSchema> fieldSchemas=new ArrayList<HCatFieldSchema>(pigSchema.size());
  for (  FieldSchema fSchema : pigSchema.getFields()) {
    byte type=fSchema.type;
    HCatFieldSchema howlFSchema;
    try {
      if (type == DataType.BAG && removeTupleFromBag(tableSchema,fSchema)) {
        List<HCatFieldSchema> arrFields=new ArrayList<HCatFieldSchema>(1);
        arrFields.add(getHowlFSFromPigFS(fSchema.schema.getField(0).schema.getField(0)));
        howlFSchema=new HCatFieldSchema(fSchema.alias,Type.ARRAY,new HCatSchema(arrFields),null);
      }
 else {
        howlFSchema=getHowlFSFromPigFS(fSchema);
      }
      fieldSchemas.add(howlFSchema);
    }
 catch (    HCatException he) {
      throw new FrontendException(he.getMessage(),PigHCatUtil.PIG_EXCEPTION_CODE,he);
    }
  }
  return new HCatSchema(fieldSchemas);
}
