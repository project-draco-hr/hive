{
  StructObjectInspector oi=(StructObjectInspector)ObjectInspectorFactory.getReflectionObjectInspector(OuterStruct.class,ObjectInspectorOptions.JAVA);
  String cols=ObjectInspectorUtils.getFieldNames(oi);
  Properties props=new Properties();
  props.setProperty(serdeConstants.LIST_COLUMNS,cols);
  props.setProperty(serdeConstants.LIST_COLUMN_TYPES,ObjectInspectorUtils.getFieldTypes(oi));
  LazyBinaryColumnarSerDe serde=new LazyBinaryColumnarSerDe();
  SerDeUtils.initializeSerDe(serde,new Configuration(),props,null);
  OuterStruct outerStruct=new OuterStruct();
  BytesRefArrayWritable braw=(BytesRefArrayWritable)serde.serialize(outerStruct,oi);
  ObjectInspector out_oi=serde.getObjectInspector();
  Object out_o=serde.deserialize(braw);
  if (0 != ObjectInspectorUtils.compare(outerStruct,oi,out_o,out_oi,new SimpleMapEqualComparer())) {
    System.out.println("expected = " + SerDeUtils.getJSONString(outerStruct,oi));
    System.out.println("actual = " + SerDeUtils.getJSONString(out_o,out_oi));
    fail("Deserialized object does not compare");
  }
}
