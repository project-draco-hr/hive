{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == TType.STRING) {
        this.name=iprot.readString();
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == TType.STRING) {
    this.serializationLib=iprot.readString();
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == TType.MAP) {
{
  TMap _map9=iprot.readMapBegin();
  this.parameters=new HashMap<String,String>(2 * _map9.size);
  for (int _i10=0; _i10 < _map9.size; ++_i10) {
    String _key11;
    String _val12;
    _key11=iprot.readString();
    _val12=iprot.readString();
    this.parameters.put(_key11,_val12);
  }
  iprot.readMapEnd();
}
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
default :
TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
