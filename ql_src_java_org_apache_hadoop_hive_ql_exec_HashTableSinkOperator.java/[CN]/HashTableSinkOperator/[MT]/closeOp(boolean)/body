{
  try {
    if (mapJoinTables != null) {
      String tmpURI=this.getExecContext().getLocalWork().getTmpFileURI();
      LOG.info("Temp URI for side table: " + tmpURI);
      for (byte tag=0; tag < mapJoinTables.length; tag++) {
        MapJoinTableContainer tableContainer=mapJoinTables[tag];
        if (tableContainer == null) {
          continue;
        }
        String bigBucketFileName=getExecContext().getCurrentBigBucketFile();
        String fileName=getExecContext().getLocalWork().getBucketFileName(bigBucketFileName);
        String dumpFilePrefix=conf.getDumpFilePrefix();
        String tmpURIPath=Utilities.generatePath(tmpURI,dumpFilePrefix,tag,fileName);
        console.printInfo(Utilities.now() + "\tDump the side-table into file: " + tmpURIPath);
        Path path=new Path(tmpURIPath);
        FileSystem fs=path.getFileSystem(hconf);
        ObjectOutputStream out=new ObjectOutputStream(new BufferedOutputStream(fs.create(path),4096));
        try {
          mapJoinTableSerdes[tag].persist(out,tableContainer);
        }
  finally {
          out.close();
        }
        tableContainer.clear();
        console.printInfo(Utilities.now() + "\tUpload 1 File to: " + tmpURIPath);
      }
    }
    super.closeOp(abort);
  }
 catch (  Exception e) {
    LOG.error("Error generating side-table",e);
  }
}
