{
  try {
    if (mapJoinTables != null) {
      String tmpURI=this.getExecContext().getLocalWork().getTmpFileURI();
      LOG.info("Get TMP URI: " + tmpURI);
      long fileLength;
      for (byte tag=0; tag < mapJoinTables.length; tag++) {
        HashMapWrapper<AbstractMapJoinKey,MapJoinObjectValue> hashTable=mapJoinTables[tag];
        if (hashTable == null) {
          continue;
        }
        String bigBucketFileName=getExecContext().getCurrentBigBucketFile();
        String fileName=getExecContext().getLocalWork().getBucketFileName(bigBucketFileName);
        String dumpFilePrefix=conf.getDumpFilePrefix();
        String tmpURIPath=Utilities.generatePath(tmpURI,dumpFilePrefix,tag,fileName);
        hashTable.isAbort(rowNumber,console);
        console.printInfo(Utilities.now() + "\tDump the hashtable into file: " + tmpURIPath);
        Path path=new Path(tmpURIPath);
        FileSystem fs=path.getFileSystem(hconf);
        File file=new File(path.toUri().getPath());
        fs.create(path);
        fileLength=hashTable.flushMemoryCacheToPersistent(file);
        console.printInfo(Utilities.now() + "\tUpload 1 File to: " + tmpURIPath+ " File size: "+ fileLength);
        hashTable.close();
      }
    }
    super.closeOp(abort);
  }
 catch (  Exception e) {
    LOG.error("Generate Hashtable error");
    e.printStackTrace();
  }
}
