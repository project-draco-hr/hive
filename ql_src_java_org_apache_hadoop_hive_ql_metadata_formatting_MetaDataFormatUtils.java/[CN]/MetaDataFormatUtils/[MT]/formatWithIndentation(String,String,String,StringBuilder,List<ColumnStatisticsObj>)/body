{
  tableInfo.append(String.format("%-" + ALIGNMENT + "s",colName)).append(FIELD_DELIM);
  tableInfo.append(String.format("%-" + ALIGNMENT + "s",colType)).append(FIELD_DELIM);
  if (colStats != null) {
    ColumnStatisticsObj cso=getColumnStatisticsObject(colName,colType,colStats);
    if (cso != null) {
      ColumnStatisticsData csd=cso.getStatsData();
      if (csd.isSetBinaryStats()) {
        BinaryColumnStatsData bcsd=csd.getBinaryStats();
        appendColumnStats(tableInfo,"","",bcsd.getNumNulls(),"",bcsd.getAvgColLen(),bcsd.getMaxColLen(),"","");
      }
 else       if (csd.isSetStringStats()) {
        StringColumnStatsData scsd=csd.getStringStats();
        appendColumnStats(tableInfo,"","",scsd.getNumNulls(),scsd.getNumDVs(),scsd.getAvgColLen(),scsd.getMaxColLen(),"","");
      }
 else       if (csd.isSetBooleanStats()) {
        BooleanColumnStatsData bcsd=csd.getBooleanStats();
        appendColumnStats(tableInfo,"","",bcsd.getNumNulls(),"","","",bcsd.getNumTrues(),bcsd.getNumFalses());
      }
 else       if (csd.isSetDecimalStats()) {
        DecimalColumnStatsData dcsd=csd.getDecimalStats();
        appendColumnStats(tableInfo,convertToString(dcsd.getLowValue()),convertToString(dcsd.getHighValue()),dcsd.getNumNulls(),dcsd.getNumDVs(),"","","","");
      }
 else       if (csd.isSetDoubleStats()) {
        DoubleColumnStatsData dcsd=csd.getDoubleStats();
        appendColumnStats(tableInfo,dcsd.getLowValue(),dcsd.getHighValue(),dcsd.getNumNulls(),dcsd.getNumDVs(),"","","","");
      }
 else       if (csd.isSetLongStats()) {
        LongColumnStatsData lcsd=csd.getLongStats();
        appendColumnStats(tableInfo,lcsd.getLowValue(),lcsd.getHighValue(),lcsd.getNumNulls(),lcsd.getNumDVs(),"","","","");
      }
    }
 else {
      appendColumnStats(tableInfo,"","","","","","","","");
    }
  }
  String[] commentSegments=colComment.split("\n|\r|\r\n");
  tableInfo.append(String.format("%-" + ALIGNMENT + "s",commentSegments[0])).append(LINE_DELIM);
  int colNameLength=ALIGNMENT > colName.length() ? ALIGNMENT : colName.length();
  int colTypeLength=ALIGNMENT > colType.length() ? ALIGNMENT : colType.length();
  for (int i=1; i < commentSegments.length; i++) {
    tableInfo.append(String.format("%" + colNameLength + "s"+ FIELD_DELIM+ "%"+ colTypeLength+ "s"+ FIELD_DELIM+ "%s","","",commentSegments[i])).append(LINE_DELIM);
  }
}
