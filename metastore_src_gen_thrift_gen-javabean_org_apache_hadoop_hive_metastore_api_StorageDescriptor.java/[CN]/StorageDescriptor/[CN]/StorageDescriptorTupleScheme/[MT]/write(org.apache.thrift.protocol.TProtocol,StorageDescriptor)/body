{
  TTupleProtocol oprot=(TTupleProtocol)prot;
  BitSet optionals=new BitSet();
  if (struct.isSetCols()) {
    optionals.set(0);
  }
  if (struct.isSetLocation()) {
    optionals.set(1);
  }
  if (struct.isSetInputFormat()) {
    optionals.set(2);
  }
  if (struct.isSetOutputFormat()) {
    optionals.set(3);
  }
  if (struct.isSetCompressed()) {
    optionals.set(4);
  }
  if (struct.isSetNumBuckets()) {
    optionals.set(5);
  }
  if (struct.isSetSerdeInfo()) {
    optionals.set(6);
  }
  if (struct.isSetBucketCols()) {
    optionals.set(7);
  }
  if (struct.isSetSortCols()) {
    optionals.set(8);
  }
  if (struct.isSetParameters()) {
    optionals.set(9);
  }
  if (struct.isSetSkewedInfo()) {
    optionals.set(10);
  }
  if (struct.isSetStoredAsSubDirectories()) {
    optionals.set(11);
  }
  oprot.writeBitSet(optionals,12);
  if (struct.isSetCols()) {
{
      oprot.writeI32(struct.cols.size());
      for (      FieldSchema _iter165 : struct.cols) {
        _iter165.write(oprot);
      }
    }
  }
  if (struct.isSetLocation()) {
    oprot.writeString(struct.location);
  }
  if (struct.isSetInputFormat()) {
    oprot.writeString(struct.inputFormat);
  }
  if (struct.isSetOutputFormat()) {
    oprot.writeString(struct.outputFormat);
  }
  if (struct.isSetCompressed()) {
    oprot.writeBool(struct.compressed);
  }
  if (struct.isSetNumBuckets()) {
    oprot.writeI32(struct.numBuckets);
  }
  if (struct.isSetSerdeInfo()) {
    struct.serdeInfo.write(oprot);
  }
  if (struct.isSetBucketCols()) {
{
      oprot.writeI32(struct.bucketCols.size());
      for (      String _iter166 : struct.bucketCols) {
        oprot.writeString(_iter166);
      }
    }
  }
  if (struct.isSetSortCols()) {
{
      oprot.writeI32(struct.sortCols.size());
      for (      Order _iter167 : struct.sortCols) {
        _iter167.write(oprot);
      }
    }
  }
  if (struct.isSetParameters()) {
{
      oprot.writeI32(struct.parameters.size());
      for (      Map.Entry<String,String> _iter168 : struct.parameters.entrySet()) {
        oprot.writeString(_iter168.getKey());
        oprot.writeString(_iter168.getValue());
      }
    }
  }
  if (struct.isSetSkewedInfo()) {
    struct.skewedInfo.write(oprot);
  }
  if (struct.isSetStoredAsSubDirectories()) {
    oprot.writeBool(struct.storedAsSubDirectories);
  }
}
