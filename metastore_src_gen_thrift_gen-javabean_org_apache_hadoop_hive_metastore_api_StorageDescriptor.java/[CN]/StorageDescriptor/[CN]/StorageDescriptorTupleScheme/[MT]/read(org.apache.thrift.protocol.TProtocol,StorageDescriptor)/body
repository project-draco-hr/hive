{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(12);
  if (incoming.get(0)) {
{
      org.apache.thrift.protocol.TList _list177=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.cols=new ArrayList<FieldSchema>(_list177.size);
      for (int _i178=0; _i178 < _list177.size; ++_i178) {
        FieldSchema _elem179;
        _elem179=new FieldSchema();
        _elem179.read(iprot);
        struct.cols.add(_elem179);
      }
    }
    struct.setColsIsSet(true);
  }
  if (incoming.get(1)) {
    struct.location=iprot.readString();
    struct.setLocationIsSet(true);
  }
  if (incoming.get(2)) {
    struct.inputFormat=iprot.readString();
    struct.setInputFormatIsSet(true);
  }
  if (incoming.get(3)) {
    struct.outputFormat=iprot.readString();
    struct.setOutputFormatIsSet(true);
  }
  if (incoming.get(4)) {
    struct.compressed=iprot.readBool();
    struct.setCompressedIsSet(true);
  }
  if (incoming.get(5)) {
    struct.numBuckets=iprot.readI32();
    struct.setNumBucketsIsSet(true);
  }
  if (incoming.get(6)) {
    struct.serdeInfo=new SerDeInfo();
    struct.serdeInfo.read(iprot);
    struct.setSerdeInfoIsSet(true);
  }
  if (incoming.get(7)) {
{
      org.apache.thrift.protocol.TList _list180=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.bucketCols=new ArrayList<String>(_list180.size);
      for (int _i181=0; _i181 < _list180.size; ++_i181) {
        String _elem182;
        _elem182=iprot.readString();
        struct.bucketCols.add(_elem182);
      }
    }
    struct.setBucketColsIsSet(true);
  }
  if (incoming.get(8)) {
{
      org.apache.thrift.protocol.TList _list183=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.sortCols=new ArrayList<Order>(_list183.size);
      for (int _i184=0; _i184 < _list183.size; ++_i184) {
        Order _elem185;
        _elem185=new Order();
        _elem185.read(iprot);
        struct.sortCols.add(_elem185);
      }
    }
    struct.setSortColsIsSet(true);
  }
  if (incoming.get(9)) {
{
      org.apache.thrift.protocol.TMap _map186=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.parameters=new HashMap<String,String>(2 * _map186.size);
      for (int _i187=0; _i187 < _map186.size; ++_i187) {
        String _key188;
        String _val189;
        _key188=iprot.readString();
        _val189=iprot.readString();
        struct.parameters.put(_key188,_val189);
      }
    }
    struct.setParametersIsSet(true);
  }
  if (incoming.get(10)) {
    struct.skewedInfo=new SkewedInfo();
    struct.skewedInfo.read(iprot);
    struct.setSkewedInfoIsSet(true);
  }
  if (incoming.get(11)) {
    struct.storedAsSubDirectories=iprot.readBool();
    struct.setStoredAsSubDirectoriesIsSet(true);
  }
}
