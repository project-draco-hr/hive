{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(12);
  if (incoming.get(0)) {
{
      org.apache.thrift.protocol.TList _list169=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.cols=new ArrayList<FieldSchema>(_list169.size);
      for (int _i170=0; _i170 < _list169.size; ++_i170) {
        FieldSchema _elem171;
        _elem171=new FieldSchema();
        _elem171.read(iprot);
        struct.cols.add(_elem171);
      }
    }
    struct.setColsIsSet(true);
  }
  if (incoming.get(1)) {
    struct.location=iprot.readString();
    struct.setLocationIsSet(true);
  }
  if (incoming.get(2)) {
    struct.inputFormat=iprot.readString();
    struct.setInputFormatIsSet(true);
  }
  if (incoming.get(3)) {
    struct.outputFormat=iprot.readString();
    struct.setOutputFormatIsSet(true);
  }
  if (incoming.get(4)) {
    struct.compressed=iprot.readBool();
    struct.setCompressedIsSet(true);
  }
  if (incoming.get(5)) {
    struct.numBuckets=iprot.readI32();
    struct.setNumBucketsIsSet(true);
  }
  if (incoming.get(6)) {
    struct.serdeInfo=new SerDeInfo();
    struct.serdeInfo.read(iprot);
    struct.setSerdeInfoIsSet(true);
  }
  if (incoming.get(7)) {
{
      org.apache.thrift.protocol.TList _list172=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.bucketCols=new ArrayList<String>(_list172.size);
      for (int _i173=0; _i173 < _list172.size; ++_i173) {
        String _elem174;
        _elem174=iprot.readString();
        struct.bucketCols.add(_elem174);
      }
    }
    struct.setBucketColsIsSet(true);
  }
  if (incoming.get(8)) {
{
      org.apache.thrift.protocol.TList _list175=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.sortCols=new ArrayList<Order>(_list175.size);
      for (int _i176=0; _i176 < _list175.size; ++_i176) {
        Order _elem177;
        _elem177=new Order();
        _elem177.read(iprot);
        struct.sortCols.add(_elem177);
      }
    }
    struct.setSortColsIsSet(true);
  }
  if (incoming.get(9)) {
{
      org.apache.thrift.protocol.TMap _map178=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.parameters=new HashMap<String,String>(2 * _map178.size);
      for (int _i179=0; _i179 < _map178.size; ++_i179) {
        String _key180;
        String _val181;
        _key180=iprot.readString();
        _val181=iprot.readString();
        struct.parameters.put(_key180,_val181);
      }
    }
    struct.setParametersIsSet(true);
  }
  if (incoming.get(10)) {
    struct.skewedInfo=new SkewedInfo();
    struct.skewedInfo.read(iprot);
    struct.setSkewedInfoIsSet(true);
  }
  if (incoming.get(11)) {
    struct.storedAsSubDirectories=iprot.readBool();
    struct.setStoredAsSubDirectoriesIsSet(true);
  }
}
