{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(12);
  if (incoming.get(0)) {
{
      org.apache.thrift.protocol.TList _list161=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.cols=new ArrayList<FieldSchema>(_list161.size);
      for (int _i162=0; _i162 < _list161.size; ++_i162) {
        FieldSchema _elem163;
        _elem163=new FieldSchema();
        _elem163.read(iprot);
        struct.cols.add(_elem163);
      }
    }
    struct.setColsIsSet(true);
  }
  if (incoming.get(1)) {
    struct.location=iprot.readString();
    struct.setLocationIsSet(true);
  }
  if (incoming.get(2)) {
    struct.inputFormat=iprot.readString();
    struct.setInputFormatIsSet(true);
  }
  if (incoming.get(3)) {
    struct.outputFormat=iprot.readString();
    struct.setOutputFormatIsSet(true);
  }
  if (incoming.get(4)) {
    struct.compressed=iprot.readBool();
    struct.setCompressedIsSet(true);
  }
  if (incoming.get(5)) {
    struct.numBuckets=iprot.readI32();
    struct.setNumBucketsIsSet(true);
  }
  if (incoming.get(6)) {
    struct.serdeInfo=new SerDeInfo();
    struct.serdeInfo.read(iprot);
    struct.setSerdeInfoIsSet(true);
  }
  if (incoming.get(7)) {
{
      org.apache.thrift.protocol.TList _list164=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.bucketCols=new ArrayList<String>(_list164.size);
      for (int _i165=0; _i165 < _list164.size; ++_i165) {
        String _elem166;
        _elem166=iprot.readString();
        struct.bucketCols.add(_elem166);
      }
    }
    struct.setBucketColsIsSet(true);
  }
  if (incoming.get(8)) {
{
      org.apache.thrift.protocol.TList _list167=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.sortCols=new ArrayList<Order>(_list167.size);
      for (int _i168=0; _i168 < _list167.size; ++_i168) {
        Order _elem169;
        _elem169=new Order();
        _elem169.read(iprot);
        struct.sortCols.add(_elem169);
      }
    }
    struct.setSortColsIsSet(true);
  }
  if (incoming.get(9)) {
{
      org.apache.thrift.protocol.TMap _map170=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.parameters=new HashMap<String,String>(2 * _map170.size);
      for (int _i171=0; _i171 < _map170.size; ++_i171) {
        String _key172;
        String _val173;
        _key172=iprot.readString();
        _val173=iprot.readString();
        struct.parameters.put(_key172,_val173);
      }
    }
    struct.setParametersIsSet(true);
  }
  if (incoming.get(10)) {
    struct.skewedInfo=new SkewedInfo();
    struct.skewedInfo.read(iprot);
    struct.setSkewedInfoIsSet(true);
  }
  if (incoming.get(11)) {
    struct.storedAsSubDirectories=iprot.readBool();
    struct.setStoredAsSubDirectoriesIsSet(true);
  }
}
