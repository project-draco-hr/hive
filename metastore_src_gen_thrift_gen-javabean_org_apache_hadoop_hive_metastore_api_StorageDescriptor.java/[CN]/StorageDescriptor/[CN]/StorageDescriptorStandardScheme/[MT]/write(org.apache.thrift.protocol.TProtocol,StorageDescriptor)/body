{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.cols != null) {
    oprot.writeFieldBegin(COLS_FIELD_DESC);
{
      oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,struct.cols.size()));
      for (      FieldSchema _iter153 : struct.cols) {
        _iter153.write(oprot);
      }
      oprot.writeListEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.location != null) {
    oprot.writeFieldBegin(LOCATION_FIELD_DESC);
    oprot.writeString(struct.location);
    oprot.writeFieldEnd();
  }
  if (struct.inputFormat != null) {
    oprot.writeFieldBegin(INPUT_FORMAT_FIELD_DESC);
    oprot.writeString(struct.inputFormat);
    oprot.writeFieldEnd();
  }
  if (struct.outputFormat != null) {
    oprot.writeFieldBegin(OUTPUT_FORMAT_FIELD_DESC);
    oprot.writeString(struct.outputFormat);
    oprot.writeFieldEnd();
  }
  oprot.writeFieldBegin(COMPRESSED_FIELD_DESC);
  oprot.writeBool(struct.compressed);
  oprot.writeFieldEnd();
  oprot.writeFieldBegin(NUM_BUCKETS_FIELD_DESC);
  oprot.writeI32(struct.numBuckets);
  oprot.writeFieldEnd();
  if (struct.serdeInfo != null) {
    oprot.writeFieldBegin(SERDE_INFO_FIELD_DESC);
    struct.serdeInfo.write(oprot);
    oprot.writeFieldEnd();
  }
  if (struct.bucketCols != null) {
    oprot.writeFieldBegin(BUCKET_COLS_FIELD_DESC);
{
      oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING,struct.bucketCols.size()));
      for (      String _iter154 : struct.bucketCols) {
        oprot.writeString(_iter154);
      }
      oprot.writeListEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.sortCols != null) {
    oprot.writeFieldBegin(SORT_COLS_FIELD_DESC);
{
      oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,struct.sortCols.size()));
      for (      Order _iter155 : struct.sortCols) {
        _iter155.write(oprot);
      }
      oprot.writeListEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.parameters != null) {
    oprot.writeFieldBegin(PARAMETERS_FIELD_DESC);
{
      oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,struct.parameters.size()));
      for (      Map.Entry<String,String> _iter156 : struct.parameters.entrySet()) {
        oprot.writeString(_iter156.getKey());
        oprot.writeString(_iter156.getValue());
      }
      oprot.writeMapEnd();
    }
    oprot.writeFieldEnd();
  }
  if (struct.skewedInfo != null) {
    if (struct.isSetSkewedInfo()) {
      oprot.writeFieldBegin(SKEWED_INFO_FIELD_DESC);
      struct.skewedInfo.write(oprot);
      oprot.writeFieldEnd();
    }
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
