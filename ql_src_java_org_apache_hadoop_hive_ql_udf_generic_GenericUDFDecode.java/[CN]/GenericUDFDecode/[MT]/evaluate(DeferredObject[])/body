{
  Object value=bytesOI.getPrimitiveJavaObject(arguments[0].get());
  if (value == null) {
    return null;
  }
  ByteBuffer wrappedBytes=ByteBuffer.wrap((byte[])value);
  CharBuffer decoded;
  if (decoder != null) {
    try {
      decoded=decoder.decode(wrappedBytes);
    }
 catch (    CharacterCodingException e) {
      throw new HiveException(e);
    }
  }
 else {
    String charSetName=PrimitiveObjectInspectorUtils.getString(arguments[1].get(),charsetOI);
    decoded=Charset.forName(charSetName).decode(wrappedBytes);
  }
  return decoded.toString();
}
