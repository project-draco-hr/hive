{
  commandLine=new GnuParser().parse(options,args);
  if (commandLine.hasOption(OptionConstants.HELP.getShortOpt())) {
    printUsage();
    return null;
  }
  String name=commandLine.getOptionValue(OptionConstants.NAME.getLongOpt());
  long findAppTimeoutMs=FIND_YARN_APP_TIMEOUT_MS;
  if (commandLine.hasOption(OptionConstants.FIND_APP_TIMEOUT.getLongOpt())) {
    findAppTimeoutMs=TimeUnit.MILLISECONDS.convert(Long.parseLong(commandLine.getOptionValue(OptionConstants.FIND_APP_TIMEOUT.getLongOpt())),TimeUnit.SECONDS);
  }
  Properties hiveConf;
  if (commandLine.hasOption(OptionConstants.HIVECONF.getLongOpt())) {
    hiveConf=commandLine.getOptionProperties(OptionConstants.HIVECONF.getLongOpt());
  }
 else {
    hiveConf=new Properties();
  }
  String outputFile=null;
  if (commandLine.hasOption(OptionConstants.OUTPUT_FILE.getLongOpt())) {
    outputFile=commandLine.getOptionValue(OptionConstants.OUTPUT_FILE.getLongOpt());
  }
  return new LlapStatusOptions(name,hiveConf,findAppTimeoutMs,outputFile);
}
