{
  Set<String> aliases=getParticipants(ctx);
  Map<String,Long> aliasToKnownSize=ctx.getAliasToKnownSize();
  Map<Path,ArrayList<String>> pathToAliases=ctx.getPathToAliases();
  Set<Path> unknownPaths=new HashSet<>();
  for (  Map.Entry<Path,ArrayList<String>> entry : pathToAliases.entrySet()) {
    for (    String alias : entry.getValue()) {
      if (aliases.contains(alias) && !aliasToKnownSize.containsKey(alias)) {
        unknownPaths.add(entry.getKey());
        break;
      }
    }
  }
  Path hdfsTmpDir=ctx.getHdfsTmpDir();
  Path localTmpDir=ctx.getLocalTmpDir();
  for (  Path path : unknownPaths) {
    if (FileUtils.isPathWithinSubtree(path,hdfsTmpDir) || FileUtils.isPathWithinSubtree(path,localTmpDir)) {
      FileSystem fs=path.getFileSystem(conf);
      long fileSize=fs.getContentSummary(path).getLength();
      for (      String alias : pathToAliases.get(path)) {
        Long length=aliasToKnownSize.get(alias);
        if (length == null) {
          aliasToKnownSize.put(alias,fileSize);
        }
      }
    }
  }
}
