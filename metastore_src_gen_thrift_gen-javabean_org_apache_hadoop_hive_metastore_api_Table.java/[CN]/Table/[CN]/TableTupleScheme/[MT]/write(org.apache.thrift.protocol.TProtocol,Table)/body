{
  TTupleProtocol oprot=(TTupleProtocol)prot;
  BitSet optionals=new BitSet();
  if (struct.isSetTableName()) {
    optionals.set(0);
  }
  if (struct.isSetDbName()) {
    optionals.set(1);
  }
  if (struct.isSetOwner()) {
    optionals.set(2);
  }
  if (struct.isSetCreateTime()) {
    optionals.set(3);
  }
  if (struct.isSetLastAccessTime()) {
    optionals.set(4);
  }
  if (struct.isSetRetention()) {
    optionals.set(5);
  }
  if (struct.isSetSd()) {
    optionals.set(6);
  }
  if (struct.isSetPartitionKeys()) {
    optionals.set(7);
  }
  if (struct.isSetParameters()) {
    optionals.set(8);
  }
  if (struct.isSetViewOriginalText()) {
    optionals.set(9);
  }
  if (struct.isSetViewExpandedText()) {
    optionals.set(10);
  }
  if (struct.isSetTableType()) {
    optionals.set(11);
  }
  if (struct.isSetPrivileges()) {
    optionals.set(12);
  }
  oprot.writeBitSet(optionals,13);
  if (struct.isSetTableName()) {
    oprot.writeString(struct.tableName);
  }
  if (struct.isSetDbName()) {
    oprot.writeString(struct.dbName);
  }
  if (struct.isSetOwner()) {
    oprot.writeString(struct.owner);
  }
  if (struct.isSetCreateTime()) {
    oprot.writeI32(struct.createTime);
  }
  if (struct.isSetLastAccessTime()) {
    oprot.writeI32(struct.lastAccessTime);
  }
  if (struct.isSetRetention()) {
    oprot.writeI32(struct.retention);
  }
  if (struct.isSetSd()) {
    struct.sd.write(oprot);
  }
  if (struct.isSetPartitionKeys()) {
{
      oprot.writeI32(struct.partitionKeys.size());
      for (      FieldSchema _iter199 : struct.partitionKeys) {
        _iter199.write(oprot);
      }
    }
  }
  if (struct.isSetParameters()) {
{
      oprot.writeI32(struct.parameters.size());
      for (      Map.Entry<String,String> _iter200 : struct.parameters.entrySet()) {
        oprot.writeString(_iter200.getKey());
        oprot.writeString(_iter200.getValue());
      }
    }
  }
  if (struct.isSetViewOriginalText()) {
    oprot.writeString(struct.viewOriginalText);
  }
  if (struct.isSetViewExpandedText()) {
    oprot.writeString(struct.viewExpandedText);
  }
  if (struct.isSetTableType()) {
    oprot.writeString(struct.tableType);
  }
  if (struct.isSetPrivileges()) {
    struct.privileges.write(oprot);
  }
}
