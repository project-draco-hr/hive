{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetTableName()).compareTo(other.isSetTableName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTableName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.tableName,other.tableName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetDbName()).compareTo(other.isSetDbName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDbName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.dbName,other.dbName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetOwner()).compareTo(other.isSetOwner());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetOwner()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.owner,other.owner);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetCreateTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.createTime,other.createTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetLastAccessTime()).compareTo(other.isSetLastAccessTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetLastAccessTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.lastAccessTime,other.lastAccessTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRetention()).compareTo(other.isSetRetention());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRetention()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.retention,other.retention);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetSd()).compareTo(other.isSetSd());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSd()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.sd,other.sd);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetPartitionKeys()).compareTo(other.isSetPartitionKeys());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetPartitionKeys()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.partitionKeys,other.partitionKeys);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetParameters()).compareTo(other.isSetParameters());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetParameters()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.parameters,other.parameters);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetViewOriginalText()).compareTo(other.isSetViewOriginalText());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetViewOriginalText()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.viewOriginalText,other.viewOriginalText);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetViewExpandedText()).compareTo(other.isSetViewExpandedText());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetViewExpandedText()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.viewExpandedText,other.viewExpandedText);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTableType()).compareTo(other.isSetTableType());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTableType()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.tableType,other.tableType);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetPrivileges()).compareTo(other.isSetPrivileges());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetPrivileges()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.privileges,other.privileges);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTemporary()).compareTo(other.isSetTemporary());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTemporary()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.temporary,other.temporary);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
