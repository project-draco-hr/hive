{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  Table typedOther=(Table)other;
  lastComparison=Boolean.valueOf(isSetTableName()).compareTo(typedOther.isSetTableName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTableName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.tableName,typedOther.tableName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetDbName()).compareTo(typedOther.isSetDbName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDbName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.dbName,typedOther.dbName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetOwner()).compareTo(typedOther.isSetOwner());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetOwner()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.owner,typedOther.owner);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetCreateTime()).compareTo(typedOther.isSetCreateTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetCreateTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.createTime,typedOther.createTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetLastAccessTime()).compareTo(typedOther.isSetLastAccessTime());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetLastAccessTime()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.lastAccessTime,typedOther.lastAccessTime);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetRetention()).compareTo(typedOther.isSetRetention());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetRetention()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.retention,typedOther.retention);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetSd()).compareTo(typedOther.isSetSd());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSd()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.sd,typedOther.sd);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetPartitionKeys()).compareTo(typedOther.isSetPartitionKeys());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetPartitionKeys()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.partitionKeys,typedOther.partitionKeys);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetParameters()).compareTo(typedOther.isSetParameters());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetParameters()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.parameters,typedOther.parameters);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetViewOriginalText()).compareTo(typedOther.isSetViewOriginalText());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetViewOriginalText()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.viewOriginalText,typedOther.viewOriginalText);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetViewExpandedText()).compareTo(typedOther.isSetViewExpandedText());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetViewExpandedText()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.viewExpandedText,typedOther.viewExpandedText);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTableType()).compareTo(typedOther.isSetTableType());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTableType()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.tableType,typedOther.tableType);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetPrivileges()).compareTo(typedOther.isSetPrivileges());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetPrivileges()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.privileges,typedOther.privileges);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetLinkTarget()).compareTo(typedOther.isSetLinkTarget());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetLinkTarget()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.linkTarget,typedOther.linkTarget);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetLinkTables()).compareTo(typedOther.isSetLinkTables());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetLinkTables()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.linkTables,typedOther.linkTables);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
