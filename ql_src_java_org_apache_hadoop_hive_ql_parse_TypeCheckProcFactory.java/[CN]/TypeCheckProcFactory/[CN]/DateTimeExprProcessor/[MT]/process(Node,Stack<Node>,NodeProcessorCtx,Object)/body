{
  TypeCheckCtx ctx=(TypeCheckCtx)procCtx;
  if (ctx.getError() != null) {
    return null;
  }
  ExprNodeDesc desc=TypeCheckProcFactory.processGByExpr(nd,procCtx);
  if (desc != null) {
    return desc;
  }
  ASTNode expr=(ASTNode)nd;
  String timeString=BaseSemanticAnalyzer.stripQuotes(expr.getText());
  try {
    if (expr.getType() == HiveParser.TOK_DATELITERAL) {
      PrimitiveTypeInfo typeInfo=TypeInfoFactory.dateTypeInfo;
      return new ExprNodeConstantDesc(typeInfo,Date.valueOf(timeString));
    }
    if (expr.getType() == HiveParser.TOK_TIMESTAMPLITERAL) {
      return new ExprNodeConstantDesc(TypeInfoFactory.timestampTypeInfo,Timestamp.valueOf(timeString));
    }
    throw new IllegalArgumentException("Invalid time literal type " + expr.getType());
  }
 catch (  Exception err) {
    throw new SemanticException("Unable to convert time literal '" + timeString + "' to time value.",err);
  }
}
