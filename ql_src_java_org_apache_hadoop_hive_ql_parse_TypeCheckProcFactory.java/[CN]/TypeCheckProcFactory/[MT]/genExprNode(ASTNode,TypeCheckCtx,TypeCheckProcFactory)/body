{
  Map<Rule,NodeProcessor> opRules=new LinkedHashMap<Rule,NodeProcessor>();
  opRules.put(new RuleRegExp("R1",HiveParser.TOK_NULL + "%"),tf.getNullExprProcessor());
  opRules.put(new RuleRegExp("R2",HiveParser.Number + "%|" + HiveParser.TinyintLiteral+ "%|"+ HiveParser.SmallintLiteral+ "%|"+ HiveParser.BigintLiteral+ "%|"+ HiveParser.DecimalLiteral+ "%"),tf.getNumExprProcessor());
  opRules.put(new RuleRegExp("R3",HiveParser.Identifier + "%|" + HiveParser.StringLiteral+ "%|"+ HiveParser.TOK_CHARSETLITERAL+ "%|"+ HiveParser.TOK_STRINGLITERALSEQUENCE+ "%|"+ "%|"+ HiveParser.KW_IF+ "%|"+ HiveParser.KW_CASE+ "%|"+ HiveParser.KW_WHEN+ "%|"+ HiveParser.KW_IN+ "%|"+ HiveParser.KW_ARRAY+ "%|"+ HiveParser.KW_MAP+ "%|"+ HiveParser.KW_STRUCT+ "%|"+ HiveParser.KW_EXISTS+ "%|"+ HiveParser.TOK_SUBQUERY_OP_NOTIN+ "%"),tf.getStrExprProcessor());
  opRules.put(new RuleRegExp("R4",HiveParser.KW_TRUE + "%|" + HiveParser.KW_FALSE+ "%"),tf.getBoolExprProcessor());
  opRules.put(new RuleRegExp("R5",HiveParser.TOK_DATELITERAL + "%|" + HiveParser.TOK_TIMESTAMPLITERAL+ "%"),tf.getDateTimeExprProcessor());
  opRules.put(new RuleRegExp("R6",HiveParser.TOK_INTERVAL_YEAR_MONTH_LITERAL + "%|" + HiveParser.TOK_INTERVAL_DAY_TIME_LITERAL+ "%|"+ HiveParser.TOK_INTERVAL_YEAR_LITERAL+ "%|"+ HiveParser.TOK_INTERVAL_MONTH_LITERAL+ "%|"+ HiveParser.TOK_INTERVAL_DAY_LITERAL+ "%|"+ HiveParser.TOK_INTERVAL_HOUR_LITERAL+ "%|"+ HiveParser.TOK_INTERVAL_MINUTE_LITERAL+ "%|"+ HiveParser.TOK_INTERVAL_SECOND_LITERAL+ "%"),tf.getIntervalExprProcessor());
  opRules.put(new RuleRegExp("R7",HiveParser.TOK_TABLE_OR_COL + "%"),tf.getColumnExprProcessor());
  opRules.put(new RuleRegExp("R8",HiveParser.TOK_SUBQUERY_OP + "%"),tf.getSubQueryExprProcessor());
  Dispatcher disp=new DefaultRuleDispatcher(tf.getDefaultExprProcessor(),opRules,tcCtx);
  GraphWalker ogw=new DefaultGraphWalker(disp);
  ArrayList<Node> topNodes=Lists.<Node>newArrayList(expr);
  HashMap<Node,Object> nodeOutputs=new LinkedHashMap<Node,Object>();
  ogw.startWalking(topNodes,nodeOutputs);
  return convert(nodeOutputs);
}
