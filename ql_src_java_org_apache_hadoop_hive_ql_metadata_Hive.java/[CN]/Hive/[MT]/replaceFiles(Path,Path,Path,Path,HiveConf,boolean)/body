{
  try {
    FileSystem destFs=destf.getFileSystem(conf);
    FileStatus[] srcs;
    FileSystem srcFs;
    try {
      srcFs=srcf.getFileSystem(conf);
      srcs=srcFs.globStatus(srcf);
    }
 catch (    IOException e) {
      throw new HiveException("Getting globStatus " + srcf.toString(),e);
    }
    if (srcs == null) {
      LOG.info("No sources specified to move: " + srcf);
      return;
    }
    if (oldPath != null) {
      boolean oldPathDeleted=false;
      boolean isOldPathUnderDestf=false;
      FileStatus[] statuses=null;
      try {
        FileSystem fs2=oldPath.getFileSystem(conf);
        statuses=fs2.listStatus(oldPath,FileUtils.HIDDEN_FILES_PATH_FILTER);
        isOldPathUnderDestf=FileUtils.isSubDir(oldPath,destf,fs2);
        if (isOldPathUnderDestf) {
          oldPathDeleted=trashFiles(fs2,statuses,conf);
        }
      }
 catch (      IOException e) {
        if (isOldPathUnderDestf) {
          throw new HiveException("Directory " + oldPath.toString() + " could not be cleaned up.",e);
        }
 else {
          LOG.warn("Directory " + oldPath.toString() + " cannot be cleaned: "+ e,e);
        }
      }
      if (statuses != null && statuses.length > 0) {
        if (isOldPathUnderDestf && !oldPathDeleted) {
          throw new HiveException("Destination directory " + destf + " has not be cleaned up.");
        }
      }
    }
    boolean inheritPerms=HiveConf.getBoolVar(conf,HiveConf.ConfVars.HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS);
    boolean destfExist=FileUtils.mkdir(destFs,destf,inheritPerms,conf);
    if (!destfExist) {
      throw new IOException("Directory " + destf.toString() + " does not exist and could not be created.");
    }
    if (srcs.length == 1 && srcs[0].isDirectory()) {
      if (!moveFile(conf,srcs[0].getPath(),destf,true,isSrcLocal)) {
        throw new IOException("Error moving: " + srcf + " into: "+ destf);
      }
    }
 else {
      for (      FileStatus src : srcs) {
        if (!moveFile(conf,src.getPath(),new Path(destf,src.getPath().getName()),true,isSrcLocal)) {
          throw new IOException("Error moving: " + srcf + " into: "+ destf);
        }
      }
    }
  }
 catch (  IOException e) {
    throw new HiveException(e.getMessage(),e);
  }
}
