{
  FileStatus[] srcs;
  try {
    srcs=fs.globStatus(srcf);
  }
 catch (  IOException e) {
    throw new HiveException("addFiles: filesystem error in check phase",e);
  }
  if (srcs == null) {
    LOG.info("No sources specified to move: " + srcf);
    return;
  }
  checkPaths(fs,srcs,destf,true);
  try {
    fs.mkdirs(tmppath);
    for (int i=0; i < srcs.length; i++) {
      FileStatus[] items=fs.listStatus(srcs[i].getPath());
      for (int j=0; j < items.length; j++) {
        if (!fs.rename(items[j].getPath(),new Path(tmppath,items[j].getPath().getName()))) {
          throw new HiveException("Error moving: " + items[j].getPath() + " into: "+ tmppath);
        }
      }
    }
    boolean b=fs.delete(destf,true);
    LOG.debug("Deleting:" + destf.toString() + ",Status:"+ b);
    if (!fs.mkdirs(destf.getParent())) {
      throw new HiveException("Unable to create destination directory: " + destf.getParent().toString());
    }
    b=fs.rename(tmppath,destf);
    if (!b) {
      throw new HiveException("Unable to move results from " + tmppath + " to destination directory: "+ destf.getParent().toString());
    }
    LOG.debug("Renaming:" + tmppath.toString() + ",Status:"+ b);
  }
 catch (  IOException e) {
    throw new HiveException("replaceFiles: error while moving files from " + tmppath + " to "+ destf+ "!!!",e);
  }
}
