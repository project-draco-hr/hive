{
  List<Path> newFiles=new ArrayList<Path>();
  Table tbl=getTable(tableName);
  HiveConf sessionConf=SessionState.getSessionConf();
  if (replace) {
    Path tableDest=tbl.getPath();
    replaceFiles(tableDest,loadPath,tableDest,tableDest,sessionConf,isSrcLocal);
  }
 else {
    FileSystem fs;
    try {
      fs=tbl.getDataLocation().getFileSystem(sessionConf);
      copyFiles(sessionConf,loadPath,tbl.getPath(),fs,isSrcLocal,isAcid,newFiles);
    }
 catch (    IOException e) {
      throw new HiveException("addFiles: filesystem error in check phase",e);
    }
  }
  if (!this.getConf().getBoolVar(HiveConf.ConfVars.HIVESTATSAUTOGATHER)) {
    StatsSetupConst.setBasicStatsState(tbl.getParameters(),StatsSetupConst.FALSE);
  }
 else {
    tbl.getParameters().put(StatsSetupConst.STATS_GENERATED_VIA_STATS_TASK,"true");
  }
  StatsSetupConst.clearColumnStatsState(tbl.getParameters());
  try {
    if (isSkewedStoreAsSubdir) {
      SkewedInfo skewedInfo=tbl.getSkewedInfo();
      Map<List<String>,String> skewedColValueLocationMaps=constructListBucketingLocationMap(tbl.getPath(),skewedInfo);
      skewedInfo.setSkewedColValueLocationMaps(skewedColValueLocationMaps);
    }
  }
 catch (  IOException e) {
    LOG.error(StringUtils.stringifyException(e));
    throw new HiveException(e);
  }
  try {
    alterTable(tableName,tbl);
  }
 catch (  InvalidOperationException e) {
    throw new HiveException(e);
  }
  fireInsertEvent(tbl,null,newFiles);
}
