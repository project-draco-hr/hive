{
  if (s == null) {
    return getPath();
  }
 else {
    int bcount=getBucketCount();
    if (bcount == 0) {
      return getPath();
    }
    Dimension d=s.getSampleDimension();
    if (!d.getDimensionId().equals(table.getBucketingDimensionId())) {
      return getPath();
    }
    int scount=s.getSampleFraction();
    ArrayList<Path> ret=new ArrayList<Path>();
    if (bcount == scount) {
      ret.add(getBucketPath(s.getSampleNum() - 1));
    }
 else     if (bcount < scount) {
      if ((scount / bcount) * bcount != scount) {
        throw new HiveException("Sample Count" + scount + " is not a multiple of bucket count "+ bcount+ " for table "+ table.getName());
      }
      ret.add(getBucketPath((s.getSampleNum() - 1) % bcount));
    }
 else     if (bcount > scount) {
      if ((bcount / scount) * scount != bcount) {
        throw new HiveException("Sample Count" + scount + " is not a divisor of bucket count "+ bcount+ " for table "+ table.getName());
      }
      for (int i=0; i < bcount / scount; i++) {
        ret.add(getBucketPath(i * scount + (s.getSampleNum() - 1)));
      }
    }
    return (ret.toArray(new Path[ret.size()]));
  }
}
