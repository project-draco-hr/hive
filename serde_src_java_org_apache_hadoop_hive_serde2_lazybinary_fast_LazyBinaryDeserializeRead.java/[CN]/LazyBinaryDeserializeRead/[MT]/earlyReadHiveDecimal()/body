{
  LazyBinaryUtils.readVInt(bytes,offset,tempVInt);
  int saveStart=offset;
  offset+=tempVInt.length;
  if (offset >= end) {
    warnBeyondEof();
  }
  LazyBinaryUtils.readVInt(bytes,offset,tempVInt);
  offset+=tempVInt.length;
  if (offset >= end) {
    warnBeyondEof();
  }
  offset+=tempVInt.value;
  if (offset > end) {
    warnBeyondEof();
  }
  int length=offset - saveStart;
  if (tempHiveDecimalWritable == null) {
    tempHiveDecimalWritable=new HiveDecimalWritable();
  }
  LazyBinarySerDe.setFromBytes(bytes,saveStart,length,tempHiveDecimalWritable);
  saveDecimalTypeInfo=(DecimalTypeInfo)primitiveTypeInfos[fieldIndex];
  int precision=saveDecimalTypeInfo.getPrecision();
  int scale=saveDecimalTypeInfo.getScale();
  saveDecimal=tempHiveDecimalWritable.getHiveDecimal(precision,scale);
  fieldIndex++;
  if (fieldIndex < fieldCount) {
    if ((fieldIndex % 8) == 0) {
      if (offset >= end) {
        warnBeyondEof();
      }
      nullByte=bytes[offset++];
    }
  }
  return (saveDecimal == null);
}
