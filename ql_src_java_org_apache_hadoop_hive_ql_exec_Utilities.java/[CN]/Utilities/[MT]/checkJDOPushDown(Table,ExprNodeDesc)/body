{
  if (expr instanceof ExprNodeConstantDesc) {
    Object value=((ExprNodeConstantDesc)expr).getValue();
    if (value instanceof String) {
      return null;
    }
    return "Constant " + value + " is not string type";
  }
 else   if (expr instanceof ExprNodeColumnDesc) {
    TypeInfo type=expr.getTypeInfo();
    if (type.getTypeName().equals(Constants.STRING_TYPE_NAME)) {
      String colName=((ExprNodeColumnDesc)expr).getColumn();
      for (      FieldSchema fs : tab.getPartCols()) {
        if (fs.getName().equals(colName)) {
          if (fs.getType().equals(Constants.STRING_TYPE_NAME)) {
            return null;
          }
          return "Partition column " + fs.getName() + " is not string type";
        }
      }
      assert(false);
    }
 else {
      return "Column " + expr.getExprString() + " is not string type";
    }
  }
 else   if (expr instanceof ExprNodeGenericFuncDesc) {
    ExprNodeGenericFuncDesc funcDesc=(ExprNodeGenericFuncDesc)expr;
    GenericUDF func=funcDesc.getGenericUDF();
    if (!supportedJDOFuncs(func)) {
      return "Expression " + expr.getExprString() + " cannot be evaluated";
    }
    List<ExprNodeDesc> children=funcDesc.getChildExprs();
    for (    ExprNodeDesc child : children) {
      String message=checkJDOPushDown(tab,child);
      if (message != null) {
        return message;
      }
    }
    return null;
  }
  return "Expression " + expr.getExprString() + " cannot be evaluated";
}
