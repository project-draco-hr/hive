{
  TableDesc tableDesc=work.getAliasToPartnInfo().get(alias).getTableDesc();
  if (tableDesc.isNonNative()) {
    return null;
  }
  Properties props=tableDesc.getProperties();
  HiveOutputFormat outFileFormat=HiveFileFormatUtils.getHiveOutputFormat(job,tableDesc);
  Path newPath=createEmptyFile(hiveScratchDir,outFileFormat,job,props,false);
  if (LOG.isInfoEnabled()) {
    LOG.info("Changed input file for alias " + alias + " to "+ newPath);
  }
  LinkedHashMap<String,ArrayList<String>> pathToAliases=work.getPathToAliases();
  ArrayList<String> newList=new ArrayList<String>();
  newList.add(alias);
  pathToAliases.put(newPath.toUri().toString(),newList);
  work.setPathToAliases(pathToAliases);
  LinkedHashMap<String,PartitionDesc> pathToPartitionInfo=work.getPathToPartitionInfo();
  PartitionDesc pDesc=work.getAliasToPartnInfo().get(alias).clone();
  pathToPartitionInfo.put(newPath.toUri().toString(),pDesc);
  work.setPathToPartitionInfo(pathToPartitionInfo);
  return newPath;
}
