{
  String strPath=path.toString();
  PartitionDesc partDesc=work.getPathToPartitionInfo().get(strPath);
  if (partDesc.getTableDesc().isNonNative()) {
    return path;
  }
  Properties props=SerDeUtils.createOverlayedProperties(partDesc.getTableDesc().getProperties(),partDesc.getProperties());
  HiveOutputFormat outFileFormat=HiveFileFormatUtils.getHiveOutputFormat(job,partDesc);
  boolean oneRow=partDesc.getInputFileFormatClass() == OneNullRowInputFormat.class;
  Path newPath=createEmptyFile(hiveScratchDir,outFileFormat,job,sequenceNumber,props,oneRow);
  if (LOG.isInfoEnabled()) {
    LOG.info("Changed input file " + strPath + " to empty file "+ newPath);
  }
  String strNewPath=newPath.toString();
  LinkedHashMap<String,ArrayList<String>> pathToAliases=work.getPathToAliases();
  pathToAliases.put(strNewPath,pathToAliases.get(strPath));
  pathToAliases.remove(strPath);
  work.setPathToAliases(pathToAliases);
  LinkedHashMap<String,PartitionDesc> pathToPartitionInfo=work.getPathToPartitionInfo();
  pathToPartitionInfo.put(strNewPath,pathToPartitionInfo.get(strPath));
  pathToPartitionInfo.remove(strPath);
  work.setPathToPartitionInfo(pathToPartitionInfo);
  return newPath;
}
