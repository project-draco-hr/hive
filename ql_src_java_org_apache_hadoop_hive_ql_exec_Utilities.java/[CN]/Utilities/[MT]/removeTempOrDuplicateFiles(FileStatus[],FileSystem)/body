{
  if (items == null || fs == null) {
    return null;
  }
  HashMap<String,FileStatus> taskIdToFile=new HashMap<String,FileStatus>();
  for (  FileStatus one : items) {
    if (isTempPath(one)) {
      if (!fs.delete(one.getPath(),true)) {
        throw new IOException("Unable to delete tmp file: " + one.getPath());
      }
    }
 else {
      String taskId=getPrefixedTaskIdFromFilename(one.getPath().getName());
      FileStatus otherFile=taskIdToFile.get(taskId);
      if (otherFile == null) {
        taskIdToFile.put(taskId,one);
      }
 else {
        FileStatus toDelete=null;
        if (otherFile.getLen() >= one.getLen()) {
          toDelete=one;
        }
 else {
          toDelete=otherFile;
          taskIdToFile.put(taskId,one);
        }
        long len1=toDelete.getLen();
        long len2=taskIdToFile.get(taskId).getLen();
        if (!fs.delete(toDelete.getPath(),true)) {
          throw new IOException("Unable to delete duplicate file: " + toDelete.getPath() + ". Existing file: "+ taskIdToFile.get(taskId).getPath());
        }
 else {
          LOG.warn("Duplicate taskid file removed: " + toDelete.getPath() + " with length "+ len1+ ". Existing file: "+ taskIdToFile.get(taskId).getPath()+ " with length "+ len2);
        }
      }
    }
  }
  return taskIdToFile;
}
