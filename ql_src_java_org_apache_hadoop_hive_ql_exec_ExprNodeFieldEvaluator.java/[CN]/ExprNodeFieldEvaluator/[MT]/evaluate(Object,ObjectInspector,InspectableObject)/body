{
  assert(result != null);
  leftEvaluator.evaluate(row,rowInspector,leftInspectableObject);
  if (field == null) {
    evaluateInspector(rowInspector);
  }
  result.oi=resultObjectInspector;
  if (desc.getIsList()) {
    List<?> list=((ListObjectInspector)leftInspectableObject.oi).getList(leftInspectableObject.o);
    if (list == null) {
      result.o=null;
    }
 else {
      List<Object> r=new ArrayList<Object>(list.size());
      for (int i=0; i < list.size(); i++) {
        r.add(structObjectInspector.getStructFieldData(list.get(i),field));
      }
      result.o=r;
    }
  }
 else {
    result.o=structObjectInspector.getStructFieldData(leftInspectableObject.o,field);
  }
}
