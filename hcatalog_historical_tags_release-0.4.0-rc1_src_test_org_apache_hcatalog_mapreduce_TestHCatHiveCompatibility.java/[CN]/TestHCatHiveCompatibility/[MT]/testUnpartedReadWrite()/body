{
  driver.run("drop table junit_unparted_noisd");
  String createTable="create table junit_unparted_noisd(a int) stored as RCFILE";
  int retCode=driver.run(createTable).getResponseCode();
  if (retCode != 0) {
    throw new IOException("Failed to create table.");
  }
  Table table=client.getTable("default","junit_unparted_noisd");
  assertTrue(table.getSd().getInputFormat().equals(HCatConstants.HIVE_RCFILE_IF_CLASS));
  PigServer server=new PigServer(ExecType.LOCAL,props);
  UDFContext.getUDFContext().setClientSystemProps();
  server.registerQuery("A = load '" + fullFileName + "' as (a:int);");
  server.registerQuery("store A into 'default.junit_unparted_noisd' using org.apache.hcatalog.pig.HCatStorer();");
  server.registerQuery("B = load 'default.junit_unparted_noisd' using " + HCatLoader.class.getName() + "();");
  Iterator<Tuple> itr=server.openIterator("B");
  int i=0;
  while (itr.hasNext()) {
    Tuple t=itr.next();
    assertEquals(1,t.size());
    assertEquals(t.get(0),i);
    i++;
  }
  assertFalse(itr.hasNext());
  assertEquals(11,i);
  Table table2=client.getTable("default","junit_unparted_noisd");
  assertTrue(table2.getSd().getInputFormat().equals(HCatConstants.HIVE_RCFILE_IF_CLASS));
  driver.run("drop table junit_unparted_noisd");
}
