{
  OptiqUDFInfo udfInfo=new OptiqUDFInfo();
  udfInfo.udfName=hiveUdfName;
  udfInfo.returnTypeInference=ReturnTypes.explicit(optiqRetType);
  udfInfo.operandTypeInference=InferTypes.explicit(optiqArgTypes);
  ImmutableList.Builder<SqlTypeFamily> typeFamilyBuilder=new ImmutableList.Builder<SqlTypeFamily>();
  for (  RelDataType at : optiqArgTypes) {
    typeFamilyBuilder.add(Util.first(at.getSqlTypeName().getFamily(),SqlTypeFamily.ANY));
  }
  udfInfo.operandTypeChecker=OperandTypes.family(typeFamilyBuilder.build());
  udfInfo.argTypes=ImmutableList.<RelDataType>copyOf(optiqArgTypes);
  udfInfo.retType=optiqRetType;
  return udfInfo;
}
