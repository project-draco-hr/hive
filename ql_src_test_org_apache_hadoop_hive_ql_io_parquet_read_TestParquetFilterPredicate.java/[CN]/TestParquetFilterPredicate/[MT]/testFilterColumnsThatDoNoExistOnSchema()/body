{
  MessageType schema=MessageTypeParser.parseMessageType("message test { required int32 a; required binary stinger; }");
  SearchArgument sarg=SearchArgumentFactory.newBuilder().startNot().startOr().isNull("a",PredicateLeaf.Type.LONG).between("y",PredicateLeaf.Type.LONG,10L,20L).in("z",PredicateLeaf.Type.LONG,1L,2L,3L).nullSafeEquals("a",PredicateLeaf.Type.STRING,"stinger").end().end().build();
  FilterPredicate p=ParquetFilterPredicateConverter.toFilterPredicate(sarg,schema);
  String expected="and(not(eq(a, null)), not(eq(a, Binary{\"stinger\"})))";
  assertEquals(expected,p.toString());
}
