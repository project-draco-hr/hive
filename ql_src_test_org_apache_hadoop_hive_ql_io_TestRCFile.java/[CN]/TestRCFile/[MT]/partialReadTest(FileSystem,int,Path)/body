{
  LOG.debug("reading " + count + " records");
  long start=System.currentTimeMillis();
  RCFile.setSkipColumnIDs(conf,new int[]{0,1,4,5,6,7});
  RCFile.Reader reader=new RCFile.Reader(fs,file,conf);
  LongWritable rowID=new LongWritable();
  BytesRefArrayWritable cols=new BytesRefArrayWritable();
  while (reader.next(rowID)) {
    reader.getCurrentRow(cols);
    Object row=serDe.deserialize(cols);
    StructObjectInspector oi=(StructObjectInspector)serDe.getObjectInspector();
    List<? extends StructField> fieldRefs=oi.getAllStructFieldRefs();
    assertEquals(8,fieldRefs.size());
    for (int i=0; i < fieldRefs.size(); i++) {
      Object fieldData=oi.getStructFieldData(row,fieldRefs.get(i));
      assertEquals("Field " + i,fieldData,expectedPartitalFieldsData[i]);
    }
    assertEquals(BytesRefArrayWritable.class,serDe.getSerializedClass());
    BytesRefArrayWritable serializedBytes=(BytesRefArrayWritable)serDe.serialize(row,oi);
    assertEquals("Serialized data",patialS,serializedBytes);
  }
  reader.close();
  long cost=System.currentTimeMillis() - start;
  LOG.debug("reading fully costs:" + cost + " milliseconds");
}
