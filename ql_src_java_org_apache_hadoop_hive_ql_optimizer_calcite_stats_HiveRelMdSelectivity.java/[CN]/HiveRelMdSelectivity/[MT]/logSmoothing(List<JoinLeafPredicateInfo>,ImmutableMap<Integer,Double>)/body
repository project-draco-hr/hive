{
  int noOfPE=peLst.size();
  double ndvCrossProduct=getMaxNDVForJoinSelectivity(peLst.get(0),colStatMap);
  if (noOfPE > 1) {
    double maxNDVSoFar=ndvCrossProduct;
    double ndvToBeSmoothed;
    double tmpNDV;
    for (int i=1; i < noOfPE; i++) {
      tmpNDV=getMaxNDVForJoinSelectivity(peLst.get(i),colStatMap);
      if (tmpNDV > maxNDVSoFar) {
        ndvToBeSmoothed=maxNDVSoFar;
        maxNDVSoFar=tmpNDV;
        ndvCrossProduct=(ndvCrossProduct / ndvToBeSmoothed) * tmpNDV;
      }
 else {
        ndvToBeSmoothed=tmpNDV;
      }
      if (ndvToBeSmoothed > 3)       ndvCrossProduct*=Math.log(ndvToBeSmoothed);
 else       ndvCrossProduct*=ndvToBeSmoothed;
    }
  }
  return ndvCrossProduct;
}
