{
  Set<String> toRemove=new HashSet<String>();
  Set<String> toAdd=new HashSet<String>();
  String pattern="([^\\.]*)\\.\\$\\{([^}]*)}";
  Pattern r=Pattern.compile(pattern);
  for (  String test : tests) {
    Matcher m=r.matcher(test);
    if (m.find()) {
      toRemove.add(test);
      logger.info("Expanding qfile property: " + test);
      String propName=m.group(1);
      String propValue=m.group(2);
      Properties props=propMap.get(propName);
      if (props == null) {
        logger.warn("No properties found for : " + propName);
        throw new IllegalArgumentException("No properties found for : " + propName);
      }
      String result=(String)props.get(propValue);
      if (result == null || result.isEmpty()) {
        logger.warn("No properties found in file: " + propName + " for property: "+ propValue);
        throw new IllegalArgumentException("No propertifies found in file: " + propName + " for property: "+ propValue);
      }
      Iterable<String> splits=TEST_SPLITTER.split(result);
      for (      String split : splits) {
        toAdd.add(split);
      }
    }
  }
  tests.removeAll(toRemove);
  tests.addAll(toAdd);
}
