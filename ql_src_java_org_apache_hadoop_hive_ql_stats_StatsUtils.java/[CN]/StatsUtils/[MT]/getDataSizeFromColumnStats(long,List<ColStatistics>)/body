{
  long result=0;
  if (numRows <= 0) {
    return result;
  }
  for (  ColStatistics cs : colStats) {
    if (cs != null) {
      String colType=cs.getColumnType();
      long nonNullCount=numRows - cs.getNumNulls();
      double sizeOf=0;
      if (colType.equalsIgnoreCase(serdeConstants.TINYINT_TYPE_NAME) || colType.equalsIgnoreCase(serdeConstants.SMALLINT_TYPE_NAME) || colType.equalsIgnoreCase(serdeConstants.INT_TYPE_NAME)|| colType.equalsIgnoreCase(serdeConstants.BIGINT_TYPE_NAME)|| colType.equalsIgnoreCase(serdeConstants.BOOLEAN_TYPE_NAME)|| colType.equalsIgnoreCase(serdeConstants.FLOAT_TYPE_NAME)|| colType.equalsIgnoreCase(serdeConstants.DOUBLE_TYPE_NAME)) {
        sizeOf=cs.getAvgColLen();
      }
 else       if (colType.equalsIgnoreCase(serdeConstants.STRING_TYPE_NAME) || colType.startsWith(serdeConstants.VARCHAR_TYPE_NAME) || colType.startsWith(serdeConstants.CHAR_TYPE_NAME)) {
        int acl=(int)Math.round(cs.getAvgColLen());
        sizeOf=JavaDataModel.get().lengthForStringOfLength(acl);
      }
 else       if (colType.equalsIgnoreCase(serdeConstants.BINARY_TYPE_NAME)) {
        int acl=(int)Math.round(cs.getAvgColLen());
        sizeOf=JavaDataModel.get().lengthForByteArrayOfSize(acl);
      }
 else       if (colType.equalsIgnoreCase(serdeConstants.TIMESTAMP_TYPE_NAME)) {
        sizeOf=JavaDataModel.get().lengthOfTimestamp();
      }
 else       if (colType.startsWith(serdeConstants.DECIMAL_TYPE_NAME)) {
        sizeOf=JavaDataModel.get().lengthOfDecimal();
      }
 else       if (colType.equalsIgnoreCase(serdeConstants.DATE_TYPE_NAME)) {
        sizeOf=JavaDataModel.get().lengthOfDate();
      }
 else {
        sizeOf=cs.getAvgColLen();
      }
      result=safeAdd(result,safeMult(nonNullCount,sizeOf));
    }
  }
  return result;
}
