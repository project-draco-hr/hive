{
  Range range=null;
  String partVal;
  if (colType.equalsIgnoreCase(serdeConstants.TINYINT_TYPE_NAME) || colType.equalsIgnoreCase(serdeConstants.SMALLINT_TYPE_NAME) || colType.equalsIgnoreCase(serdeConstants.INT_TYPE_NAME)|| colType.equalsIgnoreCase(serdeConstants.BIGINT_TYPE_NAME)) {
    long min=Long.MAX_VALUE;
    long max=Long.MIN_VALUE;
    for (    Partition partition : partitions) {
      partVal=partition.getSpec().get(partColName);
      if (partVal.equals(defaultPartName)) {
        continue;
      }
 else {
        long value=Long.parseLong(partVal);
        min=Math.min(min,value);
        max=Math.max(max,value);
      }
    }
    range=new Range(min,max);
  }
 else   if (colType.equalsIgnoreCase(serdeConstants.FLOAT_TYPE_NAME) || colType.equalsIgnoreCase(serdeConstants.DOUBLE_TYPE_NAME)) {
    double min=Double.MAX_VALUE;
    double max=Double.MIN_VALUE;
    for (    Partition partition : partitions) {
      partVal=partition.getSpec().get(partColName);
      if (partVal.equals(defaultPartName)) {
        continue;
      }
 else {
        double value=Double.parseDouble(partVal);
        min=Math.min(min,value);
        max=Math.max(max,value);
      }
    }
    range=new Range(min,max);
  }
 else   if (colType.startsWith(serdeConstants.DECIMAL_TYPE_NAME)) {
    double min=Double.MAX_VALUE;
    double max=Double.MIN_VALUE;
    for (    Partition partition : partitions) {
      partVal=partition.getSpec().get(partColName);
      if (partVal.equals(defaultPartName)) {
        continue;
      }
 else {
        double value=new BigDecimal(partVal).doubleValue();
        min=Math.min(min,value);
        max=Math.max(max,value);
      }
    }
    range=new Range(min,max);
  }
 else {
    return null;
  }
  return range;
}
