{
  if (oi instanceof WritableStringObjectInspector) {
    WritableStringObjectInspector woi=(WritableStringObjectInspector)oi;
    return JavaDataModel.get().lengthForStringOfLength(woi.getPrimitiveWritableObject(value).getLength());
  }
 else   if (oi instanceof WritableBinaryObjectInspector) {
    WritableBinaryObjectInspector woi=(WritableBinaryObjectInspector)oi;
    return JavaDataModel.get().lengthForByteArrayOfSize(woi.getPrimitiveWritableObject(value).getLength());
  }
 else   if (oi instanceof WritableBooleanObjectInspector) {
    return JavaDataModel.get().primitive1();
  }
 else   if (oi instanceof WritableByteObjectInspector) {
    return JavaDataModel.get().primitive1();
  }
 else   if (oi instanceof WritableDateObjectInspector) {
    return JavaDataModel.get().lengthOfDate();
  }
 else   if (oi instanceof WritableDoubleObjectInspector) {
    return JavaDataModel.get().primitive2();
  }
 else   if (oi instanceof WritableFloatObjectInspector) {
    return JavaDataModel.get().primitive1();
  }
 else   if (oi instanceof WritableHiveDecimalObjectInspector) {
    return JavaDataModel.get().lengthOfDecimal();
  }
 else   if (oi instanceof WritableIntObjectInspector) {
    return JavaDataModel.get().primitive1();
  }
 else   if (oi instanceof WritableLongObjectInspector) {
    return JavaDataModel.get().primitive2();
  }
 else   if (oi instanceof WritableShortObjectInspector) {
    return JavaDataModel.get().primitive1();
  }
 else   if (oi instanceof WritableTimestampObjectInspector) {
    return JavaDataModel.get().lengthOfTimestamp();
  }
  return 0;
}
