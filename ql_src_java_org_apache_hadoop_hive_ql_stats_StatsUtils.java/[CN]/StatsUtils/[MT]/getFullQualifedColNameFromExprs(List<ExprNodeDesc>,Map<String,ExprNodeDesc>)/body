{
  List<String> result=Lists.newArrayList();
  if (keyExprs != null) {
    for (    ExprNodeDesc end : keyExprs) {
      String outColName=null;
      for (      Map.Entry<String,ExprNodeDesc> entry : map.entrySet()) {
        if (entry.getValue().isSame(end)) {
          outColName=entry.getKey();
        }
      }
      if (end instanceof ExprNodeColumnDesc) {
        ExprNodeColumnDesc encd=(ExprNodeColumnDesc)end;
        if (outColName == null) {
          outColName=encd.getColumn();
        }
        String tabAlias=encd.getTabAlias();
        outColName=stripPrefixFromColumnName(outColName);
        result.add(getFullyQualifiedColumnName(tabAlias,outColName));
      }
 else       if (end instanceof ExprNodeGenericFuncDesc) {
        ExprNodeGenericFuncDesc enf=(ExprNodeGenericFuncDesc)end;
        List<String> cols=getFullQualifedColNameFromExprs(enf.getChildren(),map);
        String joinedStr=Joiner.on(".").skipNulls().join(cols);
        result.add(joinedStr);
      }
 else       if (end instanceof ExprNodeConstantDesc) {
        ExprNodeConstantDesc encd=(ExprNodeConstantDesc)end;
        result.add(encd.getValue().toString());
      }
    }
  }
  return result;
}
