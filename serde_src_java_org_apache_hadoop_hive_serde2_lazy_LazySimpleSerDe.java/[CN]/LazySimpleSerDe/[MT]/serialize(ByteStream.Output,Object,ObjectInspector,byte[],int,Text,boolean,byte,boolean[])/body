{
  if (obj == null) {
    out.write(nullSequence.getBytes(),0,nullSequence.getLength());
    return;
  }
  char separator;
  List<?> list;
switch (objInspector.getCategory()) {
case PRIMITIVE:
    LazyUtils.writePrimitiveUTF8(out,obj,(PrimitiveObjectInspector)objInspector,escaped,escapeChar,needsEscape);
  return;
case LIST:
separator=(char)separators[level];
ListObjectInspector loi=(ListObjectInspector)objInspector;
list=loi.getList(obj);
ObjectInspector eoi=loi.getListElementObjectInspector();
if (list == null) {
out.write(nullSequence.getBytes(),0,nullSequence.getLength());
}
 else {
for (int i=0; i < list.size(); i++) {
if (i > 0) {
out.write(separator);
}
serialize(out,list.get(i),eoi,separators,level + 1,nullSequence,escaped,escapeChar,needsEscape);
}
}
return;
case MAP:
separator=(char)separators[level];
char keyValueSeparator=(char)separators[level + 1];
MapObjectInspector moi=(MapObjectInspector)objInspector;
ObjectInspector koi=moi.getMapKeyObjectInspector();
ObjectInspector voi=moi.getMapValueObjectInspector();
Map<?,?> map=moi.getMap(obj);
if (map == null) {
out.write(nullSequence.getBytes(),0,nullSequence.getLength());
}
 else {
boolean first=true;
for (Map.Entry<?,?> entry : map.entrySet()) {
if (first) {
first=false;
}
 else {
out.write(separator);
}
serialize(out,entry.getKey(),koi,separators,level + 2,nullSequence,escaped,escapeChar,needsEscape);
out.write(keyValueSeparator);
serialize(out,entry.getValue(),voi,separators,level + 2,nullSequence,escaped,escapeChar,needsEscape);
}
}
return;
case STRUCT:
separator=(char)separators[level];
StructObjectInspector soi=(StructObjectInspector)objInspector;
List<? extends StructField> fields=soi.getAllStructFieldRefs();
list=soi.getStructFieldsDataAsList(obj);
if (list == null) {
out.write(nullSequence.getBytes(),0,nullSequence.getLength());
}
 else {
for (int i=0; i < list.size(); i++) {
if (i > 0) {
out.write(separator);
}
serialize(out,list.get(i),fields.get(i).getFieldObjectInspector(),separators,level + 1,nullSequence,escaped,escapeChar,needsEscape);
}
}
return;
default :
break;
}
throw new RuntimeException("Unknown category type: " + objInspector.getCategory());
}
