{
  if (objInspector.getCategory() != Category.STRUCT) {
    throw new SerDeException(getClass().toString() + " can only serialize struct types, but we got: " + objInspector.getTypeName());
  }
  StructObjectInspector soi=(StructObjectInspector)objInspector;
  List<? extends StructField> fields=soi.getAllStructFieldRefs();
  StringBuilder sb=new StringBuilder();
  for (int i=0; i < fields.size(); i++) {
    if (i > 0) {
      sb.append((char)separator);
    }
    StructField field=fields.get(i);
    Object fieldData=soi.getStructFieldData(obj,field);
    if (field.getFieldObjectInspector().getCategory() == Category.PRIMITIVE) {
      sb.append(fieldData == null ? nullString : fieldData.toString());
    }
 else {
      sb.append(SerDeUtils.getJSONString(fieldData,field.getFieldObjectInspector()));
    }
  }
  serializeCache.set(sb.toString());
  return serializeCache;
}
