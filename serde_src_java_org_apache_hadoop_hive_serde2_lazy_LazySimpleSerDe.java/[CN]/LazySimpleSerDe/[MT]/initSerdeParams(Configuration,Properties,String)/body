{
  SerDeParameters serdeParams=new SerDeParameters();
  serdeParams.separators=new byte[8];
  serdeParams.separators[0]=getByte(tbl.getProperty(serdeConstants.FIELD_DELIM,tbl.getProperty(serdeConstants.SERIALIZATION_FORMAT)),DefaultSeparators[0]);
  serdeParams.separators[1]=getByte(tbl.getProperty(serdeConstants.COLLECTION_DELIM),DefaultSeparators[1]);
  serdeParams.separators[2]=getByte(tbl.getProperty(serdeConstants.MAPKEY_DELIM),DefaultSeparators[2]);
  String extendedNesting=tbl.getProperty(SERIALIZATION_EXTEND_NESTING_LEVELS);
  if (extendedNesting == null || !extendedNesting.equalsIgnoreCase("true")) {
    for (int i=3; i < serdeParams.separators.length; i++) {
      serdeParams.separators[i]=(byte)(i + 1);
    }
  }
 else {
    final int MAX_CTRL_CHARS=29;
    byte[] extendedSeparators=new byte[MAX_CTRL_CHARS];
    int extendedSeparatorsIdx=0;
    for (int i=0; i < 3; i++) {
      extendedSeparators[extendedSeparatorsIdx++]=serdeParams.separators[i];
    }
    for (byte asciival=4; asciival <= MAX_CTRL_CHARS; asciival++) {
switch (asciival) {
case 9:
case 10:
case 12:
case 13:
case 27:
        continue;
    }
    extendedSeparators[extendedSeparatorsIdx++]=asciival;
  }
  serdeParams.separators=Arrays.copyOfRange(extendedSeparators,0,extendedSeparatorsIdx);
}
serdeParams.nullString=tbl.getProperty(serdeConstants.SERIALIZATION_NULL_FORMAT,"\\N");
serdeParams.nullSequence=new Text(serdeParams.nullString);
String lastColumnTakesRestString=tbl.getProperty(serdeConstants.SERIALIZATION_LAST_COLUMN_TAKES_REST);
serdeParams.lastColumnTakesRest=(lastColumnTakesRestString != null && lastColumnTakesRestString.equalsIgnoreCase("true"));
LazyUtils.extractColumnInfo(tbl,serdeParams,serdeName);
serdeParams.rowTypeInfo=TypeInfoFactory.getStructTypeInfo(serdeParams.columnNames,serdeParams.columnTypes);
String escapeProperty=tbl.getProperty(serdeConstants.ESCAPE_CHAR);
serdeParams.escaped=(escapeProperty != null);
if (serdeParams.escaped) {
  serdeParams.escapeChar=getByte(escapeProperty,(byte)'\\');
}
if (serdeParams.escaped) {
  serdeParams.needsEscape=new boolean[128];
  for (int i=0; i < 128; i++) {
    serdeParams.needsEscape[i]=false;
  }
  serdeParams.needsEscape[serdeParams.escapeChar]=true;
  for (int i=0; i < serdeParams.separators.length; i++) {
    serdeParams.needsEscape[serdeParams.separators[i]]=true;
  }
}
serdeParams.extendedBooleanLiteral=job == null ? false : job.getBoolean(ConfVars.HIVE_LAZYSIMPLE_EXTENDED_BOOLEAN_LITERAL.varname,false);
return serdeParams;
}
