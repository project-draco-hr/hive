{
  if (expr == null) {
    return null;
  }
  if (expr instanceof ExprNodeConstantDesc) {
    if (((ExprNodeConstantDesc)expr).getValue() == null)     return null;
    if (!isBooleanExpr(expr)) {
      throw new IllegalStateException("Unexpected non-boolean ExprNodeConstantDesc: " + expr.getExprString());
    }
    return expr;
  }
 else   if (expr instanceof ExprNodeGenericFuncDesc) {
    GenericUDF udf=((ExprNodeGenericFuncDesc)expr).getGenericUDF();
    boolean isAnd=udf instanceof GenericUDFOPAnd;
    boolean isOr=udf instanceof GenericUDFOPOr;
    if (isAnd || isOr) {
      List<ExprNodeDesc> children=expr.getChildren();
      ExprNodeDesc left=compactExpr(children.get(0));
      ExprNodeDesc right=compactExpr(children.get(1));
      if (left == null && right == null) {
        return null;
      }
 else       if (left == null) {
        return isAnd ? right : null;
      }
 else       if (right == null) {
        return isAnd ? left : null;
      }
      boolean isLeftFalse=isFalseExpr(left), isRightFalse=isFalseExpr(right), isLeftTrue=isTrueExpr(left), isRightTrue=isTrueExpr(right);
      if ((isRightTrue && isLeftTrue) || (isOr && (isLeftTrue || isRightTrue))) {
        return new ExprNodeConstantDesc(Boolean.TRUE);
      }
 else       if ((isRightFalse && isLeftFalse) || (isAnd && (isLeftFalse || isRightFalse))) {
        return new ExprNodeConstantDesc(Boolean.FALSE);
      }
 else       if ((isAnd && isLeftTrue) || (isOr && isLeftFalse)) {
        return right;
      }
 else       if ((isAnd && isRightTrue) || (isOr && isRightFalse)) {
        return left;
      }
      children.set(0,left);
      children.set(1,right);
    }
    return expr;
  }
 else {
    throw new IllegalStateException("Unexpected type of ExprNodeDesc: " + expr.getExprString());
  }
}
