{
  partitionKeys=new ArrayList<String>();
  partitions=new HashMap<String,String>();
  if (partSpecs != null && !partSpecs.trim().isEmpty()) {
    String[] partKVPs=partSpecs.split(",");
    for (    String partKVP : partKVPs) {
      String[] partKV=partKVP.split("=");
      if (partKV.length == 2) {
        String partKey=partKV[0].trim();
        partitionKeys.add(partKey);
        partitions.put(partKey,partKV[1].trim());
      }
 else {
        throw new FrontendException("Invalid partition column specification. " + partSpecs,PigHCatUtil.PIG_EXCEPTION_CODE);
      }
    }
  }
  if (schema != null && !schema.trim().isEmpty()) {
    pigSchema=Utils.getSchemaFromString(schema);
  }
  Properties udfProps=UDFContext.getUDFContext().getUDFProperties(this.getClass(),new String[]{sign});
  onOutOfRange=OOR_VALUE_OPT_VALUES.valueOf(udfProps.getProperty(ON_OORA_VALUE_PROP,getDefaultValue().name()));
}
