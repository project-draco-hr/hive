{
  TMemoryBuffer trans=new TMemoryBuffer(1024);
  String foo="Hello";
  String bar="World!";
  String key="22";
  String value="TheValue";
  String key2="24";
  String value2="TheValueAgain";
  byte columnSeparator[]={1};
  byte elementSeparator[]={2};
  byte kvSeparator[]={3};
  trans.write(foo.getBytes(),0,foo.getBytes().length);
  trans.write(columnSeparator,0,1);
  trans.write(columnSeparator,0,1);
  trans.write(bar.getBytes(),0,bar.getBytes().length);
  trans.write(columnSeparator,0,1);
  trans.write(key.getBytes(),0,key.getBytes().length);
  trans.write(kvSeparator,0,1);
  trans.write(value.getBytes(),0,value.getBytes().length);
  trans.write(elementSeparator,0,1);
  trans.write(key2.getBytes(),0,key2.getBytes().length);
  trans.write(kvSeparator,0,1);
  trans.write(value2.getBytes(),0,value2.getBytes().length);
  trans.flush();
  TCTLSeparatedProtocol prot=new TCTLSeparatedProtocol(trans,1024);
  prot.initialize(new Configuration(),new Properties());
  prot.readStructBegin();
  prot.readFieldBegin();
  String hello=prot.readString();
  prot.readFieldEnd();
  assertTrue(hello.equals(foo));
  prot.readFieldBegin();
  assertTrue(prot.readString().equals(""));
  prot.readFieldEnd();
  prot.readFieldBegin();
  assertTrue(prot.readString().equals(bar));
  prot.readFieldEnd();
  prot.readFieldBegin();
  TMap mapHeader=prot.readMapBegin();
  assertTrue(mapHeader.size == 2);
  assertTrue(prot.readI32() == 22);
  assertTrue(prot.readString().equals(value));
  assertTrue(prot.readI32() == 24);
  assertTrue(prot.readString().equals(value2));
  prot.readMapEnd();
  prot.readFieldEnd();
  prot.readFieldBegin();
  hello=prot.readString();
  prot.readFieldEnd();
  assertNull(hello);
  prot.readStructEnd();
}
