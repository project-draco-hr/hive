{
  TMemoryBuffer trans=new TMemoryBuffer(1024);
  TCTLSeparatedProtocol prot=new TCTLSeparatedProtocol(trans,1024);
  prot.writeStructBegin(new TStruct());
  prot.writeFieldBegin(new TField());
  prot.writeI32(100);
  prot.writeFieldEnd();
  prot.writeFieldBegin(new TField());
  prot.writeListBegin(new TList());
  prot.writeDouble(348.55);
  prot.writeDouble(234.22);
  prot.writeListEnd();
  prot.writeFieldEnd();
  prot.writeFieldBegin(new TField());
  prot.writeString("hello world!");
  prot.writeFieldEnd();
  prot.writeFieldBegin(new TField());
  prot.writeMapBegin(new TMap());
  prot.writeString("key1");
  prot.writeString("val1");
  prot.writeString("key2");
  prot.writeString("val2");
  prot.writeString("key3");
  prot.writeString("val3");
  prot.writeMapEnd();
  prot.writeFieldEnd();
  prot.writeFieldBegin(new TField());
  prot.writeListBegin(new TList());
  prot.writeString("elem1");
  prot.writeString("elem2");
  prot.writeListEnd();
  prot.writeFieldEnd();
  prot.writeFieldBegin(new TField());
  prot.writeString("bye!");
  prot.writeFieldEnd();
  prot.writeStructEnd();
  trans.flush();
  byte b[]=new byte[3 * 1024];
  int len=trans.read(b,0,b.length);
  String test=new String(b,0,len);
  String testRef="100348.55234.22hello world!key1val1key2val2key3val3elem1elem2bye!";
  assertTrue(test.equals(testRef));
  trans=new TMemoryBuffer(1023);
  trans.write(b,0,len);
  prot=new TCTLSeparatedProtocol(trans,10);
  prot.initialize(new Configuration(),new Properties());
  prot.readStructBegin();
  prot.readFieldBegin();
  assertTrue(prot.readI32() == 100);
  prot.readFieldEnd();
  prot.readFieldBegin();
  TList l=prot.readListBegin();
  assertTrue(l.size == 2);
  assertTrue(prot.readDouble() == 348.55);
  assertTrue(prot.readDouble() == 234.22);
  prot.readListEnd();
  prot.readFieldEnd();
  prot.readFieldBegin();
  assertTrue(prot.readString().equals("hello world!"));
  prot.readFieldEnd();
  prot.readFieldBegin();
  TMap m=prot.readMapBegin();
  assertTrue(m.size == 3);
  assertTrue(prot.readString().equals("key1"));
  assertTrue(prot.readString().equals("val1"));
  assertTrue(prot.readString().equals("key2"));
  assertTrue(prot.readString().equals("val2"));
  assertTrue(prot.readString().equals("key3"));
  assertTrue(prot.readString().equals("val3"));
  prot.readMapEnd();
  prot.readFieldEnd();
  prot.readFieldBegin();
  l=prot.readListBegin();
  assertTrue(l.size == 2);
  assertTrue(prot.readString().equals("elem1"));
  assertTrue(prot.readString().equals("elem2"));
  prot.readListEnd();
  prot.readFieldEnd();
  prot.readFieldBegin();
  assertTrue(prot.readString().equals("bye!"));
  prot.readFieldEnd();
  prot.readFieldBegin();
  assertNull(prot.readString());
  prot.readFieldEnd();
  prot.readFieldBegin();
  assertNull(prot.readString());
  prot.readFieldEnd();
  prot.readStructEnd();
}
