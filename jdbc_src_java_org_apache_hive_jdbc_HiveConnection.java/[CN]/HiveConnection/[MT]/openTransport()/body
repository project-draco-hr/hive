{
  int maxRetries=1;
  try {
    String strRetries=sessConfMap.get(JdbcConnectionParams.RETRIES);
    if (StringUtils.isNotBlank(strRetries)) {
      maxRetries=Integer.parseInt(strRetries);
    }
  }
 catch (  NumberFormatException e) {
  }
  for (int numRetries=0; ; ) {
    try {
      assumeSubject=JdbcConnectionParams.AUTH_KERBEROS_AUTH_TYPE_FROM_SUBJECT.equals(sessConfMap.get(JdbcConnectionParams.AUTH_KERBEROS_AUTH_TYPE));
      transport=isHttpTransportMode() ? createHttpTransport() : createBinaryTransport();
      if (!transport.isOpen()) {
        transport.open();
        logZkDiscoveryMessage("Connected to " + connParams.getHost() + ":"+ connParams.getPort());
      }
      break;
    }
 catch (    TTransportException e) {
      LOG.warn("Failed to connect to " + connParams.getHost() + ":"+ connParams.getPort());
      String errMsg=null;
      String warnMsg="Could not open client transport with JDBC Uri: " + jdbcUriString + ": ";
      if (isZkDynamicDiscoveryMode()) {
        errMsg="Could not open client transport for any of the Server URI's in ZooKeeper: ";
        while (!Utils.updateConnParamsFromZooKeeper(connParams) && ++numRetries < maxRetries) {
          connParams.getRejectedHostZnodePaths().clear();
        }
        jdbcUriString=connParams.getJdbcUriString();
        host=connParams.getHost();
        port=connParams.getPort();
      }
 else {
        errMsg=warnMsg;
        ++numRetries;
      }
      if (numRetries >= maxRetries) {
        throw new SQLException(errMsg + e.getMessage()," 08S01",e);
      }
 else {
        LOG.warn(warnMsg + e.getMessage() + " Retrying "+ numRetries+ " of "+ maxRetries);
      }
    }
  }
}
