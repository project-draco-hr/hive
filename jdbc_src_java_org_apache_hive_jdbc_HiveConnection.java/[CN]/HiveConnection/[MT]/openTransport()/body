{
  int numRetries=0;
  int maxRetries=1;
  try {
    maxRetries=Integer.parseInt(sessConfMap.get(JdbcConnectionParams.RETRIES));
  }
 catch (  NumberFormatException e) {
  }
  while (true) {
    try {
      assumeSubject=JdbcConnectionParams.AUTH_KERBEROS_AUTH_TYPE_FROM_SUBJECT.equals(sessConfMap.get(JdbcConnectionParams.AUTH_KERBEROS_AUTH_TYPE));
      transport=isHttpTransportMode() ? createHttpTransport() : createBinaryTransport();
      if (!transport.isOpen()) {
        transport.open();
        logZkDiscoveryMessage("Connected to " + connParams.getHost() + ":"+ connParams.getPort());
      }
      break;
    }
 catch (    TTransportException e) {
      if (isZkDynamicDiscoveryMode()) {
        LOG.info("Failed to connect to " + connParams.getHost() + ":"+ connParams.getPort());
        try {
          Utils.updateConnParamsFromZooKeeper(connParams);
        }
 catch (        ZooKeeperHiveClientException ze) {
          throw new SQLException("Could not open client transport for any of the Server URI's in ZooKeeper: " + ze.getMessage()," 08S01",ze);
        }
        jdbcUriString=connParams.getJdbcUriString();
        host=connParams.getHost();
        port=connParams.getPort();
      }
 else {
        LOG.info("Transport Used for JDBC connection: " + sessConfMap.get(JdbcConnectionParams.TRANSPORT_MODE));
        String errMsg="Could not open client transport with JDBC Uri: " + jdbcUriString + ": "+ e.getMessage();
        if (++numRetries >= maxRetries) {
          throw new SQLException(errMsg," 08S01",e);
        }
 else {
          LOG.warn(errMsg + " Retrying " + numRetries+ " of "+ maxRetries);
        }
      }
    }
  }
}
