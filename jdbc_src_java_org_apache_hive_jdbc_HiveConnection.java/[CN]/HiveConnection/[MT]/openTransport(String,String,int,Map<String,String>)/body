{
  transport=new TSocket(host,port);
  if (!sessConf.containsKey(HIVE_AUTH_TYPE) || !sessConf.get(HIVE_AUTH_TYPE).equals(HIVE_AUTH_SIMPLE)) {
    try {
      if (sessConf.containsKey(HIVE_AUTH_PRINCIPAL)) {
        transport=KerberosSaslHelper.getKerberosTransport(sessConf.get(HIVE_AUTH_PRINCIPAL),host,transport);
      }
 else {
        String userName=sessConf.get(HIVE_AUTH_USER);
        if ((userName == null) || userName.isEmpty()) {
          userName=HIVE_ANONYMOUS_USER;
        }
        String passwd=sessConf.get(HIVE_AUTH_PASSWD);
        if ((passwd == null) || passwd.isEmpty()) {
          passwd=HIVE_ANONYMOUS_PASSWD;
        }
        transport=PlainSaslHelper.getPlainTransport(userName,passwd,transport);
      }
    }
 catch (    SaslException e) {
      throw new SQLException("Could not establish secure connection to " + uri + ": "+ e.getMessage()," 08S01",e);
    }
  }
  TProtocol protocol=new TBinaryProtocol(transport);
  client=new TCLIService.Client(protocol);
  try {
    transport.open();
  }
 catch (  TTransportException e) {
    throw new SQLException("Could not establish connection to " + uri + ": "+ e.getMessage()," 08S01",e);
  }
}
