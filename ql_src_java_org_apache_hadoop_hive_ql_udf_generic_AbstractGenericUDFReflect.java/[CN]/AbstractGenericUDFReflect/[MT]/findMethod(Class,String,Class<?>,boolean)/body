{
  for (  Method method : clazz.getMethods()) {
    if (!method.getName().equals(name) || (retType != null && !retType.isAssignableFrom(method.getReturnType())) || (memberOnly && Modifier.isStatic(method.getReturnType().getModifiers()))|| method.getParameterTypes().length != parameterTypes.length) {
      continue;
    }
    boolean match=true;
    Class<?>[] types=method.getParameterTypes();
    for (int i=0; i < parameterTypes.length; i++) {
      if (types[i] != parameterTypes[i].primitiveJavaType && types[i] != parameterTypes[i].primitiveJavaClass && !types[i].isAssignableFrom(parameterTypes[i].primitiveJavaClass)) {
        match=false;
        break;
      }
    }
    if (match) {
      return method;
    }
  }
  return clazz.getMethod(name,parameterClasses);
}
