{
  int bitCount=bf.getBitSize();
  int popCount=0;
  for (  long l : bf.getBitSet()) {
    popCount+=Long.bitCount(l);
  }
  int k=bf.getNumHashFunctions();
  float loadFactor=(float)popCount / (float)bitCount;
  float expectedFpp=(float)Math.pow(loadFactor,k);
  writer.key("numHashFunctions").value(k);
  writer.key("bitCount").value(bitCount);
  writer.key("popCount").value(popCount);
  writer.key("loadFactor").value(loadFactor);
  writer.key("expectedFpp").value(expectedFpp);
}
