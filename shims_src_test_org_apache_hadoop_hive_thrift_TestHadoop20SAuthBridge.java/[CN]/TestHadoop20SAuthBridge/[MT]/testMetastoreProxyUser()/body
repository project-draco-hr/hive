{
  setup(10010);
  final String proxyUserName="proxyUser";
  String[] groupNames=new String[]{"foo_bar_group"};
  setGroupsInConf(groupNames,proxyUserName);
  final UserGroupInformation delegationTokenUser=UserGroupInformation.getCurrentUser();
  final UserGroupInformation proxyUserUgi=UserGroupInformation.createRemoteUser(proxyUserName);
  String tokenStrForm=proxyUserUgi.doAs(new PrivilegedExceptionAction<String>(){
    public String run() throws Exception {
      try {
        return getDelegationTokenStr(delegationTokenUser,proxyUserUgi);
      }
 catch (      AuthorizationException ae) {
        return null;
      }
    }
  }
);
  assertTrue("Expected the getDelegationToken call to fail",tokenStrForm == null);
  setGroupsInConf(UserGroupInformation.getCurrentUser().getGroupNames(),proxyUserName);
  tokenStrForm=proxyUserUgi.doAs(new PrivilegedExceptionAction<String>(){
    public String run() throws Exception {
      try {
        return getDelegationTokenStr(delegationTokenUser,proxyUserUgi);
      }
 catch (      AuthorizationException ae) {
        return null;
      }
    }
  }
);
  assertTrue("Expected the getDelegationToken call to not fail",tokenStrForm != null);
  Token<DelegationTokenIdentifier> t=new Token<DelegationTokenIdentifier>();
  t.decodeFromUrlString(tokenStrForm);
  DelegationTokenIdentifier d=new DelegationTokenIdentifier();
  d.readFields(new DataInputStream(new ByteArrayInputStream(t.getIdentifier())));
  assertTrue("Usernames don't match",delegationTokenUser.getShortUserName().equals(d.getUser().getShortUserName()));
}
