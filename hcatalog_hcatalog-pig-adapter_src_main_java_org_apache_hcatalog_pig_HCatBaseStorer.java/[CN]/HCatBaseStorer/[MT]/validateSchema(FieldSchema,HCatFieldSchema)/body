{
  validateAlias(pigField.alias);
  byte type=pigField.type;
  if (DataType.isComplex(type)) {
switch (type) {
case DataType.MAP:
      if (hcatField != null) {
        if (hcatField.getMapKeyType() != Type.STRING) {
          throw new FrontendException("Key Type of map must be String " + hcatField,PigHCatUtil.PIG_EXCEPTION_CODE);
        }
      }
    break;
case DataType.BAG:
  HCatSchema arrayElementSchema=hcatField == null ? null : hcatField.getArrayElementSchema();
for (FieldSchema innerField : pigField.schema.getField(0).schema.getFields()) {
  validateSchema(innerField,getColFromSchema(pigField.alias,arrayElementSchema));
}
break;
case DataType.TUPLE:
HCatSchema structSubSchema=hcatField == null ? null : hcatField.getStructSubSchema();
for (FieldSchema innerField : pigField.schema.getFields()) {
validateSchema(innerField,getColFromSchema(pigField.alias,structSubSchema));
}
break;
default :
throw new FrontendException("Internal Error.",PigHCatUtil.PIG_EXCEPTION_CODE);
}
}
}
