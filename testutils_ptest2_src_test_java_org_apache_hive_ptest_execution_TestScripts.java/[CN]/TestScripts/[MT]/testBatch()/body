{
  Map<String,String> templateVariables=Maps.newHashMap();
  templateVariables.put("repository","git:///repo1");
  templateVariables.put("repositoryName","apache");
  templateVariables.put("branch","branch-1");
  templateVariables.put("localDir","/some/local/dir");
  templateVariables.put("workingDir","/some/working/dir");
  templateVariables.put("buildTool","maven");
  templateVariables.put("antArgs","-Dant=arg1");
  templateVariables.put("testClass","TestCliDriver");
  templateVariables.put("buildTag","build-1");
  templateVariables.put("logDir","/some/log/dir");
  templateVariables.put("instanceName","instance-1");
  templateVariables.put("batchName","batch-1");
  templateVariables.put("numOfFailedTests","20");
  templateVariables.put("maxSourceDirs",String.valueOf(5));
  templateVariables.put("testArguments","-Dtest=arg1");
  templateVariables.put("clearLibraryCache","true");
  templateVariables.put("javaHome","/usr/java/jdk1.7");
  templateVariables.put("antEnvOpts","-Dhttp.proxyHost=somehost -Dhttp.proxyPort=3128");
  templateVariables.put("antTestArgs","-DgrammarBuild.notRequired=true -Dskip.javadoc=true");
  templateVariables.put("antTestTarget","testonly");
  String template=readResource("batch-exec.vm");
  String actual=getTemplateResult(template,templateVariables);
  Approvals.verify(actual);
}
