{
  Map<String,String> confOverlay=new HashMap<String,String>();
  String tableName="TEST_EXEC_ASYNC";
  String columnDefinitions="(ID STRING)";
  String queryString;
  SessionHandle sessionHandle=setupTestData(tableName,columnDefinitions,confOverlay);
  assertNotNull(sessionHandle);
  OperationState state=null;
  OperationHandle opHandle;
  OperationStatus opStatus=null;
  queryString="SET " + HiveConf.ConfVars.HIVE_SUPPORT_CONCURRENCY.varname + " = false";
  opHandle=client.executeStatement(sessionHandle,queryString,confOverlay);
  client.closeOperation(opHandle);
  long longPollingTimeout;
  longPollingTimeout=HiveConf.getTimeVar(new HiveConf(),HiveConf.ConfVars.HIVE_SERVER2_LONG_POLLING_TIMEOUT,TimeUnit.MILLISECONDS);
  queryString="SELECT NON_EXISTING_COLUMN FROM " + tableName;
  try {
    runAsyncAndWait(sessionHandle,queryString,confOverlay,OperationState.ERROR,longPollingTimeout);
  }
 catch (  HiveSQLException e) {
  }
  queryString="CREATE TABLE NON_EXISTING_TAB (ID STRING) location 'invalid://localhost:10000/a/b/c'";
  opStatus=runAsyncAndWait(sessionHandle,queryString,confOverlay,OperationState.ERROR,longPollingTimeout);
  assertEquals(opStatus.getOperationException().getSQLState(),"08S01");
  assertEquals(opStatus.getOperationException().getErrorCode(),1);
  queryString="SELECT ID+1 FROM " + tableName;
  runAsyncAndWait(sessionHandle,queryString,confOverlay,OperationState.FINISHED,longPollingTimeout);
  longPollingTimeout=0;
  queryString="SELECT ID+1 FROM " + tableName;
  runAsyncAndWait(sessionHandle,queryString,confOverlay,OperationState.FINISHED,longPollingTimeout);
  longPollingTimeout=500;
  queryString="SELECT ID+1 FROM " + tableName;
  runAsyncAndWait(sessionHandle,queryString,confOverlay,OperationState.FINISHED,longPollingTimeout);
  queryString="SELECT ID+1 FROM " + tableName;
  opHandle=client.executeStatementAsync(sessionHandle,queryString,confOverlay);
  System.out.println("Cancelling " + opHandle);
  client.cancelOperation(opHandle);
  state=client.getOperationStatus(opHandle).getState();
  System.out.println(opHandle + " after cancelling, state= " + state);
  assertEquals("Query should be cancelled",OperationState.CANCELED,state);
  queryString="DROP TABLE " + tableName;
  client.executeStatement(sessionHandle,queryString,confOverlay);
  client.closeSession(sessionHandle);
}
