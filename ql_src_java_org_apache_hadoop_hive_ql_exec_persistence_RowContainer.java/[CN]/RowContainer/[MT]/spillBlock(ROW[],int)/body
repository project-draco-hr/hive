{
  try {
    if (tmpFile == null) {
      setupWriter();
    }
 else     if (rw == null) {
      throw new HiveException("RowContainer has already been closed for writing.");
    }
    row.clear();
    row.add(null);
    row.add(null);
    if (this.keyObject != null) {
      row.set(1,this.keyObject);
      for (int i=0; i < length; ++i) {
        ROW currentValRow=block[i];
        row.set(0,currentValRow);
        Writable outVal=serde.serialize(row,standardOI);
        rw.write(outVal);
      }
    }
 else {
      for (int i=0; i < length; ++i) {
        ROW currentValRow=block[i];
        Writable outVal=serde.serialize(currentValRow,standardOI);
        rw.write(outVal);
      }
    }
    if (block == this.currentWriteBlock) {
      this.addCursor=0;
    }
    this.numFlushedBlocks++;
  }
 catch (  Exception e) {
    clearRows();
    LOG.error(e.toString(),e);
    if (e instanceof HiveException) {
      throw (HiveException)e;
    }
    throw new HiveException(e);
  }
}
