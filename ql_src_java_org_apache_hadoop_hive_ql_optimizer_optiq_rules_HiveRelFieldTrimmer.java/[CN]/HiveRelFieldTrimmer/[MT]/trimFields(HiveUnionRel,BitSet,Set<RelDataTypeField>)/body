{
  final RelDataType rowType=setOp.getRowType();
  final int fieldCount=rowType.getFieldCount();
  int changeCount=0;
  if (fieldsUsed.isEmpty()) {
    fieldsUsed.set(rowType.getFieldCount() - 1);
  }
  final Mapping mapping=createMapping(fieldsUsed,fieldCount);
  final List<RelNode> newInputs=new ArrayList<RelNode>();
  for (  RelNode input : setOp.getInputs()) {
    TrimResult trimResult=trimChild(setOp,input,fieldsUsed,extraFields);
    RelNode newInput=trimResult.left;
    final Mapping inputMapping=trimResult.right;
    Mapping remaining=Mappings.divide(mapping,inputMapping);
    newInput=HiveProjectRel.projectMapping(newInput,remaining,null);
    if (input != newInput) {
      ++changeCount;
    }
    newInputs.add(newInput);
  }
  if (changeCount == 0 && mapping.isIdentity()) {
    return new TrimResult(setOp,mapping);
  }
  RelNode newSetOp=setOp.copy(setOp.getTraitSet(),newInputs,true);
  return new TrimResult(newSetOp,mapping);
}
