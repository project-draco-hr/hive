{
  final RelDataType rowType=values.getRowType();
  final int fieldCount=rowType.getFieldCount();
  if (fieldsUsed.isEmpty()) {
    fieldsUsed=BitSets.range(fieldCount - 1,fieldCount);
  }
  if (fieldsUsed.equals(BitSets.range(fieldCount))) {
    Mapping mapping=Mappings.createIdentity(fieldCount);
    return new TrimResult(values,mapping);
  }
  List<List<RexLiteral>> newTuples=new ArrayList<List<RexLiteral>>();
  for (  List<RexLiteral> tuple : values.getTuples()) {
    List<RexLiteral> newTuple=new ArrayList<RexLiteral>();
    for (    int field : BitSets.toIter(fieldsUsed)) {
      newTuple.add(tuple.get(field));
    }
    newTuples.add(newTuple);
  }
  final Mapping mapping=createMapping(fieldsUsed,fieldCount);
  RelDataType newRowType=values.getCluster().getTypeFactory().createStructType(Mappings.apply3(mapping,rowType.getFieldList()));
  final ValuesRel newValues=new ValuesRel(values.getCluster(),newRowType,newTuples);
  return new TrimResult(newValues,mapping);
}
