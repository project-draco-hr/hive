{
  AbstractPrimitiveJavaObjectInspector result=cachedPrimitiveJavaInspectorCache.get(typeInfo);
  if (result != null) {
    return result;
  }
switch (typeInfo.getPrimitiveCategory()) {
case CHAR:
    result=new JavaHiveCharObjectInspector((CharTypeInfo)typeInfo);
  break;
case VARCHAR:
result=new JavaHiveVarcharObjectInspector((VarcharTypeInfo)typeInfo);
break;
case DECIMAL:
result=new JavaHiveDecimalObjectInspector((DecimalTypeInfo)typeInfo);
break;
default :
throw new RuntimeException("Failed to create JavaHiveVarcharObjectInspector for " + typeInfo);
}
cachedPrimitiveJavaInspectorCache.put(typeInfo,result);
return result;
}
