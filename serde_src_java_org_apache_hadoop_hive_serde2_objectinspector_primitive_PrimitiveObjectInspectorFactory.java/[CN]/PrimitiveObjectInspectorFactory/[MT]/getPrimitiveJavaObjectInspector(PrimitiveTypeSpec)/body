{
  PrimitiveCategory primitiveCategory=typeSpec.getPrimitiveCategory();
  BaseTypeParams primitiveTypeParams=typeSpec.getTypeParams();
  if (primitiveTypeParams == null) {
    return getPrimitiveJavaObjectInspector(primitiveCategory);
  }
 else {
    PrimitiveObjectInspector oi=cachedParameterizedPrimitiveJavaObjectInspectorCache.getObjectInspector(typeSpec);
    if (oi == null) {
switch (primitiveCategory) {
case VARCHAR:
        PrimitiveTypeEntry typeEntry=PrimitiveObjectInspectorUtils.getTypeEntryFromTypeSpecs(primitiveCategory,primitiveTypeParams);
      oi=new JavaHiveVarcharObjectInspector(typeEntry);
    oi.setTypeParams(primitiveTypeParams);
  cachedParameterizedPrimitiveJavaObjectInspectorCache.setObjectInspector(oi);
break;
default :
throw new RuntimeException("Primitve type " + primitiveCategory + " should not take parameters");
}
}
return (AbstractPrimitiveJavaObjectInspector)oi;
}
}
