{
  Schema.Type type=schema.getType();
  if (type == Schema.Type.BYTES && AvroSerDe.DECIMAL_TYPE_NAME.equalsIgnoreCase(schema.getProp(AvroSerDe.AVRO_PROP_LOGICAL_TYPE))) {
    int precision=0;
    int scale=0;
    try {
      precision=schema.getJsonProp(AvroSerDe.AVRO_PROP_PRECISION).getIntValue();
      scale=schema.getJsonProp(AvroSerDe.AVRO_PROP_SCALE).getIntValue();
    }
 catch (    Exception ex) {
      throw new AvroSerdeException("Failed to obtain scale value from file schema: " + schema,ex);
    }
    try {
      HiveDecimalUtils.validateParameter(precision,scale);
    }
 catch (    Exception ex) {
      throw new AvroSerdeException("Invalid precision or scale for decimal type",ex);
    }
    return TypeInfoFactory.getDecimalTypeInfo(precision,scale);
  }
  if (type == Schema.Type.STRING && AvroSerDe.CHAR_TYPE_NAME.equalsIgnoreCase(schema.getProp(AvroSerDe.AVRO_PROP_LOGICAL_TYPE))) {
    int maxLength=0;
    try {
      maxLength=schema.getJsonProp(AvroSerDe.AVRO_PROP_MAX_LENGTH).getValueAsInt();
    }
 catch (    Exception ex) {
      throw new AvroSerdeException("Failed to obtain maxLength value from file schema: " + schema,ex);
    }
    return TypeInfoFactory.getCharTypeInfo(maxLength);
  }
  if (type == Schema.Type.STRING && AvroSerDe.VARCHAR_TYPE_NAME.equalsIgnoreCase(schema.getProp(AvroSerDe.AVRO_PROP_LOGICAL_TYPE))) {
    int maxLength=0;
    try {
      maxLength=schema.getJsonProp(AvroSerDe.AVRO_PROP_MAX_LENGTH).getValueAsInt();
    }
 catch (    Exception ex) {
      throw new AvroSerdeException("Failed to obtain maxLength value from file schema: " + schema,ex);
    }
    return TypeInfoFactory.getVarcharTypeInfo(maxLength);
  }
  return typeInfoCache.retrieve(schema);
}
