{
  _Fields setField=_Fields.findByThriftId(field.id);
  if (setField != null) {
switch (setField) {
case PRIMITIVE_ENTRY:
      if (field.type == PRIMITIVE_ENTRY_FIELD_DESC.type) {
        TPrimitiveTypeEntry primitiveEntry;
        primitiveEntry=new TPrimitiveTypeEntry();
        primitiveEntry.read(iprot);
        return primitiveEntry;
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
        return null;
      }
case ARRAY_ENTRY:
    if (field.type == ARRAY_ENTRY_FIELD_DESC.type) {
      TArrayTypeEntry arrayEntry;
      arrayEntry=new TArrayTypeEntry();
      arrayEntry.read(iprot);
      return arrayEntry;
    }
 else {
      org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
      return null;
    }
case MAP_ENTRY:
  if (field.type == MAP_ENTRY_FIELD_DESC.type) {
    TMapTypeEntry mapEntry;
    mapEntry=new TMapTypeEntry();
    mapEntry.read(iprot);
    return mapEntry;
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
    return null;
  }
case STRUCT_ENTRY:
if (field.type == STRUCT_ENTRY_FIELD_DESC.type) {
  TStructTypeEntry structEntry;
  structEntry=new TStructTypeEntry();
  structEntry.read(iprot);
  return structEntry;
}
 else {
  org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
  return null;
}
case UNION_ENTRY:
if (field.type == UNION_ENTRY_FIELD_DESC.type) {
TUnionTypeEntry unionEntry;
unionEntry=new TUnionTypeEntry();
unionEntry.read(iprot);
return unionEntry;
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
case USER_DEFINED_TYPE_ENTRY:
if (field.type == USER_DEFINED_TYPE_ENTRY_FIELD_DESC.type) {
TUserDefinedTypeEntry userDefinedTypeEntry;
userDefinedTypeEntry=new TUserDefinedTypeEntry();
userDefinedTypeEntry.read(iprot);
return userDefinedTypeEntry;
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
default :
throw new IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
}
