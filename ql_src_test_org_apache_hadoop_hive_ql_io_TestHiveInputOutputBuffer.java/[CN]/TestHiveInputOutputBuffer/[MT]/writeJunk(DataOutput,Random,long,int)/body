{
  r.setSeed(seed);
  for (int i=0; i < iter; ++i) {
switch (r.nextInt(numCases)) {
case 0:
      out.writeByte(r.nextInt());
    break;
case 1:
  out.writeShort((short)(r.nextInt() & 0xFFFF));
break;
case 2:
out.writeInt(r.nextInt());
break;
case 3:
out.writeLong(r.nextLong());
break;
case 4:
out.writeDouble(r.nextDouble());
break;
case 5:
out.writeFloat(r.nextFloat());
break;
case 6:
byte[] b=new byte[r.nextInt(1024)];
r.nextBytes(b);
out.write(b);
r.nextBytes(b);
out.write(b);
r.nextBytes(b);
out.write(b);
break;
case 7:
out.writeBoolean(r.nextBoolean());
break;
case 8:
out.writeChar((char)r.nextInt());
break;
case 9:
out.writeByte((byte)r.nextInt());
break;
case 10:
out.writeShort((short)r.nextInt());
break;
case 11:
String string=composeString(1024,r);
out.writeUTF(string);
String string2=composeString(1024,r);
out.writeUTF(string2);
break;
case 12:
byte[] bb=asciiString.getBytes("UTF-8");
out.write(bb);
break;
case 13:
out.writeLong(r.nextLong());
out.writeLong(r.nextLong());
break;
}
}
}
