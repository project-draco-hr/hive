{
  conf=new Configuration();
  conf.setStrings(LlapConfiguration.LLAP_DAEMON_SERVICE_HOSTS,hosts);
  conf.setInt(LlapConfiguration.LLAP_DAEMON_NUM_EXECUTORS,numExecutors);
  conf.setInt(LlapConfiguration.LLAP_DAEMON_TASK_SCHEDULER_WAIT_QUEUE_SIZE,waitQueueSize);
  conf.setLong(LlapConfiguration.LLAP_TASK_SCHEDULER_NODE_REENABLE_MIN_TIMEOUT_MILLIS,disableTimeoutMillis);
  conf.setBoolean(LlapTaskSchedulerServiceForTest.LLAP_TASK_SCHEDULER_IN_TEST,true);
  doReturn(appAttemptId).when(mockAppCallback).getApplicationAttemptId();
  doReturn(11111l).when(mockAppCallback).getCustomClusterIdentifier();
  UserPayload userPayload=TezUtils.createUserPayloadFromConf(conf);
  doReturn(userPayload).when(mockAppCallback).getInitialUserPayload();
  ts=new LlapTaskSchedulerServiceForTest(mockAppCallback,clock);
  ts.initialize();
  ts.start();
  awaitSchedulerRunNumber(1);
}
