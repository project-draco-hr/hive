{
  conf=new Configuration();
  conf.setStrings(ConfVars.LLAP_DAEMON_SERVICE_HOSTS.varname,hosts);
  conf.setInt(ConfVars.LLAP_DAEMON_NUM_EXECUTORS.varname,numExecutors);
  conf.setInt(ConfVars.LLAP_DAEMON_TASK_SCHEDULER_WAIT_QUEUE_SIZE.varname,waitQueueSize);
  conf.set(ConfVars.LLAP_TASK_SCHEDULER_NODE_REENABLE_MIN_TIMEOUT_MS.varname,disableTimeoutMillis + "ms");
  conf.setBoolean(LlapFixedRegistryImpl.FIXED_REGISTRY_RESOLVE_HOST_NAMES,false);
  doReturn(appAttemptId).when(mockAppCallback).getApplicationAttemptId();
  doReturn(11111l).when(mockAppCallback).getCustomClusterIdentifier();
  UserPayload userPayload=TezUtils.createUserPayloadFromConf(conf);
  doReturn(userPayload).when(mockAppCallback).getInitialUserPayload();
  ts=new LlapTaskSchedulerServiceForTest(mockAppCallback,clock);
  controlScheduler(true);
  ts.initialize();
  ts.start();
  signalSchedulerRun();
  controlScheduler(false);
  awaitSchedulerRun();
}
