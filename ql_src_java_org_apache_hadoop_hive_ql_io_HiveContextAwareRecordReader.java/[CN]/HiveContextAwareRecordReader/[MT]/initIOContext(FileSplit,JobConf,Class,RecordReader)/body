{
  boolean blockPointer=false;
  long blockStart=-1;
  FileSplit fileSplit=(FileSplit)split;
  Path path=fileSplit.getPath();
  FileSystem fs=path.getFileSystem(job);
  if (inputFormatClass.getName().contains("SequenceFile")) {
    SequenceFile.Reader in=new SequenceFile.Reader(fs,path,job);
    blockPointer=in.isBlockCompressed();
    in.sync(fileSplit.getStart());
    blockStart=in.getPosition();
    in.close();
  }
 else   if (recordReader instanceof RCFileRecordReader) {
    blockPointer=true;
    blockStart=((RCFileRecordReader)recordReader).getStart();
  }
 else   if (inputFormatClass.getName().contains("RCFile")) {
    blockPointer=true;
    RCFile.Reader in=new RCFile.Reader(fs,path,job);
    in.sync(fileSplit.getStart());
    blockStart=in.getPosition();
    in.close();
  }
  this.initIOContext(blockStart,blockPointer,path.makeQualified(fs).toString());
  this.initIOContextSortedProps(split,recordReader,job);
}
