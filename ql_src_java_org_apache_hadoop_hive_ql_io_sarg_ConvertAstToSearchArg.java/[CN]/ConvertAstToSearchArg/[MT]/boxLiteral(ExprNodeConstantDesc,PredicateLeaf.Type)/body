{
  Object lit=constantDesc.getValue();
  if (lit == null) {
    return null;
  }
switch (type) {
case LONG:
    if (lit instanceof HiveDecimal) {
      return ((HiveDecimal)lit).longValueExact();
    }
  return ((Number)lit).longValue();
case STRING:
if (lit instanceof HiveChar) {
  return ((HiveChar)lit).getPaddedValue();
}
 else if (lit instanceof String) {
  return lit;
}
 else {
  return lit.toString();
}
case FLOAT:
if (lit instanceof HiveDecimal) {
return ((Number)((HiveDecimal)lit).floatValue()).doubleValue();
}
 else {
return ((Number)lit).doubleValue();
}
case TIMESTAMP:
return Timestamp.valueOf(lit.toString());
case DATE:
return Date.valueOf(lit.toString());
case DECIMAL:
return new HiveDecimalWritable(lit.toString());
case BOOLEAN:
return lit;
default :
throw new IllegalArgumentException("Unknown literal " + type);
}
}
