{
  Operator<? extends OperatorDesc> op=(Operator<? extends OperatorDesc>)nd;
  OperatorDesc conf=op.getConf();
  AnnotateStatsProcCtx aspCtx=(AnnotateStatsProcCtx)procCtx;
  HiveConf hconf=aspCtx.getConf();
  if (conf != null) {
    Statistics stats=conf.getStatistics();
    if (stats == null) {
      if (op.getParentOperators() != null) {
        if (isAllParentsContainStatistics(op)) {
          stats=new Statistics();
          for (          Operator<? extends OperatorDesc> parent : op.getParentOperators()) {
            if (parent.getStatistics() != null) {
              Statistics parentStats=parent.getStatistics();
              stats.addToNumRows(parentStats.getNumRows());
              stats.addToDataSize(parentStats.getDataSize());
              stats.updateColumnStatsState(parentStats.getColumnStatsState());
              List<ColStatistics> colStats=StatsUtils.getColStatisticsFromExprMap(hconf,parentStats,op.getColumnExprMap(),op.getSchema());
              stats.addToColumnStats(colStats);
              op.getConf().setStatistics(stats);
              if (isDebugEnabled) {
                LOG.debug("[0] STATS-" + op.toString() + ": "+ stats.extendedToString());
              }
            }
          }
        }
      }
    }
  }
  return null;
}
