{
  long newNumRows=-1;
  if (numAttr == 1) {
    Map<Integer,ColStatistics> parentsWithPK=getPrimaryKeyCandidates(parents);
    if (parentsWithPK.size() != 1) {
      LOG.debug("STATS-" + jop.toString() + ": detects none/multiple PK parents.");
      return newNumRows;
    }
    Integer pkPos=parentsWithPK.keySet().iterator().next();
    ColStatistics csPK=parentsWithPK.values().iterator().next();
    Map<Integer,ColStatistics> csFKs=getForeignKeyCandidates(parents,csPK);
    if (csFKs.size() + 1 == parents.size()) {
      newNumRows=getCardinality(parents,pkPos,csPK,csFKs,jop);
      if (isDebugEnabled) {
        List<String> parentIds=Lists.newArrayList();
        for (        Integer i : parentsWithPK.keySet()) {
          parentIds.add(parents.get(i).toString());
        }
        LOG.debug("STATS-" + jop.toString() + ": PK parent id(s) - "+ parentIds);
        parentIds.clear();
        for (        Integer i : csFKs.keySet()) {
          parentIds.add(parents.get(i).toString());
        }
        LOG.debug("STATS-" + jop.toString() + ": FK parent id(s) - "+ parentIds);
      }
    }
  }
  return newNumRows;
}
