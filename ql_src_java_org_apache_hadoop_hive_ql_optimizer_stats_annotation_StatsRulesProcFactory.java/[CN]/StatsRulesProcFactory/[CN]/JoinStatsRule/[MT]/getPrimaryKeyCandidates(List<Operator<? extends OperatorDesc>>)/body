{
  List<Integer> result=Lists.newArrayList();
  if (ops != null && !ops.isEmpty()) {
    for (int i=0; i < ops.size(); i++) {
      Operator<? extends OperatorDesc> op=ops.get(i);
      if (op instanceof ReduceSinkOperator) {
        ReduceSinkOperator rsOp=(ReduceSinkOperator)op;
        List<String> keys=rsOp.getConf().getOutputKeyColumnNames();
        List<String> fqCols=StatsUtils.getFullyQualifedReducerKeyNames(keys,rsOp.getColumnExprMap());
        if (fqCols.size() == 1) {
          String joinCol=fqCols.get(0);
          if (rsOp.getStatistics() != null) {
            ColStatistics cs=rsOp.getStatistics().getColumnStatisticsFromFQColName(joinCol);
            if (cs != null && cs.isPrimaryKey()) {
              result.add(i);
            }
          }
        }
      }
    }
  }
  return result;
}
