{
  int joinColIdx=0;
  while (numAttr > 0) {
    long minNDV=Long.MAX_VALUE;
    for (    Map.Entry<Integer,List<String>> entry : joinKeys.entrySet()) {
      int pos=entry.getKey();
      String key=entry.getValue().get(joinColIdx);
      ColStatistics cs=joinStats.get(pos).getColumnStatisticsFromColName(key);
      if (cs != null && cs.getCountDistint() < minNDV) {
        minNDV=cs.getCountDistint();
      }
    }
    if (minNDV != Long.MAX_VALUE) {
      for (      Map.Entry<Integer,List<String>> entry : joinKeys.entrySet()) {
        int pos=entry.getKey();
        String key=entry.getValue().get(joinColIdx);
        ColStatistics cs=joinStats.get(pos).getColumnStatisticsFromColName(key);
        if (cs != null) {
          cs.setCountDistint(minNDV);
        }
      }
    }
    joinColIdx++;
    numAttr--;
  }
}
