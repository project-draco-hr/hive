{
  double factor=0.0d;
  long result=1;
  long max=rowCountParents.get(0);
  long maxIdx=0;
  for (int i=1; i < rowCountParents.size(); i++) {
    if (rowCountParents.get(i) > max) {
      max=rowCountParents.get(i);
      maxIdx=i;
    }
  }
  denom=denom == 0 ? 1 : denom;
  factor=(double)max / (double)denom;
  for (int i=0; i < rowCountParents.size(); i++) {
    if (i != maxIdx) {
      result=StatsUtils.safeMult(result,rowCountParents.get(i));
    }
  }
  result=(long)(result * factor);
  if (join.getConf().getConds().length == 1) {
    JoinCondDesc joinCond=join.getConf().getConds()[0];
switch (joinCond.getType()) {
case JoinDesc.INNER_JOIN:
      break;
case JoinDesc.LEFT_OUTER_JOIN:
    result=Math.max(rowCountParents.get(joinCond.getLeft()),result);
  break;
case JoinDesc.RIGHT_OUTER_JOIN:
result=Math.max(rowCountParents.get(joinCond.getRight()),result);
break;
case JoinDesc.FULL_OUTER_JOIN:
result=Math.max(StatsUtils.safeAdd(rowCountParents.get(joinCond.getRight()),rowCountParents.get(joinCond.getLeft())),result);
break;
case JoinDesc.LEFT_SEMI_JOIN:
result=Math.min(rowCountParents.get(joinCond.getLeft()),result);
break;
default :
LOG.debug("Unhandled join type in stats estimation: " + joinCond.getType());
break;
}
}
return result;
}
