{
  long newNumRows=0;
  Statistics andStats=null;
  if (pred instanceof ExprNodeGenericFuncDesc) {
    ExprNodeGenericFuncDesc genFunc=(ExprNodeGenericFuncDesc)pred;
    GenericUDF udf=genFunc.getGenericUDF();
    if (udf instanceof GenericUDFOPAnd) {
      andStats=stats.clone();
      aspCtx.setAndExprStats(andStats);
      for (      ExprNodeDesc child : genFunc.getChildren()) {
        newNumRows=evaluateChildExpr(aspCtx.getAndExprStats(),child,aspCtx);
        updateStats(aspCtx.getAndExprStats(),newNumRows);
      }
    }
 else {
      if (udf instanceof GenericUDFOPOr) {
        for (        ExprNodeDesc child : genFunc.getChildren()) {
          newNumRows+=evaluateChildExpr(stats,child,aspCtx);
        }
      }
 else       if (udf instanceof GenericUDFOPNot) {
        newNumRows=evaluateNotExpr(stats,pred,aspCtx);
      }
 else       if (udf instanceof GenericUDFOPNotNull) {
        newNumRows=evaluateColEqualsNullExpr(stats,pred,aspCtx);
        newNumRows=stats.getNumRows() - newNumRows;
      }
 else       if (udf instanceof GenericUDFOPNull) {
        newNumRows=evaluateColEqualsNullExpr(stats,pred,aspCtx);
      }
 else {
        newNumRows=evaluateChildExpr(stats,pred,aspCtx);
      }
    }
  }
 else   if (pred instanceof ExprNodeColumnDesc) {
    ExprNodeColumnDesc encd=(ExprNodeColumnDesc)pred;
    String colName=encd.getColumn();
    String tabAlias=encd.getTabAlias();
    String colType=encd.getTypeString();
    if (colType.equalsIgnoreCase(serdeConstants.BOOLEAN_TYPE_NAME)) {
      ColStatistics cs=stats.getColumnStatisticsForColumn(tabAlias,colName);
      return cs.getNumTrues();
    }
 else {
      return stats.getNumRows() / 2;
    }
  }
  return newNumRows;
}
