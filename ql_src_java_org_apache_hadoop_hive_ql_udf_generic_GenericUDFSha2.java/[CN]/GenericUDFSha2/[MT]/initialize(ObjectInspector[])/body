{
  checkArgsSize(arguments,2,2);
  checkArgPrimitive(arguments,0);
  checkArgPrimitive(arguments,1);
  checkArgGroups(arguments,0,inputTypes,STRING_GROUP,BINARY_GROUP);
  checkArgGroups(arguments,1,inputTypes,NUMERIC_GROUP);
  if (PrimitiveObjectInspectorUtils.getPrimitiveGrouping(inputTypes[0]) == STRING_GROUP) {
    obtainStringConverter(arguments,0,inputTypes,converters);
    isStr=true;
  }
 else {
    GenericUDFParamUtils.obtainBinaryConverter(arguments,0,inputTypes,converters);
    isStr=false;
  }
  if (arguments[1] instanceof ConstantObjectInspector) {
    Integer lenObj=getConstantIntValue(arguments,1);
    if (lenObj != null) {
      int len=lenObj.intValue();
      if (len == 0) {
        len=256;
      }
      try {
        digest=MessageDigest.getInstance("SHA-" + len);
      }
 catch (      NoSuchAlgorithmException e) {
      }
    }
  }
 else {
    throw new UDFArgumentTypeException(1,getFuncName() + " only takes constant as " + getArgOrder(1)+ " argument");
  }
  ObjectInspector outputOI=PrimitiveObjectInspectorFactory.writableStringObjectInspector;
  return outputOI;
}
