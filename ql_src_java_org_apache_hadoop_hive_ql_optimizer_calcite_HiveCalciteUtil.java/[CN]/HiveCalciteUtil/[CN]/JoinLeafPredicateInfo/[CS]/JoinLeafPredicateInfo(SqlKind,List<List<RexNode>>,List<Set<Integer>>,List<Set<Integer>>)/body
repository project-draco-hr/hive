{
  this.comparisonType=comparisonType;
  ImmutableList.Builder<ImmutableList<RexNode>> joinKeyExprsBuilder=ImmutableList.builder();
  for (int i=0; i < joinKeyExprs.size(); i++) {
    joinKeyExprsBuilder.add(ImmutableList.copyOf(joinKeyExprs.get(i)));
  }
  this.joinKeyExprs=joinKeyExprsBuilder.build();
  ImmutableList.Builder<ImmutableSet<Integer>> projsJoinKeysInChildSchemaBuilder=ImmutableList.builder();
  for (int i=0; i < projsJoinKeysInChildSchema.size(); i++) {
    projsJoinKeysInChildSchemaBuilder.add(ImmutableSet.copyOf(projsJoinKeysInChildSchema.get(i)));
  }
  this.projsJoinKeysInChildSchema=projsJoinKeysInChildSchemaBuilder.build();
  ImmutableList.Builder<ImmutableSet<Integer>> projsJoinKeysInJoinSchemaBuilder=ImmutableList.builder();
  for (int i=0; i < projsJoinKeysInJoinSchema.size(); i++) {
    projsJoinKeysInJoinSchemaBuilder.add(ImmutableSet.copyOf(projsJoinKeysInJoinSchema.get(i)));
  }
  this.projsJoinKeysInJoinSchema=projsJoinKeysInJoinSchemaBuilder.build();
}
