{
  final List<String> columnNames=createHiveColumnsFrom(columnNamesStr);
  final List<TypeInfo> columnTypes=createHiveTypeInfoFrom(columnsTypeStr);
  final MessageType messageTypeFound=HiveSchemaConverter.convert(columnNames,columnTypes);
  final MessageType expectedMT=MessageTypeParser.parseMessageType(expectedSchema);
  assertEquals("converting " + columnNamesStr + ": "+ columnsTypeStr+ " to "+ expectedSchema,expectedMT,messageTypeFound);
  List<Type> expectedFields=expectedMT.getFields();
  List<Type> actualFields=messageTypeFound.getFields();
  for (int i=0, n=expectedFields.size(); i < n; ++i) {
    OriginalType exp=expectedFields.get(i).getOriginalType();
    OriginalType act=actualFields.get(i).getOriginalType();
    assertEquals("Original types of the field do not match",exp,act);
  }
}
