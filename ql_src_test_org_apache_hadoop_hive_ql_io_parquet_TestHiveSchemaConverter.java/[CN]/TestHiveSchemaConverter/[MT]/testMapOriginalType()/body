{
  final String hiveColumnTypes="map<string,string>";
  final String hiveColumnNames="mapCol";
  final List<String> columnNames=createHiveColumnsFrom(hiveColumnNames);
  final List<TypeInfo> columnTypes=createHiveTypeInfoFrom(hiveColumnTypes);
  final MessageType messageTypeFound=HiveSchemaConverter.convert(columnNames,columnTypes);
  assertEquals(1,messageTypeFound.getFieldCount());
  parquet.schema.Type topLevel=messageTypeFound.getFields().get(0);
  assertEquals("mapCol",topLevel.getName());
  assertEquals(OriginalType.MAP,topLevel.getOriginalType());
  assertEquals(Repetition.OPTIONAL,topLevel.getRepetition());
  assertEquals(1,topLevel.asGroupType().getFieldCount());
  parquet.schema.Type secondLevel=topLevel.asGroupType().getFields().get(0);
  assertEquals("map",secondLevel.getName());
  assertEquals(OriginalType.MAP_KEY_VALUE,secondLevel.getOriginalType());
  assertEquals(Repetition.REPEATED,secondLevel.getRepetition());
}
