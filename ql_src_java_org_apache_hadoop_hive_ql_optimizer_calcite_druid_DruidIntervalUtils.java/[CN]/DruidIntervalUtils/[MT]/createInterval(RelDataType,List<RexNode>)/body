{
  List<Range> ranges=new ArrayList<>();
  for (  RexNode child : conjs) {
    List<Range> extractedRanges=extractRanges(type,child,false);
    if (extractedRanges == null || extractedRanges.isEmpty()) {
      return null;
    }
    if (ranges.isEmpty()) {
      ranges.addAll(extractedRanges);
      continue;
    }
    List<Range> overlapped=Lists.newArrayList();
    for (    Range current : ranges) {
      for (      Range interval : extractedRanges) {
        if (current.isConnected(interval)) {
          overlapped.add(current.intersection(interval));
        }
      }
    }
    ranges=overlapped;
  }
  List<Range> compactRanges=condenseRanges(ranges);
  LOG.debug("Inferred ranges on interval : " + compactRanges);
  return toInterval(compactRanges);
}
