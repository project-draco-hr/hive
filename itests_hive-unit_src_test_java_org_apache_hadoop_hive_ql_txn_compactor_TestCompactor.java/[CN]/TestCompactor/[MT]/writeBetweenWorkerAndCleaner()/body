{
  String tblName="HIVE12352";
  executeStatementOnDriver("drop table if exists " + tblName,driver);
  executeStatementOnDriver("CREATE TABLE " + tblName + "(a INT, b STRING) "+ " CLUSTERED BY(a) INTO 1 BUCKETS"+ " STORED AS ORC  TBLPROPERTIES ('transactional'='true')",driver);
  executeStatementOnDriver("insert into " + tblName + " values(1, 'foo'),(2, 'bar'),(3, 'baz')",driver);
  executeStatementOnDriver("update " + tblName + " set b = 'blah' where a = 3",driver);
  CompactionTxnHandler txnHandler=new CompactionTxnHandler(conf);
  txnHandler.compact(new CompactionRequest("default",tblName,CompactionType.MINOR));
  Worker t=new Worker();
  t.setThreadId((int)t.getId());
  t.setHiveConf(conf);
  AtomicBoolean stop=new AtomicBoolean(true);
  AtomicBoolean looped=new AtomicBoolean();
  t.init(stop,looped);
  t.run();
  conf.setBoolVar(HiveConf.ConfVars.HIVETESTMODEROLLBACKTXN,true);
  executeStatementOnDriver("delete from " + tblName + " where a = 1",driver);
  conf.setBoolVar(HiveConf.ConfVars.HIVETESTMODEROLLBACKTXN,false);
  List<String> expected=new ArrayList<>();
  expected.add("1\tfoo");
  expected.add("2\tbar");
  expected.add("3\tblah");
  Assert.assertEquals("",expected,execSelectAndDumpData("select a,b from " + tblName + " order by a",driver,"writeBetweenWorkerAndCleaner()"));
  Cleaner c=new Cleaner();
  c.setThreadId((int)c.getId());
  c.setHiveConf(conf);
  c.init(stop,new AtomicBoolean());
  c.run();
  Initiator i=new Initiator();
  i.setThreadId((int)i.getId());
  i.setHiveConf(conf);
  i.init(stop,new AtomicBoolean());
  i.run();
  Assert.assertEquals("",expected,execSelectAndDumpData("select a,b from " + tblName + " order by a",driver,"writeBetweenWorkerAndCleaner()"));
}
