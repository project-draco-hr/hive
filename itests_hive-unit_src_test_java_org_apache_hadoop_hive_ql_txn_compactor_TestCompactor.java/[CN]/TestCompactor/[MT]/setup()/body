{
  File f=new File(TEST_WAREHOUSE_DIR);
  if (f.exists()) {
    FileUtil.fullyDelete(f);
  }
  if (!(new File(TEST_WAREHOUSE_DIR).mkdirs())) {
    throw new RuntimeException("Could not create " + TEST_WAREHOUSE_DIR);
  }
  HiveConf hiveConf=new HiveConf(this.getClass());
  hiveConf.setVar(HiveConf.ConfVars.PREEXECHOOKS,"");
  hiveConf.setVar(HiveConf.ConfVars.POSTEXECHOOKS,"");
  hiveConf.setVar(HiveConf.ConfVars.METASTOREWAREHOUSE,TEST_WAREHOUSE_DIR);
  hiveConf.setVar(HiveConf.ConfVars.HIVEINPUTFORMAT,HiveInputFormat.class.getName());
  hiveConf.setVar(HiveConf.ConfVars.DYNAMICPARTITIONINGMODE,"nonstrict");
  hiveConf.setVar(HiveConf.ConfVars.HIVEMAPREDMODE,"nonstrict");
  TxnDbUtil.setConfValues(hiveConf);
  TxnDbUtil.cleanDb();
  TxnDbUtil.prepDb();
  conf=hiveConf;
  msClient=new HiveMetaStoreClient(conf);
  driver=new Driver(hiveConf);
  SessionState.start(new CliSessionState(hiveConf));
  int LOOP_SIZE=3;
  String[] input=new String[LOOP_SIZE * LOOP_SIZE];
  int k=0;
  for (int i=1; i <= LOOP_SIZE; i++) {
    String si=i + "";
    for (int j=1; j <= LOOP_SIZE; j++) {
      String sj="S" + j + "S";
      input[k]=si + "\t" + sj;
      k++;
    }
  }
  createTestDataFile(BASIC_FILE_NAME,input);
}
