{
  ASTNode tableTypeExpr=(ASTNode)ast.getChild(0);
  String qualifiedName=QualifiedNameUtil.getFullyQualifiedName((ASTNode)tableTypeExpr.getChild(0));
  String tableName=QualifiedNameUtil.getTableName(db,(ASTNode)(tableTypeExpr.getChild(0)));
  String dbName=QualifiedNameUtil.getDBName(db,(ASTNode)(tableTypeExpr.getChild(0)));
  Map<String,String> partSpec=QualifiedNameUtil.getPartitionSpec(db,tableTypeExpr,tableName);
  String colPath=QualifiedNameUtil.getColPath(db,tableTypeExpr,(ASTNode)tableTypeExpr.getChild(0),qualifiedName,partSpec);
  if (dbName != null) {
    validateDatabase(dbName);
  }
  if (partSpec != null) {
    validateTable(tableName,partSpec);
  }
  DescTableDesc descTblDesc=new DescTableDesc(ctx.getResFile(),tableName,partSpec,colPath);
  if (ast.getChildCount() == 2) {
    int descOptions=ast.getChild(1).getType();
    descTblDesc.setFormatted(descOptions == HiveParser.KW_FORMATTED);
    descTblDesc.setExt(descOptions == HiveParser.KW_EXTENDED);
  }
  rootTasks.add(TaskFactory.get(new DDLWork(getInputs(),getOutputs(),descTblDesc),conf));
  setFetchTask(createFetchTask(DescTableDesc.getSchema()));
  LOG.info("analyzeDescribeTable done");
}
