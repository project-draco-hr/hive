{
  List<FieldSchema> colList=new ArrayList<FieldSchema>();
  int numCh=ast.getChildCount();
  for (int i=0; i < numCh; i++) {
    FieldSchema col=new FieldSchema();
    CommonTree child=(CommonTree)ast.getChild(i);
    col.setName(unescapeIdentifier(child.getChild(0).getText()));
    CommonTree typeChild=(CommonTree)(child.getChild(1));
    if (typeChild.getToken().getType() == HiveParser.TOK_LIST) {
      CommonTree typName=(CommonTree)typeChild.getChild(0);
      col.setType(MetaStoreUtils.getListType(getTypeName(typName.getToken().getType())));
    }
 else     if (typeChild.getToken().getType() == HiveParser.TOK_MAP) {
      CommonTree ltypName=(CommonTree)typeChild.getChild(0);
      CommonTree rtypName=(CommonTree)typeChild.getChild(1);
      col.setType(MetaStoreUtils.getMapType(getTypeName(ltypName.getToken().getType()),getTypeName(rtypName.getToken().getType())));
    }
 else     col.setType(getTypeName(typeChild.getToken().getType()));
    if (child.getChildCount() == 3)     col.setComment(unescapeSQLString(child.getChild(2).getText()));
    colList.add(col);
  }
  return colList;
}
