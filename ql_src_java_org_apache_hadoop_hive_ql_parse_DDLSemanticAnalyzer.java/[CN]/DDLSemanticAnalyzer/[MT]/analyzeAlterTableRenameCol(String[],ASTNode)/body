{
  String newComment=null;
  String newType=null;
  newType=getTypeStringFromAST((ASTNode)ast.getChild(2));
  boolean first=false;
  String flagCol=null;
  ASTNode positionNode=null;
  if (ast.getChildCount() == 5) {
    newComment=unescapeSQLString(ast.getChild(3).getText());
    positionNode=(ASTNode)ast.getChild(4);
  }
 else   if (ast.getChildCount() == 4) {
    if (ast.getChild(3).getType() == HiveParser.StringLiteral) {
      newComment=unescapeSQLString(ast.getChild(3).getText());
    }
 else {
      positionNode=(ASTNode)ast.getChild(3);
    }
  }
  if (positionNode != null) {
    if (positionNode.getChildCount() == 0) {
      first=true;
    }
 else {
      flagCol=unescapeIdentifier(positionNode.getChild(0).getText());
    }
  }
  String oldColName=ast.getChild(0).getText();
  String newColName=ast.getChild(1).getText();
  Table tab=getTable(qualified);
  SkewedInfo skewInfo=tab.getTTable().getSd().getSkewedInfo();
  if ((null != skewInfo) && (null != skewInfo.getSkewedColNames()) && skewInfo.getSkewedColNames().contains(oldColName)) {
    throw new SemanticException(oldColName + ErrorMsg.ALTER_TABLE_NOT_ALLOWED_RENAME_SKEWED_COLUMN.getMsg());
  }
  String tblName=getDotName(qualified);
  AlterTableDesc alterTblDesc=new AlterTableDesc(tblName,unescapeIdentifier(oldColName),unescapeIdentifier(newColName),newType,newComment,first,flagCol);
  addInputsOutputsAlterTable(tblName,null,alterTblDesc);
  rootTasks.add(TaskFactory.get(new DDLWork(getInputs(),getOutputs(),alterTblDesc),conf));
}
