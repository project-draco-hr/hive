{
  String baseTableName=unescapeIdentifier(ast.getChild(0).getText());
  String indexName=unescapeIdentifier(ast.getChild(1).getText());
  HashMap<String,String> partSpec=null;
  Map<Map<String,String>,Long> basePartTs=new HashMap<Map<String,String>,Long>();
  Map<String,String> props=new HashMap<String,String>();
  Tree part=ast.getChild(2);
  if (part != null) {
    partSpec=extractPartitionSpecs(part);
  }
  AlterIndexDesc alterIdxDesc=new AlterIndexDesc(AlterIndexTypes.ADDPROPS);
  try {
    long timestamp;
    Table baseTbl=db.getTable(db.getCurrentDatabase(),baseTableName);
    if (baseTbl.isPartitioned()) {
      List<Partition> baseParts;
      if (part != null) {
        baseParts=db.getPartitions(baseTbl,partSpec);
      }
 else {
        baseParts=db.getPartitions(baseTbl);
      }
      if (baseParts != null) {
        for (        Partition p : baseParts) {
          FileSystem fs=p.getPartitionPath().getFileSystem(db.getConf());
          FileStatus fss=fs.getFileStatus(p.getPartitionPath());
          basePartTs.put(p.getSpec(),fss.getModificationTime());
        }
      }
    }
 else {
      FileSystem fs=baseTbl.getPath().getFileSystem(db.getConf());
      FileStatus fss=fs.getFileStatus(baseTbl.getPath());
      basePartTs.put(null,fss.getModificationTime());
    }
    for (    Map<String,String> spec : basePartTs.keySet()) {
      if (spec != null) {
        props.put(spec.toString(),basePartTs.get(spec).toString());
      }
 else {
        props.put("base_timestamp",basePartTs.get(null).toString());
      }
    }
    alterIdxDesc.setProps(props);
  }
 catch (  Exception e) {
  }
  alterIdxDesc.setIndexName(indexName);
  alterIdxDesc.setBaseTableName(baseTableName);
  alterIdxDesc.setDbName(db.getCurrentDatabase());
  List<Task<?>> indexBuilder=getIndexBuilderMapRed(baseTableName,indexName,partSpec);
  rootTasks.addAll(indexBuilder);
  rootTasks.add(TaskFactory.get(new DDLWork(alterIdxDesc),conf));
}
