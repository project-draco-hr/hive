{
  String dbName=unescapeIdentifier(ast.getChild(0).getText());
  boolean ifExists=false;
  boolean ifCascade=false;
  if (null != ast.getFirstChildWithType(HiveParser.TOK_IFEXISTS)) {
    ifExists=true;
  }
  if (null != ast.getFirstChildWithType(HiveParser.TOK_CASCADE)) {
    ifCascade=true;
  }
  Database database=getDatabase(dbName,!ifExists);
  if (database == null) {
    return;
  }
  if (ifCascade) {
    List<String> tableNames;
    try {
      tableNames=db.getAllTables(dbName);
    }
 catch (    HiveException e) {
      throw new SemanticException(e);
    }
    if (tableNames != null) {
      for (      String tableName : tableNames) {
        Table table=getTable(dbName,tableName,true);
        outputs.add(new WriteEntity(table,WriteEntity.WriteType.DDL));
      }
    }
  }
  inputs.add(new ReadEntity(database));
  outputs.add(new WriteEntity(database,WriteEntity.WriteType.DDL));
  DropDatabaseDesc dropDatabaseDesc=new DropDatabaseDesc(dbName,ifExists,ifCascade);
  rootTasks.add(TaskFactory.get(new DDLWork(getInputs(),getOutputs(),dropDatabaseDesc),conf));
}
