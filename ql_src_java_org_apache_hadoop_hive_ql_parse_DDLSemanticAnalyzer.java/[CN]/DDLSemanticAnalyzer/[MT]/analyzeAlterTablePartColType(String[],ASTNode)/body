{
  Table tab=getTable(qualified);
  inputs.add(new ReadEntity(tab));
  validateAlterTableType(tab,AlterTableTypes.ALTERPARTITION,false);
  ASTNode colAst=(ASTNode)ast.getChild(0);
  FieldSchema newCol=new FieldSchema();
  String name=colAst.getChild(0).getText().toLowerCase();
  newCol.setName(unescapeIdentifier(name));
  ASTNode typeChild=(ASTNode)(colAst.getChild(1));
  newCol.setType(getTypeStringFromAST(typeChild));
  if (colAst.getChildCount() == 3) {
    newCol.setComment(unescapeSQLString(colAst.getChild(2).getText()));
  }
  boolean fFoundColumn=false;
  for (  FieldSchema col : tab.getTTable().getPartitionKeys()) {
    if (col.getName().compareTo(newCol.getName()) == 0) {
      fFoundColumn=true;
    }
  }
  if (!fFoundColumn) {
    throw new SemanticException(ErrorMsg.INVALID_COLUMN.getMsg(newCol.getName()));
  }
  AlterTableAlterPartDesc alterTblAlterPartDesc=new AlterTableAlterPartDesc(getDotName(qualified),newCol);
  rootTasks.add(TaskFactory.get(new DDLWork(getInputs(),getOutputs(),alterTblAlterPartDesc),conf));
}
