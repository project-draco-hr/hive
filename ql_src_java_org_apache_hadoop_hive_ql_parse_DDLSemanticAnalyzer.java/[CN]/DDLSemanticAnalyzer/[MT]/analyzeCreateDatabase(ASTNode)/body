{
  String dbName=unescapeIdentifier(ast.getChild(0).getText());
  boolean ifNotExists=false;
  String dbComment=null;
  String dbLocation=null;
  Map<String,String> dbProps=null;
  for (int i=1; i < ast.getChildCount(); i++) {
    ASTNode childNode=(ASTNode)ast.getChild(i);
switch (childNode.getToken().getType()) {
case TOK_IFNOTEXISTS:
      ifNotExists=true;
    break;
case TOK_DATABASECOMMENT:
  dbComment=unescapeSQLString(childNode.getChild(0).getText());
break;
case HiveParser.TOK_DATABASEPROPERTIES:
dbProps=DDLSemanticAnalyzer.getProps((ASTNode)childNode.getChild(0));
break;
case HiveParser.TOK_DATABASELOCATION:
dbLocation=unescapeSQLString(childNode.getChild(0).getText());
break;
default :
throw new SemanticException("Unrecognized token in CREATE DATABASE statement");
}
}
CreateDatabaseDesc createDatabaseDesc=new CreateDatabaseDesc(dbName,dbComment,dbLocation,ifNotExists);
if (dbProps != null) {
createDatabaseDesc.setDatabaseProperties(dbProps);
}
rootTasks.add(TaskFactory.get(new DDLWork(getInputs(),getOutputs(),createDatabaseDesc),conf));
}
