{
  if (ast.getToken().getType() == HiveParser.TOK_CREATETABLE)   analyzeCreateTable(ast);
 else   if (ast.getToken().getType() == HiveParser.TOK_DROPTABLE)   analyzeDropTable(ast);
 else   if (ast.getToken().getType() == HiveParser.TOK_DESCTABLE) {
    ctx.setResFile(new Path(ctx.getLocalTmpFileURI()));
    analyzeDescribeTable(ast);
  }
 else   if (ast.getToken().getType() == HiveParser.TOK_SHOWTABLES) {
    ctx.setResFile(new Path(ctx.getLocalTmpFileURI()));
    analyzeShowTables(ast);
  }
 else   if (ast.getToken().getType() == HiveParser.TOK_SHOW_TABLESTATUS) {
    ctx.setResFile(new Path(ctx.getLocalTmpFileURI()));
    analyzeShowTableStatus(ast);
  }
 else   if (ast.getToken().getType() == HiveParser.TOK_SHOWFUNCTIONS) {
    ctx.setResFile(new Path(ctx.getLocalTmpFileURI()));
    analyzeShowFunctions(ast);
  }
 else   if (ast.getToken().getType() == HiveParser.TOK_DESCFUNCTION) {
    ctx.setResFile(new Path(ctx.getLocalTmpFileURI()));
    analyzeDescFunction(ast);
  }
 else   if (ast.getToken().getType() == HiveParser.TOK_MSCK) {
    ctx.setResFile(new Path(ctx.getLocalTmpFileURI()));
    analyzeMetastoreCheck(ast);
  }
 else   if (ast.getToken().getType() == HiveParser.TOK_ALTERTABLE_RENAME)   analyzeAlterTableRename(ast);
 else   if (ast.getToken().getType() == HiveParser.TOK_ALTERTABLE_ADDCOLS)   analyzeAlterTableModifyCols(ast,alterTableTypes.ADDCOLS);
 else   if (ast.getToken().getType() == HiveParser.TOK_ALTERTABLE_REPLACECOLS)   analyzeAlterTableModifyCols(ast,alterTableTypes.REPLACECOLS);
 else   if (ast.getToken().getType() == HiveParser.TOK_ALTERTABLE_ADDPARTS) {
    analyzeAlterTableAddParts(ast);
  }
 else   if (ast.getToken().getType() == HiveParser.TOK_ALTERTABLE_DROPPARTS)   analyzeAlterTableDropParts(ast);
 else   if (ast.getToken().getType() == HiveParser.TOK_ALTERTABLE_PROPERTIES)   analyzeAlterTableProps(ast);
 else   if (ast.getToken().getType() == HiveParser.TOK_ALTERTABLE_SERDEPROPERTIES)   analyzeAlterTableSerdeProps(ast);
 else   if (ast.getToken().getType() == HiveParser.TOK_ALTERTABLE_SERIALIZER)   analyzeAlterTableSerde(ast);
 else   if (ast.getToken().getType() == HiveParser.TOK_SHOWPARTITIONS) {
    ctx.setResFile(new Path(ctx.getLocalTmpFileURI()));
    analyzeShowPartitions(ast);
  }
 else {
    throw new SemanticException("Unsupported command.");
  }
}
