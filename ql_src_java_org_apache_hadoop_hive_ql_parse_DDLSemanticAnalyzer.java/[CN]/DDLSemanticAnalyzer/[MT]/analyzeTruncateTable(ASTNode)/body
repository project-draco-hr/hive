{
  ASTNode root=(ASTNode)ast.getChild(0);
  String tableName=getUnescapedName((ASTNode)root.getChild(0));
  Table table=getTable(tableName,true);
  if (table.getTableType() != TableType.MANAGED_TABLE) {
    throw new SemanticException(ErrorMsg.TRUNCATE_FOR_NON_MANAGED_TABLE.format(tableName));
  }
  if (table.isNonNative()) {
    throw new SemanticException(ErrorMsg.TRUNCATE_FOR_NON_NATIVE_TABLE.format(tableName));
  }
  if (!table.isPartitioned() && root.getChildCount() > 1) {
    throw new SemanticException(ErrorMsg.PARTSPEC_FOR_NON_PARTITIONED_TABLE.format(tableName));
  }
  Map<String,String> partSpec=getPartSpec((ASTNode)root.getChild(1));
  if (partSpec == null) {
    if (!table.isPartitioned()) {
      outputs.add(new WriteEntity(table));
    }
 else {
      for (      Partition partition : getPartitions(table,null,false)) {
        outputs.add(new WriteEntity(partition));
      }
    }
  }
 else {
    if (isFullSpec(table,partSpec)) {
      Partition partition=getPartition(table,partSpec,true);
      outputs.add(new WriteEntity(partition));
    }
 else {
      for (      Partition partition : getPartitions(table,partSpec,false)) {
        outputs.add(new WriteEntity(partition));
      }
    }
  }
  TruncateTableDesc truncateTblDesc=new TruncateTableDesc(tableName,partSpec);
  rootTasks.add(TaskFactory.get(new DDLWork(getInputs(),getOutputs(),truncateTblDesc),conf));
}
