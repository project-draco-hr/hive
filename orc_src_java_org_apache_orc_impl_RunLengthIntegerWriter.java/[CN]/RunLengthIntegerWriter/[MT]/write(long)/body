{
  if (numLiterals == 0) {
    literals[numLiterals++]=value;
    tailRunLength=1;
  }
 else   if (repeat) {
    if (value == literals[0] + delta * numLiterals) {
      numLiterals+=1;
      if (numLiterals == MAX_REPEAT_SIZE) {
        writeValues();
      }
    }
 else {
      writeValues();
      literals[numLiterals++]=value;
      tailRunLength=1;
    }
  }
 else {
    if (tailRunLength == 1) {
      delta=value - literals[numLiterals - 1];
      if (delta < MIN_DELTA || delta > MAX_DELTA) {
        tailRunLength=1;
      }
 else {
        tailRunLength=2;
      }
    }
 else     if (value == literals[numLiterals - 1] + delta) {
      tailRunLength+=1;
    }
 else {
      delta=value - literals[numLiterals - 1];
      if (delta < MIN_DELTA || delta > MAX_DELTA) {
        tailRunLength=1;
      }
 else {
        tailRunLength=2;
      }
    }
    if (tailRunLength == MIN_REPEAT_SIZE) {
      if (numLiterals + 1 == MIN_REPEAT_SIZE) {
        repeat=true;
        numLiterals+=1;
      }
 else {
        numLiterals-=MIN_REPEAT_SIZE - 1;
        long base=literals[numLiterals];
        writeValues();
        literals[0]=base;
        repeat=true;
        numLiterals=MIN_REPEAT_SIZE;
      }
    }
 else {
      literals[numLiterals++]=value;
      if (numLiterals == MAX_LITERAL_SIZE) {
        writeValues();
      }
    }
  }
}
