{
  long evicted=0;
  lock.lock();
  try {
    Iterator<LlapCacheableBuffer> iter=buffers.iterator();
    while (evicted < memoryToReserve && iter.hasNext()) {
      LlapCacheableBuffer candidate=iter.next();
      if (candidate.invalidate()) {
        iter.remove();
        evicted+=candidate.length;
        listener.notifyEvicted(candidate);
      }
    }
  }
  finally {
    lock.unlock();
  }
  return evicted;
}
