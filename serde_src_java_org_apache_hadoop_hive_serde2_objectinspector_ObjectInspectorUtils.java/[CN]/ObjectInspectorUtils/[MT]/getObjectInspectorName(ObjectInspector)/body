{
switch (oi.getCategory()) {
case PRIMITIVE:
{
      return oi.getClass().getSimpleName();
    }
case LIST:
{
    ListObjectInspector loi=(ListObjectInspector)oi;
    return oi.getClass().getSimpleName() + "<" + getObjectInspectorName(loi.getListElementObjectInspector())+ ">";
  }
case MAP:
{
  MapObjectInspector moi=(MapObjectInspector)oi;
  return oi.getClass().getSimpleName() + "<" + getObjectInspectorName(moi.getMapKeyObjectInspector())+ ","+ getObjectInspectorName(moi.getMapValueObjectInspector())+ ">";
}
case STRUCT:
{
StringBuffer result=new StringBuffer();
result.append(oi.getClass().getSimpleName() + "<");
StructObjectInspector soi=(StructObjectInspector)oi;
List<? extends StructField> fields=soi.getAllStructFieldRefs();
for (int i=0; i < fields.size(); i++) {
  result.append(fields.get(i).getFieldName());
  result.append(":");
  result.append(getObjectInspectorName(fields.get(i).getFieldObjectInspector()));
  if (i == fields.size() - 1) {
    result.append(">");
  }
 else {
    result.append(",");
  }
}
return result.toString();
}
default :
{
throw new RuntimeException("Unknown ObjectInspector category!");
}
}
}
