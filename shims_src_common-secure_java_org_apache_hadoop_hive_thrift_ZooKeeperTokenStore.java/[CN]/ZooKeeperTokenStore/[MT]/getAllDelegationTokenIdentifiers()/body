{
  String containerNode=rootNode + NODE_TOKENS;
  final List<String> nodes;
  try {
    nodes=getSession().getChildren(containerNode,false);
  }
 catch (  KeeperException ex) {
    throw new TokenStoreError(ex);
  }
catch (  InterruptedException ex) {
    throw new TokenStoreError(ex);
  }
  List<DelegationTokenIdentifier> result=new java.util.ArrayList<DelegationTokenIdentifier>(nodes.size());
  for (  String node : nodes) {
    DelegationTokenIdentifier id=new DelegationTokenIdentifier();
    try {
      TokenStoreDelegationTokenSecretManager.decodeWritable(id,node);
      result.add(id);
    }
 catch (    Exception e) {
      LOGGER.warn("Failed to decode token '{}'",node);
    }
  }
  return result;
}
