{
  startHiveServer();
  hiveConf.setIntVar(HiveConf.ConfVars.HIVE_SERVER2_THRIFT_PORT,17000);
  try {
    RetryingThriftCLIServiceClientTest.newRetryingCLIServiceClient(hiveConf);
    fail("Expected to throw exception for invalid port");
  }
 catch (  HiveSQLException sqlExc) {
    assertTrue(sqlExc.getCause() instanceof TTransportException);
    assertTrue(sqlExc.getMessage().contains("3"));
  }
  hiveConf.setIntVar(HiveConf.ConfVars.HIVE_SERVER2_THRIFT_PORT,15000);
  RetryingThriftCLIServiceClient.CLIServiceClientWrapper cliServiceClient=RetryingThriftCLIServiceClientTest.newRetryingCLIServiceClient(hiveConf);
  System.out.println("## Created client");
  stopHiveServer();
  Thread.sleep(5000);
  try {
    RetryingThriftCLIServiceClientTest.handlerInst.callCount=0;
    RetryingThriftCLIServiceClientTest.handlerInst.connectCount=0;
    cliServiceClient.openSession("anonymous","anonymous");
  }
 catch (  HiveSQLException exc) {
    exc.printStackTrace();
    assertTrue(exc.getCause() instanceof TException);
    assertEquals(1,RetryingThriftCLIServiceClientTest.handlerInst.callCount);
    assertEquals(3,RetryingThriftCLIServiceClientTest.handlerInst.connectCount);
  }
 finally {
    cliServiceClient.closeTransport();
  }
}
