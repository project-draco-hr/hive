{
  @SuppressWarnings("rawtypes") RowContainer bigTblRowContainer=this.candidateStorage[this.posBigTable];
  boolean allFetchDone=allFetchDone();
  while (bigTblRowContainer != null && bigTblRowContainer.rowCount() > 0 && !allFetchDone) {
    joinOneGroup();
    bigTblRowContainer=this.candidateStorage[this.posBigTable];
    allFetchDone=allFetchDone();
  }
  while (!allFetchDone) {
    List<Byte> ret=joinOneGroup();
    fetchDone[posBigTable]=true;
    doFirstFetchIfNeeded();
    int lastPos=(fetchDone.length - 1);
    if (posBigTable != lastPos && (fetchInputAtClose.contains(lastPos)) && (fetchDone[lastPos] == false)) {
      LOG.debug("Calling joinOneGroup once again");
      ret=joinOneGroup();
    }
    if (ret == null || ret.size() == 0) {
      break;
    }
    reportProgress();
    numMapRowsRead++;
    allFetchDone=allFetchDone();
  }
  boolean dataInCache=true;
  while (dataInCache) {
    for (byte pos=0; pos < order.length; pos++) {
      if (this.foundNextKeyGroup[pos] && this.nextKeyWritables[pos] != null) {
        promoteNextGroupToCandidate(pos);
      }
    }
    joinOneGroup();
    dataInCache=false;
    for (byte pos=0; pos < order.length; pos++) {
      if (candidateStorage[pos] == null) {
        continue;
      }
      if (this.candidateStorage[pos].hasRows()) {
        dataInCache=true;
        break;
      }
    }
  }
}
