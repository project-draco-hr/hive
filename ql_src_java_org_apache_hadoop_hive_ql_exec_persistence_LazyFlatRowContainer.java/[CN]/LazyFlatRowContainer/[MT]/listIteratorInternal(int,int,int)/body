{
  return new ListIterator<Object>(){
    private int pos=index - 1;
    public int nextIndex(){
      return pos + 1;
    }
    public int previousIndex(){
      return pos - 1;
    }
    public boolean hasNext(){
      return nextIndex() < iterMaxPos;
    }
    public boolean hasPrevious(){
      return previousIndex() >= iterMinPos;
    }
    public Object next(){
      if (!hasNext())       throw new NoSuchElementException();
      return get(++pos);
    }
    public Object previous(){
      if (!hasPrevious())       throw new NoSuchElementException();
      return get(--pos);
    }
    public void remove(){
      throw new UnsupportedOperationException();
    }
    public void set(    Object e){
      throw new UnsupportedOperationException();
    }
    public void add(    Object e){
      throw new UnsupportedOperationException();
    }
  }
;
}
