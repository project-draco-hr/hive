{
  setState(OperationState.RUNNING);
  if (isAuthV2Enabled()) {
    IMetaStoreClient metastoreClient=getParentSession().getMetaStoreClient();
    String schemaPattern=convertSchemaPattern(schemaName);
    List<String> matchingDbs;
    try {
      matchingDbs=metastoreClient.getDatabases(schemaPattern);
    }
 catch (    TException e) {
      setState(OperationState.ERROR);
      throw new HiveSQLException(e);
    }
    List<HivePrivilegeObject> privObjs=HivePrivilegeObjectUtils.getHivePrivDbObjects(matchingDbs);
    String cmdStr="catalog : " + catalogName + ", schemaPattern : "+ schemaName;
    authorizeMetaGets(HiveOperationType.GET_FUNCTIONS,privObjs,cmdStr);
  }
  try {
    if ((null == catalogName || "".equals(catalogName)) && (null == schemaName || "".equals(schemaName))) {
      Set<String> functionNames=FunctionRegistry.getFunctionNames(CLIServiceUtils.patternToRegex(functionName));
      for (      String functionName : functionNames) {
        FunctionInfo functionInfo=FunctionRegistry.getFunctionInfo(functionName);
        Object rowData[]=new Object[]{null,null,functionInfo.getDisplayName(),"",(functionInfo.isGenericUDTF() ? DatabaseMetaData.functionReturnsTable : DatabaseMetaData.functionNoTable),functionInfo.getClass().getCanonicalName()};
        rowSet.addRow(rowData);
      }
    }
    setState(OperationState.FINISHED);
  }
 catch (  Exception e) {
    setState(OperationState.ERROR);
    throw new HiveSQLException(e);
  }
}
