{
  if (conf.isSelStarNoCompute()) {
    initializeChildren(hconf);
    return;
  }
  List<ObjectInspector> objectInspectors=new ArrayList<ObjectInspector>();
  List<ExprNodeDesc> colList=conf.getColList();
  vContext.setOperatorType(OperatorType.SELECT);
  vExpressions=new VectorExpression[colList.size()];
  for (int i=0; i < colList.size(); i++) {
    vExpressions[i]=vContext.getVectorExpression(colList.get(i));
    String columnName=conf.getOutputColumnNames().get(i);
    vContext.addToColumnMap(columnName,vExpressions[i].getOutputColumn());
  }
  valueWriters=VectorExpressionWriterFactory.getExpressionWriters(colList);
  for (  VectorExpressionWriter vew : valueWriters) {
    objectInspectors.add(vew.getObjectInspector());
  }
  List<String> outputFieldNames=conf.getOutputColumnNames();
  outputObjInspector=ObjectInspectorFactory.getStandardStructObjectInspector(outputFieldNames,objectInspectors);
  initializeChildren(hconf);
  projectedColumns=new int[vExpressions.length];
  for (int i=0; i < projectedColumns.length; i++) {
    projectedColumns[i]=vExpressions[i].getOutputColumn();
  }
}
