{
  Collection<Future<?>> result=super.initializeOp(hconf);
  if (conf.isSelStarNoCompute()) {
    return null;
  }
  List<ObjectInspector> objectInspectors=new ArrayList<ObjectInspector>();
  List<ExprNodeDesc> colList=conf.getColList();
  valueWriters=VectorExpressionWriterFactory.getExpressionWriters(colList);
  for (  VectorExpressionWriter vew : valueWriters) {
    objectInspectors.add(vew.getObjectInspector());
  }
  List<String> outputFieldNames=conf.getOutputColumnNames();
  outputObjInspector=ObjectInspectorFactory.getStandardStructObjectInspector(outputFieldNames,objectInspectors);
  projectedColumns=new int[vExpressions.length];
  for (int i=0; i < projectedColumns.length; i++) {
    projectedColumns[i]=vExpressions[i].getOutputColumn();
  }
  return result;
}
