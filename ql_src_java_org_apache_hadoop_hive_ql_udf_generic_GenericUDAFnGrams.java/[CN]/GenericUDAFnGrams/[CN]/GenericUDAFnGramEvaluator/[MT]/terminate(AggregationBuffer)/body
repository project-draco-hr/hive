{
  NGramAggBuf myagg=(NGramAggBuf)agg;
  if (myagg.ngrams.size() < 1) {
    return null;
  }
  ArrayList<Object[]> result=new ArrayList<Object[]>();
  ArrayList list=new ArrayList(myagg.ngrams.entrySet());
  Collections.sort(list,new Comparator(){
    public int compare(    Object o1,    Object o2){
      return ((Double)((Map.Entry)o2).getValue()).compareTo(((Double)((Map.Entry)o1).getValue()));
    }
  }
);
  for (int i=0; i < list.size() && i < myagg.k; i++) {
    ArrayList<String> key=(ArrayList<String>)((Map.Entry)list.get(i)).getKey();
    Double val=(Double)((Map.Entry)list.get(i)).getValue();
    Object[] ngram=new Object[2];
    ngram[0]=new ArrayList<Text>();
    for (int j=0; j < key.size(); j++) {
      ((ArrayList<Text>)ngram[0]).add(new Text(key.get(j)));
    }
    ngram[1]=new DoubleWritable(val.doubleValue());
    result.add(ngram);
  }
  return result;
}
