{
  conf.setVar(HiveConf.ConfVars.HIVE_SERVER2_PLAIN_LDAP_BASEDN,"dc=example,dc=com");
  NamingEnumeration<SearchResult> customQueryResult=mockNamingEnumeration(mockSearchResult("uid=group1,ou=Groups,dc=example,dc=com",mockAttributes("member","uid=user1,ou=People,dc=example,dc=com")),mockSearchResult("uid=group2,ou=Groups,dc=example,dc=com",mockAttributes("member","uid=user2,ou=People,dc=example,dc=com")));
  when(ctx.search(eq("dc=example,dc=com"),anyString(),any(SearchControls.class))).thenReturn(customQueryResult);
  search=new LdapSearch(conf,ctx);
  List<String> expected=Arrays.asList("uid=group1,ou=Groups,dc=example,dc=com","uid=user1,ou=People,dc=example,dc=com","uid=group2,ou=Groups,dc=example,dc=com","uid=user2,ou=People,dc=example,dc=com");
  List<String> actual=search.executeCustomQuery("(&(objectClass=groupOfNames)(|(cn=group1)(cn=group2)))");
  Collections.sort(expected);
  Collections.sort(actual);
  assertEquals(expected,actual);
}
