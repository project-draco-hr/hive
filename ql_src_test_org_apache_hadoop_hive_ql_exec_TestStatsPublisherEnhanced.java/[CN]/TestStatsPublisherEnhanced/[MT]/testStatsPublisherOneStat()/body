{
  try {
    System.out.println("StatsPublisher - one stat published per key - aggregating matching key");
    StatsPublisher statsPublisher=Utilities.getStatsPublisher((JobConf)conf);
    assertNotNull(statsPublisher);
    StatsCollectionContext sc=new StatsCollectionContext(conf);
    assertTrue(statsPublisher.init(sc));
    assertTrue(statsPublisher.connect(sc));
    StatsAggregator statsAggregator=factory.getStatsAggregator();
    assertNotNull(statsAggregator);
    assertTrue(statsAggregator.connect(sc));
    fillStatMap("200","1000");
    assertTrue(statsPublisher.publishStat("file_00000",stats));
    fillStatMap("400","3000");
    assertTrue(statsPublisher.publishStat("file_00001",stats));
    String rows0=statsAggregator.aggregateStats("file_00000",StatsSetupConst.ROW_COUNT);
    assertEquals("200",rows0);
    String usize0=statsAggregator.aggregateStats("file_00000",StatsSetupConst.RAW_DATA_SIZE);
    assertEquals("1000",usize0);
    String rows1=statsAggregator.aggregateStats("file_00001",StatsSetupConst.ROW_COUNT);
    assertEquals("400",rows1);
    String usize1=statsAggregator.aggregateStats("file_00001",StatsSetupConst.RAW_DATA_SIZE);
    assertEquals("3000",usize1);
    assertTrue(statsPublisher.closeConnection(sc));
    assertTrue(statsAggregator.closeConnection(sc));
    System.out.println("StatsPublisher - one stat published per key - aggregating matching key - OK");
  }
 catch (  Throwable e) {
    e.printStackTrace();
    throw e;
  }
}
