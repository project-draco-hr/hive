{
  try {
    System.out.println("StatsPublisher - (multiple updates + publishing subset of supported statistics)");
    StatsPublisher statsPublisher=Utilities.getStatsPublisher((JobConf)conf);
    assertNotNull(statsPublisher);
    StatsCollectionContext sc=new StatsCollectionContext(conf);
    assertTrue(statsPublisher.init(sc));
    assertTrue(statsPublisher.connect(sc));
    StatsAggregator statsAggregator=factory.getStatsAggregator();
    assertNotNull(statsAggregator);
    assertTrue(statsAggregator.connect(sc));
    fillStatMap("200","");
    assertTrue(statsPublisher.publishStat("file_00000_a",stats));
    fillStatMap("300","2000");
    assertTrue(statsPublisher.publishStat("file_00000_b",stats));
    String rows0=statsAggregator.aggregateStats("file_00000",StatsSetupConst.ROW_COUNT);
    assertEquals("500",rows0);
    String usize0=statsAggregator.aggregateStats("file_00000",StatsSetupConst.RAW_DATA_SIZE);
    assertEquals("2000",usize0);
    fillStatMap("190","");
    assertTrue(statsPublisher.publishStat("file_00000_a",stats));
    fillStatMap("290","");
    assertTrue(statsPublisher.publishStat("file_00000_b",stats));
    rows0=statsAggregator.aggregateStats("file_00000",StatsSetupConst.ROW_COUNT);
    assertEquals("500",rows0);
    usize0=statsAggregator.aggregateStats("file_00000",StatsSetupConst.RAW_DATA_SIZE);
    assertEquals("2000",usize0);
    fillStatMap("500","");
    assertTrue(statsPublisher.publishStat("file_00000_a",stats));
    fillStatMap("500","");
    assertTrue(statsPublisher.publishStat("file_00000_b",stats));
    rows0=statsAggregator.aggregateStats("file_00000",StatsSetupConst.ROW_COUNT);
    assertEquals("1000",rows0);
    usize0=statsAggregator.aggregateStats("file_00000",StatsSetupConst.RAW_DATA_SIZE);
    assertEquals("0",usize0);
    assertTrue(statsAggregator.cleanUp("file_0000"));
    assertTrue(statsPublisher.closeConnection(sc));
    assertTrue(statsAggregator.closeConnection(sc));
    System.out.println("StatsPublisher - (multiple updates + publishing subset of supported statistics) - OK");
  }
 catch (  Throwable e) {
    e.printStackTrace();
    throw e;
  }
}
