{
  MapObjectInspector mapObjectInspector=(MapObjectInspector)fieldObjectInspector;
  Map<?,?> map=mapObjectInspector.getMap(value);
  if (map == null) {
    return;
  }
  ObjectInspector keyObjectInspector=mapObjectInspector.getMapKeyObjectInspector(), valueObjectInspector=mapObjectInspector.getMapValueObjectInspector();
  byte[] cfBytes=columnMapping.getColumnFamily().getBytes(Charsets.UTF_8), cqPrefixBytes=columnMapping.getColumnQualifierPrefix().getBytes(Charsets.UTF_8);
  byte[] cqBytes, valueBytes;
  for (  Entry<?,?> entry : map.entrySet()) {
    output.reset();
    if (0 < cqPrefixBytes.length) {
      output.write(cqPrefixBytes,0,cqPrefixBytes.length);
    }
    writeWithLevel(keyObjectInspector,entry.getKey(),output,columnMapping,3);
    cqBytes=output.toByteArray();
    output.reset();
    writeWithLevel(valueObjectInspector,entry.getValue(),output,columnMapping,3);
    valueBytes=output.toByteArray();
    mutation.put(cfBytes,cqBytes,visibility,valueBytes);
  }
}
