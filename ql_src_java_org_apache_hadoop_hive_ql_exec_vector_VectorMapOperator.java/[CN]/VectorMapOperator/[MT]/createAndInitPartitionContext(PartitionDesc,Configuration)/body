{
  VectorPartitionDesc vectorPartDesc=partDesc.getVectorPartitionDesc();
  VectorPartitionContext vectorPartitionContext;
  VectorMapOperatorReadType vectorMapOperatorReadType=vectorPartDesc.getVectorMapOperatorReadType();
  if (vectorMapOperatorReadType == VectorMapOperatorReadType.VECTOR_DESERIALIZE || vectorMapOperatorReadType == VectorMapOperatorReadType.ROW_DESERIALIZE) {
    boolean isAcid=AcidUtils.isTablePropertyTransactional(partDesc.getTableDesc().getProperties());
    Preconditions.checkState(Utilities.isSchemaEvolutionEnabled(hconf,isAcid));
  }
switch (vectorMapOperatorReadType) {
case VECTORIZED_INPUT_FILE_FORMAT:
    vectorPartitionContext=new VectorizedInputFileFormatPartitionContext(partDesc);
  break;
case VECTOR_DESERIALIZE:
vectorPartitionContext=new VectorDeserializePartitionContext(partDesc);
break;
case ROW_DESERIALIZE:
vectorPartitionContext=new RowDeserializePartitionContext(partDesc);
break;
default :
throw new RuntimeException("Unexpected vector MapOperator read type " + vectorMapOperatorReadType.name());
}
vectorPartitionContext.init(hconf);
return vectorPartitionContext;
}
