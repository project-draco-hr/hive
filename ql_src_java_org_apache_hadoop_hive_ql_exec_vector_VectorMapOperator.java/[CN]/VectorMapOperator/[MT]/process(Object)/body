{
  if ((this.getExecContext() != null) && this.getExecContext().inputFileChanged()) {
    cleanUpInputFileChanged();
  }
  try {
    if (value instanceof VectorizedRowBatch) {
      if (!outputColumnsInitialized) {
        VectorizedRowBatch vrg=(VectorizedRowBatch)value;
        Map<Integer,String> outputColumnTypes=vectorizationContext.getOutputColumnTypeMap();
        if (!outputColumnTypes.isEmpty()) {
          int origNumCols=vrg.numCols;
          int newNumCols=vrg.cols.length + outputColumnTypes.keySet().size();
          vrg.cols=Arrays.copyOf(vrg.cols,newNumCols);
          for (int i=origNumCols; i < newNumCols; i++) {
            vrg.cols[i]=vectorizationContext.allocateColumnVector(outputColumnTypes.get(i),VectorizedRowBatch.DEFAULT_SIZE);
          }
        }
        outputColumnsInitialized=true;
      }
      forward(value,null);
    }
 else {
      Object row=null;
      row=this.partTblObjectInspectorConverter.convert(deserializer.deserialize((Writable)value));
      forward(row,tblRowObjectInspector);
    }
  }
 catch (  Exception e) {
    throw new HiveException("Hive Runtime Error while processing ",e);
  }
}
