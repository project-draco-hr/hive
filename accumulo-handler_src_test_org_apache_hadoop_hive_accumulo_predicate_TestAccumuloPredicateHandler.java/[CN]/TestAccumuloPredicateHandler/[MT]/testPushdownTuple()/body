{
  ExprNodeDesc column=new ExprNodeColumnDesc(TypeInfoFactory.intTypeInfo,"field1",null,false);
  ExprNodeDesc constant=new ExprNodeConstantDesc(TypeInfoFactory.intTypeInfo,5);
  List<ExprNodeDesc> children=Lists.newArrayList();
  children.add(column);
  children.add(constant);
  ExprNodeGenericFuncDesc node=new ExprNodeGenericFuncDesc(TypeInfoFactory.stringTypeInfo,new GenericUDFOPEqual(),children);
  assertNotNull(node);
  String filterExpr=Utilities.serializeExpression(node);
  conf.set(TableScanDesc.FILTER_EXPR_CONF_STR,filterExpr);
  List<IndexSearchCondition> sConditions=handler.getSearchConditions(conf);
  assertEquals(sConditions.size(),1);
  IndexSearchCondition sc=sConditions.get(0);
  PushdownTuple tuple=new PushdownTuple(sConditions.get(0),handler.getPrimitiveComparison(sc.getColumnDesc().getTypeString(),sc),handler.getCompareOp(sc.getComparisonOp(),sc));
  byte[] expectedVal=new byte[4];
  ByteBuffer.wrap(expectedVal).putInt(5);
  assertArrayEquals(tuple.getConstVal(),expectedVal);
  assertEquals(tuple.getcOpt().getClass(),Equal.class);
  assertEquals(tuple.getpCompare().getClass(),IntCompare.class);
}
