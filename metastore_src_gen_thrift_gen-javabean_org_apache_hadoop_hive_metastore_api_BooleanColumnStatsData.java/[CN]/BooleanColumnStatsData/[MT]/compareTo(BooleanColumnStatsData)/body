{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetNumTrues()).compareTo(other.isSetNumTrues());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetNumTrues()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.numTrues,other.numTrues);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetNumFalses()).compareTo(other.isSetNumFalses());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetNumFalses()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.numFalses,other.numFalses);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetNumNulls()).compareTo(other.isSetNumNulls());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetNumNulls()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.numNulls,other.numNulls);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
