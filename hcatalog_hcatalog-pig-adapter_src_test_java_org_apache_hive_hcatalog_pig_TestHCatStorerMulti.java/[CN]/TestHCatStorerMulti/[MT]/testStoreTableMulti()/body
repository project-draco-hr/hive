{
  assumeTrue(!TestUtil.shouldSkip(storageFormat,DISABLED_STORAGE_FORMATS));
  createTable(BASIC_TABLE,"a int, b string");
  createTable(PARTITIONED_TABLE,"a int, b string","bkt string");
  populateBasicFile();
  PigServer server=new PigServer(ExecType.LOCAL);
  server.setBatchOn();
  server.registerQuery("A = load '" + INPUT_FILE_NAME + "' as (a:int, b:chararray);");
  server.registerQuery("store A into '" + BASIC_TABLE + "' using org.apache.hive.hcatalog.pig.HCatStorer();");
  server.registerQuery("B2 = filter A by a < 2;");
  server.registerQuery("store B2 into '" + PARTITIONED_TABLE + "' using org.apache.hive.hcatalog.pig.HCatStorer('bkt=0');");
  server.registerQuery("C2 = filter A by a >= 2;");
  server.registerQuery("store C2 into '" + PARTITIONED_TABLE + "' using org.apache.hive.hcatalog.pig.HCatStorer('bkt=1');");
  server.executeBatch();
  driver.run("select * from " + BASIC_TABLE);
  ArrayList<String> unpartitionedTableValuesReadFromHiveDriver=new ArrayList<String>();
  driver.getResults(unpartitionedTableValuesReadFromHiveDriver);
  driver.run("select * from " + PARTITIONED_TABLE);
  ArrayList<String> partitionedTableValuesReadFromHiveDriver=new ArrayList<String>();
  driver.getResults(partitionedTableValuesReadFromHiveDriver);
  assertEquals(basicInputData.size(),unpartitionedTableValuesReadFromHiveDriver.size());
  assertEquals(basicInputData.size(),partitionedTableValuesReadFromHiveDriver.size());
}
