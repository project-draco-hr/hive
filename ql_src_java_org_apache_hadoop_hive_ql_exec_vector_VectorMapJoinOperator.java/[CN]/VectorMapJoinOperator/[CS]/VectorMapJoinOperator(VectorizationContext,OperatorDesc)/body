{
  this();
  MapJoinDesc desc=(MapJoinDesc)conf;
  this.conf=desc;
  order=desc.getTagOrder();
  numAliases=desc.getExprs().size();
  posBigTable=(byte)desc.getPosBigTable();
  filterMaps=desc.getFilterMap();
  tagLen=desc.getTagLength();
  noOuterJoin=desc.isNoOuterJoin();
  Map<Byte,List<ExprNodeDesc>> filterExpressions=desc.getFilters();
  bigTableFilterExpressions=vContext.getVectorExpressions(filterExpressions.get(posBigTable),VectorExpressionDescriptor.Mode.FILTER);
  List<ExprNodeDesc> keyDesc=desc.getKeys().get(posBigTable);
  keyExpressions=vContext.getVectorExpressions(keyDesc);
  keyOutputWriters=VectorExpressionWriterFactory.getExpressionWriters(keyDesc);
  Map<Byte,List<ExprNodeDesc>> exprs=desc.getExprs();
  bigTableValueExpressions=vContext.getVectorExpressions(exprs.get(posBigTable));
  List<String> outColNames=desc.getOutputColumnNames();
  Map<String,Integer> mapOutCols=new HashMap<String,Integer>(outColNames.size());
  int outColIndex=0;
  for (  String outCol : outColNames) {
    mapOutCols.put(outCol,outColIndex++);
  }
  vOutContext=new VectorizationContext(mapOutCols,outColIndex);
  vOutContext.setFileKey(vContext.getFileKey() + "/MAP_JOIN_" + desc.getBigTableAlias());
  this.fileKey=vOutContext.getFileKey();
}
