{
  VectorizedRowBatch newBatch=new VectorizedRowBatch(batch.numCols);
  for (int i=0; i < batch.numCols; i++) {
    ColumnVector colVector=batch.cols[i];
    if (colVector != null) {
      ColumnVector newColVector;
      if (colVector instanceof LongColumnVector) {
        newColVector=new LongColumnVector();
      }
 else       if (colVector instanceof DoubleColumnVector) {
        newColVector=new DoubleColumnVector();
      }
 else       if (colVector instanceof BytesColumnVector) {
        newColVector=new BytesColumnVector();
      }
 else       if (colVector instanceof DecimalColumnVector) {
        DecimalColumnVector decColVector=(DecimalColumnVector)colVector;
        newColVector=new DecimalColumnVector(decColVector.precision,decColVector.scale);
      }
 else {
        throw new HiveException("Column vector class " + colVector.getClass().getName() + " is not supported!");
      }
      newBatch.cols[i]=newColVector;
      newBatch.cols[i].init();
    }
  }
  newBatch.projectedColumns=Arrays.copyOf(batch.projectedColumns,batch.projectedColumns.length);
  newBatch.projectionSize=batch.projectionSize;
  newBatch.reset();
  return newBatch;
}
