{
  if (colType.equals("boolean")) {
    BooleanColumnStatsData boolStats=new BooleanColumnStatsData();
    boolStats.setNumFalses(extractSqlLong(falses));
    boolStats.setNumTrues(extractSqlLong(trues));
    boolStats.setNumNulls(extractSqlLong(nulls));
    data.setBooleanStats(boolStats);
  }
 else   if (colType.equals("string") || colType.startsWith("varchar") || colType.startsWith("char")) {
    StringColumnStatsData stringStats=new StringColumnStatsData();
    stringStats.setNumNulls(extractSqlLong(nulls));
    stringStats.setAvgColLen((Double)avglen);
    stringStats.setMaxColLen(extractSqlLong(maxlen));
    stringStats.setNumDVs(extractSqlLong(dist));
    data.setStringStats(stringStats);
  }
 else   if (colType.equals("binary")) {
    BinaryColumnStatsData binaryStats=new BinaryColumnStatsData();
    binaryStats.setNumNulls(extractSqlLong(nulls));
    binaryStats.setAvgColLen((Double)avglen);
    binaryStats.setMaxColLen(extractSqlLong(maxlen));
    data.setBinaryStats(binaryStats);
  }
 else   if (colType.equals("bigint") || colType.equals("int") || colType.equals("smallint")|| colType.equals("tinyint")|| colType.equals("timestamp")) {
    LongColumnStatsData longStats=new LongColumnStatsData();
    longStats.setNumNulls(extractSqlLong(nulls));
    if (lhigh != null) {
      longStats.setHighValue(extractSqlLong(lhigh));
    }
    if (llow != null) {
      longStats.setLowValue(extractSqlLong(llow));
    }
    longStats.setNumDVs(extractSqlLong(dist));
    data.setLongStats(longStats);
  }
 else   if (colType.equals("double") || colType.equals("float")) {
    DoubleColumnStatsData doubleStats=new DoubleColumnStatsData();
    doubleStats.setNumNulls(extractSqlLong(nulls));
    if (dhigh != null) {
      doubleStats.setHighValue((Double)dhigh);
    }
    if (dlow != null) {
      doubleStats.setLowValue((Double)dlow);
    }
    doubleStats.setNumDVs(extractSqlLong(dist));
    data.setDoubleStats(doubleStats);
  }
 else   if (colType.startsWith("decimal")) {
    DecimalColumnStatsData decimalStats=new DecimalColumnStatsData();
    decimalStats.setNumNulls(extractSqlLong(nulls));
    if (dechigh != null) {
      decimalStats.setHighValue(createThriftDecimal((String)dechigh));
    }
    if (declow != null) {
      decimalStats.setLowValue(createThriftDecimal((String)declow));
    }
    decimalStats.setNumDVs(extractSqlLong(dist));
    data.setDecimalStats(decimalStats);
  }
}
