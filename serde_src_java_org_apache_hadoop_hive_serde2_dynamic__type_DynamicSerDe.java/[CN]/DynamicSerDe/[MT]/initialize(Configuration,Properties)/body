{
  try {
    String ddl=tbl.getProperty(Constants.SERIALIZATION_DDL);
    String tableName=tbl.getProperty(META_TABLE_NAME);
    int index=tableName.indexOf('.');
    if (index != -1) {
      type_name=tableName.substring(index + 1,tableName.length());
    }
 else {
      type_name=tableName;
    }
    String protoName=tbl.getProperty(Constants.SERIALIZATION_FORMAT);
    if (protoName == null) {
      protoName="org.apache.thrift.protocol.TBinaryProtocol";
    }
    protoName=protoName.replace("com.facebook.thrift.protocol","org.apache.thrift.protocol");
    TProtocolFactory protFactory=TReflectionUtils.getProtocolFactoryByName(protoName);
    bos_=new ByteStream.Output();
    bis_=new ByteStream.Input();
    tios=new TIOStreamTransport(bis_,bos_);
    oprot_=protFactory.getProtocol(tios);
    iprot_=protFactory.getProtocol(tios);
    if (oprot_ instanceof org.apache.hadoop.hive.serde2.thrift.ConfigurableTProtocol) {
      ((ConfigurableTProtocol)oprot_).initialize(job,tbl);
    }
    if (iprot_ instanceof org.apache.hadoop.hive.serde2.thrift.ConfigurableTProtocol) {
      ((ConfigurableTProtocol)iprot_).initialize(job,tbl);
    }
    List<String> include_path=new ArrayList<String>();
    include_path.add(".");
    LOG.debug("ddl=" + ddl);
    parse_tree=new thrift_grammar(new ByteArrayInputStream(ddl.getBytes()),include_path,false);
    parse_tree.Start();
    bt=(DynamicSerDeStructBase)parse_tree.types.get(type_name);
    if (bt == null) {
      bt=(DynamicSerDeStructBase)parse_tree.tables.get(type_name);
    }
    if (bt == null) {
      throw new SerDeException("Could not lookup table type " + type_name + " in this ddl: "+ ddl);
    }
    bt.initialize();
  }
 catch (  Exception e) {
    System.err.println(StringUtils.stringifyException(e));
    throw new SerDeException(e);
  }
}
