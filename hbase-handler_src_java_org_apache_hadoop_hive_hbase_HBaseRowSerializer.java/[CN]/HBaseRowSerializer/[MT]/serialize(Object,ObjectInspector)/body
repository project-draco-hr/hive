{
  if (objInspector.getCategory() != ObjectInspector.Category.STRUCT) {
    throw new SerDeException(getClass().toString() + " can only serialize struct types, but we got: " + objInspector.getTypeName());
  }
  StructObjectInspector soi=(StructObjectInspector)objInspector;
  List<? extends StructField> fields=soi.getAllStructFieldRefs();
  List<Object> list=soi.getStructFieldsDataAsList(obj);
  StructField field=fields.get(keyIndex);
  Object value=list.get(keyIndex);
  byte[] key=keyFactory.serializeKey(value,field);
  if (key == null) {
    throw new SerDeException("HBase row key cannot be NULL");
  }
  Put put=putTimestamp >= 0 ? new Put(key,putTimestamp) : new Put(key);
  for (int i=0; i < fields.size(); i++) {
    if (i == keyIndex) {
      continue;
    }
    field=fields.get(i);
    value=list.get(i);
    serializeField(value,field,columnMappings[i],put);
  }
  return new PutWritable(put);
}
