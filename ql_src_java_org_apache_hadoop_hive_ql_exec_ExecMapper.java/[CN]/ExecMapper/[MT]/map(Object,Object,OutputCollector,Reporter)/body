{
  if (oc == null) {
    oc=output;
    rp=reporter;
    mo.setOutputCollector(oc);
    mo.setReporter(rp);
    if (fetchOperators != null) {
      try {
        mapredLocalWork localWork=mo.getConf().getMapLocalWork();
        for (        Map.Entry<String,FetchOperator> entry : fetchOperators.entrySet()) {
          String alias=entry.getKey();
          FetchOperator fetchOp=entry.getValue();
          Operator<? extends Serializable> forwardOp=localWork.getAliasToWork().get(alias);
          while (true) {
            InspectableObject row=fetchOp.getNextRow();
            if (row == null) {
              break;
            }
            forwardOp.process(row.o,0);
          }
        }
      }
 catch (      Throwable e) {
        abort=true;
        if (e instanceof OutOfMemoryError) {
          throw (OutOfMemoryError)e;
        }
 else {
          throw new RuntimeException("Map local work failed",e);
        }
      }
    }
  }
  try {
    if (mo.getDone())     done=true;
 else     mo.process((Writable)value);
  }
 catch (  Throwable e) {
    abort=true;
    e.printStackTrace();
    if (e instanceof OutOfMemoryError) {
      throw (OutOfMemoryError)e;
    }
 else {
      throw new RuntimeException(e.getMessage(),e);
    }
  }
}
