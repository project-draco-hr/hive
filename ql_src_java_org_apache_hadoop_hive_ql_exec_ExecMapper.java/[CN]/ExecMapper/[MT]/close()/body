{
  if (oc == null) {
    try {
      l4j.trace("Close called no row");
      mo.initialize(jc,null,null);
      rp=null;
    }
 catch (    HiveException e) {
      abort=true;
      e.printStackTrace();
      throw new RuntimeException("Map operator close failed during initialize",e);
    }
  }
  try {
    mo.close(abort);
    if (fetchOperators != null) {
      mapredWork mrwork=Utilities.getMapRedWork(jc);
      mapredLocalWork localWork=mrwork.getMapLocalWork();
      Iterator<Map.Entry<String,FetchOperator>> fetchOps=fetchOperators.entrySet().iterator();
      while (fetchOps.hasNext()) {
        Map.Entry<String,FetchOperator> entry=fetchOps.next();
        String alias=entry.getKey();
        Operator<? extends Serializable> forwardOp=localWork.getAliasToWork().get(alias);
        forwardOp.close(abort);
      }
    }
    reportStats rps=new reportStats(rp);
    mo.preorderMap(rps);
    return;
  }
 catch (  HiveException e) {
    if (!abort) {
      l4j.error("Hit error while closing operators - failing tree");
      throw new RuntimeException("Error while closing operators");
    }
  }
}
