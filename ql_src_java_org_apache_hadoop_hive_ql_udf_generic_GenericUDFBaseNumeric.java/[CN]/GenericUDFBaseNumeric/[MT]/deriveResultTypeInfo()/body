{
  PrimitiveTypeInfo left=(PrimitiveTypeInfo)TypeInfoUtils.getTypeInfoFromObjectInspector(leftOI);
  PrimitiveTypeInfo right=(PrimitiveTypeInfo)TypeInfoUtils.getTypeInfoFromObjectInspector(rightOI);
  if (!FunctionRegistry.isNumericType(left) || !FunctionRegistry.isNumericType(right)) {
    List<TypeInfo> argTypeInfos=new ArrayList<TypeInfo>(2);
    argTypeInfos.add(left);
    argTypeInfos.add(right);
    throw new NoMatchingMethodException(this.getClass(),argTypeInfos,null);
  }
  if (!FunctionRegistry.isExactNumericType(left) || !FunctionRegistry.isExactNumericType(right)) {
    return TypeInfoFactory.doubleTypeInfo;
  }
  return deriveResultExactTypeInfo();
}
