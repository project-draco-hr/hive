{
  int numSel=0;
  if (allMatchCount > 0 && bigTableValueExpressions != null) {
    performValueExpressions(batch,allMatchs,allMatchCount);
  }
  for (int i=0; i < equalKeySeriesCount; i++) {
    long count=equalKeySeriesValueCounts[i];
    int allMatchesIndex=equalKeySeriesAllMatchIndices[i];
    int duplicateCount=equalKeySeriesDuplicateCounts[i];
    if (count == 1) {
      numSel=generateHashMultiSetResultSingleValue(batch,allMatchs,allMatchesIndex,duplicateCount,numSel);
    }
 else {
      generateHashMultiSetResultMultiValue(batch,allMatchs,allMatchesIndex,duplicateCount,count);
    }
  }
  if (spillCount > 0) {
    spillHashMapBatch(batch,hashTableResults,spills,spillHashMapResultIndices,spillCount);
  }
  return numSel;
}
