{
  VectorExpression udf;
  if (isPositive) {
    udf=new VectorUDFDateAddColCol(0,1,2);
  }
 else {
    udf=new VectorUDFDateSubColCol(0,1,2);
  }
  udf.setInputTypes(colType1,VectorExpression.Type.OTHER);
  udf.evaluate(batch);
  LongColumnVector output=(LongColumnVector)batch.cols[2];
  try {
    for (int i=0; i < date2.vector.length; i++) {
      String expected;
      if (isPositive) {
        expected=new String(toString(date1.vector[i] + date2.vector[i]),utf8);
      }
 else {
        expected=new String(toString(date1.vector[i] - date2.vector[i]),utf8);
      }
      if (date1.isNull[i] || date2.isNull[i]) {
        Assert.assertTrue(output.isNull[i]);
      }
 else {
        Assert.assertEquals(expected,new String(toString(output.vector[i])));
      }
    }
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
}
