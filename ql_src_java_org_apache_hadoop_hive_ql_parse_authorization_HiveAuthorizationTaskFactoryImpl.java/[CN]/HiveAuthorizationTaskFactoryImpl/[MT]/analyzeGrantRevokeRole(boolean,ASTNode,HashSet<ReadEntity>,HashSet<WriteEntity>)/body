{
  List<PrincipalDesc> principalDesc=AuthorizationParseUtils.analyzePrincipalListDef((ASTNode)ast.getChild(0));
  int rolesStartPos=1;
  ASTNode wAdminOption=(ASTNode)ast.getChild(1);
  boolean isAdmin=false;
  if (wAdminOption.getToken().getType() == HiveParser.TOK_GRANT_WITH_ADMIN_OPTION) {
    rolesStartPos=2;
    isAdmin=true;
  }
  List<String> roles=new ArrayList<String>();
  for (int i=rolesStartPos; i < ast.getChildCount(); i++) {
    roles.add(BaseSemanticAnalyzer.unescapeIdentifier(ast.getChild(i).getText()));
  }
  String roleOwnerName=SessionState.getUserFromAuthenticator();
  GrantRevokeRoleDDL grantRevokeRoleDDL=new GrantRevokeRoleDDL(isGrant,roles,principalDesc,roleOwnerName,PrincipalType.USER,isAdmin);
  return TaskFactory.get(new DDLWork(inputs,outputs,grantRevokeRoleDDL),conf);
}
