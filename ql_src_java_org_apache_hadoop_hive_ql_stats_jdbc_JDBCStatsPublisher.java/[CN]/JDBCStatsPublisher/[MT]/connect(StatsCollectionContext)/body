{
  this.hiveconf=context.getHiveConf();
  maxRetries=HiveConf.getIntVar(hiveconf,HiveConf.ConfVars.HIVE_STATS_RETRIES_MAX);
  waitWindow=HiveConf.getTimeVar(hiveconf,HiveConf.ConfVars.HIVE_STATS_RETRIES_WAIT,TimeUnit.MILLISECONDS);
  connectionString=HiveConf.getVar(hiveconf,HiveConf.ConfVars.HIVESTATSDBCONNECTIONSTRING);
  timeout=(int)HiveConf.getTimeVar(hiveconf,HiveConf.ConfVars.HIVE_STATS_JDBC_TIMEOUT,TimeUnit.SECONDS);
  String driver=HiveConf.getVar(hiveconf,HiveConf.ConfVars.HIVESTATSJDBCDRIVER);
  try {
    JavaUtils.loadClass(driver).newInstance();
  }
 catch (  Exception e) {
    LOG.error("Error during instantiating JDBC driver " + driver + ". ",e);
    return false;
  }
  DriverManager.setLoginTimeout(timeout);
  Utilities.SQLCommand<Void> setQueryTimeout=new Utilities.SQLCommand<Void>(){
    @Override public Void run(    PreparedStatement stmt) throws SQLException {
      Utilities.setQueryTimeout(stmt,timeout);
      return null;
    }
  }
;
  for (int failures=0; ; failures++) {
    try {
      conn=Utilities.connectWithRetry(connectionString,waitWindow,maxRetries);
      updStmt=Utilities.prepareWithRetry(conn,JDBCStatsUtils.getUpdate(comment),waitWindow,maxRetries);
      insStmt=Utilities.prepareWithRetry(conn,JDBCStatsUtils.getInsert(comment),waitWindow,maxRetries);
      Utilities.executeWithRetry(setQueryTimeout,updStmt,waitWindow,maxRetries);
      Utilities.executeWithRetry(setQueryTimeout,insStmt,waitWindow,maxRetries);
      return true;
    }
 catch (    SQLRecoverableException e) {
      if (failures >= maxRetries) {
        LOG.error("Error during JDBC connection to " + connectionString + ". ",e);
        return false;
      }
      long waitTime=Utilities.getRandomWaitTime(waitWindow,failures,r);
      try {
        Thread.sleep(waitTime);
      }
 catch (      InterruptedException e1) {
      }
    }
catch (    SQLException e) {
      LOG.error("Error during JDBC connection to " + connectionString + ". ",e);
      return false;
    }
  }
}
