{
  Statement stmt=null;
  ResultSet rs=null;
  try {
    this.hiveconf=context.getHiveConf();
    connectionString=HiveConf.getVar(hiveconf,HiveConf.ConfVars.HIVESTATSDBCONNECTIONSTRING);
    String driver=HiveConf.getVar(hiveconf,HiveConf.ConfVars.HIVESTATSJDBCDRIVER);
    JavaUtils.loadClass(driver).newInstance();
synchronized (DriverManager.class) {
      DriverManager.setLoginTimeout(timeout);
      conn=DriverManager.getConnection(connectionString);
      stmt=conn.createStatement();
      Utilities.setQueryTimeout(stmt,timeout);
      DatabaseMetaData dbm=conn.getMetaData();
      String tableName=JDBCStatsUtils.getStatTableName();
      rs=dbm.getTables(null,null,tableName,null);
      boolean tblExists=rs.next();
      if (!tblExists) {
        String createTable=JDBCStatsUtils.getCreate("");
        try {
          stmt.executeUpdate(createTable);
        }
 catch (        SQLException ex) {
          String msg=ex.getMessage();
          if (msg != null && msg.contains("Specified key was too long")) {
            throw new RuntimeException(msg + "; try using innodb with " + "Barracuda file format and innodb_large_prefix",ex);
          }
          throw ex;
        }
      }
 else {
        String idColName=JDBCStatsUtils.getIdColumnName();
        int colSize=-1;
        try {
          rs.close();
          rs=dbm.getColumns(null,null,tableName,idColName);
          if (rs.next()) {
            colSize=rs.getInt("COLUMN_SIZE");
            if (colSize < JDBCStatsSetupConstants.ID_COLUMN_VARCHAR_SIZE) {
              String alterTable=JDBCStatsUtils.getAlterIdColumn();
              stmt.executeUpdate(alterTable);
            }
          }
 else {
            LOG.warn("Failed to update " + idColName + " - column not found");
          }
        }
 catch (        Throwable t) {
          LOG.warn("Failed to update " + idColName + " (size "+ (colSize == -1 ? "unknown" : colSize)+ ")",t);
        }
      }
    }
  }
 catch (  Exception e) {
    LOG.error("Error during JDBC initialization. ",e);
    return false;
  }
 finally {
    if (rs != null) {
      try {
        rs.close();
      }
 catch (      SQLException e) {
      }
    }
    if (stmt != null) {
      try {
        stmt.close();
      }
 catch (      SQLException e) {
      }
    }
    closeConnection(context);
  }
  return true;
}
