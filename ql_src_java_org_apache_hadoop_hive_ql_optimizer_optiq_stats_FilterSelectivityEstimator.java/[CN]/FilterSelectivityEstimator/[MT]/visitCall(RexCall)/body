{
  if (!deep) {
    return 1.0;
  }
  if (isPartitionPredicate(call,m_childRel)) {
    return 1.0;
  }
  Double selectivity=null;
  SqlKind op=call.getKind();
switch (op) {
case AND:
{
      selectivity=computeConjunctionSelectivity(call);
      break;
    }
case OR:
{
    selectivity=computeDisjunctionSelectivity(call);
    break;
  }
case NOT_EQUALS:
{
  selectivity=computeNotEqualitySelectivity(call);
}
case LESS_THAN_OR_EQUAL:
case GREATER_THAN_OR_EQUAL:
case LESS_THAN:
case GREATER_THAN:
{
selectivity=((double)1 / (double)3);
break;
}
case IN:
{
selectivity=((double)1 / ((double)call.operands.size()));
break;
}
default :
selectivity=computeFunctionSelectivity(call);
}
return selectivity;
}
