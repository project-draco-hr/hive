{
  if (!deep) {
    return 1.0;
  }
  if (isPartitionPredicate(call,this.childRel)) {
    return 1.0;
  }
  Double selectivity=null;
  SqlKind op=getOp(call);
switch (op) {
case AND:
{
      selectivity=computeConjunctionSelectivity(call);
      break;
    }
case OR:
{
    selectivity=computeDisjunctionSelectivity(call);
    break;
  }
case NOT:
case NOT_EQUALS:
{
  selectivity=computeNotEqualitySelectivity(call);
  break;
}
case LESS_THAN_OR_EQUAL:
case GREATER_THAN_OR_EQUAL:
case LESS_THAN:
case GREATER_THAN:
{
selectivity=((double)1 / (double)3);
break;
}
case IN:
{
selectivity=computeFunctionSelectivity(call) * (call.operands.size() - 1);
if (selectivity <= 0.0) {
selectivity=0.10;
}
 else if (selectivity >= 1.0) {
selectivity=1.0;
}
break;
}
default :
selectivity=computeFunctionSelectivity(call);
}
return selectivity;
}
