{
  EncodedColumnBatch<BatchKey> targetBatch=null;
  boolean localIsStopped=false;
synchronized (pendingData) {
    localIsStopped=isStopped;
    if (!localIsStopped) {
      targetBatch=pendingData.get(data.batchKey);
      if (targetBatch == null) {
        targetBatch=data;
        pendingData.put(data.batchKey,data);
      }
    }
    queueMetrics.setQueueSize(pendingData.size());
  }
  if (localIsStopped) {
    returnProcessed(data.columnData);
    return;
  }
synchronized (targetBatch) {
    localIsStopped=(targetBatch.columnData == null);
    if (!localIsStopped) {
      if (targetBatch != data) {
        targetBatch.merge(data);
      }
      if (0 == targetBatch.colsRemaining) {
synchronized (pendingData) {
          targetBatch=isStopped ? null : pendingData.remove(data.batchKey);
        }
        localIsStopped=(targetBatch == null);
      }
    }
  }
  if (localIsStopped) {
    returnProcessed(data.columnData);
    return;
  }
  if (0 == targetBatch.colsRemaining) {
    long start=System.currentTimeMillis();
    decodeBatch(targetBatch,downstreamConsumer);
    long end=System.currentTimeMillis();
    queueMetrics.addProcessingTime(end - start);
    returnProcessed(targetBatch.columnData);
  }
}
