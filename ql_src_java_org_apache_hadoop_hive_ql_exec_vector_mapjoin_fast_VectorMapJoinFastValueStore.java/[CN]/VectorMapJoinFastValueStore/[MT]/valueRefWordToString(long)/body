{
  StringBuilder sb=new StringBuilder();
  sb.append(Long.toHexString(valueRef));
  sb.append(", ");
  if ((valueRef & IsInvalidFlag.flagOnMask) != 0) {
    sb.append("(Invalid optimized hash table reference), ");
  }
  long absoluteValueOffset=(valueRef & AbsoluteValueOffset.bitMask);
  int smallValueLength=(int)((valueRef & SmallValueLength.bitMask) >> SmallValueLength.bitShift);
  boolean isValueLengthSmall=(smallValueLength != SmallValueLength.allBitsOn);
  int cappedCount=(int)((valueRef & CappedCount.bitMask) >> CappedCount.bitShift);
  boolean isValueLast=((valueRef & IsLastFlag.flagOnMask) != 0);
  sb.append("absoluteValueOffset ");
  sb.append(absoluteValueOffset);
  sb.append(" (");
  sb.append(Long.toHexString(absoluteValueOffset));
  sb.append("), ");
  if (isValueLengthSmall) {
    sb.append("smallValueLength ");
    sb.append(smallValueLength);
    sb.append(", ");
  }
 else {
    sb.append("isValueLengthSmall = false, ");
  }
  sb.append("cappedCount ");
  sb.append(cappedCount);
  sb.append(", ");
  sb.append("isValueLast ");
  sb.append(isValueLast);
  return sb.toString();
}
