{
  int num=this.tableSample.getNumerator();
  int den=this.tableSample.getDenominator();
  int bucketCount=part.getBucketCount();
  List<String> tabBucketCols=part.getBucketCols();
  ArrayList<String> sampleCols=this.tableSample.getCols();
  String fullScanMsg="";
  if (sampleCols == null || sampleCols.size() == 0 || tabBucketCols.equals(sampleCols)) {
    LOG.trace("numerator = " + num);
    LOG.trace("denominator = " + den);
    LOG.trace("bucket count = " + bucketCount);
    if (bucketCount == den) {
      Path[] ret=new Path[1];
      ret[0]=part.getBucketPath(num - 1);
      return (ret);
    }
 else     if (bucketCount > den && bucketCount % den == 0) {
      int numPathsInSample=bucketCount / den;
      Path[] ret=new Path[numPathsInSample];
      for (int i=0; i < numPathsInSample; i++) {
        ret[i]=part.getBucketPath(i * den + num - 1);
      }
      return ret;
    }
 else     if (bucketCount < den && den % bucketCount == 0) {
      Path[] ret=new Path[1];
      ret[0]=part.getBucketPath((num - 1) % bucketCount);
      return ret;
    }
 else {
      fullScanMsg="Tablesample denominator " + den + " is not multiple/divisor of bucket count "+ bucketCount+ " of table "+ this.tabAlias;
    }
  }
 else {
    fullScanMsg="Tablesample not on clustered columns";
  }
  LOG.warn(fullScanMsg + ", using full table scan");
  Path[] ret=part.getPath();
  return ret;
}
