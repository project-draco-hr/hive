{
  int columnType=hiveTypeToSqlType(hiveType);
switch (columnType) {
case Types.NULL:
    return "null";
case Types.BOOLEAN:
  return Boolean.class.getName();
case Types.CHAR:
case Types.VARCHAR:
return String.class.getName();
case Types.TINYINT:
return Byte.class.getName();
case Types.SMALLINT:
return Short.class.getName();
case Types.INTEGER:
return Integer.class.getName();
case Types.BIGINT:
return Long.class.getName();
case Types.DATE:
return Date.class.getName();
case Types.FLOAT:
return Float.class.getName();
case Types.DOUBLE:
return Double.class.getName();
case Types.TIMESTAMP:
return Timestamp.class.getName();
case Types.DECIMAL:
return BigInteger.class.getName();
case Types.BINARY:
return byte[].class.getName();
case Types.OTHER:
case Types.JAVA_OBJECT:
{
switch (hiveType) {
case INTERVAL_YEAR_MONTH_TYPE:
return HiveIntervalYearMonth.class.getName();
case INTERVAL_DAY_TIME_TYPE:
return HiveIntervalDayTime.class.getName();
default :
return String.class.getName();
}
}
case Types.ARRAY:
case Types.STRUCT:
return String.class.getName();
default :
throw new SQLException("Invalid column type: " + columnType);
}
}
