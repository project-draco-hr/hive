{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case FIELDSCHEMAS:
      if (field.type == TType.LIST) {
{
          TList _list49=iprot.readListBegin();
          this.fieldSchemas=new ArrayList<FieldSchema>(_list49.size);
          for (int _i50=0; _i50 < _list49.size; ++_i50) {
            FieldSchema _elem51;
            _elem51=new FieldSchema();
            _elem51.read(iprot);
            this.fieldSchemas.add(_elem51);
          }
          iprot.readListEnd();
        }
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case PROPERTIES:
  if (field.type == TType.MAP) {
{
      TMap _map52=iprot.readMapBegin();
      this.properties=new HashMap<String,String>(2 * _map52.size);
      for (int _i53=0; _i53 < _map52.size; ++_i53) {
        String _key54;
        String _val55;
        _key54=iprot.readString();
        _val55=iprot.readString();
        this.properties.put(_key54,_val55);
      }
      iprot.readMapEnd();
    }
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
