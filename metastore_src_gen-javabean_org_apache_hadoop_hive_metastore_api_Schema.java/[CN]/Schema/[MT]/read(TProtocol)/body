{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == TType.LIST) {
{
          TList _list48=iprot.readListBegin();
          this.fieldSchemas=new ArrayList<FieldSchema>(_list48.size);
          for (int _i49=0; _i49 < _list48.size; ++_i49) {
            FieldSchema _elem50=new FieldSchema();
            _elem50=new FieldSchema();
            _elem50.read(iprot);
            this.fieldSchemas.add(_elem50);
          }
          iprot.readListEnd();
        }
        this.__isset.fieldSchemas=true;
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == TType.MAP) {
{
      TMap _map51=iprot.readMapBegin();
      this.properties=new HashMap<String,String>(2 * _map51.size);
      for (int _i52=0; _i52 < _map51.size; ++_i52) {
        String _key53;
        String _val54;
        _key53=iprot.readString();
        _val54=iprot.readString();
        this.properties.put(_key53,_val54);
      }
      iprot.readMapEnd();
    }
    this.__isset.properties=true;
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
}
