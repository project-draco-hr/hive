{
  final StringTokenizer tokens=new StringTokenizer(pattern,"%");
  final boolean leftAnchor=pattern.startsWith("%") == false;
  final boolean rightAnchor=pattern.endsWith("%") == false;
  int len=0;
  BeginChecker left=null;
  EndChecker right=null;
  int leftLen=0;
  int rightLen=0;
  final List<MiddleChecker> checkers=new ArrayList<MiddleChecker>(2);
  final List<Integer> lengths=new ArrayList<Integer>(2);
  for (int i=0; tokens.hasMoreTokens(); i++) {
    String chunk=tokens.nextToken();
    if (chunk.length() == 0) {
      continue;
    }
    len+=utf8Length(chunk);
    if (leftAnchor && i == 0) {
      left=new BeginChecker(chunk);
      leftLen=utf8Length(chunk);
    }
 else     if (rightAnchor && tokens.hasMoreTokens() == false) {
      right=new EndChecker(chunk);
      rightLen=utf8Length(chunk);
    }
 else {
      checkers.add(new MiddleChecker(chunk));
      lengths.add(utf8Length(chunk));
    }
  }
  midLens=ArrayUtils.toPrimitive(lengths.toArray(ArrayUtils.EMPTY_INTEGER_OBJECT_ARRAY));
  middle=checkers.toArray(new MiddleChecker[0]);
  minLen=len;
  begin=left;
  end=right;
  beginLen=leftLen;
  endLen=rightLen;
}
