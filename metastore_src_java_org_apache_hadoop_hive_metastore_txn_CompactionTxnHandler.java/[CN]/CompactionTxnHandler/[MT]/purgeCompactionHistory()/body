{
  Connection dbConn=null;
  Statement stmt=null;
  ResultSet rs=null;
  List<Long> deleteSet=new ArrayList<>();
  RetentionCounters rc=null;
  try {
    try {
      dbConn=getDbConn(Connection.TRANSACTION_READ_COMMITTED);
      stmt=dbConn.createStatement();
      rs=stmt.executeQuery("select cc_id, cc_database, cc_table, cc_partition, cc_state from " + "COMPLETED_COMPACTIONS order by cc_database, cc_table, cc_partition, cc_id desc");
      String lastCompactedEntity=null;
      while (rs.next()) {
        CompactionInfo ci=new CompactionInfo(rs.getLong(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5).charAt(0));
        if (!ci.getFullPartitionName().equals(lastCompactedEntity)) {
          lastCompactedEntity=ci.getFullPartitionName();
          rc=new RetentionCounters(conf.getIntVar(HiveConf.ConfVars.COMPACTOR_HISTORY_RETENTION_ATTEMPTED),getFailedCompactionRetention(),conf.getIntVar(HiveConf.ConfVars.COMPACTOR_HISTORY_RETENTION_SUCCEEDED));
        }
        checkForDeletion(deleteSet,ci,rc);
      }
      close(rs);
      List<String> queries=new ArrayList<String>();
      StringBuilder prefix=new StringBuilder();
      StringBuilder suffix=new StringBuilder();
      prefix.append("delete from COMPLETED_COMPACTIONS where ");
      suffix.append("");
      TxnUtils.buildQueryWithINClause(conf,queries,prefix,suffix,deleteSet,"cc_id",false,false);
      for (      String query : queries) {
        LOG.debug("Going to execute update <" + query + ">");
        int count=stmt.executeUpdate(query);
        LOG.debug("Removed " + count + " records from COMPLETED_COMPACTIONS");
      }
      dbConn.commit();
    }
 catch (    SQLException e) {
      rollbackDBConn(dbConn);
      checkRetryable(dbConn,e,"purgeCompactionHistory()");
      throw new MetaException("Unable to connect to transaction database " + StringUtils.stringifyException(e));
    }
 finally {
      close(rs,stmt,dbConn);
    }
  }
 catch (  RetryException ex) {
    purgeCompactionHistory();
  }
}
