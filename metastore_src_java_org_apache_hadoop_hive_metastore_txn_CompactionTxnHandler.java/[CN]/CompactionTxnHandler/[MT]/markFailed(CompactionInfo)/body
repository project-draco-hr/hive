{
  try {
    Connection dbConn=null;
    Statement stmt=null;
    PreparedStatement pStmt=null;
    ResultSet rs=null;
    try {
      dbConn=getDbConn(Connection.TRANSACTION_READ_COMMITTED);
      stmt=dbConn.createStatement();
      rs=stmt.executeQuery("select CQ_ID, CQ_DATABASE, CQ_TABLE, CQ_PARTITION, CQ_STATE, CQ_TYPE, CQ_WORKER_ID, CQ_START, CQ_RUN_AS, CQ_HIGHEST_TXN_ID, CQ_META_INFO, CQ_HADOOP_JOB_ID from COMPACTION_QUEUE WHERE CQ_ID = " + ci.id);
      if (rs.next()) {
        ci=CompactionInfo.loadFullFromCompactionQueue(rs);
        String s="delete from COMPACTION_QUEUE where cq_id = " + ci.id;
        LOG.debug("Going to execute update <" + s + ">");
        int updCnt=stmt.executeUpdate(s);
      }
 else {
        throw new IllegalStateException("No record with CQ_ID=" + ci.id + " found in COMPACTION_QUEUE");
      }
      close(rs,stmt,null);
      pStmt=dbConn.prepareStatement("insert into COMPLETED_COMPACTIONS(CC_ID, CC_DATABASE, CC_TABLE, CC_PARTITION, CC_STATE, CC_TYPE, CC_WORKER_ID, CC_START, CC_END, CC_RUN_AS, CC_HIGHEST_TXN_ID, CC_META_INFO, CC_HADOOP_JOB_ID) VALUES(?,?,?,?,?, ?,?,?,?,?, ?,?,?)");
      ci.state=FAILED_STATE;
      CompactionInfo.insertIntoCompletedCompactions(pStmt,ci,getDbTime(dbConn));
      int updCount=pStmt.executeUpdate();
      LOG.debug("Going to commit");
      closeStmt(pStmt);
      dbConn.commit();
    }
 catch (    SQLException e) {
      LOG.error("Unable to delete from compaction queue " + e.getMessage());
      LOG.debug("Going to rollback");
      rollbackDBConn(dbConn);
      try {
        checkRetryable(dbConn,e,"markFailed(" + ci + ")");
      }
 catch (      MetaException ex) {
        LOG.error("Unable to connect to transaction database " + StringUtils.stringifyException(ex));
      }
      LOG.error("Unable to connect to transaction database " + StringUtils.stringifyException(e));
    }
 finally {
      close(rs,stmt,null);
      close(null,pStmt,dbConn);
    }
  }
 catch (  RetryException e) {
    markFailed(ci);
  }
}
