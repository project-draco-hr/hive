{
  Connection dbConn=null;
  Statement stmt=null;
  ResultSet rs=null;
  try {
    try {
      dbConn=getDbConn(Connection.TRANSACTION_READ_COMMITTED);
      String quote=getIdentifierQuoteString(dbConn);
      stmt=dbConn.createStatement();
      StringBuilder bldr=new StringBuilder();
      bldr.append("SELECT ").append(quote).append("COLUMN_NAME").append(quote).append(" FROM ").append(quote).append((ci.partName == null ? "TAB_COL_STATS" : "PART_COL_STATS")).append(quote).append(" WHERE ").append(quote).append("DB_NAME").append(quote).append(" = '").append(ci.dbname).append("' AND ").append(quote).append("TABLE_NAME").append(quote).append(" = '").append(ci.tableName).append("'");
      if (ci.partName != null) {
        bldr.append(" AND ").append(quote).append("PARTITION_NAME").append(quote).append(" = '").append(ci.partName).append("'");
      }
      String s=bldr.toString();
      LOG.debug("Going to execute <" + s + ">");
      rs=stmt.executeQuery(s);
      List<String> columns=new ArrayList<String>();
      while (rs.next()) {
        columns.add(rs.getString(1));
      }
      LOG.debug("Found columns to update stats: " + columns + " on "+ ci.tableName+ (ci.partName == null ? "" : "/" + ci.partName));
      dbConn.commit();
      return columns;
    }
 catch (    SQLException e) {
      rollbackDBConn(dbConn);
      checkRetryable(dbConn,e,"findColumnsWithStats(" + ci.tableName + (ci.partName == null ? "" : "/" + ci.partName)+ ")");
      throw new MetaException("Unable to connect to transaction database " + StringUtils.stringifyException(e));
    }
 finally {
      close(rs,stmt,dbConn);
    }
  }
 catch (  RetryException ex) {
    return findColumnsWithStats(ci);
  }
}
