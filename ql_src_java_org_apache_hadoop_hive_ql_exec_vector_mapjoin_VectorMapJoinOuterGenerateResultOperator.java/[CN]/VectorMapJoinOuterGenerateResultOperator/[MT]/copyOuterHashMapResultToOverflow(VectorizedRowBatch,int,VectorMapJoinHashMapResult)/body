{
  ByteSegmentRef byteSegmentRef=hashMapResult.first();
  while (byteSegmentRef != null) {
    if (bigTableRetainedVectorCopy != null) {
      bigTableRetainedVectorCopy.copyByValue(batch,batchIndex,overflowBatch,overflowBatch.size);
    }
    if (bigTableVectorCopyOuterKeys != null) {
      bigTableVectorCopyOuterKeys.copyByReference(overflowBatch,overflowBatch.size,overflowBatch,overflowBatch.size);
    }
    if (smallTableVectorDeserializeRow != null) {
      byte[] bytes=byteSegmentRef.getBytes();
      int offset=(int)byteSegmentRef.getOffset();
      int length=byteSegmentRef.getLength();
      smallTableVectorDeserializeRow.setBytes(bytes,offset,length);
      smallTableVectorDeserializeRow.deserializeByValue(overflowBatch,overflowBatch.size);
    }
    ++overflowBatch.size;
    if (overflowBatch.size == VectorizedRowBatch.DEFAULT_SIZE) {
      forwardOverflow();
    }
    byteSegmentRef=hashMapResult.next();
  }
}
