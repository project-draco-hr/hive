{
  int[] selected=batch.selected;
  if (numSel == 0) {
    for (    int column : bigTableOuterKeyOutputVectorColumns) {
      ColumnVector colVector=batch.cols[column];
      colVector.isRepeating=true;
      colVector.noNulls=false;
      colVector.isNull[0]=true;
    }
    for (    int column : smallTableOutputVectorColumns) {
      ColumnVector colVector=batch.cols[column];
      colVector.isRepeating=true;
      colVector.noNulls=false;
      colVector.isNull[0]=true;
    }
    for (int i=0; i < noMatchSize; i++) {
      int batchIndex=noMatchs[i];
      selected[numSel++]=batchIndex;
    }
  }
 else {
    for (int i=0; i < noMatchSize; i++) {
      int batchIndex=noMatchs[i];
      for (      int column : bigTableOuterKeyOutputVectorColumns) {
        ColumnVector colVector=batch.cols[column];
        colVector.noNulls=false;
        colVector.isNull[batchIndex]=true;
      }
      for (      int column : smallTableOutputVectorColumns) {
        ColumnVector colVector=batch.cols[column];
        colVector.noNulls=false;
        colVector.isNull[batchIndex]=true;
      }
      selected[numSel++]=batchIndex;
    }
  }
  return numSel;
}
