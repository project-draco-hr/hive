{
  String hostId=getHostIdentifier(nodeId.getHostname(),nodeId.getPort());
  LlapProtocolBlockingPB proxy=hostProxies.get(hostId);
  if (proxy == null) {
    if (llapToken == null) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Creating a client without a token for " + nodeId);
      }
      proxy=new LlapProtocolClientImpl(getConfig(),nodeId.getHostname(),nodeId.getPort(),null,retryPolicy,socketFactory);
    }
 else {
      final UserGroupInformation ugi=UserGroupInformation.createRemoteUser(llapTokenUser);
      Token<LlapTokenIdentifier> nodeToken=new Token<LlapTokenIdentifier>(llapToken);
      SecurityUtil.setTokenService(nodeToken,NetUtils.createSocketAddrForHost(nodeId.getHostname(),nodeId.getPort()));
      ugi.addToken(nodeToken);
      if (LOG.isDebugEnabled()) {
        LOG.debug("Creating a client for " + nodeId + "; the token is "+ nodeToken);
      }
      proxy=ugi.doAs(new PrivilegedAction<LlapProtocolBlockingPB>(){
        @Override public LlapProtocolBlockingPB run(){
          return new LlapProtocolClientImpl(getConfig(),nodeId.getHostname(),nodeId.getPort(),ugi,retryPolicy,socketFactory);
        }
      }
);
    }
    LlapProtocolBlockingPB proxyOld=hostProxies.putIfAbsent(hostId,proxy);
    if (proxyOld != null) {
      proxy=proxyOld;
    }
  }
  return proxy;
}
