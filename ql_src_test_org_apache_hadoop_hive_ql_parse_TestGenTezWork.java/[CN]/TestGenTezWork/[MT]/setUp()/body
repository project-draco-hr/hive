{
  ctx=new GenTezProcContext(new HiveConf(),new ParseContext(),(List<Task<MoveWork>>)Collections.EMPTY_LIST,(List<Task<? extends Serializable>>)new ArrayList<Task<? extends Serializable>>(),(Set<ReadEntity>)Collections.EMPTY_SET,(Set<WriteEntity>)Collections.EMPTY_SET);
  proc=new GenTezWork(new GenTezUtils(){
    @Override protected void setupMapWork(    MapWork mapWork,    GenTezProcContext context,    PrunedPartitionList partitions,    Operator<? extends OperatorDesc> root,    String alias) throws SemanticException {
      LinkedHashMap<String,Operator<? extends OperatorDesc>> map=new LinkedHashMap<String,Operator<? extends OperatorDesc>>();
      map.put("foo",root);
      mapWork.setAliasToWork(map);
      return;
    }
  }
);
  fs=new FileSinkOperator();
  fs.setConf(new FileSinkDesc());
  rs=new ReduceSinkOperator();
  rs.setConf(new ReduceSinkDesc());
  ts=new TableScanOperator();
  ts.setConf(new TableScanDesc());
  ts.getChildOperators().add(rs);
  rs.getParentOperators().add(ts);
  rs.getChildOperators().add(fs);
  fs.getParentOperators().add(rs);
  ctx.preceedingWork=null;
  ctx.currentRootOperator=ts;
}
