def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('grant_role_args')
    if (self.role_name != None):
        oprot.writeFieldBegin('role_name', TType.STRING, 1)
        oprot.writeString(self.role_name)
        oprot.writeFieldEnd()
    if (self.principal_name != None):
        oprot.writeFieldBegin('principal_name', TType.STRING, 2)
        oprot.writeString(self.principal_name)
        oprot.writeFieldEnd()
    if (self.principal_type != None):
        oprot.writeFieldBegin('principal_type', TType.I32, 3)
        oprot.writeI32(self.principal_type)
        oprot.writeFieldEnd()
    if (self.grantor != None):
        oprot.writeFieldBegin('grantor', TType.STRING, 4)
        oprot.writeString(self.grantor)
        oprot.writeFieldEnd()
    if (self.grantorType != None):
        oprot.writeFieldBegin('grantorType', TType.I32, 5)
        oprot.writeI32(self.grantorType)
        oprot.writeFieldEnd()
    if (self.grant_option != None):
        oprot.writeFieldBegin('grant_option', TType.BOOL, 6)
        oprot.writeBool(self.grant_option)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()

    def validate(self):
        return
