def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('exchange_partitions_args')
    if (self.partitionSpecs is not None):
        oprot.writeFieldBegin('partitionSpecs', TType.MAP, 1)
        oprot.writeMapBegin(TType.STRING, TType.STRING, len(self.partitionSpecs))
        for (kiter715, viter716) in self.partitionSpecs.items():
            oprot.writeString(kiter715)
            oprot.writeString(viter716)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    if (self.source_db is not None):
        oprot.writeFieldBegin('source_db', TType.STRING, 2)
        oprot.writeString(self.source_db)
        oprot.writeFieldEnd()
    if (self.source_table_name is not None):
        oprot.writeFieldBegin('source_table_name', TType.STRING, 3)
        oprot.writeString(self.source_table_name)
        oprot.writeFieldEnd()
    if (self.dest_db is not None):
        oprot.writeFieldBegin('dest_db', TType.STRING, 4)
        oprot.writeString(self.dest_db)
        oprot.writeFieldEnd()
    if (self.dest_table_name is not None):
        oprot.writeFieldBegin('dest_table_name', TType.STRING, 5)
        oprot.writeString(self.dest_table_name)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
