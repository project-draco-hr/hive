def process_isPartitionMarkedForEvent(self, seqid, iprot, oprot):
    args = isPartitionMarkedForEvent_args()
    args.read(iprot)
    iprot.readMessageEnd()
    result = isPartitionMarkedForEvent_result()
    try:
        result.success = self._handler.isPartitionMarkedForEvent(args.db_name, args.tbl_name, args.part_vals, args.eventType)
        msg_type = TMessageType.REPLY
    except (TTransport.TTransportException, KeyboardInterrupt, SystemExit):
        raise
    except MetaException as o1:
        msg_type = TMessageType.REPLY
        result.o1 = o1
    except NoSuchObjectException as o2:
        msg_type = TMessageType.REPLY
        result.o2 = o2
    except UnknownDBException as o3:
        msg_type = TMessageType.REPLY
        result.o3 = o3
    except UnknownTableException as o4:
        msg_type = TMessageType.REPLY
        result.o4 = o4
    except UnknownPartitionException as o5:
        msg_type = TMessageType.REPLY
        result.o5 = o5
    except InvalidPartitionException as o6:
        msg_type = TMessageType.REPLY
        result.o6 = o6
    except Exception as ex:
        msg_type = TMessageType.EXCEPTION
        logging.exception(ex)
        result = TApplicationException(TApplicationException.INTERNAL_ERROR, 'Internal error')
    oprot.writeMessageBegin('isPartitionMarkedForEvent', msg_type, seqid)
    result.write(oprot)
    oprot.writeMessageEnd()
    oprot.trans.flush()
