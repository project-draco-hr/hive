def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('partition_name_has_valid_characters_args')
    if (self.part_vals is not None):
        oprot.writeFieldBegin('part_vals', TType.LIST, 1)
        oprot.writeListBegin(TType.STRING, len(self.part_vals))
        for iter752 in self.part_vals:
            oprot.writeString(iter752)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    if (self.throw_exception is not None):
        oprot.writeFieldBegin('throw_exception', TType.BOOL, 2)
        oprot.writeBool(self.throw_exception)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
