def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('get_delegation_token_args')
    if (self.token_owner != None):
        oprot.writeFieldBegin('token_owner', TType.STRING, 1)
        oprot.writeString(self.token_owner)
        oprot.writeFieldEnd()
    if (self.renewer_kerberos_principal_name != None):
        oprot.writeFieldBegin('renewer_kerberos_principal_name', TType.STRING, 2)
        oprot.writeString(self.renewer_kerberos_principal_name)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()

    def validate(self):
        return
