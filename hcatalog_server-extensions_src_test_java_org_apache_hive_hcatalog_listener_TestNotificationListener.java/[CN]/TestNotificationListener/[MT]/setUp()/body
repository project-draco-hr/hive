{
  System.setProperty("java.naming.factory.initial","org.apache.activemq.jndi.ActiveMQInitialContextFactory");
  System.setProperty("java.naming.provider.url","vm://localhost?broker.persistent=false");
  ConnectionFactory connFac=new ActiveMQConnectionFactory("vm://localhost?broker.persistent=false");
  Connection conn=connFac.createConnection();
  conn.start();
  Session session=conn.createSession(true,Session.SESSION_TRANSACTED);
  Destination hcatTopic=session.createTopic(HCatConstants.HCAT_DEFAULT_TOPIC_PREFIX);
  MessageConsumer consumer1=session.createConsumer(hcatTopic);
  consumer1.setMessageListener(this);
  Destination tblTopic=session.createTopic(HCatConstants.HCAT_DEFAULT_TOPIC_PREFIX + ".mydb.mytbl");
  MessageConsumer consumer2=session.createConsumer(tblTopic);
  consumer2.setMessageListener(this);
  Destination dbTopic=session.createTopic(HCatConstants.HCAT_DEFAULT_TOPIC_PREFIX + ".mydb");
  MessageConsumer consumer3=session.createConsumer(dbTopic);
  consumer3.setMessageListener(this);
  setUpHiveConf();
  hiveConf.set(ConfVars.METASTORE_EVENT_LISTENERS.varname,NotificationListener.class.getName());
  hiveConf.setVar(HiveConf.ConfVars.HIVE_AUTHORIZATION_MANAGER,"org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdHiveAuthorizerFactory");
  SessionState.start(new CliSessionState(hiveConf));
  driver=new Driver(hiveConf);
  client=new HiveMetaStoreClient(hiveConf);
}
