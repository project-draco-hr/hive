{
  final List<Pair<RexNode,String>> projects=new ArrayList<Pair<RexNode,String>>();
  final RelNode child=aggregate.getInput();
  final List<RelDataTypeField> childFields=child.getRowType().getFieldList();
  for (  int i : aggregate.getGroupSet()) {
    sourceOf.put(i,projects.size());
    projects.add(RexInputRef.of2(i,childFields));
  }
  for (  Integer arg : argList) {
    if (sourceOf.get(arg) != null) {
      continue;
    }
    sourceOf.put(arg,projects.size());
    projects.add(RexInputRef.of2(arg,childFields));
  }
  final RelNode project=projFactory.createProject(child,Pair.left(projects),Pair.right(projects));
  return aggregate.copy(aggregate.getTraitSet(),project,false,ImmutableBitSet.range(projects.size()),null,ImmutableList.<AggregateCall>of());
}
