{
  HiveConf conf=new HiveConf();
  HepProgramBuilder programBuilder=new HepProgramBuilder();
  programBuilder.addMatchOrder(HepMatchOrder.TOP_DOWN);
  programBuilder=programBuilder.addRuleCollection(ImmutableList.<RelOptRule>of(DummyRule.INSTANCE));
  HiveRulesRegistry registry=new HiveRulesRegistry();
  HivePlannerContext context=new HivePlannerContext(null,null,registry);
  HepPlanner planner=new HepPlanner(programBuilder.build(),context);
  RexBuilder rexBuilder=new RexBuilder(new JavaTypeFactoryImpl());
  RelOptCluster cluster=RelOptCluster.create(planner,rexBuilder);
  HiveDefaultRelMetadataProvider mdProvider=new HiveDefaultRelMetadataProvider(conf);
  List<RelMetadataProvider> list=Lists.newArrayList();
  list.add(mdProvider.getMetadataProvider());
  planner.registerMetadataProviders(list);
  RelMetadataProvider chainedProvider=ChainedRelMetadataProvider.of(list);
  final RelNode node=new DummyNode(cluster,cluster.traitSet());
  node.getCluster().setMetadataProvider(new CachingRelMetadataProvider(chainedProvider,planner));
  planner.setRoot(node);
  planner.findBestExp();
  assertEquals(3,DummyRule.INSTANCE.numberMatches);
  assertEquals(1,DummyRule.INSTANCE.numberOnMatch);
}
