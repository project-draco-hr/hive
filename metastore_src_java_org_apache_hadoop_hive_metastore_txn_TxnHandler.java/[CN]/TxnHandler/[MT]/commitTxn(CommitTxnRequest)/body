{
  long txnid=rqst.getTxnid();
  try {
    Connection dbConn=null;
    Statement stmt=null;
    try {
      dbConn=getDbConn(Connection.TRANSACTION_SERIALIZABLE);
      stmt=dbConn.createStatement();
      heartbeatTxn(dbConn,txnid);
      String s="insert into COMPLETED_TXN_COMPONENTS select tc_txnid, tc_database, tc_table, " + "tc_partition from TXN_COMPONENTS where tc_txnid = " + txnid;
      LOG.debug("Going to execute insert <" + s + ">");
      if (stmt.executeUpdate(s) < 1) {
        LOG.info("Expected to move at least one record from txn_components to " + "completed_txn_components when committing txn! " + JavaUtils.txnIdToString(txnid));
      }
      s="delete from TXN_COMPONENTS where tc_txnid = " + txnid;
      LOG.debug("Going to execute update <" + s + ">");
      stmt.executeUpdate(s);
      s="delete from HIVE_LOCKS where hl_txnid = " + txnid;
      LOG.debug("Going to execute update <" + s + ">");
      stmt.executeUpdate(s);
      s="delete from TXNS where txn_id = " + txnid;
      LOG.debug("Going to execute update <" + s + ">");
      stmt.executeUpdate(s);
      LOG.debug("Going to commit");
      dbConn.commit();
    }
 catch (    SQLException e) {
      LOG.debug("Going to rollback");
      rollbackDBConn(dbConn);
      checkRetryable(dbConn,e,"commitTxn(" + rqst + ")");
      throw new MetaException("Unable to update transaction database " + StringUtils.stringifyException(e));
    }
 finally {
      closeStmt(stmt);
      closeDbConn(dbConn);
    }
  }
 catch (  RetryException e) {
    commitTxn(rqst);
  }
}
