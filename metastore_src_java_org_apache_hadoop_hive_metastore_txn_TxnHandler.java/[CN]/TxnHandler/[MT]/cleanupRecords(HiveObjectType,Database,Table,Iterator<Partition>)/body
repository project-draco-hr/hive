{
  try {
    Connection dbConn=null;
    Statement stmt=null;
    try {
      String dbName;
      String tblName;
      dbConn=getDbConn(Connection.TRANSACTION_READ_COMMITTED);
      stmt=dbConn.createStatement();
      List<String> queries=new ArrayList<String>();
      StringBuilder buff=new StringBuilder();
switch (type) {
case DATABASE:
        dbName=db.getName();
      buff.append("delete from TXN_COMPONENTS where tc_database='");
    buff.append(dbName);
  buff.append("'");
queries.add(buff.toString());
buff.setLength(0);
buff.append("delete from COMPLETED_TXN_COMPONENTS where ctc_database='");
buff.append(dbName);
buff.append("'");
queries.add(buff.toString());
buff.setLength(0);
buff.append("delete from COMPACTION_QUEUE where cq_database='");
buff.append(dbName);
buff.append("'");
queries.add(buff.toString());
buff.setLength(0);
buff.append("delete from COMPLETED_COMPACTIONS where cc_database='");
buff.append(dbName);
buff.append("'");
queries.add(buff.toString());
break;
case TABLE:
dbName=table.getDbName();
tblName=table.getTableName();
buff.append("delete from TXN_COMPONENTS where tc_database='");
buff.append(dbName);
buff.append("' and tc_table='");
buff.append(tblName);
buff.append("'");
queries.add(buff.toString());
buff.setLength(0);
buff.append("delete from COMPLETED_TXN_COMPONENTS where ctc_database='");
buff.append(dbName);
buff.append("' and ctc_table='");
buff.append(tblName);
buff.append("'");
queries.add(buff.toString());
buff.setLength(0);
buff.append("delete from COMPACTION_QUEUE where cq_database='");
buff.append(dbName);
buff.append("' and cq_table='");
buff.append(tblName);
buff.append("'");
queries.add(buff.toString());
buff.setLength(0);
buff.append("delete from COMPLETED_COMPACTIONS where cc_database='");
buff.append(dbName);
buff.append("' and cc_table='");
buff.append(tblName);
buff.append("'");
queries.add(buff.toString());
break;
case PARTITION:
dbName=table.getDbName();
tblName=table.getTableName();
List<FieldSchema> partCols=table.getPartitionKeys();
List<String> partVals;
String partName;
while (partitionIterator.hasNext()) {
Partition p=partitionIterator.next();
partVals=p.getValues();
partName=Warehouse.makePartName(partCols,partVals);
buff.append("delete from TXN_COMPONENTS where tc_database='");
buff.append(dbName);
buff.append("' and tc_table='");
buff.append(tblName);
buff.append("' and tc_partition='");
buff.append(partName);
buff.append("'");
queries.add(buff.toString());
buff.setLength(0);
buff.append("delete from COMPLETED_TXN_COMPONENTS where ctc_database='");
buff.append(dbName);
buff.append("' and ctc_table='");
buff.append(tblName);
buff.append("' and ctc_partition='");
buff.append(partName);
buff.append("'");
queries.add(buff.toString());
buff.setLength(0);
buff.append("delete from COMPACTION_QUEUE where cq_database='");
buff.append(dbName);
buff.append("' and cq_table='");
buff.append(tblName);
buff.append("' and cq_partition='");
buff.append(partName);
buff.append("'");
queries.add(buff.toString());
buff.setLength(0);
buff.append("delete from COMPLETED_COMPACTIONS where cc_database='");
buff.append(dbName);
buff.append("' and cc_table='");
buff.append(tblName);
buff.append("' and cc_partition='");
buff.append(partName);
buff.append("'");
queries.add(buff.toString());
}
break;
default :
throw new MetaException("Invalid object type for cleanup: " + type);
}
for (String query : queries) {
LOG.debug("Going to execute update <" + query + ">");
stmt.executeUpdate(query);
}
LOG.debug("Going to commit");
dbConn.commit();
}
 catch (SQLException e) {
LOG.debug("Going to rollback");
rollbackDBConn(dbConn);
checkRetryable(dbConn,e,"cleanupRecords");
if (e.getMessage().contains("does not exist")) {
LOG.warn("Cannot perform cleanup since metastore table does not exist");
}
 else {
throw new MetaException("Unable to clean up " + StringUtils.stringifyException(e));
}
}
 finally {
closeStmt(stmt);
closeDbConn(dbConn);
}
}
 catch (RetryException e) {
cleanupRecords(type,db,table,partitionIterator);
}
}
