{
  Connection dbConn=getDbConn();
  try {
    long extLockId=rqst.getLockid();
    heartbeatLock(dbConn,extLockId);
    long txnid=getTxnIdFromLockId(dbConn,extLockId);
    if (txnid > 0) {
      try {
        LOG.debug("Going to rollback");
        dbConn.rollback();
        String msg="Unlocking locks associated with transaction" + " not permitted.  Lockid " + extLockId + " is associated with "+ "transaction "+ txnid;
        LOG.error(msg);
        throw new TxnOpenException(msg);
      }
 catch (      SQLException e1) {
        throw new MetaException("Unable to rollback " + StringUtils.stringifyException(e1));
      }
    }
    try {
      Statement stmt=dbConn.createStatement();
      String s="delete from HIVE_LOCKS where hl_lock_ext_id = " + extLockId;
      LOG.debug("Going to execute update <" + s + ">");
      int rc=stmt.executeUpdate(s);
      if (rc < 1) {
        LOG.debug("Going to rollback");
        dbConn.rollback();
        throw new NoSuchLockException("No such lock: " + extLockId);
      }
      LOG.debug("Going to commit");
      dbConn.commit();
    }
 catch (    SQLException e) {
      try {
        LOG.debug("Going to rollback");
        dbConn.rollback();
      }
 catch (      SQLException e1) {
      }
      throw new MetaException("Unable to update transaction database " + StringUtils.stringifyException(e));
    }
  }
  finally {
    closeDbConn(dbConn);
  }
}
