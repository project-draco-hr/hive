{
  Connection dbConn=getDbConn();
  try {
    Statement stmt=dbConn.createStatement();
    LOG.debug("Going to execute query <select ntxn_next - 1 from " + "NEXT_TXN_ID>");
    ResultSet rs=stmt.executeQuery("select ntxn_next - 1 from NEXT_TXN_ID");
    if (!rs.next()) {
      throw new MetaException("Transaction tables not properly " + "initialized, no record found in next_txn_id");
    }
    long hwm=rs.getLong(1);
    if (rs.wasNull()) {
      throw new MetaException("Transaction tables not properly " + "initialized, null record found in next_txn_id");
    }
    List<TxnInfo> txnInfo=new ArrayList<TxnInfo>();
    LOG.debug("Going to execute query<select txn_id, txn_state from TXNS>");
    rs=stmt.executeQuery("select txn_id, txn_state, txn_user, txn_host from TXNS");
    while (rs.next()) {
      char c=rs.getString(2).charAt(0);
      TxnState state;
switch (c) {
case TXN_ABORTED:
        state=TxnState.ABORTED;
      break;
case TXN_OPEN:
    state=TxnState.OPEN;
  break;
default :
throw new MetaException("Unexpected transaction state " + c + " found in txns table");
}
txnInfo.add(new TxnInfo(rs.getLong(1),state,rs.getString(3),rs.getString(4)));
}
stmt.close();
LOG.debug("Going to rollback");
dbConn.rollback();
return new GetOpenTxnsInfoResponse(hwm,txnInfo);
}
 catch (SQLException e) {
try {
LOG.debug("Going to rollback");
dbConn.rollback();
}
 catch (SQLException e1) {
}
throw new MetaException("Unable to select from transaction database, " + StringUtils.stringifyException(e));
}
 finally {
closeDbConn(dbConn);
}
}
