{
  TimestampColumnVector result=(TimestampColumnVector)previousVector;
  super.nextVector(previousVector,isNull,batchSize);
  for (int i=0; i < batchSize; i++) {
    if (result.noNulls || !result.isNull[i]) {
      long millis=data.next() + base_timestamp;
      int newNanos=parseNanos(nanos.next());
      if (millis < 0 && newNanos != 0) {
        millis-=1;
      }
      millis*=WriterImpl.MILLIS_PER_SECOND;
      long offset=0;
      if (!hasSameTZRules) {
        offset=writerTimeZone.getOffset(millis) - readerTimeZone.getOffset(millis);
      }
      long adjustedMillis=millis + offset;
      if (!hasSameTZRules && (readerTimeZone.getOffset(millis) != readerTimeZone.getOffset(adjustedMillis))) {
        long newOffset=writerTimeZone.getOffset(millis) - readerTimeZone.getOffset(adjustedMillis);
        adjustedMillis=millis + newOffset;
      }
      result.time[i]=adjustedMillis;
      result.nanos[i]=newNanos;
      if (result.isRepeating && i != 0 && (result.time[0] != result.time[i] || result.nanos[0] != result.nanos[i])) {
        result.isRepeating=false;
      }
    }
  }
}
