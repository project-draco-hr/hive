{
  scratchlcv.isNull=result.isNull;
  scratchlcv.ensureSize(batchSize,false);
  lengths.nextVector(scratchlcv,scratchlcv.vector,batchSize);
  int totalLength=0;
  if (!scratchlcv.isRepeating) {
    for (int i=0; i < batchSize; i++) {
      if (!scratchlcv.isNull[i]) {
        totalLength+=(int)scratchlcv.vector[i];
      }
    }
  }
 else {
    if (!scratchlcv.isNull[0]) {
      totalLength=(int)(batchSize * scratchlcv.vector[0]);
    }
  }
  byte[] allBytes=new byte[totalLength];
  int offset=0;
  int len=totalLength;
  while (len > 0) {
    int bytesRead=stream.read(allBytes,offset,len);
    if (bytesRead < 0) {
      throw new EOFException("Can't finish byte read from " + stream);
    }
    len-=bytesRead;
    offset+=bytesRead;
  }
  return allBytes;
}
