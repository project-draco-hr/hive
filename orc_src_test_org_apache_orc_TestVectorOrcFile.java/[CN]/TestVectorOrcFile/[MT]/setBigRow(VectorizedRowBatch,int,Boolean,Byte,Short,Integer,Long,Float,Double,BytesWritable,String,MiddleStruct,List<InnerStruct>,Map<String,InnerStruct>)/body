{
  ((LongColumnVector)batch.cols[0]).vector[rowId]=b1 ? 1 : 0;
  ((LongColumnVector)batch.cols[1]).vector[rowId]=b2;
  ((LongColumnVector)batch.cols[2]).vector[rowId]=s1;
  ((LongColumnVector)batch.cols[3]).vector[rowId]=i1;
  ((LongColumnVector)batch.cols[4]).vector[rowId]=l1;
  ((DoubleColumnVector)batch.cols[5]).vector[rowId]=f1;
  ((DoubleColumnVector)batch.cols[6]).vector[rowId]=d1;
  if (b3 != null) {
    ((BytesColumnVector)batch.cols[7]).setVal(rowId,b3.getBytes(),0,b3.getLength());
  }
 else {
    batch.cols[7].isNull[rowId]=true;
    batch.cols[7].noNulls=false;
  }
  if (s2 != null) {
    ((BytesColumnVector)batch.cols[8]).setVal(rowId,s2.getBytes());
  }
 else {
    batch.cols[8].isNull[rowId]=true;
    batch.cols[8].noNulls=false;
  }
  setMiddleStruct((StructColumnVector)batch.cols[9],rowId,m1);
  setInnerList((ListColumnVector)batch.cols[10],rowId,l2);
  setInnerMap((MapColumnVector)batch.cols[11],rowId,m2);
}
