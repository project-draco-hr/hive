{
  TypeDescription schema=createBigRowSchema();
  Writer writer=OrcFile.createWriter(testFilePath,OrcFile.writerOptions(conf).setSchema(schema).stripeSize(1000).compress(CompressionKind.NONE).bufferSize(100));
  writer.addUserMetadata("my.meta",byteBuf(1,2,3,4,5,6,7,-1,-2,127,-128));
  writer.addUserMetadata("clobber",byteBuf(1,2,3));
  writer.addUserMetadata("clobber",byteBuf(4,3,2,1));
  ByteBuffer bigBuf=ByteBuffer.allocate(40000);
  Random random=new Random(0);
  random.nextBytes(bigBuf.array());
  writer.addUserMetadata("big",bigBuf);
  bigBuf.position(0);
  VectorizedRowBatch batch=schema.createRowBatch();
  batch.size=1;
  setBigRow(batch,0,true,(byte)127,(short)1024,42,42L * 1024 * 1024* 1024,(float)3.1415,-2.713,null,null,null,null,null);
  writer.addRowBatch(batch);
  writer.addUserMetadata("clobber",byteBuf(5,7,11,13,17,19));
  writer.close();
  Reader reader=OrcFile.createReader(testFilePath,OrcFile.readerOptions(conf).filesystem(fs));
  Assert.assertEquals(byteBuf(5,7,11,13,17,19),reader.getMetadataValue("clobber"));
  Assert.assertEquals(byteBuf(1,2,3,4,5,6,7,-1,-2,127,-128),reader.getMetadataValue("my.meta"));
  Assert.assertEquals(bigBuf,reader.getMetadataValue("big"));
  try {
    reader.getMetadataValue("unknown");
    assertTrue(false);
  }
 catch (  IllegalArgumentException iae) {
  }
  int i=0;
  for (  String key : reader.getMetadataKeys()) {
    if ("my.meta".equals(key) || "clobber".equals(key) || "big".equals(key)) {
      i+=1;
    }
 else {
      throw new IllegalArgumentException("unknown key " + key);
    }
  }
  assertEquals(3,i);
  int numStripes=reader.getStripeStatistics().size();
  assertEquals(1,numStripes);
}
