{
  if (schemaOnRead == null) {
    if (isLogInfoEnabled) {
      LOG.info("Schema is not specified on read. Using file schema.");
    }
    return null;
  }
  if (fileSchema.size() != schemaOnRead.size()) {
    if (isLogInfoEnabled) {
      LOG.info("Schema on read column count does not match file schema's column count." + " Falling back to using file schema.");
    }
    return null;
  }
 else {
    List<OrcProto.Type> result=Lists.newArrayList(fileSchema);
    boolean canPromoteType=false;
    for (int i=0; i < fileSchema.size(); i++) {
      OrcProto.Type fColType=fileSchema.get(i);
      OrcProto.Type rColType=schemaOnRead.get(i);
      if (!fColType.getKind().equals(rColType.getKind())) {
        if (fColType.getKind().equals(OrcProto.Type.Kind.SHORT)) {
          if (rColType.getKind().equals(OrcProto.Type.Kind.INT) || rColType.getKind().equals(OrcProto.Type.Kind.LONG)) {
            result.set(i,result.get(i).toBuilder().setKind(rColType.getKind()).build());
            canPromoteType=true;
          }
 else {
            canPromoteType=false;
          }
        }
 else         if (fColType.getKind().equals(OrcProto.Type.Kind.INT)) {
          if (rColType.getKind().equals(OrcProto.Type.Kind.LONG)) {
            result.set(i,result.get(i).toBuilder().setKind(rColType.getKind()).build());
            canPromoteType=true;
          }
 else {
            canPromoteType=false;
          }
        }
 else {
          canPromoteType=false;
        }
      }
    }
    if (canPromoteType) {
      if (isLogInfoEnabled) {
        LOG.info("Integer type promotion happened in ORC record reader. Using promoted schema.");
      }
      return result;
    }
  }
  return null;
}
