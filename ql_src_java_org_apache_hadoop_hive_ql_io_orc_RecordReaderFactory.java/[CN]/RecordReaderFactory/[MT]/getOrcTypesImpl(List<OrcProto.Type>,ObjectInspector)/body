{
  OrcProto.Type.Builder type=OrcProto.Type.newBuilder();
switch (inspector.getCategory()) {
case PRIMITIVE:
switch (((PrimitiveObjectInspector)inspector).getPrimitiveCategory()) {
case BOOLEAN:
      type.setKind(OrcProto.Type.Kind.BOOLEAN);
    break;
case BYTE:
  type.setKind(OrcProto.Type.Kind.BYTE);
break;
case SHORT:
type.setKind(OrcProto.Type.Kind.SHORT);
break;
case INT:
type.setKind(OrcProto.Type.Kind.INT);
break;
case LONG:
type.setKind(OrcProto.Type.Kind.LONG);
break;
case FLOAT:
type.setKind(OrcProto.Type.Kind.FLOAT);
break;
case DOUBLE:
type.setKind(OrcProto.Type.Kind.DOUBLE);
break;
case STRING:
type.setKind(OrcProto.Type.Kind.STRING);
break;
case CHAR:
CharTypeInfo charTypeInfo=(CharTypeInfo)((PrimitiveObjectInspector)inspector).getTypeInfo();
type.setKind(OrcProto.Type.Kind.CHAR);
type.setMaximumLength(charTypeInfo.getLength());
break;
case VARCHAR:
VarcharTypeInfo typeInfo=(VarcharTypeInfo)((PrimitiveObjectInspector)inspector).getTypeInfo();
type.setKind(OrcProto.Type.Kind.VARCHAR);
type.setMaximumLength(typeInfo.getLength());
break;
case BINARY:
type.setKind(OrcProto.Type.Kind.BINARY);
break;
case TIMESTAMP:
type.setKind(OrcProto.Type.Kind.TIMESTAMP);
break;
case DATE:
type.setKind(OrcProto.Type.Kind.DATE);
break;
case DECIMAL:
DecimalTypeInfo decTypeInfo=(DecimalTypeInfo)((PrimitiveObjectInspector)inspector).getTypeInfo();
type.setKind(OrcProto.Type.Kind.DECIMAL);
type.setPrecision(decTypeInfo.precision());
type.setScale(decTypeInfo.scale());
break;
default :
throw new IllegalArgumentException("Unknown primitive category: " + ((PrimitiveObjectInspector)inspector).getPrimitiveCategory());
}
result.add(type.build());
break;
case LIST:
type.setKind(OrcProto.Type.Kind.LIST);
result.add(type.build());
getOrcTypesImpl(result,((ListObjectInspector)inspector).getListElementObjectInspector());
break;
case MAP:
type.setKind(OrcProto.Type.Kind.MAP);
result.add(type.build());
getOrcTypesImpl(result,((MapObjectInspector)inspector).getMapKeyObjectInspector());
getOrcTypesImpl(result,((MapObjectInspector)inspector).getMapValueObjectInspector());
break;
case STRUCT:
type.setKind(OrcProto.Type.Kind.STRUCT);
result.add(type.build());
for (StructField field : ((StructObjectInspector)inspector).getAllStructFieldRefs()) {
getOrcTypesImpl(result,field.getFieldObjectInspector());
}
break;
case UNION:
type.setKind(OrcProto.Type.Kind.UNION);
result.add(type.build());
for (ObjectInspector oi : ((UnionObjectInspector)inspector).getObjectInspectors()) {
getOrcTypesImpl(result,oi);
}
break;
default :
throw new IllegalArgumentException("Unknown category: " + inspector.getCategory());
}
}
