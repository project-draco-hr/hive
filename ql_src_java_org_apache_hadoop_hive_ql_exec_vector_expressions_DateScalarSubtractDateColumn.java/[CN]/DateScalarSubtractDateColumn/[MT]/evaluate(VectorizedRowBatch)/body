{
  if (childExpressions != null) {
    super.evaluateChildren(batch);
  }
  LongColumnVector inputColVector2=(LongColumnVector)batch.cols[colNum];
  IntervalDayTimeColumnVector outputColVector=(IntervalDayTimeColumnVector)batch.cols[outputColumn];
  int[] sel=batch.selected;
  boolean[] inputIsNull=inputColVector2.isNull;
  boolean[] outputIsNull=outputColVector.isNull;
  outputColVector.noNulls=inputColVector2.noNulls;
  outputColVector.isRepeating=inputColVector2.isRepeating;
  int n=batch.size;
  long[] vector2=inputColVector2.vector;
  if (n == 0) {
    return;
  }
  if (inputColVector2.isRepeating) {
    scratchTimestamp2.setTime(DateWritable.daysToMillis((int)vector2[0]));
    dtm.subtract(value,scratchTimestamp2,outputColVector.getScratchIntervalDayTime());
    outputColVector.setFromScratchIntervalDayTime(0);
    outputIsNull[0]=inputIsNull[0];
  }
 else   if (inputColVector2.noNulls) {
    if (batch.selectedInUse) {
      for (int j=0; j != n; j++) {
        int i=sel[j];
        scratchTimestamp2.setTime(DateWritable.daysToMillis((int)vector2[i]));
        dtm.subtract(value,scratchTimestamp2,outputColVector.getScratchIntervalDayTime());
        outputColVector.setFromScratchIntervalDayTime(i);
      }
    }
 else {
      for (int i=0; i != n; i++) {
        scratchTimestamp2.setTime(DateWritable.daysToMillis((int)vector2[i]));
        dtm.subtract(value,scratchTimestamp2,outputColVector.getScratchIntervalDayTime());
        outputColVector.setFromScratchIntervalDayTime(i);
      }
    }
  }
 else {
    if (batch.selectedInUse) {
      for (int j=0; j != n; j++) {
        int i=sel[j];
        scratchTimestamp2.setTime(DateWritable.daysToMillis((int)vector2[i]));
        dtm.subtract(value,scratchTimestamp2,outputColVector.getScratchIntervalDayTime());
        outputColVector.setFromScratchIntervalDayTime(i);
        outputIsNull[i]=inputIsNull[i];
      }
    }
 else {
      for (int i=0; i != n; i++) {
        scratchTimestamp2.setTime(DateWritable.daysToMillis((int)vector2[i]));
        dtm.subtract(value,scratchTimestamp2,outputColVector.getScratchIntervalDayTime());
        outputColVector.setFromScratchIntervalDayTime(i);
      }
      System.arraycopy(inputIsNull,0,outputIsNull,0,n);
    }
  }
  NullUtil.setNullOutputEntriesColScalar(outputColVector,batch.selectedInUse,sel,n);
}
