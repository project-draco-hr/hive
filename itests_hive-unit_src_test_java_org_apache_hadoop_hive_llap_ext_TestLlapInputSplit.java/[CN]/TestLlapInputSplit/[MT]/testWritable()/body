{
  int splitNum=88;
  byte[] planBytes="0123456789987654321".getBytes();
  byte[] fragmentBytes="abcdefghijklmnopqrstuvwxyz".getBytes();
  SplitLocationInfo[] locations={new SplitLocationInfo("location1",false),new SplitLocationInfo("location2",false)};
  ArrayList<FieldDesc> colDescs=new ArrayList<FieldDesc>();
  colDescs.add(new FieldDesc("col1",new TypeDesc(TypeDesc.Type.STRING)));
  colDescs.add(new FieldDesc("col2",new TypeDesc(TypeDesc.Type.INT)));
  Schema schema=new Schema(colDescs);
  byte[] tokenBytes=new byte[]{1};
  LlapInputSplit split1=new LlapInputSplit(splitNum,planBytes,fragmentBytes,null,locations,schema,"hive",tokenBytes);
  ByteArrayOutputStream byteOutStream=new ByteArrayOutputStream();
  DataOutputStream dataOut=new DataOutputStream(byteOutStream);
  split1.write(dataOut);
  ByteArrayInputStream byteInStream=new ByteArrayInputStream(byteOutStream.toByteArray());
  DataInputStream dataIn=new DataInputStream(byteInStream);
  LlapInputSplit split2=new LlapInputSplit();
  split2.readFields(dataIn);
  assertEquals(0,byteInStream.available());
  checkLlapSplits(split1,split2);
}
