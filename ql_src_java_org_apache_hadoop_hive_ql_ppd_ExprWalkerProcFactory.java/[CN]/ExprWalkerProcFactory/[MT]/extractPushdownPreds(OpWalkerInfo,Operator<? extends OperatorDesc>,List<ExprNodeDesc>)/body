{
  ExprWalkerInfo exprContext=new ExprWalkerInfo(op);
  Map<Rule,NodeProcessor> exprRules=new LinkedHashMap<Rule,NodeProcessor>();
  exprRules.put(new TypeRule(ExprNodeColumnDesc.class),getColumnProcessor());
  exprRules.put(new TypeRule(ExprNodeFieldDesc.class),getFieldProcessor());
  exprRules.put(new TypeRule(ExprNodeGenericFuncDesc.class),getGenericFuncProcessor());
  Dispatcher disp=new DefaultRuleDispatcher(getDefaultExprProcessor(),exprRules,exprContext);
  GraphWalker egw=new DefaultGraphWalker(disp);
  List<Node> startNodes=new ArrayList<Node>();
  List<ExprNodeDesc> clonedPreds=new ArrayList<ExprNodeDesc>();
  for (  ExprNodeDesc node : preds) {
    ExprNodeDesc clone=node.clone();
    clonedPreds.add(clone);
    exprContext.getNewToOldExprMap().put(clone,node);
  }
  startNodes.addAll(clonedPreds);
  egw.startWalking(startNodes,null);
  HiveConf conf=opContext.getParseContext().getConf();
  for (  ExprNodeDesc pred : clonedPreds) {
    extractFinalCandidates(pred,exprContext,conf);
  }
  return exprContext;
}
