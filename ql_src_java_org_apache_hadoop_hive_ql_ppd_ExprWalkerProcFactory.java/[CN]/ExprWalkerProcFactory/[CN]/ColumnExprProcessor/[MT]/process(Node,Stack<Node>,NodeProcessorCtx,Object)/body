{
  ExprWalkerInfo ctx=(ExprWalkerInfo)procCtx;
  ExprNodeColumnDesc colref=(ExprNodeColumnDesc)nd;
  RowResolver toRR=ctx.getToRR();
  Operator<? extends OperatorDesc> op=ctx.getOp();
  String[] colAlias=toRR.reverseLookup(colref.getColumn());
  boolean isCandidate=true;
  if (op.getColumnExprMap() != null) {
    ExprNodeDesc exp=op.getColumnExprMap().get(colref.getColumn());
    if (exp == null) {
      ctx.setIsCandidate(colref,false);
      return false;
    }
 else {
      if (exp instanceof ExprNodeGenericFuncDesc) {
        isCandidate=false;
      }
      if (exp instanceof ExprNodeColumnDesc && colAlias == null) {
        ExprNodeColumnDesc column=(ExprNodeColumnDesc)exp;
        colAlias=new String[]{column.getTabAlias(),column.getColumn()};
      }
    }
    ctx.addConvertedNode(colref,exp);
    ctx.setIsCandidate(exp,isCandidate);
    ctx.addAlias(exp,colAlias[0]);
  }
 else {
    if (colAlias == null) {
      return false;
    }
    ctx.addAlias(colref,colAlias[0]);
  }
  ctx.setIsCandidate(colref,isCandidate);
  return isCandidate;
}
