{
  ExprWalkerInfo ctx=(ExprWalkerInfo)procCtx;
  ExprNodeColumnDesc colref=(ExprNodeColumnDesc)nd;
  RowSchema toRS=ctx.getOp().getSchema();
  Operator<? extends OperatorDesc> op=ctx.getOp();
  ColumnInfo ci=toRS.getColumnInfo(colref.getColumn());
  String tabAlias=null;
  if (ci != null) {
    tabAlias=ci.getTabAlias();
  }
  boolean isCandidate=true;
  if (op.getColumnExprMap() != null) {
    ExprNodeDesc exp=op.getColumnExprMap().get(colref.getColumn());
    if (exp == null) {
      ctx.setIsCandidate(colref,false);
      return false;
    }
 else {
      if (exp instanceof ExprNodeGenericFuncDesc) {
        isCandidate=false;
      }
      if (exp instanceof ExprNodeColumnDesc && ci == null) {
        ExprNodeColumnDesc column=(ExprNodeColumnDesc)exp;
        tabAlias=column.getTabAlias();
      }
    }
    ctx.addConvertedNode(colref,exp);
    ctx.setIsCandidate(exp,isCandidate);
    ctx.addAlias(exp,tabAlias);
  }
 else {
    if (ci == null) {
      return false;
    }
    ctx.addAlias(colref,tabAlias);
  }
  ctx.setIsCandidate(colref,isCandidate);
  return isCandidate;
}
