{
  ExprWalkerInfo ctx=(ExprWalkerInfo)procCtx;
  ExprNodeColumnDesc colref=(ExprNodeColumnDesc)nd;
  RowSchema toRS=ctx.getOp().getSchema();
  Operator<? extends OperatorDesc> op=ctx.getOp();
  ColumnInfo ci=toRS.getColumnInfo(colref.getColumn());
  String tabAlias=null;
  if (ci != null) {
    tabAlias=ci.getTabAlias();
  }
  ExprInfo colExprInfo=null;
  boolean isCandidate=true;
  if (op.getColumnExprMap() != null) {
    ExprNodeDesc exp=op.getColumnExprMap().get(colref.getColumn());
    if (op instanceof GroupByOperator) {
      GroupByOperator groupBy=(GroupByOperator)op;
      if (groupBy.getConf().isGroupingSetsPresent()) {
        int groupingSetPlaceholderPos=groupBy.getConf().getKeys().size() - 1;
        if (colref.getColumn().equals(groupBy.getSchema().getColumnNames().get(groupingSetPlaceholderPos))) {
          exp=null;
        }
      }
    }
    if (exp == null) {
      colExprInfo=ctx.addOrGetExprInfo(colref);
      colExprInfo.isCandidate=false;
      return false;
    }
 else {
      if (exp instanceof ExprNodeGenericFuncDesc) {
        isCandidate=false;
      }
      if (exp instanceof ExprNodeColumnDesc && ci == null) {
        ExprNodeColumnDesc column=(ExprNodeColumnDesc)exp;
        tabAlias=column.getTabAlias();
      }
    }
    colExprInfo=ctx.addOrGetExprInfo(colref);
    colExprInfo.convertedExpr=exp;
    ExprInfo expInfo=ctx.addExprInfo(exp);
    expInfo.isCandidate=isCandidate;
    if (tabAlias != null) {
      expInfo.alias=tabAlias;
    }
 else {
      expInfo.alias=colExprInfo.alias;
    }
  }
 else {
    if (ci == null) {
      return false;
    }
    colExprInfo=ctx.addOrGetExprInfo(colref);
    if (tabAlias != null) {
      colExprInfo.alias=tabAlias;
    }
  }
  colExprInfo.isCandidate=isCandidate;
  return isCandidate;
}
