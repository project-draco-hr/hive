{
  if (bucketToTaskMap.isEmpty()) {
    inputToGroupedSplitMap.put(inputName,bucketToGroupedSplitMap);
    return;
  }
  List<InputDataInformationEvent> taskEvents=new ArrayList<InputDataInformationEvent>();
  for (  Entry<Integer,Collection<InputSplit>> entry : bucketToGroupedSplitMap.asMap().entrySet()) {
    Collection<Integer> destTasks=bucketToTaskMap.get(entry.getKey());
    for (    Integer task : destTasks) {
      for (      InputSplit split : entry.getValue()) {
        MRSplitProto serializedSplit=MRInputHelpers.createSplitProto(split);
        InputDataInformationEvent diEvent=InputDataInformationEvent.createWithSerializedPayload(task,serializedSplit.toByteString().asReadOnlyByteBuffer());
        diEvent.setTargetIndex(task);
        taskEvents.add(diEvent);
      }
    }
  }
  context.addRootInputEvents(inputName,taskEvents);
}
