{
  TStruct struct=new TStruct("StorageDescriptor");
  oprot.writeStructBegin(struct);
  TField field=new TField();
  if (this.cols != null) {
    field.name="cols";
    field.type=TType.LIST;
    field.id=-1;
    oprot.writeFieldBegin(field);
{
      oprot.writeListBegin(new TList(TType.STRUCT,this.cols.size()));
      for (      FieldSchema _iter22 : this.cols) {
        _iter22.write(oprot);
      }
      oprot.writeListEnd();
    }
    oprot.writeFieldEnd();
  }
  if (this.location != null) {
    field.name="location";
    field.type=TType.STRING;
    field.id=-2;
    oprot.writeFieldBegin(field);
    oprot.writeString(this.location);
    oprot.writeFieldEnd();
  }
  if (this.inputFormat != null) {
    field.name="inputFormat";
    field.type=TType.STRING;
    field.id=-3;
    oprot.writeFieldBegin(field);
    oprot.writeString(this.inputFormat);
    oprot.writeFieldEnd();
  }
  if (this.outputFormat != null) {
    field.name="outputFormat";
    field.type=TType.STRING;
    field.id=-4;
    oprot.writeFieldBegin(field);
    oprot.writeString(this.outputFormat);
    oprot.writeFieldEnd();
  }
  field.name="isCompressed";
  field.type=TType.BOOL;
  field.id=-5;
  oprot.writeFieldBegin(field);
  oprot.writeBool(this.isCompressed);
  oprot.writeFieldEnd();
  field.name="numBuckets";
  field.type=TType.I32;
  field.id=-6;
  oprot.writeFieldBegin(field);
  oprot.writeI32(this.numBuckets);
  oprot.writeFieldEnd();
  if (this.serdeInfo != null) {
    field.name="serdeInfo";
    field.type=TType.STRUCT;
    field.id=-7;
    oprot.writeFieldBegin(field);
    this.serdeInfo.write(oprot);
    oprot.writeFieldEnd();
  }
  if (this.bucketCols != null) {
    field.name="bucketCols";
    field.type=TType.LIST;
    field.id=-8;
    oprot.writeFieldBegin(field);
{
      oprot.writeListBegin(new TList(TType.STRING,this.bucketCols.size()));
      for (      String _iter23 : this.bucketCols) {
        oprot.writeString(_iter23);
      }
      oprot.writeListEnd();
    }
    oprot.writeFieldEnd();
  }
  if (this.sortCols != null) {
    field.name="sortCols";
    field.type=TType.LIST;
    field.id=-9;
    oprot.writeFieldBegin(field);
{
      oprot.writeListBegin(new TList(TType.STRUCT,this.sortCols.size()));
      for (      Order _iter24 : this.sortCols) {
        _iter24.write(oprot);
      }
      oprot.writeListEnd();
    }
    oprot.writeFieldEnd();
  }
  if (this.parameters != null) {
    field.name="parameters";
    field.type=TType.MAP;
    field.id=-10;
    oprot.writeFieldBegin(field);
{
      oprot.writeMapBegin(new TMap(TType.STRING,TType.STRING,this.parameters.size()));
      for (      String _iter25 : this.parameters.keySet()) {
        oprot.writeString(_iter25);
        oprot.writeString(this.parameters.get(_iter25));
      }
      oprot.writeMapEnd();
    }
    oprot.writeFieldEnd();
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
