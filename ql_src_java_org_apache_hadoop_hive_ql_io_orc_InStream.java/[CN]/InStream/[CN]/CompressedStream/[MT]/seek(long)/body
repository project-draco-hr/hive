{
  if (desired == 0 && bytes.isEmpty()) {
    logEmptySeek(name);
    return;
  }
  int i=0;
  for (  DiskRange range : bytes) {
    if (range.getOffset() <= desired && desired < range.getEnd()) {
      currentRange=i;
      compressed=range.getData().duplicate();
      int pos=compressed.position();
      pos+=(int)(desired - range.getOffset());
      compressed.position(pos);
      currentOffset=desired;
      return;
    }
    ++i;
  }
  int segments=bytes.size();
  if (segments != 0 && desired == bytes.get(segments - 1).getEnd()) {
    DiskRange range=bytes.get(segments - 1);
    currentRange=segments - 1;
    compressed=range.getData().duplicate();
    compressed.position(compressed.limit());
    currentOffset=desired;
    return;
  }
  throw new IOException("Seek outside of data in " + this + " to "+ desired);
}
