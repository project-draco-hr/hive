{
  for (int i=0; i < bytes.length; ++i) {
    if (offsets[i] <= desired && desired - offsets[i] < bytes[i].remaining()) {
      currentRange=i;
      compressed=bytes[i].duplicate();
      int pos=compressed.position();
      pos+=(int)(desired - offsets[i]);
      compressed.position(pos);
      currentOffset=desired;
      return;
    }
  }
  int segments=bytes.length;
  if (segments != 0 && desired == offsets[segments - 1] + bytes[segments - 1].remaining()) {
    currentRange=segments - 1;
    compressed=bytes[currentRange].duplicate();
    compressed.position(compressed.limit());
    currentOffset=desired;
    return;
  }
  throw new IOException("Seek outside of data in " + this + " to "+ desired);
}
