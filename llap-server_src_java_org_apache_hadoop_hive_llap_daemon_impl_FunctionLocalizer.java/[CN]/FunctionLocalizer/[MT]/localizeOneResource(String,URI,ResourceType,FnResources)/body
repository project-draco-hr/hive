{
  RefCountedResource rcr=localFiles.get(srcUri);
  if (rcr != null && rcr.refCount > 0) {
    logFilesUsed("Reusing",fqfn,srcUri,rcr);
    ++rcr.refCount;
    result.addResources(rcr);
    return;
  }
  rcr=new RefCountedResource();
  List<URI> localUris=resourceDownloader.downloadExternal(srcUri,fqfn,false);
  if (localUris == null || localUris.isEmpty()) {
    LOG.error("Cannot download " + srcUri + " for "+ fqfn);
    return;
  }
  rcr.resources=new ArrayList<>();
  for (  URI uri : localUris) {
    String path=uri.getPath();
    rcr.resources.add(new FunctionResource(rt,path));
    if (rt == ResourceType.JAR) {
      recentlyLocalizedJars.add(path);
    }
  }
  ++rcr.refCount;
  logFilesUsed("Using",fqfn,srcUri,rcr);
  localFiles.put(srcUri,rcr);
  result.addResources(rcr);
}
