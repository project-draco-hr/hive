{
  org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos.FragmentSpecProto result=new org.apache.hadoop.hive.llap.daemon.rpc.LlapDaemonProtocolProtos.FragmentSpecProto(this);
  int from_bitField0_=bitField0_;
  int to_bitField0_=0;
  if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
    to_bitField0_|=0x00000001;
  }
  result.taskAttemptIdString_=taskAttemptIdString_;
  if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
    to_bitField0_|=0x00000002;
  }
  result.dagName_=dagName_;
  if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
    to_bitField0_|=0x00000004;
  }
  result.vertexName_=vertexName_;
  if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
    to_bitField0_|=0x00000008;
  }
  if (processorDescriptorBuilder_ == null) {
    result.processorDescriptor_=processorDescriptor_;
  }
 else {
    result.processorDescriptor_=processorDescriptorBuilder_.build();
  }
  if (inputSpecsBuilder_ == null) {
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      inputSpecs_=java.util.Collections.unmodifiableList(inputSpecs_);
      bitField0_=(bitField0_ & ~0x00000010);
    }
    result.inputSpecs_=inputSpecs_;
  }
 else {
    result.inputSpecs_=inputSpecsBuilder_.build();
  }
  if (outputSpecsBuilder_ == null) {
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      outputSpecs_=java.util.Collections.unmodifiableList(outputSpecs_);
      bitField0_=(bitField0_ & ~0x00000020);
    }
    result.outputSpecs_=outputSpecs_;
  }
 else {
    result.outputSpecs_=outputSpecsBuilder_.build();
  }
  if (groupedInputSpecsBuilder_ == null) {
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      groupedInputSpecs_=java.util.Collections.unmodifiableList(groupedInputSpecs_);
      bitField0_=(bitField0_ & ~0x00000040);
    }
    result.groupedInputSpecs_=groupedInputSpecs_;
  }
 else {
    result.groupedInputSpecs_=groupedInputSpecsBuilder_.build();
  }
  if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
    to_bitField0_|=0x00000010;
  }
  result.vertexParallelism_=vertexParallelism_;
  if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
    to_bitField0_|=0x00000020;
  }
  result.fragmentNumber_=fragmentNumber_;
  if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
    to_bitField0_|=0x00000040;
  }
  result.attemptNumber_=attemptNumber_;
  result.bitField0_=to_bitField0_;
  onBuilt();
  return result;
}
