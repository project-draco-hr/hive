{
  int size=memoizedSerializedSize;
  if (size != -1)   return size;
  size=0;
  if (((bitField0_ & 0x00000001) == 0x00000001)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(1,getFragmentIdentifierStringBytes());
  }
  if (((bitField0_ & 0x00000002) == 0x00000002)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(2,getDagNameBytes());
  }
  if (((bitField0_ & 0x00000004) == 0x00000004)) {
    size+=com.google.protobuf.CodedOutputStream.computeBytesSize(3,getVertexNameBytes());
  }
  if (((bitField0_ & 0x00000008) == 0x00000008)) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(4,processorDescriptor_);
  }
  for (int i=0; i < inputSpecs_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(5,inputSpecs_.get(i));
  }
  for (int i=0; i < outputSpecs_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(6,outputSpecs_.get(i));
  }
  for (int i=0; i < groupedInputSpecs_.size(); i++) {
    size+=com.google.protobuf.CodedOutputStream.computeMessageSize(7,groupedInputSpecs_.get(i));
  }
  if (((bitField0_ & 0x00000010) == 0x00000010)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(8,vertexParallelism_);
  }
  if (((bitField0_ & 0x00000020) == 0x00000020)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(9,fragmentNumber_);
  }
  if (((bitField0_ & 0x00000040) == 0x00000040)) {
    size+=com.google.protobuf.CodedOutputStream.computeInt32Size(10,attemptNumber_);
  }
  size+=getUnknownFields().getSerializedSize();
  memoizedSerializedSize=size;
  return size;
}
