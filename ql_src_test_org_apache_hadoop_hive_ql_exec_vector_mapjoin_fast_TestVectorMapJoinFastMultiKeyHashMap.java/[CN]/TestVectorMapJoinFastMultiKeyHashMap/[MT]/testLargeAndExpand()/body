{
  random=new Random(46809);
  VectorMapJoinFastMultiKeyHashMap map=new VectorMapJoinFastMultiKeyHashMap(false,MODERATE_CAPACITY,LOAD_FACTOR,MODERATE_WB_SIZE,0);
  RandomByteArrayStream randomByteArrayKeyStream=new RandomByteArrayStream(random,10);
  final int largeSize=1000;
  RandomByteArrayStream[] randomByteArrayValueStreams=new RandomByteArrayStream[largeSize];
  for (int i=0; i < largeSize; i++) {
    randomByteArrayValueStreams[i]=new RandomByteArrayStream(random);
    int count=generateLargeCount();
    byte[] key=randomByteArrayKeyStream.next();
    VectorMapJoinHashMapResult hashMapResult=map.createHashMapResult();
    JoinUtil.JoinResult joinResult=map.lookup(key,0,key.length,hashMapResult);
    if (joinResult == JoinUtil.JoinResult.MATCH) {
      assertTrue(false);
    }
    for (int v=0; v < count; v++) {
      byte[] value=randomByteArrayValueStreams[i].next();
      map.putRow(key,value);
    }
  }
  for (int i=0; i < largeSize; i++) {
    verifyHashMapResult(map,randomByteArrayKeyStream.get(i),randomByteArrayValueStreams[i]);
  }
}
