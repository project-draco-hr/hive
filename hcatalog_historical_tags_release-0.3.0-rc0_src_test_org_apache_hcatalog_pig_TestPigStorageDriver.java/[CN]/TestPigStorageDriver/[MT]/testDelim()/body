{
  hcatDriver.run("drop table junit_pigstorage_delim");
  CommandProcessorResponse resp;
  String createTable="create table junit_pigstorage_delim (a0 string, a1 string) partitioned by (b string) stored as RCFILE";
  resp=hcatDriver.run(createTable);
  assertEquals(0,resp.getResponseCode());
  assertNull(resp.getErrorMessage());
  resp=hcatDriver.run("alter table junit_pigstorage_delim add partition (b='2010-10-10')");
  assertEquals(0,resp.getResponseCode());
  assertNull(resp.getErrorMessage());
  resp=hcatDriver.run("alter table junit_pigstorage_delim partition (b='2010-10-10') set fileformat TEXTFILE");
  Partition part=msc.getPartition(MetaStoreUtils.DEFAULT_DATABASE_NAME,"junit_pigstorage_delim","b=2010-10-10");
  Map<String,String> partParms=part.getParameters();
  partParms.put(HCatConstants.HCAT_PIG_LOADER_ARGS,"control-A");
  partParms.put(HCatConstants.HCAT_PIG_STORER_ARGS,"control-A");
  msc.alter_partition(MetaStoreUtils.DEFAULT_DATABASE_NAME,"junit_pigstorage_delim",part);
  PigServer server=new PigServer(ExecType.LOCAL,hcatConf.getAllProperties());
  UDFContext.getUDFContext().setClientSystemProps();
  server.registerQuery(" a = load 'junit_pigstorage_delim' using " + HCatLoader.class.getName() + ";");
  try {
    server.openIterator("a");
  }
 catch (  FrontendException fe) {
  }
  resp=hcatDriver.run("alter table junit_pigstorage_delim set fileformat TEXTFILE");
  assertEquals(0,resp.getResponseCode());
  assertNull(resp.getErrorMessage());
  resp=hcatDriver.run("alter table junit_pigstorage_delim set TBLPROPERTIES ('hcat.pig.loader.args'=':', 'hcat.pig.storer.args'=':')");
  assertEquals(0,resp.getResponseCode());
  assertNull(resp.getErrorMessage());
  File inputFile=File.createTempFile("hcat_test","");
  PrintWriter p=new PrintWriter(new FileWriter(inputFile));
  p.println("1\t2");
  p.println("3\t4");
  p.close();
  server.registerQuery("a = load '" + inputFile.toString() + "' using PigStorage() as (a0:chararray, a1:chararray);");
  server.store("a","junit_pigstorage_delim",HCatStorer.class.getName() + "('b=2010-10-11')");
  server.registerQuery("a = load '/tmp/hcat_junit_warehouse/junit_pigstorage_delim/b=2010-10-11' using PigStorage() as (a:chararray);");
  Iterator<Tuple> itr=server.openIterator("a");
  assertTrue(itr.hasNext());
  Tuple t=itr.next();
  assertTrue(t.get(0).equals("1:2"));
  assertTrue(itr.hasNext());
  t=itr.next();
  assertTrue(t.get(0).equals("3:4"));
  assertFalse(itr.hasNext());
  inputFile.delete();
}
