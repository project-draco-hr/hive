def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('read_log_result')
    if (self.success != None):
        oprot.writeFieldBegin('success', TType.LIST, 0)
        oprot.writeListBegin(TType.MAP, len(self.success))
        for iter96 in self.success:
            oprot.writeMapBegin(TType.STRING, TType.STRING, len(iter96))
            for (kiter97, viter98) in iter96.items():
                oprot.writeString(kiter97)
                oprot.writeString(viter98)
            oprot.writeMapEnd()
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    if (self.ouch != None):
        oprot.writeFieldBegin('ouch', TType.STRUCT, (-3))
        self.ouch.write(oprot)
        oprot.writeFieldEnd()
    if (self.ouch2 != None):
        oprot.writeFieldBegin('ouch2', TType.STRUCT, (-4))
        self.ouch2.write(oprot)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
