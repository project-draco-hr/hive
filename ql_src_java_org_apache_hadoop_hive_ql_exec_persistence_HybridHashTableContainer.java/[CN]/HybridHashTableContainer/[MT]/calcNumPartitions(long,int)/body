{
  if (memoryThreshold < wbSize) {
    throw new IllegalStateException("Available memory is less than hashtable writebuffer size!" + " Try increasing hive.auto.convert.join.noconditionaltask.size.");
  }
  int lowerLimit=2;
  int numPartitions=(int)Math.ceil(dataSize / wbSize);
  LOG.info("Total available memory: " + memoryThreshold);
  LOG.info("Estimated small table size: " + dataSize);
  LOG.info("Write buffer size: " + wbSize);
  LOG.info("Initial number of partitions: " + numPartitions);
  if (numPartitions < lowerLimit) {
    return lowerLimit;
  }
 else   if (dataSize > memoryThreshold) {
    numPartitions=(int)(memoryThreshold / wbSize);
  }
  numPartitions=(Long.bitCount(numPartitions) == 1) ? numPartitions : Integer.highestOneBit(numPartitions) << 1;
  while (dataSize / numPartitions > memoryThreshold) {
    numPartitions*=2;
  }
  LOG.info("Number of hash partitions to be created: " + numPartitions);
  return numPartitions;
}
