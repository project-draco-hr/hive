{
  setColumns(job);
  final RecordReader<ImmutableBytesWritable,Result> rr=delegate.getRecordReader(((HBaseSplit)split).getSnapshotSplit(),job,reporter);
  return new RecordReader<ImmutableBytesWritable,ResultWritable>(){
    @Override public boolean next(    ImmutableBytesWritable key,    ResultWritable value) throws IOException {
      return rr.next(key,value.getResult());
    }
    @Override public ImmutableBytesWritable createKey(){
      return rr.createKey();
    }
    @Override public ResultWritable createValue(){
      return new ResultWritable(rr.createValue());
    }
    @Override public long getPos() throws IOException {
      return rr.getPos();
    }
    @Override public void close() throws IOException {
      rr.close();
    }
    @Override public float getProgress() throws IOException {
      return rr.getProgress();
    }
  }
;
}
