{
  HiveConf conf=new HiveConf(this.getClass());
  String listen=null;
  int port=-1;
  listen=conf.getVar(HiveConf.ConfVars.HIVEHWILISTENHOST);
  port=conf.getIntVar(HiveConf.ConfVars.HIVEHWILISTENPORT);
  if (listen.equals("")) {
    l4j.warn("hive.hwi.listen.host was not specified defaulting to 0.0.0.0");
    listen="0.0.0.0";
  }
  if (port == -1) {
    l4j.warn("hive.hwi.listen.port was not specified defaulting to 9999");
    port=9999;
  }
  String hwiWAR=conf.getVar(HiveConf.ConfVars.HIVEHWIWARFILE);
  String hivehome=System.getenv().get("HIVE_HOME");
  File hwiWARFile=new File(hivehome,hwiWAR);
  if (!hwiWARFile.exists()) {
    l4j.error("HWI WAR file not found at " + hwiWARFile.toString());
    System.exit(1);
  }
  webServer=ShimLoader.getJettyShims().startServer(listen,port);
  webServer.addWar(hwiWARFile.toString(),"/hwi");
  StringBuilder sb=new StringBuilder();
  for (  String arg : args) {
    sb.append(arg + " ");
  }
  System.setProperty("hwi-args",sb.toString());
  try {
    while (true) {
      try {
        webServer.start();
        webServer.join();
        l4j.debug(" HWI Web Server is started.");
        break;
      }
 catch (      org.mortbay.util.MultiException ex) {
        throw ex;
      }
    }
  }
 catch (  IOException ie) {
    throw ie;
  }
catch (  Exception e) {
    IOException ie=new IOException("Problem starting HWI server");
    ie.initCause(e);
    l4j.error("Parsing hwi.listen.port caused exception ",e);
    throw ie;
  }
}
