{
  if (childExpressions != null) {
    super.evaluateChildren(batch);
  }
  LongColumnVector inputColVector1=(LongColumnVector)batch.cols[colNum1];
  LongColumnVector inputColVector2=(LongColumnVector)batch.cols[colNum2];
  int[] sel=batch.selected;
  int n=batch.size;
  long[] vector1=inputColVector1.vector;
  long[] vector2=inputColVector2.vector;
  LongColumnVector outV=(LongColumnVector)batch.cols[outputColumn];
  long[] outputVector=outV.vector;
  if (n <= 0) {
    return;
  }
  if (inputColVector1.noNulls && inputColVector2.noNulls) {
    if ((inputColVector1.isRepeating) && (inputColVector2.isRepeating)) {
      outV.isRepeating=true;
      outputVector[0]=vector1[0] & vector2[0];
    }
 else     if (inputColVector1.isRepeating && !inputColVector2.isRepeating) {
      if (batch.selectedInUse) {
        for (int j=0; j != n; j++) {
          int i=sel[j];
          outputVector[i]=vector1[0] & vector2[i];
        }
      }
 else {
        for (int i=0; i != n; i++) {
          outputVector[i]=vector1[0] & vector2[i];
        }
      }
      outV.isRepeating=false;
    }
 else     if (!inputColVector1.isRepeating && inputColVector2.isRepeating) {
      if (batch.selectedInUse) {
        for (int j=0; j != n; j++) {
          int i=sel[j];
          outputVector[i]=vector1[i] & vector2[0];
        }
      }
 else {
        for (int i=0; i != n; i++) {
          outputVector[i]=vector1[i] & vector2[0];
        }
      }
      outV.isRepeating=false;
    }
 else {
      if (batch.selectedInUse) {
        for (int j=0; j != n; j++) {
          int i=sel[j];
          outputVector[i]=vector1[i] & vector2[i];
        }
      }
 else {
        for (int i=0; i != n; i++) {
          outputVector[i]=vector1[i] & vector2[i];
        }
      }
      outV.isRepeating=false;
    }
    outV.noNulls=true;
  }
 else   if (inputColVector1.noNulls && !inputColVector2.noNulls) {
    if ((inputColVector1.isRepeating) && (inputColVector2.isRepeating)) {
      outV.isRepeating=true;
      outputVector[0]=vector1[0] & vector2[0];
      outV.isNull[0]=(vector1[0] == 1) && inputColVector2.isNull[0];
    }
 else     if (inputColVector1.isRepeating && !inputColVector2.isRepeating) {
      if (batch.selectedInUse) {
        for (int j=0; j != n; j++) {
          int i=sel[j];
          outputVector[i]=vector1[0] & vector2[i];
          outV.isNull[i]=(vector1[0] == 1) && inputColVector2.isNull[i];
        }
      }
 else {
        for (int i=0; i != n; i++) {
          outputVector[i]=vector1[0] & vector2[i];
          outV.isNull[i]=(vector1[0] == 1) && inputColVector2.isNull[i];
        }
      }
      outV.isRepeating=false;
    }
 else     if (!inputColVector1.isRepeating && inputColVector2.isRepeating) {
      if (batch.selectedInUse) {
        for (int j=0; j != n; j++) {
          int i=sel[j];
          outputVector[i]=vector1[i] & vector2[0];
          outV.isNull[i]=(vector1[i] == 1) && inputColVector2.isNull[0];
        }
      }
 else {
        for (int i=0; i != n; i++) {
          outputVector[i]=vector1[i] & vector2[0];
          outV.isNull[i]=(vector1[i] == 1) && inputColVector2.isNull[0];
        }
      }
      outV.isRepeating=false;
    }
 else {
      if (batch.selectedInUse) {
        for (int j=0; j != n; j++) {
          int i=sel[j];
          outputVector[i]=vector1[i] & vector2[i];
          outV.isNull[i]=(vector1[i] == 1) && inputColVector2.isNull[i];
        }
      }
 else {
        for (int i=0; i != n; i++) {
          outputVector[i]=vector1[i] & vector2[i];
          outV.isNull[i]=(vector1[i] == 1) && inputColVector2.isNull[i];
        }
      }
      outV.isRepeating=false;
    }
    outV.noNulls=false;
  }
 else   if (!inputColVector1.noNulls && inputColVector2.noNulls) {
    if ((inputColVector1.isRepeating) && (inputColVector2.isRepeating)) {
      outV.isRepeating=true;
      outputVector[0]=vector1[0] & vector2[0];
      outV.isNull[0]=inputColVector1.isNull[0] && (vector2[0] == 1);
    }
 else     if (inputColVector1.isRepeating && !inputColVector2.isRepeating) {
      if (batch.selectedInUse) {
        for (int j=0; j != n; j++) {
          int i=sel[j];
          outputVector[i]=vector1[0] & vector2[i];
          outV.isNull[i]=inputColVector1.isNull[0] && (vector2[i] == 1);
        }
      }
 else {
        for (int i=0; i != n; i++) {
          outputVector[i]=vector1[0] & vector2[i];
          outV.isNull[i]=inputColVector1.isNull[0] && (vector2[i] == 1);
        }
      }
      outV.isRepeating=false;
    }
 else     if (!inputColVector1.isRepeating && inputColVector2.isRepeating) {
      if (batch.selectedInUse) {
        for (int j=0; j != n; j++) {
          int i=sel[j];
          outputVector[i]=vector1[i] & vector2[0];
          outV.isNull[i]=inputColVector1.isNull[i] && (vector2[0] == 1);
        }
      }
 else {
        for (int i=0; i != n; i++) {
          outputVector[i]=vector1[i] & vector2[0];
          outV.isNull[i]=inputColVector1.isNull[i] && (vector2[0] == 1);
        }
      }
      outV.isRepeating=false;
    }
 else {
      if (batch.selectedInUse) {
        for (int j=0; j != n; j++) {
          int i=sel[j];
          outputVector[i]=vector1[i] & vector2[i];
          outV.isNull[i]=inputColVector1.isNull[i] && (vector2[i] == 1);
        }
      }
 else {
        for (int i=0; i != n; i++) {
          outputVector[i]=vector1[i] & vector2[i];
          outV.isNull[i]=inputColVector1.isNull[i] && (vector2[i] == 1);
        }
      }
      outV.isRepeating=false;
    }
    outV.noNulls=false;
  }
 else {
    if ((inputColVector1.isRepeating) && (inputColVector2.isRepeating)) {
      outV.isRepeating=true;
      outputVector[0]=vector1[0] & vector2[0];
      outV.isNull[0]=((vector1[0] == 1) && inputColVector2.isNull[0]) || (inputColVector1.isNull[0] && (vector2[0] == 1)) || (inputColVector1.isNull[0] && inputColVector2.isNull[0]);
    }
 else     if (inputColVector1.isRepeating && !inputColVector2.isRepeating) {
      if (batch.selectedInUse) {
        for (int j=0; j != n; j++) {
          int i=sel[j];
          outputVector[i]=vector1[0] & vector2[i];
          outV.isNull[i]=((vector1[0] == 1) && inputColVector2.isNull[i]) || (inputColVector1.isNull[0] && (vector2[i] == 1)) || (inputColVector1.isNull[0] && inputColVector2.isNull[i]);
        }
      }
 else {
        for (int i=0; i != n; i++) {
          outputVector[i]=vector1[0] & vector2[i];
          outV.isNull[i]=((vector1[0] == 1) && inputColVector2.isNull[i]) || (inputColVector1.isNull[0] && (vector2[i] == 1)) || (inputColVector1.isNull[0] && inputColVector2.isNull[i]);
        }
      }
      outV.isRepeating=false;
    }
 else     if (!inputColVector1.isRepeating && inputColVector2.isRepeating) {
      if (batch.selectedInUse) {
        for (int j=0; j != n; j++) {
          int i=sel[j];
          outputVector[i]=vector1[i] & vector2[0];
          outV.isNull[i]=((vector1[i] == 1) && inputColVector2.isNull[0]) || (inputColVector1.isNull[i] && (vector2[0] == 1)) || (inputColVector1.isNull[i] && inputColVector2.isNull[0]);
        }
      }
 else {
        for (int i=0; i != n; i++) {
          outputVector[i]=vector1[i] & vector2[0];
          outV.isNull[i]=((vector1[i] == 1) && inputColVector2.isNull[0]) || (inputColVector1.isNull[i] && (vector2[0] == 1)) || (inputColVector1.isNull[i] && inputColVector2.isNull[0]);
        }
      }
      outV.isRepeating=false;
    }
 else {
      if (batch.selectedInUse) {
        for (int j=0; j != n; j++) {
          int i=sel[j];
          outputVector[i]=vector1[i] & vector2[i];
          outV.isNull[i]=((vector1[i] == 1) && inputColVector2.isNull[i]) || (inputColVector1.isNull[i] && (vector2[i] == 1)) || (inputColVector1.isNull[i] && inputColVector2.isNull[i]);
        }
      }
 else {
        for (int i=0; i != n; i++) {
          outputVector[i]=vector1[i] & vector2[i];
          outV.isNull[i]=((vector1[i] == 1) && inputColVector2.isNull[i]) || (inputColVector1.isNull[i] && (vector2[i] == 1)) || (inputColVector1.isNull[i] && inputColVector2.isNull[i]);
        }
      }
      outV.isRepeating=false;
    }
    outV.noNulls=false;
  }
}
