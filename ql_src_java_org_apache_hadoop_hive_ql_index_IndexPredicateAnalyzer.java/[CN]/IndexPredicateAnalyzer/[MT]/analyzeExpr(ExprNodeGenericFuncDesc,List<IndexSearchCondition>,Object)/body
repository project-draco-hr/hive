{
  if (FunctionRegistry.isOpAnd(expr)) {
    assert(nodeOutputs.length == 2);
    ExprNodeDesc residual1=(ExprNodeDesc)nodeOutputs[0];
    ExprNodeDesc residual2=(ExprNodeDesc)nodeOutputs[1];
    if (residual1 == null) {
      return residual2;
    }
    if (residual2 == null) {
      return residual1;
    }
    List<ExprNodeDesc> residuals=new ArrayList<ExprNodeDesc>();
    residuals.add(residual1);
    residuals.add(residual2);
    return new ExprNodeGenericFuncDesc(TypeInfoFactory.booleanTypeInfo,FunctionRegistry.getGenericUDFForAnd(),residuals);
  }
  GenericUDF genericUDF=expr.getGenericUDF();
  if (!(genericUDF instanceof GenericUDFBaseCompare)) {
    return expr;
  }
  ExprNodeDesc expr1=(ExprNodeDesc)nodeOutputs[0];
  ExprNodeDesc expr2=(ExprNodeDesc)nodeOutputs[1];
  ExprNodeDesc[] extracted=ExprNodeDescUtils.extractComparePair(expr1,expr2);
  if (extracted == null || (extracted.length > 2 && !acceptsFields)) {
    return expr;
  }
  ExprNodeColumnDesc columnDesc;
  ExprNodeConstantDesc constantDesc;
  if (extracted[0] instanceof ExprNodeConstantDesc) {
    genericUDF=genericUDF.flip();
    columnDesc=(ExprNodeColumnDesc)extracted[1];
    constantDesc=(ExprNodeConstantDesc)extracted[0];
  }
 else {
    columnDesc=(ExprNodeColumnDesc)extracted[0];
    constantDesc=(ExprNodeConstantDesc)extracted[1];
  }
  String udfName=genericUDF.getUdfName();
  if (!udfNames.contains(genericUDF.getUdfName())) {
    return expr;
  }
  if (!allowedColumnNames.contains(columnDesc.getColumn())) {
    return expr;
  }
  String[] fields=null;
  if (extracted.length > 2) {
    ExprNodeFieldDesc fieldDesc=(ExprNodeFieldDesc)extracted[2];
    if (!isValidField(fieldDesc)) {
      return expr;
    }
    fields=ExprNodeDescUtils.extractFields(fieldDesc);
  }
  searchConditions.add(new IndexSearchCondition(columnDesc,udfName,constantDesc,expr,fields));
  return fields == null ? null : expr;
}
