{
  GenericUDF udf=func.getGenericUDF();
  if (!FunctionRegistry.isDeterministic(udf) || FunctionRegistry.isStateful(udf)) {
    return null;
  }
  try {
    if (udf instanceof GenericUDFBridge) {
      UDF internal=ReflectionUtils.newInstance(((GenericUDFBridge)udf).getUdfClass(),null);
      if (internal.getRequiredFiles() != null || internal.getRequiredJars() != null) {
        return null;
      }
    }
 else {
      if (udf.getRequiredFiles() != null || udf.getRequiredJars() != null) {
        return null;
      }
    }
    for (    ExprNodeDesc child : func.getChildExprs()) {
      if (child instanceof ExprNodeConstantDesc) {
        continue;
      }
 else       if (child instanceof ExprNodeGenericFuncDesc) {
        if (foldConstant((ExprNodeGenericFuncDesc)child) != null) {
          continue;
        }
      }
      return null;
    }
    ExprNodeEvaluator evaluator=ExprNodeEvaluatorFactory.get(func);
    ObjectInspector output=evaluator.initialize(null);
    Object constant=evaluator.evaluate(null);
    Object java=ObjectInspectorUtils.copyToStandardJavaObject(constant,output);
    return new ExprNodeConstantDesc(java);
  }
 catch (  Exception e) {
    return null;
  }
}
