{
  ByteWritable b1=new ByteWritable((byte)4);
  ByteWritable b2=new ByteWritable((byte)0);
  ByteWritable b3=udf.evaluate(b1,b2);
  Assert.assertNull(b3);
  ShortWritable s1=new ShortWritable((short)4);
  ShortWritable s2=new ShortWritable((short)0);
  ShortWritable s3=udf.evaluate(s1,s2);
  Assert.assertNull(s3);
  IntWritable i1=new IntWritable(4);
  IntWritable i2=new IntWritable(0);
  IntWritable i3=udf.evaluate(i1,i2);
  Assert.assertNull(i3);
  LongWritable l1=new LongWritable(4);
  LongWritable l2=new LongWritable(0L);
  LongWritable l3=udf.evaluate(l1,l2);
  Assert.assertNull(l3);
  FloatWritable f1=new FloatWritable(4.5f);
  FloatWritable f2=new FloatWritable(0.0f);
  FloatWritable f3=udf.evaluate(f1,f2);
  Assert.assertNull(f3);
  DoubleWritable d1=new DoubleWritable(4.5);
  DoubleWritable d2=new DoubleWritable(0.0);
  DoubleWritable d3=udf.evaluate(d1,d2);
  Assert.assertNull(d3);
  HiveDecimalWritable dec1=new HiveDecimalWritable(HiveDecimal.create("4.5"));
  HiveDecimalWritable dec2=new HiveDecimalWritable(HiveDecimal.create("0"));
  HiveDecimalWritable dec3=udf.evaluate(dec1,dec2);
  Assert.assertNull(dec3);
}
