{
  ColumnAccessInfo columnAccessInfo=new ColumnAccessInfo();
  Map<TableScanOperator,Table> topOps=pGraphContext.getTopToTable();
  for (  TableScanOperator op : topOps.keySet()) {
    Table table=topOps.get(op);
    String tableName=table.getCompleteName();
    List<String> referenced=op.getReferencedColumns();
    for (    String column : referenced) {
      columnAccessInfo.add(tableName,column);
    }
    if (table.isPartitioned()) {
      PrunedPartitionList parts;
      try {
        parts=pGraphContext.getPrunedPartitions(table.getTableName(),op);
      }
 catch (      HiveException e) {
        LOG.error(org.apache.hadoop.util.StringUtils.stringifyException(e));
        throw new SemanticException(e.getMessage(),e);
      }
      if (parts.getReferredPartCols() != null) {
        for (        String partKey : parts.getReferredPartCols()) {
          columnAccessInfo.add(tableName,partKey);
        }
      }
    }
  }
  return columnAccessInfo;
}
