{
  for (  Map.Entry<String,FetchOperator> entry : fetchOperators.entrySet()) {
    int fetchOpRows=0;
    String alias=entry.getKey();
    FetchOperator fetchOp=entry.getValue();
    if (inputFileChangeSenstive) {
      fetchOp.clearFetchContext();
      setUpFetchOpContext(fetchOp,alias,bigTableBucket);
    }
    if (fetchOp.isEmptyTable()) {
      this.generateDummyHashTable(alias,bigTableBucket);
      continue;
    }
    Operator<? extends OperatorDesc> forwardOp=work.getAliasToWork().get(alias);
    while (true) {
      InspectableObject row=fetchOp.getNextRow();
      if (row == null) {
        if (inputFileChangeSenstive) {
          execContext.setCurrentBigBucketFile(bigTableBucket);
          forwardOp.reset();
        }
        forwardOp.close(false);
        break;
      }
      fetchOpRows++;
      forwardOp.process(row.o,0);
      if (forwardOp.getDone()) {
        break;
      }
    }
  }
}
