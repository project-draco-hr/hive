{
  String user;
  Map<String,String> ldapProperties=new HashMap<String,String>();
  ldapProperties.put("hive.server2.authentication.ldap.userDNPattern","uid=%s,ou=People,dc=example,dc=com");
  ldapProperties.put("hive.server2.authentication.ldap.groupDNPattern","uid=%s,ou=Groups,dc=example,dc=com");
  initLdapAtn(ldapProperties);
  assertTrue(ldapServer.getPort() > 0);
  user="uid=user1,ou=People,dc=example,dc=com";
  try {
    ldapProvider.Authenticate(user,"user2");
    Assert.fail("testUserBindNegative: Authentication succeeded for " + user + " with password "+ "user2, expected to fail");
  }
 catch (  AuthenticationException e) {
    assertTrue("testUserBindNegative: Authentication failed for " + user + " as expected",true);
  }
  user="uid=user2,ou=People,dc=example,dc=com";
  try {
    ldapProvider.Authenticate(user,"user");
    Assert.fail("testUserBindNegative: Authentication failed for " + user + " with password user, "+ "expected to fail");
  }
 catch (  AuthenticationException e) {
    assertTrue("testUserBindNegative: Authentication failed for " + user + " as expected",true);
  }
}
