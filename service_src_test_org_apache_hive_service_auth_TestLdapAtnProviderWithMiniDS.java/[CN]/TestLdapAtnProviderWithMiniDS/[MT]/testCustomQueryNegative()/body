{
  String user;
  Map<String,String> ldapProperties=new HashMap<String,String>();
  ldapProperties.put("hive.server2.authentication.ldap.baseDN","ou=People,dc=example,dc=com");
  ldapProperties.put("hive.server2.authentication.ldap.customLDAPQuery","(&(objectClass=person)(uid=" + USER1.getUID() + "))");
  initLdapAtn(ldapProperties);
  user=USER2.getDN();
  try {
    ldapProvider.Authenticate(user,USER2.getPassword());
    Assert.fail("testCustomQueryNegative: Authentication succeeded for " + user + ",user expected to fail custom LDAP Query");
  }
 catch (  AuthenticationException e) {
    assertTrue("testCustomQueryNegative: Authentication failed for " + user + " as expected",true);
  }
  try {
    user=USER2.getUID();
    ldapProvider.Authenticate(user,USER2.getPassword());
    Assert.fail("testCustomQueryNegative: Authentication succeeded for " + user + ",user expected to fail custom LDAP Query");
  }
 catch (  AuthenticationException e) {
    assertTrue("testCustomQueryNegative: Authentication failed for " + user + " as expected",true);
  }
}
