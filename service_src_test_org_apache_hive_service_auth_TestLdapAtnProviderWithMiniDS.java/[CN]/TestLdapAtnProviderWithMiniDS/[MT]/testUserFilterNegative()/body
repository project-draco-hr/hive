{
  String user;
  Map<String,String> ldapProperties=new HashMap<String,String>();
  ldapProperties.put("hive.server2.authentication.ldap.userDNPattern","uid=%s,ou=People,dc=example,dc=com");
  ldapProperties.put("hive.server2.authentication.ldap.userFilter","user2");
  initLdapAtn(ldapProperties);
  user="uid=user1,ou=People,dc=example,dc=com";
  try {
    ldapProvider.Authenticate(user,"user1");
    Assert.fail("testUserFilterNegative: Authentication succeeded for " + user + ",user is expected to fail userfilter");
  }
 catch (  AuthenticationException e) {
    assertTrue("testUserFilterNegative: Authentication failed for " + user + " as expected",true);
  }
  user="user1";
  try {
    ldapProvider.Authenticate(user,"user1");
    Assert.fail("testUserFilterNegative: Authentication succeeded for " + user + ",user is expected to fail userfilter");
  }
 catch (  AuthenticationException e) {
    assertTrue("testUserFilterNegative: Authentication failed for " + user + " as expected",true);
  }
  ldapProperties=new HashMap<String,String>();
  ldapProperties.put("hive.server2.authentication.ldap.userDNPattern","uid=%s,ou=People,dc=example,dc=com");
  ldapProperties.put("hive.server2.authentication.ldap.userFilter","user1");
  initLdapAtn(ldapProperties);
  user="uid=user2,ou=People,dc=example,dc=com";
  try {
    ldapProvider.Authenticate(user,"user2");
    Assert.fail("testUserFilterNegative: Authentication succeeded for " + user + ",user is expected to fail userfilter");
  }
 catch (  AuthenticationException e) {
    assertTrue("testUserFilterNegative: Authentication failed for " + user + " as expected",true);
  }
  user="user2";
  try {
    ldapProvider.Authenticate(user,"user2");
    Assert.fail("testUserFilterNegative: Authentication succeeded for " + user + ",user is expected to fail userfilter");
  }
 catch (  AuthenticationException e) {
    assertTrue("testUserFilterNegative: Authentication failed for " + user + " as expected",true);
  }
  ldapProperties=new HashMap<String,String>();
  ldapProperties.put("hive.server2.authentication.ldap.userDNPattern","uid=%s,ou=People,dc=example,dc=com");
  ldapProperties.put("hive.server2.authentication.ldap.userFilter","user3");
  initLdapAtn(ldapProperties);
  user="user1";
  try {
    ldapProvider.Authenticate(user,"user1");
    Assert.fail("testUserFilterNegative: Authentication succeeded for " + user + ",user expected to fail userfilter");
  }
 catch (  AuthenticationException e) {
    assertTrue("testUserFilterNegative: Authentication failed for " + user + " as expected",true);
  }
  user="uid=user2,ou=People,dc=example,dc=com";
  try {
    ldapProvider.Authenticate(user,"user2");
    Assert.fail("testUserFilterNegative: Authentication succeeded for " + user + ",user expected to fail userfilter");
  }
 catch (  AuthenticationException e) {
    assertTrue("testUserFilterNegative: Authentication failed for " + user + " as expected",true);
  }
}
