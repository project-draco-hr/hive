{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetDbName()).compareTo(other.isSetDbName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDbName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.dbName,other.dbName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTblName()).compareTo(other.isSetTblName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTblName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.tblName,other.tblName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetParts()).compareTo(other.isSetParts());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetParts()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.parts,other.parts);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetDeleteData()).compareTo(other.isSetDeleteData());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDeleteData()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.deleteData,other.deleteData);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetIfExists()).compareTo(other.isSetIfExists());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetIfExists()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.ifExists,other.ifExists);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetIgnoreProtection()).compareTo(other.isSetIgnoreProtection());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetIgnoreProtection()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.ignoreProtection,other.ignoreProtection);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetEnvironmentContext()).compareTo(other.isSetEnvironmentContext());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetEnvironmentContext()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.environmentContext,other.environmentContext);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetNeedResult()).compareTo(other.isSetNeedResult());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetNeedResult()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.needResult,other.needResult);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
