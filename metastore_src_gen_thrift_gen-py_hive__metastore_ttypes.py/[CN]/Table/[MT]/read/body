def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.STRING):
                self.tableName = iprot.readString()
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.STRING):
                self.dbName = iprot.readString()
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.STRING):
                self.owner = iprot.readString()
            else:
                iprot.skip(ftype)
        elif (fid == 4):
            if (ftype == TType.I32):
                self.createTime = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 5):
            if (ftype == TType.I32):
                self.lastAccessTime = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 6):
            if (ftype == TType.I32):
                self.retention = iprot.readI32()
            else:
                iprot.skip(ftype)
        elif (fid == 7):
            if (ftype == TType.STRUCT):
                self.sd = StorageDescriptor()
                self.sd.read(iprot)
            else:
                iprot.skip(ftype)
        elif (fid == 8):
            if (ftype == TType.LIST):
                self.partitionKeys = []
                (_etype171, _size168) = iprot.readListBegin()
                for _i172 in xrange(_size168):
                    _elem173 = FieldSchema()
                    _elem173.read(iprot)
                    self.partitionKeys.append(_elem173)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 9):
            if (ftype == TType.MAP):
                self.parameters = {}
                (_ktype175, _vtype176, _size174) = iprot.readMapBegin()
                for _i178 in xrange(_size174):
                    _key179 = iprot.readString()
                    _val180 = iprot.readString()
                    self.parameters[_key179] = _val180
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 10):
            if (ftype == TType.STRING):
                self.viewOriginalText = iprot.readString()
            else:
                iprot.skip(ftype)
        elif (fid == 11):
            if (ftype == TType.STRING):
                self.viewExpandedText = iprot.readString()
            else:
                iprot.skip(ftype)
        elif (fid == 12):
            if (ftype == TType.STRING):
                self.tableType = iprot.readString()
            else:
                iprot.skip(ftype)
        elif (fid == 13):
            if (ftype == TType.STRUCT):
                self.privileges = PrincipalPrivilegeSet()
                self.privileges.read(iprot)
            else:
                iprot.skip(ftype)
        elif (fid == 14):
            if (ftype == TType.BOOL):
                self.temporary = iprot.readBool()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
