def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('ShowCompactResponseElement')
    if (self.dbname is not None):
        oprot.writeFieldBegin('dbname', TType.STRING, 1)
        oprot.writeString(self.dbname)
        oprot.writeFieldEnd()
    if (self.tablename is not None):
        oprot.writeFieldBegin('tablename', TType.STRING, 2)
        oprot.writeString(self.tablename)
        oprot.writeFieldEnd()
    if (self.partitionname is not None):
        oprot.writeFieldBegin('partitionname', TType.STRING, 3)
        oprot.writeString(self.partitionname)
        oprot.writeFieldEnd()
    if (self.type is not None):
        oprot.writeFieldBegin('type', TType.I32, 4)
        oprot.writeI32(self.type)
        oprot.writeFieldEnd()
    if (self.state is not None):
        oprot.writeFieldBegin('state', TType.STRING, 5)
        oprot.writeString(self.state)
        oprot.writeFieldEnd()
    if (self.workerid is not None):
        oprot.writeFieldBegin('workerid', TType.STRING, 6)
        oprot.writeString(self.workerid)
        oprot.writeFieldEnd()
    if (self.start is not None):
        oprot.writeFieldBegin('start', TType.I64, 7)
        oprot.writeI64(self.start)
        oprot.writeFieldEnd()
    if (self.runAs is not None):
        oprot.writeFieldBegin('runAs', TType.STRING, 8)
        oprot.writeString(self.runAs)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
