def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('FireEventRequest')
    if (self.eventType is not None):
        oprot.writeFieldBegin('eventType', TType.I32, 1)
        oprot.writeI32(self.eventType)
        oprot.writeFieldEnd()
    if (self.dbName is not None):
        oprot.writeFieldBegin('dbName', TType.STRING, 2)
        oprot.writeString(self.dbName)
        oprot.writeFieldEnd()
    if (self.successful is not None):
        oprot.writeFieldBegin('successful', TType.BOOL, 3)
        oprot.writeBool(self.successful)
        oprot.writeFieldEnd()
    if (self.tableName is not None):
        oprot.writeFieldBegin('tableName', TType.STRING, 4)
        oprot.writeString(self.tableName)
        oprot.writeFieldEnd()
    if (self.partitionVals is not None):
        oprot.writeFieldBegin('partitionVals', TType.LIST, 5)
        oprot.writeListBegin(TType.STRING, len(self.partitionVals))
        for iter447 in self.partitionVals:
            oprot.writeString(iter447)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
