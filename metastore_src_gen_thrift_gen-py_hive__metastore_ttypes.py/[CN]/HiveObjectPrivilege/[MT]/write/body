def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('HiveObjectPrivilege')
    if (self.hiveObject != None):
        oprot.writeFieldBegin('hiveObject', TType.STRUCT, 1)
        self.hiveObject.write(oprot)
        oprot.writeFieldEnd()
    if (self.principalName != None):
        oprot.writeFieldBegin('principalName', TType.STRING, 2)
        oprot.writeString(self.principalName)
        oprot.writeFieldEnd()
    if (self.principalType != None):
        oprot.writeFieldBegin('principalType', TType.I32, 3)
        oprot.writeI32(self.principalType)
        oprot.writeFieldEnd()
    if (self.grantInfo != None):
        oprot.writeFieldBegin('grantInfo', TType.STRUCT, 4)
        self.grantInfo.write(oprot)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()

    def validate(self):
        return
