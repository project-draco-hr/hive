def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('SerDeInfo')
    if (self.name != None):
        oprot.writeFieldBegin('name', TType.STRING, 1)
        oprot.writeString(self.name)
        oprot.writeFieldEnd()
    if (self.serializationLib != None):
        oprot.writeFieldBegin('serializationLib', TType.STRING, 2)
        oprot.writeString(self.serializationLib)
        oprot.writeFieldEnd()
    if (self.parameters != None):
        oprot.writeFieldBegin('parameters', TType.MAP, 3)
        oprot.writeMapBegin(TType.STRING, TType.STRING, len(self.parameters))
        for (kiter23, viter24) in self.parameters.items():
            oprot.writeString(kiter23)
            oprot.writeString(viter24)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()

    def validate(self):
        return
