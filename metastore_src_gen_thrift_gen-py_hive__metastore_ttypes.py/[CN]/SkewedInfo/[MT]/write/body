def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('SkewedInfo')
    if (self.skewedColNames is not None):
        oprot.writeFieldBegin('skewedColNames', TType.LIST, 1)
        oprot.writeListBegin(TType.STRING, len(self.skewedColNames))
        for iter118 in self.skewedColNames:
            oprot.writeString(iter118)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    if (self.skewedColValues is not None):
        oprot.writeFieldBegin('skewedColValues', TType.LIST, 2)
        oprot.writeListBegin(TType.LIST, len(self.skewedColValues))
        for iter119 in self.skewedColValues:
            oprot.writeListBegin(TType.STRING, len(iter119))
            for iter120 in iter119:
                oprot.writeString(iter120)
            oprot.writeListEnd()
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    if (self.skewedColValueLocationMaps is not None):
        oprot.writeFieldBegin('skewedColValueLocationMaps', TType.MAP, 3)
        oprot.writeMapBegin(TType.LIST, TType.STRING, len(self.skewedColValueLocationMaps))
        for (kiter121, viter122) in self.skewedColValueLocationMaps.items():
            oprot.writeListBegin(TType.STRING, len(kiter121))
            for iter123 in kiter121:
                oprot.writeString(iter123)
            oprot.writeListEnd()
            oprot.writeString(viter122)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
