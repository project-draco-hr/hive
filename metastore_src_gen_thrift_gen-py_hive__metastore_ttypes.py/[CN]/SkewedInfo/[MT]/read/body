def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.LIST):
                self.skewedColNames = []
                (_etype97, _size94) = iprot.readListBegin()
                for _i98 in xrange(_size94):
                    _elem99 = iprot.readString()
                    self.skewedColNames.append(_elem99)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 2):
            if (ftype == TType.LIST):
                self.skewedColValues = []
                (_etype103, _size100) = iprot.readListBegin()
                for _i104 in xrange(_size100):
                    _elem105 = []
                    (_etype109, _size106) = iprot.readListBegin()
                    for _i110 in xrange(_size106):
                        _elem111 = iprot.readString()
                        _elem105.append(_elem111)
                    iprot.readListEnd()
                    self.skewedColValues.append(_elem105)
                iprot.readListEnd()
            else:
                iprot.skip(ftype)
        elif (fid == 3):
            if (ftype == TType.MAP):
                self.skewedColValueLocationMaps = {}
                (_ktype113, _vtype114, _size112) = iprot.readMapBegin()
                for _i116 in xrange(_size112):
                    _key117 = SkewedValueList()
                    _key117.read(iprot)
                    _val118 = iprot.readString()
                    self.skewedColValueLocationMaps[_key117] = _val118
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
