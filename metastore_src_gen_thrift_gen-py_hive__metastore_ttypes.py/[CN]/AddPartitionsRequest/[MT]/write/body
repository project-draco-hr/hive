def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('AddPartitionsRequest')
    if (self.dbName is not None):
        oprot.writeFieldBegin('dbName', TType.STRING, 1)
        oprot.writeString(self.dbName)
        oprot.writeFieldEnd()
    if (self.tblName is not None):
        oprot.writeFieldBegin('tblName', TType.STRING, 2)
        oprot.writeString(self.tblName)
        oprot.writeFieldEnd()
    if (self.parts is not None):
        oprot.writeFieldBegin('parts', TType.LIST, 3)
        oprot.writeListBegin(TType.STRUCT, len(self.parts))
        for iter247 in self.parts:
            iter247.write(oprot)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    if (self.ifNotExists is not None):
        oprot.writeFieldBegin('ifNotExists', TType.BOOL, 4)
        oprot.writeBool(self.ifNotExists)
        oprot.writeFieldEnd()
    if (self.needResult is not None):
        oprot.writeFieldBegin('needResult', TType.BOOL, 5)
        oprot.writeBool(self.needResult)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
