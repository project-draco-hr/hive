def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('AddDynamicPartitions')
    if (self.txnid is not None):
        oprot.writeFieldBegin('txnid', TType.I64, 1)
        oprot.writeI64(self.txnid)
        oprot.writeFieldEnd()
    if (self.dbname is not None):
        oprot.writeFieldBegin('dbname', TType.STRING, 2)
        oprot.writeString(self.dbname)
        oprot.writeFieldEnd()
    if (self.tablename is not None):
        oprot.writeFieldBegin('tablename', TType.STRING, 3)
        oprot.writeString(self.tablename)
        oprot.writeFieldEnd()
    if (self.partitionnames is not None):
        oprot.writeFieldBegin('partitionnames', TType.LIST, 4)
        oprot.writeListBegin(TType.STRING, len(self.partitionnames))
        for iter475 in self.partitionnames:
            oprot.writeString(iter475)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
