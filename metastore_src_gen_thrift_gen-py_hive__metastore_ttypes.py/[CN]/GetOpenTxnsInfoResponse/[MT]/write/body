def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('GetOpenTxnsInfoResponse')
    if (self.txn_high_water_mark is not None):
        oprot.writeFieldBegin('txn_high_water_mark', TType.I64, 1)
        oprot.writeI64(self.txn_high_water_mark)
        oprot.writeFieldEnd()
    if (self.open_txns is not None):
        oprot.writeFieldBegin('open_txns', TType.LIST, 2)
        oprot.writeListBegin(TType.STRUCT, len(self.open_txns))
        for iter398 in self.open_txns:
            iter398.write(oprot)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
