def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('GetFileMetadataResult')
    if (self.metadata is not None):
        oprot.writeFieldBegin('metadata', TType.MAP, 1)
        oprot.writeMapBegin(TType.I64, TType.STRING, len(self.metadata))
        for (kiter485, viter486) in self.metadata.items():
            oprot.writeI64(kiter485)
            oprot.writeString(viter486)
        oprot.writeMapEnd()
        oprot.writeFieldEnd()
    if (self.isSupported is not None):
        oprot.writeFieldBegin('isSupported', TType.BOOL, 2)
        oprot.writeBool(self.isSupported)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
