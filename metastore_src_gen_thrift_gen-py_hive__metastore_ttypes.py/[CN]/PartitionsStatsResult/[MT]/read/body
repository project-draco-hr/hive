def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.MAP):
                self.partStats = {}
                (_ktype256, _vtype257, _size255) = iprot.readMapBegin()
                for _i259 in xrange(_size255):
                    _key260 = iprot.readString()
                    _val261 = []
                    (_etype265, _size262) = iprot.readListBegin()
                    for _i266 in xrange(_size262):
                        _elem267 = ColumnStatisticsObj()
                        _elem267.read(iprot)
                        _val261.append(_elem267)
                    iprot.readListEnd()
                    self.partStats[_key260] = _val261
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
