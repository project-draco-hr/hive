def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.MAP):
                self.partStats = {}
                (_ktype249, _vtype250, _size248) = iprot.readMapBegin()
                for _i252 in xrange(_size248):
                    _key253 = iprot.readString()
                    _val254 = []
                    (_etype258, _size255) = iprot.readListBegin()
                    for _i259 in xrange(_size255):
                        _elem260 = ColumnStatisticsObj()
                        _elem260.read(iprot)
                        _val254.append(_elem260)
                    iprot.readListEnd()
                    self.partStats[_key253] = _val254
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
