def read(self, iprot):
    if ((iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and isinstance(iprot.trans, TTransport.CReadableTransport) and (self.thrift_spec is not None) and (fastbinary is not None)):
        fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
        return
    iprot.readStructBegin()
    while True:
        (fname, ftype, fid) = iprot.readFieldBegin()
        if (ftype == TType.STOP):
            break
        if (fid == 1):
            if (ftype == TType.MAP):
                self.partStats = {}
                (_ktype314, _vtype315, _size313) = iprot.readMapBegin()
                for _i317 in xrange(_size313):
                    _key318 = iprot.readString()
                    _val319 = []
                    (_etype323, _size320) = iprot.readListBegin()
                    for _i324 in xrange(_size320):
                        _elem325 = ColumnStatisticsObj()
                        _elem325.read(iprot)
                        _val319.append(_elem325)
                    iprot.readListEnd()
                    self.partStats[_key318] = _val319
                iprot.readMapEnd()
            else:
                iprot.skip(ftype)
        else:
            iprot.skip(ftype)
        iprot.readFieldEnd()
    iprot.readStructEnd()
