{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case -1:
      if (field.type == TType.STRING) {
        this.db_name=iprot.readString();
        this.__isset.db_name=true;
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case -2:
  if (field.type == TType.STRING) {
    this.table_name=iprot.readString();
    this.__isset.table_name=true;
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
case -3:
if (field.type == TType.MAP) {
{
  TMap _map107=iprot.readMapBegin();
  this.schema=new HashMap<String,String>(2 * _map107.size);
  for (int _i108=0; _i108 < _map107.size; ++_i108) {
    String _key109;
    String _val110;
    _key109=iprot.readString();
    _val110=iprot.readString();
    this.schema.put(_key109,_val110);
  }
  iprot.readMapEnd();
}
this.__isset.schema=true;
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
}
