{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case 0:
      if (field.type == TType.MAP) {
{
          TMap _map97=iprot.readMapBegin();
          this.success=new HashMap<String,String>(2 * _map97.size);
          for (int _i98=0; _i98 < _map97.size; ++_i98) {
            String _key99;
            String _val100;
            _key99=iprot.readString();
            _val100=iprot.readString();
            this.success.put(_key99,_val100);
          }
          iprot.readMapEnd();
        }
        this.__isset.success=true;
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case -2:
  if (field.type == TType.STRUCT) {
    this.ouch1=new MetaException();
    this.ouch1.read(iprot);
    this.__isset.ouch1=true;
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
case -3:
if (field.type == TType.STRUCT) {
this.ouch2=new UnknownTableException();
this.ouch2.read(iprot);
this.__isset.ouch2=true;
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
case -4:
if (field.type == TType.STRUCT) {
this.ouch3=new UnknownDBException();
this.ouch3.read(iprot);
this.__isset.ouch3=true;
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
}
