{
  Assume.assumeTrue(!DISABLED_SERDES.contains(serdeClass));
  String databaseName=(dbName == null) ? MetaStoreUtils.DEFAULT_DATABASE_NAME : dbName;
  try {
    client.dropTable(databaseName,tableName);
  }
 catch (  Exception e) {
  }
  Table tbl=new Table();
  tbl.setDbName(databaseName);
  tbl.setTableName(tableName);
  if (isTableExternal()) {
    tbl.setTableType(TableType.EXTERNAL_TABLE.toString());
  }
 else {
    tbl.setTableType(TableType.MANAGED_TABLE.toString());
  }
  StorageDescriptor sd=new StorageDescriptor();
  sd.setCols(getTableColumns());
  tbl.setPartitionKeys(getPartitionKeys());
  tbl.setSd(sd);
  sd.setBucketCols(new ArrayList<String>(2));
  sd.setSerdeInfo(new SerDeInfo());
  sd.getSerdeInfo().setName(tbl.getTableName());
  sd.getSerdeInfo().setParameters(new HashMap<String,String>());
  sd.getSerdeInfo().getParameters().put(serdeConstants.SERIALIZATION_FORMAT,"1");
  if (isTableExternal()) {
    sd.getSerdeInfo().getParameters().put("EXTERNAL","TRUE");
  }
  sd.getSerdeInfo().setSerializationLib(serdeClass);
  sd.setInputFormat(inputFormatClass);
  sd.setOutputFormat(outputFormatClass);
  Map<String,String> tableParams=new HashMap<String,String>();
  if (isTableExternal()) {
    tableParams.put("EXTERNAL","TRUE");
  }
  if (isTableImmutable()) {
    tableParams.put(hive_metastoreConstants.IS_IMMUTABLE,"true");
  }
  StatsSetupConst.setBasicStatsState(tableParams,StatsSetupConst.TRUE);
  tbl.setParameters(tableParams);
  client.createTable(tbl);
}
