{
  OrcFile.WriterOptions result=OrcFile.writerOptions(props,conf);
  if (props != null) {
    final String columnNameProperty=props.getProperty(IOConstants.COLUMNS);
    final String columnTypeProperty=props.getProperty(IOConstants.COLUMNS_TYPES);
    if (columnNameProperty != null && !columnNameProperty.isEmpty() && columnTypeProperty != null && !columnTypeProperty.isEmpty()) {
      List<String> columnNames;
      List<TypeInfo> columnTypes;
      if (columnNameProperty.length() == 0) {
        columnNames=new ArrayList<String>();
      }
 else {
        columnNames=Arrays.asList(columnNameProperty.split(","));
      }
      if (columnTypeProperty.length() == 0) {
        columnTypes=new ArrayList<TypeInfo>();
      }
 else {
        columnTypes=TypeInfoUtils.getTypeInfosFromTypeString(columnTypeProperty);
      }
      TypeDescription schema=TypeDescription.createStruct();
      for (int i=0; i < columnNames.size(); ++i) {
        schema.addField(columnNames.get(i),OrcInputFormat.convertTypeInfo(columnTypes.get(i)));
      }
      if (LOG.isDebugEnabled()) {
        LOG.debug("ORC schema = " + schema);
      }
      result.setSchema(schema);
    }
  }
  return result;
}
