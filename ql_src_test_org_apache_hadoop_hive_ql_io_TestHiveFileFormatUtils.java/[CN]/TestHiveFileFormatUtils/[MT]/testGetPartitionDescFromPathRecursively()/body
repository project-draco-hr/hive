{
  PartitionDesc partDesc_3=new PartitionDesc();
  PartitionDesc partDesc_4=new PartitionDesc();
  PartitionDesc partDesc_5=new PartitionDesc();
  PartitionDesc partDesc_6=new PartitionDesc();
  Map<Path,PartitionDesc> pathToPartitionInfo=new HashMap<>();
  pathToPartitionInfo.put(new Path("file:///tbl/par1/part2/part3"),partDesc_3);
  pathToPartitionInfo.put(new Path("/tbl/par1/part2/part4"),partDesc_4);
  pathToPartitionInfo.put(new Path("/tbl/par1/part2/part5/"),partDesc_5);
  pathToPartitionInfo.put(new Path("hdfs:///tbl/par1/part2/part6/"),partDesc_6);
  PartitionDesc ret=null;
  ret=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,new Path("file:///tbl/par1/part2/part3"),IOPrepareCache.get().allocatePartitionDescMap());
  assertEquals("file:///tbl/par1/part2/part3 not found.",partDesc_3,ret);
  ret=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,new Path("/tbl/par1/part2/part3"),IOPrepareCache.get().allocatePartitionDescMap());
  assertEquals("/tbl/par1/part2/part3 not found.",partDesc_3,ret);
  boolean exception=false;
  try {
    ret=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,new Path("hdfs:///tbl/par1/part2/part3"),IOPrepareCache.get().allocatePartitionDescMap());
  }
 catch (  IOException e) {
    exception=true;
  }
  assertEquals("hdfs:///tbl/par1/part2/part3 should return null",true,exception);
  exception=false;
  ret=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,new Path("file:///tbl/par1/part2/part4"),IOPrepareCache.get().allocatePartitionDescMap());
  assertEquals("file:///tbl/par1/part2/part4 not found.",partDesc_4,ret);
  ret=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,new Path("/tbl/par1/part2/part4"),IOPrepareCache.get().allocatePartitionDescMap());
  assertEquals("/tbl/par1/part2/part4 not found.",partDesc_4,ret);
  ret=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,new Path("hdfs:///tbl/par1/part2/part4"),IOPrepareCache.get().allocatePartitionDescMap());
  assertEquals("hdfs:///tbl/par1/part2/part4 should  not found",partDesc_4,ret);
  ret=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,new Path("file:///tbl/par1/part2/part5"),IOPrepareCache.get().allocatePartitionDescMap());
  assertEquals("file:///tbl/par1/part2/part5 not found.",partDesc_5,ret);
  ret=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,new Path("/tbl/par1/part2/part5"),IOPrepareCache.get().allocatePartitionDescMap());
  assertEquals("/tbl/par1/part2/part5 not found.",partDesc_5,ret);
  ret=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,new Path("hdfs:///tbl/par1/part2/part5"),IOPrepareCache.get().allocatePartitionDescMap());
  assertEquals("hdfs:///tbl/par1/part2/part5 not found",partDesc_5,ret);
  try {
    ret=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,new Path("file:///tbl/par1/part2/part6"),IOPrepareCache.get().allocatePartitionDescMap());
  }
 catch (  IOException e) {
    exception=true;
  }
  assertEquals("file:///tbl/par1/part2/part6 should return null",true,exception);
  exception=false;
  ret=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,new Path("/tbl/par1/part2/part6"),IOPrepareCache.get().allocatePartitionDescMap());
  assertEquals("/tbl/par1/part2/part6 not found.",partDesc_6,ret);
  ret=HiveFileFormatUtils.getPartitionDescFromPathRecursively(pathToPartitionInfo,new Path("hdfs:///tbl/par1/part2/part6"),IOPrepareCache.get().allocatePartitionDescMap());
  assertEquals("hdfs:///tbl/par1/part2/part6 not found.",partDesc_6,ret);
}
