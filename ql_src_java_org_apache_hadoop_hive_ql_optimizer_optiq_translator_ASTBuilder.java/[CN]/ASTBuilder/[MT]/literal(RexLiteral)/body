{
  Object val=literal.getValue3();
  int type=0;
  SqlTypeName sqlType=literal.getType().getSqlTypeName();
switch (sqlType) {
case TINYINT:
    type=HiveParser.TinyintLiteral;
  break;
case SMALLINT:
type=HiveParser.SmallintLiteral;
break;
case INTEGER:
case BIGINT:
type=HiveParser.BigintLiteral;
break;
case DECIMAL:
case FLOAT:
case DOUBLE:
case REAL:
type=HiveParser.Number;
break;
case VARCHAR:
case CHAR:
type=HiveParser.StringLiteral;
val="'" + String.valueOf(val) + "'";
break;
case BOOLEAN:
type=((Boolean)val).booleanValue() ? HiveParser.KW_TRUE : HiveParser.KW_FALSE;
break;
case NULL:
type=HiveParser.TOK_NULL;
break;
default :
throw new RuntimeException("Unsupported Type: " + sqlType);
}
return (ASTNode)ParseDriver.adaptor.create(type,String.valueOf(val));
}
