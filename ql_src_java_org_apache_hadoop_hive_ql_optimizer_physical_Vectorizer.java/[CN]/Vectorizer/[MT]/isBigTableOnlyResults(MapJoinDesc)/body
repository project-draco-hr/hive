{
  Byte[] order=desc.getTagOrder();
  byte posBigTable=(byte)desc.getPosBigTable();
  Byte posSingleVectorMapJoinSmallTable=(order[0] == posBigTable ? order[1] : order[0]);
  int[] smallTableIndices;
  int smallTableIndicesSize;
  List<ExprNodeDesc> smallTableExprs=desc.getExprs().get(posSingleVectorMapJoinSmallTable);
  if (desc.getValueIndices() != null && desc.getValueIndices().get(posSingleVectorMapJoinSmallTable) != null) {
    smallTableIndices=desc.getValueIndices().get(posSingleVectorMapJoinSmallTable);
    LOG.info("Vectorizer isBigTableOnlyResults smallTableIndices " + Arrays.toString(smallTableIndices));
    smallTableIndicesSize=smallTableIndices.length;
  }
 else {
    smallTableIndices=null;
    LOG.info("Vectorizer isBigTableOnlyResults smallTableIndices EMPTY");
    smallTableIndicesSize=0;
  }
  List<Integer> smallTableRetainList=desc.getRetainList().get(posSingleVectorMapJoinSmallTable);
  LOG.info("Vectorizer isBigTableOnlyResults smallTableRetainList " + smallTableRetainList);
  int smallTableRetainSize=smallTableRetainList.size();
  if (smallTableIndicesSize > 0) {
    for (int i=0; i < smallTableIndicesSize; i++) {
      if (smallTableIndices[i] < 0) {
        LOG.info("Vectorizer isBigTableOnlyResults smallTableIndices[i] < 0 returning false");
        return false;
      }
    }
  }
 else   if (smallTableRetainSize > 0) {
    LOG.info("Vectorizer isBigTableOnlyResults smallTableRetainSize > 0 returning false");
    return false;
  }
  LOG.info("Vectorizer isBigTableOnlyResults returning true");
  return true;
}
