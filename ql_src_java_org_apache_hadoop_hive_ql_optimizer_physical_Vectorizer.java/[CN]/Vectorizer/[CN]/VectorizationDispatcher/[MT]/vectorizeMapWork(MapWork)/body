{
  LOG.info("Vectorizing MapWork...");
  mapWork.setVectorMode(true);
  Map<Rule,NodeProcessor> opRules=new LinkedHashMap<Rule,NodeProcessor>();
  MapWorkVectorizationNodeProcessor vnp=new MapWorkVectorizationNodeProcessor(mapWork);
  addMapWorkRules(opRules,vnp);
  Dispatcher disp=new DefaultRuleDispatcher(vnp,opRules,null);
  GraphWalker ogw=new PreOrderWalker(disp);
  ArrayList<Node> topNodes=new ArrayList<Node>();
  topNodes.addAll(mapWork.getAliasToWork().values());
  HashMap<Node,Object> nodeOutput=new HashMap<Node,Object>();
  ogw.startWalking(topNodes,nodeOutput);
  Map<String,Map<Integer,String>> columnVectorTypes=vnp.getScratchColumnVectorTypes();
  mapWork.setScratchColumnVectorTypes(columnVectorTypes);
  Map<String,Map<String,Integer>> columnMap=vnp.getScratchColumnMap();
  mapWork.setScratchColumnMap(columnMap);
  if (LOG.isDebugEnabled()) {
    LOG.debug(String.format("vectorTypes: %s",columnVectorTypes.toString()));
    LOG.debug(String.format("columnMap: %s",columnMap.toString()));
  }
  return;
}
