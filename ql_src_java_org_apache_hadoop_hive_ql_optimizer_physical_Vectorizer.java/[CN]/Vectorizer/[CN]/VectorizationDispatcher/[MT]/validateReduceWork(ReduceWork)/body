{
  if (!getOnlyStructObjectInspectors(reduceWork)) {
    return false;
  }
  Map<Rule,NodeProcessor> opRules=new LinkedHashMap<Rule,NodeProcessor>();
  ReduceWorkValidationNodeProcessor vnp=new ReduceWorkValidationNodeProcessor();
  addReduceWorkRules(opRules,vnp);
  Dispatcher disp=new DefaultRuleDispatcher(vnp,opRules,null);
  GraphWalker ogw=new DefaultGraphWalker(disp);
  ArrayList<Node> topNodes=new ArrayList<Node>();
  topNodes.add(reduceWork.getReducer());
  HashMap<Node,Object> nodeOutput=new HashMap<Node,Object>();
  ogw.startWalking(topNodes,nodeOutput);
  for (  Node n : nodeOutput.keySet()) {
    if (nodeOutput.get(n) != null) {
      if (!((Boolean)nodeOutput.get(n)).booleanValue()) {
        return false;
      }
    }
  }
  return true;
}
