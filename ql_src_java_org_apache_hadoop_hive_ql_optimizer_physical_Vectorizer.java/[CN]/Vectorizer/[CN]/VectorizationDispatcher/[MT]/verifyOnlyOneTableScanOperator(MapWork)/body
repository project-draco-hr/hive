{
  LinkedHashMap<String,Operator<? extends OperatorDesc>> aliasToWork=mapWork.getAliasToWork();
  if ((aliasToWork == null) || (aliasToWork.size() == 0)) {
    return null;
  }
  int tableScanCount=0;
  String alias="";
  TableScanOperator tableScanOperator=null;
  for (  Entry<String,Operator<? extends OperatorDesc>> entry : aliasToWork.entrySet()) {
    Operator<?> op=entry.getValue();
    if (op == null) {
      LOG.warn("Map work has invalid aliases to work with. Fail validation!");
      return null;
    }
    if (op instanceof TableScanOperator) {
      tableScanCount++;
      alias=entry.getKey();
      tableScanOperator=(TableScanOperator)op;
    }
  }
  if (tableScanCount > 1) {
    LOG.warn("Map work has more than 1 TableScanOperator. Fail validation!");
    return null;
  }
  return new ImmutablePair(alias,tableScanOperator);
}
