{
  final int bucketMask=(refs.length - 1);
  int hashCode=writeBuffers.hashCode(key,offset,length);
  int slot=hashCode & bucketMask;
  long probeSlot=slot;
  int i=0;
  while (true) {
    long ref=refs[slot];
    if (ref == 0) {
      return 0;
    }
    if (isSameKey(key,offset,length,ref,hashCode,readPos)) {
      return ref;
    }
    ++metricGetConflict;
    probeSlot+=(++i);
    if (i > largestNumberOfSteps) {
      return 0;
    }
    slot=(int)(probeSlot & bucketMask);
  }
}
