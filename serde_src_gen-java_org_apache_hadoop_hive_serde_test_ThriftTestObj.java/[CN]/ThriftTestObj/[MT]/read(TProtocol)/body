{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case FIELD1:
      if (field.type == TType.I32) {
        this.field1=iprot.readI32();
        this.__isset.field1=true;
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case FIELD2:
  if (field.type == TType.STRING) {
    this.field2=iprot.readString();
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
case FIELD3:
if (field.type == TType.LIST) {
{
  TList _list0=iprot.readListBegin();
  this.field3=new ArrayList<InnerStruct>(_list0.size);
  for (int _i1=0; _i1 < _list0.size; ++_i1) {
    InnerStruct _elem2;
    _elem2=new InnerStruct();
    _elem2.read(iprot);
    this.field3.add(_elem2);
  }
  iprot.readListEnd();
}
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
