{
  Configuration conf=new Configuration();
  List<Integer> rowIndexCols=new ArrayList<Integer>(0);
  Options opts=createOptions();
  CommandLine cli=new GnuParser().parse(opts,args);
  if (cli.hasOption('h')) {
    HelpFormatter formatter=new HelpFormatter();
    formatter.printHelp("orcfiledump",opts);
    return;
  }
  boolean dumpData=cli.hasOption('d');
  boolean recover=cli.hasOption("recover");
  boolean skipDump=cli.hasOption("skip-dump");
  String backupPath=DEFAULT_BACKUP_PATH;
  if (cli.hasOption("backup-path")) {
    backupPath=cli.getOptionValue("backup-path");
  }
  if (cli.hasOption("r")) {
    String val=cli.getOptionValue("r");
    if (val != null && val.trim().equals("*")) {
      rowIndexCols=null;
    }
 else {
      String[] colStrs=cli.getOptionValue("r").split(",");
      rowIndexCols=new ArrayList<Integer>(colStrs.length);
      for (      String colStr : colStrs) {
        rowIndexCols.add(Integer.parseInt(colStr));
      }
    }
  }
  boolean printTimeZone=cli.hasOption('t');
  boolean jsonFormat=cli.hasOption('j');
  String[] files=cli.getArgs();
  if (files.length == 0) {
    System.err.println("Error : ORC files are not specified");
    return;
  }
  List<String> filesInPath=Lists.newArrayList();
  for (  String filename : files) {
    Path path=new Path(filename);
    filesInPath.addAll(getAllFilesInPath(path,conf));
  }
  if (dumpData) {
    printData(filesInPath,conf);
  }
 else   if (recover && skipDump) {
    recoverFiles(filesInPath,conf,backupPath);
  }
 else {
    if (jsonFormat) {
      boolean prettyPrint=cli.hasOption('p');
      JsonFileDump.printJsonMetaData(filesInPath,conf,rowIndexCols,prettyPrint,printTimeZone);
    }
 else {
      printMetaData(filesInPath,conf,rowIndexCols,printTimeZone,recover,backupPath);
    }
  }
}
