{
  int minCount=Math.min(rows.length,nrDecimal.length);
  for (int i=0; i < minCount; i++) {
    Object[] row=rows[i];
    for (int c=0; c < primitiveCategories.length; c++) {
      Object object=row[c];
switch (primitiveCategories[c]) {
case BOOLEAN:
        break;
case BYTE:
      object=nrByte;
    break;
case SHORT:
  object=nrShort;
break;
case INT:
object=nrInt;
break;
case LONG:
object=nrLong;
break;
case DATE:
object=nrDate;
break;
case FLOAT:
object=nrFloat;
break;
case DOUBLE:
object=nrDouble;
break;
case STRING:
object=nrString;
break;
case CHAR:
break;
case VARCHAR:
break;
case BINARY:
break;
case TIMESTAMP:
break;
case INTERVAL_YEAR_MONTH:
object=nrIntervalYearMonth;
break;
case INTERVAL_DAY_TIME:
object=nrIntervalDayTime;
break;
case DECIMAL:
object=nrDecimal[i];
break;
default :
throw new Error("Unknown primitive category " + primitiveCategories[c]);
}
}
}
}
