{
  List<Object> keyOutput=new ArrayList<Object>(keyEval.length);
  Object[] valueOutput=new Object[eval.length];
  List<Object> outputRow=new ArrayList<Object>(3);
  List thisRow=(List)row;
  if (keySelectDesc.isSelStarNoCompute()) {
    outputRow.add(thisRow.get(0));
  }
 else {
    Object key=thisRow.get(0);
    for (int j=0; j < keyEval.length; j++) {
      try {
        keyOutput.add(keyEval[j].evaluate(key));
      }
 catch (      HiveException e) {
        throw e;
      }
catch (      RuntimeException e) {
        throw new HiveException("Error evaluating " + keySelectDesc.getColList().get(j).getExprString(),e);
      }
    }
    outputRow.add(keyOutput);
  }
  if (valueSelectDesc.isSelStarNoCompute()) {
    outputRow.add(thisRow.get(1));
  }
 else {
    Object value=thisRow.get(1);
    for (int j=0; j < eval.length; j++) {
      try {
        valueOutput[j]=eval[j].evaluate(value);
      }
 catch (      HiveException e) {
        throw e;
      }
catch (      RuntimeException e) {
        throw new HiveException("Error evaluating " + valueSelectDesc.getColList().get(j).getExprString(),e);
      }
    }
    outputRow.add(valueOutput);
  }
  outputRow.add(outputTagByteWritable);
  if (isLogInfoEnabled) {
    cntr++;
    if (cntr == nextCntr) {
      LOG.info(id + "(inputTag, childIndx, outputTag)=(" + inputTag+ ", "+ childIndx+ ", "+ outputTag+ "), forwarding "+ cntr+ " rows");
      nextCntr=getNextCntr(cntr);
    }
  }
  return outputRow;
}
