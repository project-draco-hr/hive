{
  this.hosts=hosts.split(",");
  this.port=conf.getInt(LlapConfiguration.LLAP_DAEMON_RPC_PORT,LlapConfiguration.LLAP_DAEMON_RPC_PORT_DEFAULT);
  this.shuffle=conf.getInt(LlapConfiguration.LLAP_DAEMON_YARN_SHUFFLE_PORT,LlapConfiguration.LLAP_DAEMON_YARN_SHUFFLE_PORT_DEFAULT);
  this.resolveHosts=conf.getBoolean(FIXED_REGISTRY_RESOLVE_HOST_NAMES,true);
  for (  Map.Entry<String,String> kv : conf) {
    if (kv.getKey().startsWith(LlapConfiguration.LLAP_DAEMON_PREFIX) || kv.getKey().startsWith("hive.llap.") || kv.getKey().startsWith(LlapConfiguration.LLAP_PREFIX)) {
      srv.put(kv.getKey(),kv.getValue());
    }
  }
  this.memory=conf.getInt(LlapConfiguration.LLAP_DAEMON_MEMORY_PER_INSTANCE_MB,LlapConfiguration.LLAP_DAEMON_MEMORY_PER_INSTANCE_MB_DEFAULT);
  this.vcores=conf.getInt(LlapConfiguration.LLAP_DAEMON_NUM_EXECUTORS,LlapConfiguration.LLAP_DAEMON_NUM_EXECUTORS_DEFAULT);
}
