def __init__(self, config):
    self.memory = config['hive.llap.daemon.memory.per.instance.mb']
    self.cores = config['hive.llap.daemon.vcpus.per.instance']
    size = config['hive.llap.daemon.yarn.container.mb']
    self.cache = (config['hive.llap.io.memory.size'] / (1024 * 1024.0))
    self.direct = config['hive.llap.io.allocator.direct']
    self.min_mb = (-1)
    self.min_cores = (-1)
    h = self.memory
    if (not self.direct):
        h += self.cache
    if (size == (-1)):
        c = min((h * 1.2), (h + 1024))
        c += ((self.direct and self.cache) or 0)
        if (self.min_mb > 0):
            c = (c + (c % self.min_mb))
    else:
        c = size
    self.container_size = c
    self.container_cores = self.cores
    self.heap_size = h
    if (not config.get('hive.llap.daemon.queue.name', '')):
        self.queueString = ''
    else:
        self.queueString = '--queue '
        self.queueString += config['hive.llap.daemon.queue.name']
