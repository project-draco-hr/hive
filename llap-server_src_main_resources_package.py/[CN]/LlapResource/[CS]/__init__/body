def __init__(self, config):
    self.memory = config['llap.daemon.memory.per.instance.mb']
    self.cores = config['llap.daemon.vcpus.per.instance']
    self.cache = (config['hive.llap.io.cache.orc.size'] / (1024 * 1024.0))
    self.direct = config['hive.llap.io.cache.direct']
    self.min_mb = (-1)
    self.min_cores = (-1)
    h = max((1.2 * self.memory), (self.memory + 256))
    if (not self.direct):
        h += self.cache
    c = max((h * 1.2), (h + 128))
    if self.direct:
        c += self.cache
    if (self.min_mb > 0):
        c = (c + (c % self.min_mb))
        h = (c / 1.2)
        if self.direct:
            h = (h - self.cache)
    self.container_size = int(c)
    self.container_cores = self.cores
    self.heap_size = int(h)
