{
  Predicate<TaskInfo> filter=new Predicate<TaskInfo>(){
    @Override public boolean apply(    TaskInfo input){
      return jobId == input.jobId && stageId == input.stageId && taskId == input.taskId;
    }
  }
;
  lock.readLock().lock();
  try {
    Iterator<TaskInfo> it=Collections2.filter(taskMetrics,filter).iterator();
    if (it.hasNext()) {
      return it.next().metrics;
    }
 else {
      throw new NoSuchElementException("Task not found.");
    }
  }
  finally {
    lock.readLock().unlock();
  }
}
