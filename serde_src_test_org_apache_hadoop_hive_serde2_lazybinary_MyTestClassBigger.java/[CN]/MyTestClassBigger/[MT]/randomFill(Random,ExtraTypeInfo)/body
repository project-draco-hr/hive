{
  int randField=r.nextInt(biggerCount);
  int field=0;
  myBool=(randField == field++) ? null : (r.nextInt(1) == 1);
  myByte=(randField == field++) ? null : Byte.valueOf((byte)r.nextInt());
  myShort=(randField == field++) ? null : Short.valueOf((short)r.nextInt());
  myInt=(randField == field++) ? null : Integer.valueOf(r.nextInt());
  myLong=(randField == field++) ? null : Long.valueOf(r.nextLong());
  myFloat=(randField == field++) ? null : Float.valueOf(r.nextFloat() * 10 - 5);
  myDouble=(randField == field++) ? null : Double.valueOf(r.nextDouble() * 10 - 5);
  myString=(randField == field++) ? null : MyTestPrimitiveClass.getRandString(r);
  myHiveChar=(randField == field++) ? null : MyTestPrimitiveClass.getRandHiveChar(r,extraTypeInfo);
  myHiveVarchar=(randField == field++) ? null : MyTestPrimitiveClass.getRandHiveVarchar(r,extraTypeInfo);
  myBinary=MyTestPrimitiveClass.getRandBinary(r,r.nextInt(1000));
  myDecimal=(randField == field++) ? null : MyTestPrimitiveClass.getRandHiveDecimal(r,extraTypeInfo);
  myDate=(randField == field++) ? null : MyTestPrimitiveClass.getRandDate(r);
  myTimestamp=(randField == field++) ? null : RandomTypeUtil.getRandTimestamp(r);
  myIntervalYearMonth=(randField == field++) ? null : MyTestPrimitiveClass.getRandIntervalYearMonth(r);
  myIntervalDayTime=(randField == field++) ? null : MyTestPrimitiveClass.getRandIntervalDayTime(r);
  myStruct=(randField == field++) ? null : new MyTestInnerStruct(r.nextInt(5) - 2,r.nextInt(5) - 2);
  myList=(randField == field++) ? null : MyTestClass.getRandIntegerArray(r);
  Map<String,List<MyTestInnerStruct>> mp=new HashMap<String,List<MyTestInnerStruct>>();
  String key=MyTestPrimitiveClass.getRandString(r);
  List<MyTestInnerStruct> value=randField > 9 ? null : getRandStructArray(r);
  mp.put(key,value);
  String key1=MyTestPrimitiveClass.getRandString(r);
  mp.put(key1,null);
  String key2=MyTestPrimitiveClass.getRandString(r);
  List<MyTestInnerStruct> value2=getRandStructArray(r);
  mp.put(key2,value2);
  myMap=mp;
  return field;
}
