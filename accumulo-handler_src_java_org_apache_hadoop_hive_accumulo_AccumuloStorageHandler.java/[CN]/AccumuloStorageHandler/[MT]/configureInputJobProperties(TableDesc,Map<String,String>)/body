{
  Properties props=tableDesc.getProperties();
  jobProperties.put(AccumuloSerDeParameters.COLUMN_MAPPINGS,props.getProperty(AccumuloSerDeParameters.COLUMN_MAPPINGS));
  String tableName=props.getProperty(AccumuloSerDeParameters.TABLE_NAME);
  if (null == tableName) {
    tableName=getTableName(tableDesc);
  }
  jobProperties.put(AccumuloSerDeParameters.TABLE_NAME,tableName);
  String useIterators=props.getProperty(AccumuloSerDeParameters.ITERATOR_PUSHDOWN_KEY);
  if (useIterators != null) {
    if (!useIterators.equalsIgnoreCase("true") && !useIterators.equalsIgnoreCase("false")) {
      throw new IllegalArgumentException("Expected value of true or false for " + AccumuloSerDeParameters.ITERATOR_PUSHDOWN_KEY);
    }
    jobProperties.put(AccumuloSerDeParameters.ITERATOR_PUSHDOWN_KEY,useIterators);
  }
  String storageType=props.getProperty(AccumuloSerDeParameters.DEFAULT_STORAGE_TYPE);
  if (null != storageType) {
    jobProperties.put(AccumuloSerDeParameters.DEFAULT_STORAGE_TYPE,storageType);
  }
  String authValue=props.getProperty(AccumuloSerDeParameters.AUTHORIZATIONS_KEY);
  if (null != authValue) {
    jobProperties.put(AccumuloSerDeParameters.AUTHORIZATIONS_KEY,authValue);
  }
  log.info("Computed input job properties of " + jobProperties);
}
