{
  if (_columns.containsKey(fieldExpression)) {
    try {
      return new MetadataTypedSerDeField(fieldExpression,Class.forName("java.lang.String"),_columns.get(fieldExpression));
    }
 catch (    Exception e) {
      throw new SerDeException(e);
    }
  }
 else   if (ExpressionUtils.isComplexExpression(fieldExpression)) {
    return new ComplexSerDeField(parentField,fieldExpression,this);
  }
 else {
    String className=type.getName();
    return new ReflectionSerDeField(className,fieldExpression);
  }
}
