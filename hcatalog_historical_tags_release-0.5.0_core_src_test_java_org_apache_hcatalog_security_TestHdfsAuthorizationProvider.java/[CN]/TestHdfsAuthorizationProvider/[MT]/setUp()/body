{
  conf=new HiveConf(this.getClass());
  conf.set(ConfVars.PREEXECHOOKS.varname,"");
  conf.set(ConfVars.POSTEXECHOOKS.varname,"");
  conf.set(ConfVars.HIVE_SUPPORT_CONCURRENCY.varname,"false");
  conf.set("hive.metastore.local","true");
  conf.set(ConfVars.SEMANTIC_ANALYZER_HOOK.varname,HCatSemanticAnalyzer.class.getName());
  conf.setBoolVar(HiveConf.ConfVars.HIVE_AUTHORIZATION_ENABLED,true);
  conf.setVar(HiveConf.ConfVars.HIVE_AUTHORIZATION_MANAGER,StorageDelegationAuthorizationProvider.class.getCanonicalName());
  conf.set("fs.pfile.impl","org.apache.hadoop.fs.ProxyLocalFileSystem");
  whDir=System.getProperty("test.warehouse.dir","/tmp/testhdfsauthorization_wh");
  conf.setVar(HiveConf.ConfVars.METASTOREWAREHOUSE,whDir);
  UserGroupInformation ugi=ShimLoader.getHadoopShims().getUGIForConf(conf);
  String username=ShimLoader.getHadoopShims().getShortUserName(ugi);
  whPath=new Path(whDir);
  whFs=whPath.getFileSystem(conf);
  wh=new Warehouse(conf);
  hive=Hive.get(conf);
  HcatTestUtils.cleanupHMS(hive,wh,perm700);
  whFs.delete(whPath,true);
  whFs.mkdirs(whPath,perm755);
  SessionState.start(new CliSessionState(conf));
  hcatDriver=new HCatDriver();
}
