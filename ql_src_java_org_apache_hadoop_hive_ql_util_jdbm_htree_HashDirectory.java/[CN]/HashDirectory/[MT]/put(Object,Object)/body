{
  if (value == null) {
    return remove(key);
  }
  int hash=hashCode(key);
  long child_recid=_children[hash];
  if (child_recid == 0) {
    HashBucket bucket=new HashBucket(_depth + 1);
    Object existing=bucket.addElement(key,value);
    long b_recid=_recman.insert(bucket);
    _children[hash]=b_recid;
    _recman.update(_recid,this);
    return existing;
  }
 else {
    HashNode node=(HashNode)_recman.fetch(child_recid);
    if (node instanceof HashDirectory) {
      HashDirectory dir=(HashDirectory)node;
      dir.setPersistenceContext(_recman,child_recid);
      return dir.put(key,value);
    }
 else {
      HashBucket bucket=(HashBucket)node;
      if (bucket.hasRoom()) {
        Object existing=bucket.addElement(key,value);
        _recman.update(child_recid,bucket);
        return existing;
      }
 else {
        if (_depth == MAX_DEPTH) {
          throw new RuntimeException("Cannot create deeper directory. " + "Depth=" + _depth);
        }
        HashDirectory dir=new HashDirectory((byte)(_depth + 1));
        long dir_recid=_recman.insert(dir);
        dir.setPersistenceContext(_recman,dir_recid);
        _children[hash]=dir_recid;
        _recman.update(_recid,this);
        _recman.delete(child_recid);
        ArrayList keys=bucket.getKeys();
        ArrayList values=bucket.getValues();
        int entries=keys.size();
        for (int i=0; i < entries; i++) {
          dir.put(keys.get(i),values.get(i));
        }
        return dir.put(key,value);
      }
    }
  }
}
