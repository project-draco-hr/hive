{
  Properties props=outputJobInfo.getTableInfo().getStorerInfo().getProperties();
  props.put(serdeConstants.SERIALIZATION_LIB,storageHandler.getSerDeClass().getName());
  TableDesc tableDesc=new TableDesc(storageHandler.getInputFormatClass(),IgnoreKeyTextOutputFormat.class,props);
  if (tableDesc.getJobProperties() == null)   tableDesc.setJobProperties(new HashMap<String,String>());
  for (  Map.Entry<String,String> el : conf) {
    tableDesc.getJobProperties().put(el.getKey(),el.getValue());
  }
  Map<String,String> jobProperties=new HashMap<String,String>();
  try {
    tableDesc.getJobProperties().put(HCatConstants.HCAT_KEY_OUTPUT_INFO,HCatUtil.serialize(outputJobInfo));
    storageHandler.configureOutputJobProperties(tableDesc,jobProperties);
    for (    Map.Entry<String,String> el : jobProperties.entrySet()) {
      conf.set(el.getKey(),el.getValue());
    }
  }
 catch (  IOException e) {
    throw new IllegalStateException("Failed to configure StorageHandler",e);
  }
}
