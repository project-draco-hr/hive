{
  RevisionManager revisionMgr;
  ClassLoader classLoader=Thread.currentThread().getContextClassLoader();
  if (classLoader == null) {
    classLoader=RevisionManagerFactory.class.getClassLoader();
  }
  String className=properties.getProperty(RevisionManager.REVISION_MGR_IMPL_CLASS,ZKBasedRevisionManager.class.getName());
  try {
    @SuppressWarnings("unchecked") Class<? extends RevisionManager> revisionMgrClass=(Class<? extends RevisionManager>)Class.forName(className,true,classLoader);
    revisionMgr=(RevisionManager)revisionMgrClass.newInstance();
    revisionMgr.initialize(properties);
  }
 catch (  ClassNotFoundException e) {
    throw new IOException("The implementation class of revision manager not found.",e);
  }
catch (  InstantiationException e) {
    throw new IOException("Exception encountered during instantiating revision manager implementation.",e);
  }
catch (  IllegalAccessException e) {
    throw new IOException("IllegalAccessException encountered during instantiating revision manager implementation.",e);
  }
catch (  IllegalArgumentException e) {
    throw new IOException("IllegalArgumentException encountered during instantiating revision manager implementation.",e);
  }
  return revisionMgr;
}
