{
  HbaseMetastoreProto.PartitionKeyComparator proto;
  try {
    proto=HbaseMetastoreProto.PartitionKeyComparator.parseFrom(bytes);
  }
 catch (  InvalidProtocolBufferException e) {
    throw new RuntimeException(e);
  }
  List<Range> ranges=new ArrayList<Range>();
  for (  HbaseMetastoreProto.PartitionKeyComparator.Range range : proto.getRangeList()) {
    Mark start=null;
    if (range.hasStart()) {
      start=new Mark(range.getStart().getValue(),range.getStart().getInclusive());
    }
    Mark end=null;
    if (range.hasEnd()) {
      end=new Mark(range.getEnd().getValue(),range.getEnd().getInclusive());
    }
    ranges.add(new Range(range.getKey(),start,end));
  }
  List<Operator> ops=new ArrayList<Operator>();
  for (  HbaseMetastoreProto.PartitionKeyComparator.Operator op : proto.getOpList()) {
    ops.add(new Operator(Operator.Type.valueOf(op.getType().name()),op.getKey(),op.getVal()));
  }
  return new PartitionKeyComparator(proto.getNames(),proto.getTypes(),ranges,ops);
}
