{
  ObjectInspector inspector;
synchronized (TestOrcFile.class) {
    inspector=ObjectInspectorFactory.getReflectionObjectInspector(AllTypesRow.class,ObjectInspectorFactory.ObjectInspectorOptions.JAVA);
  }
  Writer writer=OrcFile.createWriter(fs,testFilePath,conf,inspector,100000,CompressionKind.NONE,10000,10000);
  writeData(writer);
  writer.close();
  conf.set(ShimLoader.getHadoopShims().getHadoopConfNames().get("MAPREDMINSPLITSIZE"),"1000");
  conf.set(ShimLoader.getHadoopShims().getHadoopConfNames().get("MAPREDMAXSPLITSIZE"),"5000");
  InputFormat<?,?> in=new OrcInputFormat();
  FileInputFormat.setInputPaths(conf,testFilePath.toString());
  GenericUDF udf=new GenericUDFOPEqualOrLessThan();
  List<ExprNodeDesc> childExpr=Lists.newArrayList();
  ExprNodeColumnDesc col=new ExprNodeColumnDesc(Long.class,"userid","T",false);
  ExprNodeConstantDesc con=new ExprNodeConstantDesc(100);
  childExpr.add(col);
  childExpr.add(con);
  ExprNodeGenericFuncDesc en=new ExprNodeGenericFuncDesc(inspector,udf,childExpr);
  String sargStr=Utilities.serializeExpression(en);
  conf.set("hive.io.filter.expr.serialized",sargStr);
  InputSplit[] splits=in.getSplits(conf,1);
  assertEquals(5,splits.length);
  con=new ExprNodeConstantDesc(1);
  childExpr.set(1,con);
  en=new ExprNodeGenericFuncDesc(inspector,udf,childExpr);
  sargStr=Utilities.serializeExpression(en);
  conf.set("hive.io.filter.expr.serialized",sargStr);
  splits=in.getSplits(conf,1);
  assertEquals(0,splits.length);
  con=new ExprNodeConstantDesc(2);
  childExpr.set(1,con);
  en=new ExprNodeGenericFuncDesc(inspector,udf,childExpr);
  sargStr=Utilities.serializeExpression(en);
  conf.set("hive.io.filter.expr.serialized",sargStr);
  splits=in.getSplits(conf,1);
  assertEquals(1,splits.length);
  con=new ExprNodeConstantDesc(5);
  childExpr.set(1,con);
  en=new ExprNodeGenericFuncDesc(inspector,udf,childExpr);
  sargStr=Utilities.serializeExpression(en);
  conf.set("hive.io.filter.expr.serialized",sargStr);
  splits=in.getSplits(conf,1);
  assertEquals(2,splits.length);
  con=new ExprNodeConstantDesc(13);
  childExpr.set(1,con);
  en=new ExprNodeGenericFuncDesc(inspector,udf,childExpr);
  sargStr=Utilities.serializeExpression(en);
  conf.set("hive.io.filter.expr.serialized",sargStr);
  splits=in.getSplits(conf,1);
  assertEquals(3,splits.length);
  con=new ExprNodeConstantDesc(29);
  childExpr.set(1,con);
  en=new ExprNodeGenericFuncDesc(inspector,udf,childExpr);
  sargStr=Utilities.serializeExpression(en);
  conf.set("hive.io.filter.expr.serialized",sargStr);
  splits=in.getSplits(conf,1);
  assertEquals(4,splits.length);
  con=new ExprNodeConstantDesc(70);
  childExpr.set(1,con);
  en=new ExprNodeGenericFuncDesc(inspector,udf,childExpr);
  sargStr=Utilities.serializeExpression(en);
  conf.set("hive.io.filter.expr.serialized",sargStr);
  splits=in.getSplits(conf,1);
  assertEquals(5,splits.length);
}
