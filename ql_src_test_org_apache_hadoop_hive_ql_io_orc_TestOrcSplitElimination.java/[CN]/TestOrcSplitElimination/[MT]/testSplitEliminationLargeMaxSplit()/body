{
  ObjectInspector inspector=createIO();
  Writer writer=OrcFile.createWriter(fs,testFilePath,conf,inspector,100000,CompressionKind.NONE,10000,10000);
  writeData(writer);
  writer.close();
  HiveConf.setLongVar(conf,HiveConf.ConfVars.MAPREDMINSPLITSIZE,1000);
  HiveConf.setLongVar(conf,HiveConf.ConfVars.MAPREDMAXSPLITSIZE,150000);
  InputFormat<?,?> in=new OrcInputFormat();
  FileInputFormat.setInputPaths(conf,testFilePath.toString());
  GenericUDF udf=new GenericUDFOPEqualOrLessThan();
  List<ExprNodeDesc> childExpr=Lists.newArrayList();
  ExprNodeConstantDesc con;
  ExprNodeGenericFuncDesc en;
  String sargStr;
  createTestSarg(inspector,udf,childExpr);
  InputSplit[] splits=in.getSplits(conf,1);
  assertEquals(2,splits.length);
  con=new ExprNodeConstantDesc(0);
  childExpr.set(1,con);
  en=new ExprNodeGenericFuncDesc(inspector,udf,childExpr);
  sargStr=SerializationUtilities.serializeExpression(en);
  conf.set("hive.io.filter.expr.serialized",sargStr);
  splits=in.getSplits(conf,1);
  assertEquals(0,splits.length);
  con=new ExprNodeConstantDesc(2);
  childExpr.set(1,con);
  en=new ExprNodeGenericFuncDesc(inspector,udf,childExpr);
  sargStr=SerializationUtilities.serializeExpression(en);
  conf.set("hive.io.filter.expr.serialized",sargStr);
  splits=in.getSplits(conf,1);
  assertEquals(1,splits.length);
  con=new ExprNodeConstantDesc(5);
  childExpr.set(1,con);
  en=new ExprNodeGenericFuncDesc(inspector,udf,childExpr);
  sargStr=SerializationUtilities.serializeExpression(en);
  conf.set("hive.io.filter.expr.serialized",sargStr);
  splits=in.getSplits(conf,1);
  assertEquals(2,splits.length);
  con=new ExprNodeConstantDesc(13);
  childExpr.set(1,con);
  en=new ExprNodeGenericFuncDesc(inspector,udf,childExpr);
  sargStr=SerializationUtilities.serializeExpression(en);
  conf.set("hive.io.filter.expr.serialized",sargStr);
  splits=in.getSplits(conf,1);
  assertEquals(2,splits.length);
  con=new ExprNodeConstantDesc(29);
  childExpr.set(1,con);
  en=new ExprNodeGenericFuncDesc(inspector,udf,childExpr);
  sargStr=SerializationUtilities.serializeExpression(en);
  conf.set("hive.io.filter.expr.serialized",sargStr);
  splits=in.getSplits(conf,1);
  assertEquals(2,splits.length);
  con=new ExprNodeConstantDesc(70);
  childExpr.set(1,con);
  en=new ExprNodeGenericFuncDesc(inspector,udf,childExpr);
  sargStr=SerializationUtilities.serializeExpression(en);
  conf.set("hive.io.filter.expr.serialized",sargStr);
  splits=in.getSplits(conf,1);
  assertEquals(2,splits.length);
}
