{
  int batchSize=batch.size;
  if (batchSize == 0) {
    return;
  }
  inputExpression.evaluate(batch);
  ColumnVector inputVector=batch.cols[this.inputExpression.getOutputColumn()];
  if (inputVector.isRepeating) {
    if (inputVector.noNulls || !inputVector.isNull[0]) {
      iterateNoNullsWithAggregationSelection(aggregationBufferSets,aggregateIndex,batchSize);
    }
  }
 else   if (inputVector.noNulls) {
    iterateNoNullsWithAggregationSelection(aggregationBufferSets,aggregateIndex,batchSize);
  }
 else   if (!batch.selectedInUse) {
    iterateHasNullsWithAggregationSelection(aggregationBufferSets,aggregateIndex,batchSize,inputVector.isNull);
  }
 else   if (batch.selectedInUse) {
    iterateHasNullsSelectionWithAggregationSelection(aggregationBufferSets,aggregateIndex,batchSize,batch.selected,inputVector.isNull);
  }
}
