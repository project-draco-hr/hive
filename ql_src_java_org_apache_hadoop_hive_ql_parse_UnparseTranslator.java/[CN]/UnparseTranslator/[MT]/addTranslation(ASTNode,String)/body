{
  if (!enabled) {
    return;
  }
  if (node.getOrigin() != null) {
    return;
  }
  int tokenStartIndex=node.getTokenStartIndex();
  int tokenStopIndex=node.getTokenStopIndex();
  Translation translation=new Translation();
  translation.tokenStopIndex=tokenStopIndex;
  translation.replacementText=replacementText;
  assert(tokenStopIndex >= tokenStartIndex);
  Map.Entry<Integer,Translation> existingEntry;
  existingEntry=translations.floorEntry(tokenStartIndex);
  boolean prefix=false;
  if (existingEntry != null) {
    if (existingEntry.getKey().equals(tokenStartIndex)) {
      if (existingEntry.getValue().tokenStopIndex == tokenStopIndex) {
        if (existingEntry.getValue().replacementText.equals(replacementText)) {
          return;
        }
      }
 else       if (tokenStopIndex > existingEntry.getValue().tokenStopIndex) {
        prefix=replacementText.startsWith(existingEntry.getValue().replacementText);
        assert(prefix);
      }
 else {
        prefix=existingEntry.getValue().replacementText.startsWith(replacementText);
        assert(prefix);
        return;
      }
    }
    if (!prefix) {
      assert(existingEntry.getValue().tokenStopIndex < tokenStartIndex);
    }
  }
  if (!prefix) {
    existingEntry=translations.ceilingEntry(tokenStartIndex);
    if (existingEntry != null) {
      assert(existingEntry.getKey() > tokenStopIndex);
    }
  }
  existingEntry=translations.floorEntry(tokenStopIndex);
  if (existingEntry != null) {
    if (existingEntry.getKey().equals(tokenStopIndex)) {
      if (tokenStartIndex < existingEntry.getKey() && tokenStopIndex == existingEntry.getKey()) {
        assert(replacementText.endsWith(existingEntry.getValue().replacementText));
        translations.remove(tokenStopIndex);
      }
    }
  }
  translations.put(tokenStartIndex,translation);
}
