{
  super(hiveConf,"localhost",MetaStoreUtils.findFreePort(),MetaStoreUtils.findFreePort());
  this.useMiniMR=useMiniMR;
  this.useMiniKdc=useMiniKdc;
  this.serverPrincipal=serverPrincipal;
  this.serverKeytab=serverKeytab;
  this.isMetastoreRemote=isMetastoreRemote;
  baseDir=Files.createTempDir();
  localFS=FileSystem.getLocal(hiveConf);
  FileSystem fs;
  if (useMiniMR) {
    dfs=ShimLoader.getHadoopShims().getMiniDfs(hiveConf,4,true,null);
    fs=dfs.getFileSystem();
    mr=ShimLoader.getHadoopShims().getMiniMrCluster(hiveConf,4,fs.getUri().toString(),1);
    mr.setupConfiguration(getHiveConf());
    baseDfsDir=new Path(new Path(fs.getUri()),"/base");
  }
 else {
    fs=FileSystem.getLocal(hiveConf);
    baseDfsDir=new Path("file://" + baseDir.toURI().getPath());
  }
  if (useMiniKdc) {
    hiveConf.setVar(ConfVars.HIVE_SERVER2_KERBEROS_PRINCIPAL,serverPrincipal);
    hiveConf.setVar(ConfVars.HIVE_SERVER2_KERBEROS_KEYTAB,serverKeytab);
    hiveConf.setVar(ConfVars.HIVE_SERVER2_AUTHENTICATION,"KERBEROS");
  }
  String metaStoreURL="jdbc:derby:" + baseDir.getAbsolutePath() + File.separator+ "test_metastore-"+ hs2Counter.incrementAndGet()+ ";create=true";
  fs.mkdirs(baseDfsDir);
  Path wareHouseDir=new Path(baseDfsDir,"warehouse");
  FileSystem.mkdirs(fs,wareHouseDir,FULL_PERM);
  fs.mkdirs(wareHouseDir);
  setWareHouseDir(wareHouseDir.toString());
  System.setProperty(HiveConf.ConfVars.METASTORECONNECTURLKEY.varname,metaStoreURL);
  hiveConf.setVar(HiveConf.ConfVars.METASTORECONNECTURLKEY,metaStoreURL);
  setBinaryPort(MetaStoreUtils.findFreePort());
  hiveConf.setVar(ConfVars.HIVE_SERVER2_THRIFT_BIND_HOST,getHost());
  hiveConf.setIntVar(ConfVars.HIVE_SERVER2_THRIFT_PORT,getBinaryPort());
  hiveConf.setIntVar(ConfVars.HIVE_SERVER2_THRIFT_HTTP_PORT,getHttpPort());
  Path scratchDir=new Path(baseDfsDir,"scratch");
  Utilities.createDirsWithPermission(hiveConf,scratchDir,WRITE_ALL_PERM,true);
  System.setProperty(HiveConf.ConfVars.SCRATCHDIR.varname,scratchDir.toString());
  hiveConf.setVar(ConfVars.SCRATCHDIR,scratchDir.toString());
  String localScratchDir=baseDir.getPath() + File.separator + "scratch";
  System.setProperty(HiveConf.ConfVars.LOCALSCRATCHDIR.varname,localScratchDir);
  hiveConf.setVar(ConfVars.LOCALSCRATCHDIR,localScratchDir);
}
