{
  Preconditions.checkState(inputTypes[0] == VectorExpression.Type.DATE);
  if (childExpressions != null) {
    super.evaluateChildren(batch);
  }
  LongColumnVector outV=(LongColumnVector)batch.cols[outputColumn];
  ColumnVector inputColVec=batch.cols[this.colNum];
  final int n=inputColVec.isRepeating ? 1 : batch.size;
  int[] sel=batch.selected;
  final boolean selectedInUse=(inputColVec.isRepeating == false) && batch.selectedInUse;
  if (batch.size == 0) {
    return;
  }
  outV.isRepeating=inputColVec.isRepeating;
  LongColumnVector longColVector=(LongColumnVector)inputColVec;
  if (inputColVec.noNulls) {
    outV.noNulls=true;
    if (selectedInUse) {
      for (int j=0; j < n; j++) {
        int i=sel[j];
        outV.vector[i]=getDateField(longColVector.vector[i]);
      }
    }
 else {
      for (int i=0; i < n; i++) {
        outV.vector[i]=getDateField(longColVector.vector[i]);
      }
    }
  }
 else {
    outV.noNulls=false;
    if (selectedInUse) {
      for (int j=0; j < n; j++) {
        int i=sel[j];
        outV.isNull[i]=inputColVec.isNull[i];
        if (!inputColVec.isNull[i]) {
          outV.vector[i]=getDateField(longColVector.vector[i]);
        }
      }
    }
 else {
      for (int i=0; i < n; i++) {
        outV.isNull[i]=inputColVec.isNull[i];
        if (!inputColVec.isNull[i]) {
          outV.vector[i]=getDateField(longColVector.vector[i]);
        }
      }
    }
  }
}
