{
  FragmentSpecProto.Builder builder=FragmentSpecProto.newBuilder();
  builder.setFragmentIdentifierString(taskSpec.getTaskAttemptID().toString());
  builder.setDagName(taskSpec.getDAGName());
  builder.setVertexName(taskSpec.getVertexName());
  builder.setVertexParallelism(taskSpec.getVertexParallelism());
  builder.setFragmentNumber(taskSpec.getTaskAttemptID().getTaskID().getId());
  builder.setAttemptNumber(taskSpec.getTaskAttemptID().getId());
  if (taskSpec.getProcessorDescriptor() != null) {
    builder.setProcessorDescriptor(convertToProto(taskSpec.getProcessorDescriptor()));
  }
  if (taskSpec.getInputs() != null && !taskSpec.getInputs().isEmpty()) {
    for (    InputSpec inputSpec : taskSpec.getInputs()) {
      builder.addInputSpecs(convertInputSpecToProto(inputSpec));
    }
  }
  if (taskSpec.getOutputs() != null && !taskSpec.getOutputs().isEmpty()) {
    for (    OutputSpec outputSpec : taskSpec.getOutputs()) {
      builder.addOutputSpecs(convertOutputSpecToProto(outputSpec));
    }
  }
  if (taskSpec.getGroupInputs() != null && !taskSpec.getGroupInputs().isEmpty()) {
    for (    GroupInputSpec groupInputSpec : taskSpec.getGroupInputs()) {
      builder.addGroupedInputSpecs(convertGroupInputSpecToProto(groupInputSpec));
    }
  }
  return builder.build();
}
