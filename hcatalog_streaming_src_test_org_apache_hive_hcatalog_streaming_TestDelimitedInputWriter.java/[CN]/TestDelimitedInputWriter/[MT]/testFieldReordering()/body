{
  ArrayList<String> colNames=Lists.newArrayList(new String[]{"col1","col2","col3","col4","col5"});
{
    String[] fieldNames={null,"col2",null,"col4",null};
    int[] mapping=DelimitedInputWriter.getFieldReordering(fieldNames,colNames);
    Assert.assertTrue(Arrays.equals(mapping,new int[]{-1,1,-1,3,-1}));
  }
{
    String[] fieldNames={"col5","col4","col3","col2","col1"};
    int[] mapping=DelimitedInputWriter.getFieldReordering(fieldNames,colNames);
    Assert.assertTrue(Arrays.equals(mapping,new int[]{4,3,2,1,0}));
  }
{
    String[] fieldNames={"xyz","abc","col3","col4","as"};
    try {
      DelimitedInputWriter.getFieldReordering(fieldNames,colNames);
      Assert.fail();
    }
 catch (    InvalidColumn e) {
    }
  }
{
    String[] fieldNames={"col3","col4"};
    int[] mapping=DelimitedInputWriter.getFieldReordering(fieldNames,colNames);
    Assert.assertTrue(Arrays.equals(mapping,new int[]{2,3}));
  }
{
    String[] fieldNames={"col5","col4","col3","col2","col1","col1"};
    try {
      DelimitedInputWriter.getFieldReordering(fieldNames,colNames);
      Assert.fail();
    }
 catch (    InvalidColumn e) {
    }
  }
}
