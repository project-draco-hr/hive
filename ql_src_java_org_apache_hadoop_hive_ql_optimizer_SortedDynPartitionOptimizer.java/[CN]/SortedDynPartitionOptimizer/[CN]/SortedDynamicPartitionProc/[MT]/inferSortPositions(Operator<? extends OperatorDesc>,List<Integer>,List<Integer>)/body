{
  if (!(fsParent instanceof SelectOperator)) {
    return;
  }
  SelectOperator pSel=(SelectOperator)fsParent;
  Operator<? extends OperatorDesc> parent=pSel;
  while (!(parent instanceof ReduceSinkOperator)) {
    if (parent.getNumParent() != 1 || !(parent instanceof SelectOperator)) {
      return;
    }
    parent=parent.getParentOperators().get(0);
  }
  List<ExprNodeDesc> selColsInPRS=ExprNodeDescUtils.backtrack(pSel.getConf().getColList(),pSel,parent);
  ReduceSinkOperator pRS=(ReduceSinkOperator)parent;
  for (int i=0; i < pRS.getConf().getKeyCols().size(); i++) {
    ExprNodeDesc col=pRS.getConf().getKeyCols().get(i);
    int pos=selColsInPRS.indexOf(col);
    if (pos == -1) {
      sortPositions.clear();
      sortOrder.clear();
      return;
    }
    sortPositions.add(pos);
    sortOrder.add(pRS.getConf().getOrder().charAt(i) == '+' ? 1 : 0);
  }
}
