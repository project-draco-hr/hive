{
  BloomFilter bf=new BloomFilter(10000);
  byte[] val=new byte[]{1,2,3};
  byte[] val1=new byte[]{1,2,3,4};
  byte[] val2=new byte[]{1,2,3,4,5};
  byte[] val3=new byte[]{1,2,3,4,5,6};
  assertEquals(false,bf.test(val));
  assertEquals(false,bf.test(val1));
  assertEquals(false,bf.test(val2));
  assertEquals(false,bf.test(val3));
  bf.add(val);
  assertEquals(true,bf.test(val));
  assertEquals(false,bf.test(val1));
  assertEquals(false,bf.test(val2));
  assertEquals(false,bf.test(val3));
  bf.add(val1);
  assertEquals(true,bf.test(val));
  assertEquals(true,bf.test(val1));
  assertEquals(false,bf.test(val2));
  assertEquals(false,bf.test(val3));
  bf.add(val2);
  assertEquals(true,bf.test(val));
  assertEquals(true,bf.test(val1));
  assertEquals(true,bf.test(val2));
  assertEquals(false,bf.test(val3));
  bf.add(val3);
  assertEquals(true,bf.test(val));
  assertEquals(true,bf.test(val1));
  assertEquals(true,bf.test(val2));
  assertEquals(true,bf.test(val3));
  byte[] randVal=new byte[COUNT];
  for (int i=0; i < COUNT; i++) {
    rand.nextBytes(randVal);
    bf.add(randVal);
  }
  assertEquals(true,bf.test(randVal));
  randVal[0]=0;
  randVal[1]=0;
  randVal[2]=0;
  randVal[3]=0;
  randVal[4]=0;
  assertEquals(false,bf.test(randVal));
  assertEquals(7800,bf.sizeInBytes());
}
