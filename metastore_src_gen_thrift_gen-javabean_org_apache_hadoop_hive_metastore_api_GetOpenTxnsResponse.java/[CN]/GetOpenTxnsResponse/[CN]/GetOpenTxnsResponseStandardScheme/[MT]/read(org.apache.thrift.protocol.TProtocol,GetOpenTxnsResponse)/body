{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
        struct.txn_high_water_mark=iprot.readI64();
        struct.setTxn_high_water_markIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
case 2:
  if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
{
      org.apache.thrift.protocol.TSet _set436=iprot.readSetBegin();
      struct.open_txns=new HashSet<Long>(2 * _set436.size);
      for (int _i437=0; _i437 < _set436.size; ++_i437) {
        long _elem438;
        _elem438=iprot.readI64();
        struct.open_txns.add(_elem438);
      }
      iprot.readSetEnd();
    }
    struct.setOpen_txnsIsSet(true);
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
  }
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
