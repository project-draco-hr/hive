{
  String dbName="default";
  String tableName="snp";
  long now=System.currentTimeMillis();
  List<FieldSchema> cols=new ArrayList<>();
  cols.add(new FieldSchema("col5_double","double","nocomment"));
  SerDeInfo serde=new SerDeInfo("serde","seriallib",null);
  StorageDescriptor sd=new StorageDescriptor(cols,"file:/tmp","input","output",false,0,serde,null,null,Collections.<String,String>emptyMap());
  List<FieldSchema> partCols=new ArrayList<>();
  partCols.add(new FieldSchema("ds","string",""));
  Table table=new Table(tableName,dbName,"me",(int)now,(int)now,0,sd,partCols,Collections.<String,String>emptyMap(),null,null,null);
  store.createTable(table);
  List<List<String>> partVals=new ArrayList<>();
  for (int i=0; i < 10; i++) {
    List<String> partVal=Arrays.asList("" + i);
    partVals.add(partVal);
    StorageDescriptor psd=new StorageDescriptor(sd);
    psd.setLocation("file:/tmp/default/hit/ds=" + partVal);
    Partition part=new Partition(partVal,dbName,tableName,(int)now,(int)now,psd,Collections.<String,String>emptyMap());
    store.addPartition(part);
    if (i == 0 || i == 2 || i == 3 || i == 5 || i == 6 || i == 8) {
      ColumnStatistics cs=new ColumnStatistics();
      ColumnStatisticsDesc desc=new ColumnStatisticsDesc(false,dbName,tableName);
      desc.setLastAnalyzed(now);
      desc.setPartName("ds=" + partVal);
      cs.setStatsDesc(desc);
      ColumnStatisticsObj obj=new ColumnStatisticsObj();
      obj.setColName("col5_double");
      obj.setColType("double");
      ColumnStatisticsData data=new ColumnStatisticsData();
      DoubleColumnStatsData dcsd=new DoubleColumnStatsData();
      dcsd.setHighValue(1000 + i);
      dcsd.setLowValue(-1000 - i);
      dcsd.setNumNulls(i);
      dcsd.setNumDVs(10 * i);
      dcsd.setBitVectors(bitVectors);
      data.setDoubleStats(dcsd);
      obj.setStatsData(data);
      cs.addToStatsObj(obj);
      store.updatePartitionColumnStatistics(cs,partVal);
    }
  }
  Checker statChecker=new Checker(){
    @Override public void checkStats(    AggrStats aggrStats) throws Exception {
      Assert.assertEquals(6,aggrStats.getPartsFound());
      Assert.assertEquals(1,aggrStats.getColStatsSize());
      ColumnStatisticsObj cso=aggrStats.getColStats().get(0);
      Assert.assertEquals("col5_double",cso.getColName());
      Assert.assertEquals("double",cso.getColType());
      DoubleColumnStatsData lcsd=cso.getStatsData().getDoubleStats();
      Assert.assertEquals(1010,lcsd.getHighValue(),0.01);
      Assert.assertEquals(-1010,lcsd.getLowValue(),0.01);
      Assert.assertEquals(40,lcsd.getNumNulls());
      Assert.assertEquals(3,lcsd.getNumDVs());
    }
  }
;
  List<String> partNames=new ArrayList<>();
  for (int i=0; i < 10; i++) {
    partNames.add("ds=" + i);
  }
  AggrStats aggrStats=store.get_aggr_stats_for(dbName,tableName,partNames,Arrays.asList("col5_double"));
  statChecker.checkStats(aggrStats);
}
