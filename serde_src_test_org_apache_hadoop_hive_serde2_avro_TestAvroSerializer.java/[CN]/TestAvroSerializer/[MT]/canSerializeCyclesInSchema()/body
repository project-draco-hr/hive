{
  AvroCycleParent parent=new AvroCycleParent();
  AvroCycleChild child=new AvroCycleChild();
  parent.setChild(child);
  Schema parentS=ReflectData.AllowNull.get().getSchema(AvroCycleParent.class);
  GenericData.Record parentRec=new GenericData.Record(parentS);
  Schema childS=ReflectData.AllowNull.get().getSchema(AvroCycleChild.class);
  GenericData.Record childRec=new GenericData.Record(childS);
  parentRec.put("child",childRec);
  AvroSerializer as=new AvroSerializer();
  AvroDeserializer ad=new AvroDeserializer();
  AvroObjectInspectorGenerator aoig=new AvroObjectInspectorGenerator(parentS);
  ObjectInspector oi=aoig.getObjectInspector();
  List<String> columnNames=aoig.getColumnNames();
  List<TypeInfo> columnTypes=aoig.getColumnTypes();
  AvroGenericRecordWritable agrw=Utils.serializeAndDeserializeRecord(parentRec);
  Object obj=ad.deserialize(columnNames,columnTypes,agrw,parentS);
  Writable result=as.serialize(obj,oi,columnNames,columnTypes,parentS);
  assertTrue(result instanceof AvroGenericRecordWritable);
  GenericRecord r2=((AvroGenericRecordWritable)result).getRecord();
  assertEquals(parentS,r2.getSchema());
}
