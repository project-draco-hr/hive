{
  VectorMapJoinFastHashMultiSet.HashMultiSetResult optimizedHashMultiSetResult=(VectorMapJoinFastHashMultiSet.HashMultiSetResult)hashMultiSetResult;
  optimizedHashMultiSetResult.forget();
  long hashCode=VectorMapJoinFastBytesHashUtil.hashKey(keyBytes,keyStart,keyLength);
  long count=findReadSlot(keyBytes,keyStart,keyLength,hashCode);
  JoinUtil.JoinResult joinResult;
  if (count == -1) {
    joinResult=JoinUtil.JoinResult.NOMATCH;
  }
 else {
    optimizedHashMultiSetResult.set(count);
    joinResult=JoinUtil.JoinResult.MATCH;
  }
  optimizedHashMultiSetResult.setJoinResult(joinResult);
  return joinResult;
}
