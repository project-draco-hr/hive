{
  out.writeInt(planBytes.length);
  out.write(planBytes);
  out.writeInt(fragmentBytes.length);
  out.write(fragmentBytes);
  out.writeInt(locations.length);
  for (int i=0; i < locations.length; ++i) {
    out.writeUTF(locations[i].getLocation());
  }
  byte[] binarySchema;
  try {
    AutoExpandingBufferWriteTransport transport=new AutoExpandingBufferWriteTransport(1024,2d);
    TProtocol protocol=new TBinaryProtocol(transport);
    schema.write(protocol);
    binarySchema=transport.getBuf().array();
  }
 catch (  Exception e) {
    throw new IOException(e);
  }
  out.writeInt(binarySchema.length);
  out.write(binarySchema);
}
