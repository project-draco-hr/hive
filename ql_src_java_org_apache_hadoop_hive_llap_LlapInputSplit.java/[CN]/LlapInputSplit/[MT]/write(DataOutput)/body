{
  out.writeInt(splitNum);
  out.writeInt(planBytes.length);
  out.write(planBytes);
  out.writeInt(fragmentBytes.length);
  out.write(fragmentBytes);
  out.writeInt(locations.length);
  for (int i=0; i < locations.length; ++i) {
    out.writeUTF(locations[i].getLocation());
  }
  byte[] binarySchema;
  try {
    TSerializer serializer=new TSerializer();
    byte[] serialzied=serializer.serialize(schema);
    out.writeInt(serialzied.length);
    out.write(serialzied);
  }
 catch (  Exception e) {
    throw new IOException(e);
  }
}
