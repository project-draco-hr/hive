{
  this.iPart=iPart;
  this.output=output;
  this.outputFromPivotFunctions=outputFromPivotFunctions;
  this.wFnsToProcess=wFnsToProcess;
  this.currIdx=0;
  wTFnDef=(WindowTableFunctionDef)getTableDef();
  order=wTFnDef.getOrder().getExpressions().get(0).getOrder();
  ptfDesc=getQueryDef();
  inputOI=iPart.getOutputOI();
  aggBuffers=new AggregationBuffer[wTFnDef.getWindowFunctions().size()];
  args=new Object[wTFnDef.getWindowFunctions().size()][];
  try {
    for (    int j : wFnsToProcess) {
      WindowFunctionDef wFn=wTFnDef.getWindowFunctions().get(j);
      aggBuffers[j]=wFn.getWFnEval().getNewAggregationBuffer();
      args[j]=new Object[wFn.getArgs() == null ? 0 : wFn.getArgs().size()];
    }
  }
 catch (  HiveException he) {
    throw new RuntimeException(he);
  }
}
