{
  driver.run("drop table ptn_fail");
  String createTable="create table ptn_fail(a int, c string) partitioned by (b string) stored as RCFILE";
  int retCode=driver.run(createTable).getResponseCode();
  if (retCode != 0) {
    throw new IOException("Failed to create table.");
  }
  int LOOP_SIZE=11;
  String[] input=new String[LOOP_SIZE];
  for (int i=0; i < LOOP_SIZE; i++) {
    input[i]=i + "\tmath";
  }
  HcatTestUtils.createTestDataFile(INPUT_FILE_NAME,input);
  PigServer server=new PigServer(ExecType.LOCAL);
  server.setBatchOn();
  server.registerQuery("A = load '" + INPUT_FILE_NAME + "' as (a:int, c:chararray);");
  server.registerQuery("B = filter A by " + FailEvalFunc.class.getName() + "($0);");
  server.registerQuery("store B into 'ptn_fail' using " + HCatStorer.class.getName() + "('b=math');");
  server.executeBatch();
  String query="show partitions ptn_fail";
  retCode=driver.run(query).getResponseCode();
  if (retCode != 0) {
    throw new IOException("Error " + retCode + " running query "+ query);
  }
  ArrayList<String> res=new ArrayList<String>();
  driver.getResults(res);
  assertEquals(0,res.size());
  Assert.assertTrue((new File(TEST_WAREHOUSE_DIR + "/ptn_fail")).exists());
  Assert.assertFalse((new File(TEST_WAREHOUSE_DIR + "/ptn_fail/b=math")).exists());
}
