{
  Path root=new Path(workDir,"testWriterTblProperties");
  Configuration conf=new Configuration();
  FileSystem fs=FileSystem.getLocal(conf).getRaw();
  ObjectInspector inspector;
synchronized (TestOrcFile.class) {
    inspector=ObjectInspectorFactory.getReflectionObjectInspector(MyRow.class,ObjectInspectorFactory.ObjectInspectorOptions.JAVA);
  }
  Properties tblProps=new Properties();
  tblProps.setProperty("orc.compress","SNAPPY");
  tblProps.setProperty("orc.compress.size","8192");
  HiveConf.setIntVar(conf,HiveConf.ConfVars.HIVE_ORC_BASE_DELTA_RATIO,4);
  AcidOutputFormat.Options options=new AcidOutputFormat.Options(conf).filesystem(fs).bucket(10).writingBase(false).minimumTransactionId(10).maximumTransactionId(19).inspector(inspector).reporter(Reporter.NULL).finalDestination(root).tableProperties(tblProps);
  RecordUpdater updater=new OrcRecordUpdater(root,options);
  updater.insert(11,new MyRow("first"));
  updater.insert(11,new MyRow("second"));
  updater.insert(11,new MyRow("third"));
  updater.flush();
  updater.insert(12,new MyRow("fourth"));
  updater.insert(12,new MyRow("fifth"));
  updater.flush();
  PrintStream origOut=System.out;
  ByteArrayOutputStream myOut=new ByteArrayOutputStream();
  System.setOut(new PrintStream(myOut));
  FileDump.main(new String[]{root.toUri().toString()});
  System.out.flush();
  String outDump=new String(myOut.toByteArray());
  assertEquals(true,outDump.contains("Compression: SNAPPY"));
  assertEquals(true,outDump.contains("Compression size: 2048"));
  System.setOut(origOut);
  updater.close(false);
}
