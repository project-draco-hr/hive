{
  row.clear();
  Object value=values.next();
  BytesWritable valueWritable=(BytesWritable)value;
  if (passDownKey == null) {
    row.add(this.keyObject);
  }
 else {
    row.add(passDownKey.get(0));
  }
  if ((passDownKey == null) && (reducer instanceof CommonMergeJoinOperator)) {
    passDownKey=(List<Object>)ObjectInspectorUtils.copyToStandardObject(row,reducer.getInputObjInspectors()[tag],ObjectInspectorCopyOption.WRITABLE);
    row.remove(0);
    row.add(0,passDownKey.get(0));
  }
  row.add(deserializeValue(valueWritable,tag));
  try {
    reducer.process(row,tag);
  }
 catch (  Exception e) {
    String rowString=null;
    try {
      rowString=SerDeUtils.getJSONString(row,rowObjectInspector);
    }
 catch (    Exception e2) {
      rowString="[Error getting row data with exception " + StringUtils.stringifyException(e2) + " ]";
    }
    throw new HiveException("Hive Runtime Error while processing row (tag=" + tag + ") "+ rowString,e);
  }
}
