{
switch (numBytes) {
case 1:
    writeBuffer[0]=(byte)(input[offset + 0] & 255);
  writeBuffer[1]=(byte)(input[offset + 1] & 255);
writeBuffer[2]=(byte)(input[offset + 2] & 255);
writeBuffer[3]=(byte)(input[offset + 3] & 255);
writeBuffer[4]=(byte)(input[offset + 4] & 255);
writeBuffer[5]=(byte)(input[offset + 5] & 255);
writeBuffer[6]=(byte)(input[offset + 6] & 255);
writeBuffer[7]=(byte)(input[offset + 7] & 255);
break;
case 2:
writeLongBE2(output,input[offset + 0],0);
writeLongBE2(output,input[offset + 1],2);
writeLongBE2(output,input[offset + 2],4);
writeLongBE2(output,input[offset + 3],6);
writeLongBE2(output,input[offset + 4],8);
writeLongBE2(output,input[offset + 5],10);
writeLongBE2(output,input[offset + 6],12);
writeLongBE2(output,input[offset + 7],14);
break;
case 3:
writeLongBE3(output,input[offset + 0],0);
writeLongBE3(output,input[offset + 1],3);
writeLongBE3(output,input[offset + 2],6);
writeLongBE3(output,input[offset + 3],9);
writeLongBE3(output,input[offset + 4],12);
writeLongBE3(output,input[offset + 5],15);
writeLongBE3(output,input[offset + 6],18);
writeLongBE3(output,input[offset + 7],21);
break;
case 4:
writeLongBE4(output,input[offset + 0],0);
writeLongBE4(output,input[offset + 1],4);
writeLongBE4(output,input[offset + 2],8);
writeLongBE4(output,input[offset + 3],12);
writeLongBE4(output,input[offset + 4],16);
writeLongBE4(output,input[offset + 5],20);
writeLongBE4(output,input[offset + 6],24);
writeLongBE4(output,input[offset + 7],28);
break;
case 5:
writeLongBE5(output,input[offset + 0],0);
writeLongBE5(output,input[offset + 1],5);
writeLongBE5(output,input[offset + 2],10);
writeLongBE5(output,input[offset + 3],15);
writeLongBE5(output,input[offset + 4],20);
writeLongBE5(output,input[offset + 5],25);
writeLongBE5(output,input[offset + 6],30);
writeLongBE5(output,input[offset + 7],35);
break;
case 6:
writeLongBE6(output,input[offset + 0],0);
writeLongBE6(output,input[offset + 1],6);
writeLongBE6(output,input[offset + 2],12);
writeLongBE6(output,input[offset + 3],18);
writeLongBE6(output,input[offset + 4],24);
writeLongBE6(output,input[offset + 5],30);
writeLongBE6(output,input[offset + 6],36);
writeLongBE6(output,input[offset + 7],42);
break;
case 7:
writeLongBE7(output,input[offset + 0],0);
writeLongBE7(output,input[offset + 1],7);
writeLongBE7(output,input[offset + 2],14);
writeLongBE7(output,input[offset + 3],21);
writeLongBE7(output,input[offset + 4],28);
writeLongBE7(output,input[offset + 5],35);
writeLongBE7(output,input[offset + 6],42);
writeLongBE7(output,input[offset + 7],49);
break;
case 8:
writeLongBE8(output,input[offset + 0],0);
writeLongBE8(output,input[offset + 1],8);
writeLongBE8(output,input[offset + 2],16);
writeLongBE8(output,input[offset + 3],24);
writeLongBE8(output,input[offset + 4],32);
writeLongBE8(output,input[offset + 5],40);
writeLongBE8(output,input[offset + 6],48);
writeLongBE8(output,input[offset + 7],56);
break;
default :
break;
}
final int toWrite=numHops * numBytes;
output.write(writeBuffer,0,toWrite);
}
