{
  final int numHops=2;
  final int remainder=len % numHops;
  final int endOffset=offset + len;
  final int endUnroll=endOffset - remainder;
  int val=0;
  for (int i=offset; i < endUnroll; i=i + numHops) {
    val=(int)(val | ((input[i] & 15) << 4) | (input[i + 1]) & 15);
    output.write(val);
    val=0;
  }
  if (remainder > 0) {
    int startShift=4;
    for (int i=endUnroll; i < endOffset; i++) {
      val=(int)(val | (input[i] & 15) << startShift);
      startShift-=4;
    }
    output.write(val);
  }
}
