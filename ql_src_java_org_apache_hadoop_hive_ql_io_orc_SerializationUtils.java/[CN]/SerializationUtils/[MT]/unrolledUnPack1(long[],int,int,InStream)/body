{
  final int numHops=8;
  final int remainder=len % numHops;
  final int endOffset=offset + len;
  final int endUnroll=endOffset - remainder;
  int val=0;
  for (int i=offset; i < endUnroll; i=i + numHops) {
    val=input.read();
    buffer[i]=(val >>> 7) & 1;
    buffer[i + 1]=(val >>> 6) & 1;
    buffer[i + 2]=(val >>> 5) & 1;
    buffer[i + 3]=(val >>> 4) & 1;
    buffer[i + 4]=(val >>> 3) & 1;
    buffer[i + 5]=(val >>> 2) & 1;
    buffer[i + 6]=(val >>> 1) & 1;
    buffer[i + 7]=val & 1;
  }
  if (remainder > 0) {
    int startShift=7;
    val=input.read();
    for (int i=endUnroll; i < endOffset; i++) {
      buffer[i]=(val >>> startShift) & 1;
      startShift-=1;
    }
  }
}
