{
  this.hiveConf=hiveConf;
  sessionManager=new SessionManager(hiveServer2);
  addService(sessionManager);
  if (UserGroupInformation.isSecurityEnabled()) {
    try {
      HiveAuthFactory.loginFromKeytab(hiveConf);
      this.serviceUGI=Utils.getUGIForConf(hiveConf);
    }
 catch (    IOException e) {
      throw new ServiceException("Unable to login to kerberos with given principal/keytab",e);
    }
catch (    LoginException e) {
      throw new ServiceException("Unable to login to kerberos with given principal/keytab",e);
    }
    String principal=hiveConf.getVar(ConfVars.HIVE_SERVER2_SPNEGO_PRINCIPAL);
    String keyTabFile=hiveConf.getVar(ConfVars.HIVE_SERVER2_SPNEGO_KEYTAB);
    if (principal.isEmpty() || keyTabFile.isEmpty()) {
      LOG.info("SPNego httpUGI not created, spNegoPrincipal: " + principal + ", ketabFile: "+ keyTabFile);
    }
 else {
      try {
        this.httpUGI=HiveAuthFactory.loginFromSpnegoKeytabAndReturnUGI(hiveConf);
        LOG.info("SPNego httpUGI successfully created.");
      }
 catch (      IOException e) {
        LOG.warn("SPNego httpUGI creation failed: ",e);
      }
    }
  }
  setupBlockedUdfs();
  super.init(hiveConf);
}
