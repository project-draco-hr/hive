{
  ParseContext parseContext=context.getParseContext();
  QBJoinTree joinTree=parseContext.getJoinContext().get(joinOp);
  List<String> joinAliases=new ArrayList<String>();
  String baseBigAlias=null;
  Map<Integer,Set<String>> posToAliasMap=joinOp.getPosToAliasMap();
  for (  Map.Entry<Integer,Set<String>> entry : posToAliasMap.entrySet()) {
    if (entry.getKey().intValue() == bigTablePosition) {
      baseBigAlias=entry.getValue().iterator().next();
    }
    for (    String alias : entry.getValue()) {
      if (!joinAliases.contains(alias)) {
        joinAliases.add(alias);
      }
    }
  }
  BucketMapjoinProc.checkAndConvertBucketMapJoin(parseContext,mapJoinOp,joinTree,baseBigAlias,joinAliases);
  int numBuckets=-1;
  MapJoinDesc joinDesc=mapJoinOp.getConf();
  if (joinDesc.isBucketMapJoin()) {
    numBuckets=joinDesc.getBigTableBucketNumMapping().size();
    mapJoinOp.setPosToAliasMap(joinOp.getPosToAliasMap());
  }
  return numBuckets;
}
