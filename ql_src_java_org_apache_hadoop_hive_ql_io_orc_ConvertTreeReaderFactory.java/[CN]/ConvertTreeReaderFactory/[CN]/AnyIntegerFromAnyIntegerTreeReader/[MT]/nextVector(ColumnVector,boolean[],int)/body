{
  anyIntegerAsLongTreeReader.nextVector(previousVector,isNull,batchSize);
  LongColumnVector resultColVector=(LongColumnVector)previousVector;
  if (downCastNeeded) {
    long[] resultVector=resultColVector.vector;
    if (resultColVector.isRepeating) {
      if (resultColVector.noNulls || !resultColVector.isNull[0]) {
        resultVector[0]=downCastAnyInteger(resultVector[0],readerType);
      }
 else {
        resultColVector.noNulls=false;
        resultColVector.isNull[0]=true;
      }
    }
 else     if (resultColVector.noNulls) {
      for (int i=0; i < batchSize; i++) {
        resultVector[i]=downCastAnyInteger(resultVector[i],readerType);
      }
    }
 else {
      for (int i=0; i < batchSize; i++) {
        if (!resultColVector.isNull[i]) {
          resultVector[i]=downCastAnyInteger(resultVector[i],readerType);
        }
 else {
          resultColVector.noNulls=false;
          resultColVector.isNull[i]=true;
        }
      }
    }
  }
}
