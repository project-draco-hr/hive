{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetMaxColLen()).compareTo(other.isSetMaxColLen());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetMaxColLen()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.maxColLen,other.maxColLen);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetAvgColLen()).compareTo(other.isSetAvgColLen());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetAvgColLen()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.avgColLen,other.avgColLen);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetNumNulls()).compareTo(other.isSetNumNulls());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetNumNulls()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.numNulls,other.numNulls);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
