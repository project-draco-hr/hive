{
  RawStore rdbms=new ObjectStore();
  rdbms.setConf(conf);
  String[] dbNames=new String[]{"importdb1","importdb2"};
  String[] tableNames=new String[]{"nonparttable","parttable"};
  String[] partVals=new String[]{"na","emea","latam","apac"};
  String[] roles=new String[]{"role1","role2"};
  int now=(int)System.currentTimeMillis() / 1000;
  for (int i=0; i < roles.length; i++) {
    rdbms.addRole(roles[i],"me");
  }
  for (int i=0; i < dbNames.length; i++) {
    rdbms.createDatabase(new Database(dbNames[i],"no description","file:/tmp",emptyParameters));
    List<FieldSchema> cols=new ArrayList<FieldSchema>();
    cols.add(new FieldSchema("col1","int","nocomment"));
    SerDeInfo serde=new SerDeInfo("serde","seriallib",null);
    StorageDescriptor sd=new StorageDescriptor(cols,"file:/tmp","input","output",false,0,serde,null,null,emptyParameters);
    rdbms.createTable(new Table(tableNames[0],dbNames[i],"me",now,now,0,sd,null,emptyParameters,null,null,null));
    List<FieldSchema> partCols=new ArrayList<FieldSchema>();
    partCols.add(new FieldSchema("region","string",""));
    rdbms.createTable(new Table(tableNames[1],dbNames[i],"me",now,now,0,sd,partCols,emptyParameters,null,null,null));
    for (int j=0; j < partVals.length; j++) {
      StorageDescriptor psd=new StorageDescriptor(sd);
      psd.setLocation("file:/tmp/region=" + partVals[j]);
      Partition part=new Partition(Arrays.asList(partVals[j]),dbNames[i],tableNames[1],now,now,psd,emptyParameters);
      store.addPartition(part);
    }
  }
  HBaseImport importer=new HBaseImport();
  importer.setConnections(rdbms,store);
  importer.run();
  for (int i=0; i < roles.length; i++) {
    Role role=store.getRole(roles[i]);
    Assert.assertNotNull(role);
    Assert.assertEquals(roles[i],role.getRoleName());
  }
  Assert.assertEquals(2,store.listRoleNames().size());
  for (int i=0; i < dbNames.length; i++) {
    Database db=store.getDatabase(dbNames[i]);
    Assert.assertNotNull(db);
    Assert.assertEquals("file:/tmp",db.getLocationUri());
    Table table=store.getTable(db.getName(),tableNames[0]);
    Assert.assertNotNull(table);
    Assert.assertEquals(now,table.getLastAccessTime());
    Assert.assertEquals("input",table.getSd().getInputFormat());
    table=store.getTable(db.getName(),tableNames[1]);
    Assert.assertNotNull(table);
    for (int j=0; j < partVals.length; j++) {
      Partition part=store.getPartition(dbNames[i],tableNames[1],Arrays.asList(partVals[j]));
      Assert.assertNotNull(part);
      Assert.assertEquals("file:/tmp/region=" + partVals[j],part.getSd().getLocation());
    }
    Assert.assertEquals(4,store.getPartitions(dbNames[i],tableNames[1],-1).size());
    Assert.assertEquals(2,store.getAllTables(dbNames[i]).size());
  }
  Assert.assertEquals(2,store.getAllDatabases().size());
}
