{
  org.apache.thrift.protocol.TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (field.id) {
case 1:
      if (field.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map12=iprot.readMapBegin();
          this.userPrivileges=new HashMap<String,List<PrivilegeGrantInfo>>(2 * _map12.size);
          for (int _i13=0; _i13 < _map12.size; ++_i13) {
            String _key14;
            List<PrivilegeGrantInfo> _val15;
            _key14=iprot.readString();
{
              org.apache.thrift.protocol.TList _list16=iprot.readListBegin();
              _val15=new ArrayList<PrivilegeGrantInfo>(_list16.size);
              for (int _i17=0; _i17 < _list16.size; ++_i17) {
                PrivilegeGrantInfo _elem18;
                _elem18=new PrivilegeGrantInfo();
                _elem18.read(iprot);
                _val15.add(_elem18);
              }
              iprot.readListEnd();
            }
            this.userPrivileges.put(_key14,_val15);
          }
          iprot.readMapEnd();
        }
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
      }
    break;
case 2:
  if (field.type == org.apache.thrift.protocol.TType.MAP) {
{
      org.apache.thrift.protocol.TMap _map19=iprot.readMapBegin();
      this.groupPrivileges=new HashMap<String,List<PrivilegeGrantInfo>>(2 * _map19.size);
      for (int _i20=0; _i20 < _map19.size; ++_i20) {
        String _key21;
        List<PrivilegeGrantInfo> _val22;
        _key21=iprot.readString();
{
          org.apache.thrift.protocol.TList _list23=iprot.readListBegin();
          _val22=new ArrayList<PrivilegeGrantInfo>(_list23.size);
          for (int _i24=0; _i24 < _list23.size; ++_i24) {
            PrivilegeGrantInfo _elem25;
            _elem25=new PrivilegeGrantInfo();
            _elem25.read(iprot);
            _val22.add(_elem25);
          }
          iprot.readListEnd();
        }
        this.groupPrivileges.put(_key21,_val22);
      }
      iprot.readMapEnd();
    }
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
  }
break;
case 3:
if (field.type == org.apache.thrift.protocol.TType.MAP) {
{
  org.apache.thrift.protocol.TMap _map26=iprot.readMapBegin();
  this.rolePrivileges=new HashMap<String,List<PrivilegeGrantInfo>>(2 * _map26.size);
  for (int _i27=0; _i27 < _map26.size; ++_i27) {
    String _key28;
    List<PrivilegeGrantInfo> _val29;
    _key28=iprot.readString();
{
      org.apache.thrift.protocol.TList _list30=iprot.readListBegin();
      _val29=new ArrayList<PrivilegeGrantInfo>(_list30.size);
      for (int _i31=0; _i31 < _list30.size; ++_i31) {
        PrivilegeGrantInfo _elem32;
        _elem32=new PrivilegeGrantInfo();
        _elem32.read(iprot);
        _val29.add(_elem32);
      }
      iprot.readListEnd();
    }
    this.rolePrivileges.put(_key28,_val29);
  }
  iprot.readMapEnd();
}
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
break;
default :
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
