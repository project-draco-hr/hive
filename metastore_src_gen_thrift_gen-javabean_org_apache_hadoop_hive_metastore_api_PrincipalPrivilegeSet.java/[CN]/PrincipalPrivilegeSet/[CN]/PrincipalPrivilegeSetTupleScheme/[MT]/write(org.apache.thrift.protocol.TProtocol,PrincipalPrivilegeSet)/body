{
  TTupleProtocol oprot=(TTupleProtocol)prot;
  BitSet optionals=new BitSet();
  if (struct.isSetUserPrivileges()) {
    optionals.set(0);
  }
  if (struct.isSetGroupPrivileges()) {
    optionals.set(1);
  }
  if (struct.isSetRolePrivileges()) {
    optionals.set(2);
  }
  oprot.writeBitSet(optionals,3);
  if (struct.isSetUserPrivileges()) {
{
      oprot.writeI32(struct.userPrivileges.size());
      for (      Map.Entry<String,List<PrivilegeGrantInfo>> _iter51 : struct.userPrivileges.entrySet()) {
        oprot.writeString(_iter51.getKey());
{
          oprot.writeI32(_iter51.getValue().size());
          for (          PrivilegeGrantInfo _iter52 : _iter51.getValue()) {
            _iter52.write(oprot);
          }
        }
      }
    }
  }
  if (struct.isSetGroupPrivileges()) {
{
      oprot.writeI32(struct.groupPrivileges.size());
      for (      Map.Entry<String,List<PrivilegeGrantInfo>> _iter53 : struct.groupPrivileges.entrySet()) {
        oprot.writeString(_iter53.getKey());
{
          oprot.writeI32(_iter53.getValue().size());
          for (          PrivilegeGrantInfo _iter54 : _iter53.getValue()) {
            _iter54.write(oprot);
          }
        }
      }
    }
  }
  if (struct.isSetRolePrivileges()) {
{
      oprot.writeI32(struct.rolePrivileges.size());
      for (      Map.Entry<String,List<PrivilegeGrantInfo>> _iter55 : struct.rolePrivileges.entrySet()) {
        oprot.writeString(_iter55.getKey());
{
          oprot.writeI32(_iter55.getValue().size());
          for (          PrivilegeGrantInfo _iter56 : _iter55.getValue()) {
            _iter56.write(oprot);
          }
        }
      }
    }
  }
}
