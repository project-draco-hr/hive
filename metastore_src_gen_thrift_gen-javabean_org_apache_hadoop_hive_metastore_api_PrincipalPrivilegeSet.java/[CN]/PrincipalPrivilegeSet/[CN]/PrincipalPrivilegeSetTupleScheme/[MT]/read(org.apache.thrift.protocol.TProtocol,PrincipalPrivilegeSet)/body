{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(3);
  if (incoming.get(0)) {
{
      org.apache.thrift.protocol.TMap _map57=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.LIST,iprot.readI32());
      struct.userPrivileges=new HashMap<String,List<PrivilegeGrantInfo>>(2 * _map57.size);
      for (int _i58=0; _i58 < _map57.size; ++_i58) {
        String _key59;
        List<PrivilegeGrantInfo> _val60;
        _key59=iprot.readString();
{
          org.apache.thrift.protocol.TList _list61=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
          _val60=new ArrayList<PrivilegeGrantInfo>(_list61.size);
          for (int _i62=0; _i62 < _list61.size; ++_i62) {
            PrivilegeGrantInfo _elem63;
            _elem63=new PrivilegeGrantInfo();
            _elem63.read(iprot);
            _val60.add(_elem63);
          }
        }
        struct.userPrivileges.put(_key59,_val60);
      }
    }
    struct.setUserPrivilegesIsSet(true);
  }
  if (incoming.get(1)) {
{
      org.apache.thrift.protocol.TMap _map64=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.LIST,iprot.readI32());
      struct.groupPrivileges=new HashMap<String,List<PrivilegeGrantInfo>>(2 * _map64.size);
      for (int _i65=0; _i65 < _map64.size; ++_i65) {
        String _key66;
        List<PrivilegeGrantInfo> _val67;
        _key66=iprot.readString();
{
          org.apache.thrift.protocol.TList _list68=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
          _val67=new ArrayList<PrivilegeGrantInfo>(_list68.size);
          for (int _i69=0; _i69 < _list68.size; ++_i69) {
            PrivilegeGrantInfo _elem70;
            _elem70=new PrivilegeGrantInfo();
            _elem70.read(iprot);
            _val67.add(_elem70);
          }
        }
        struct.groupPrivileges.put(_key66,_val67);
      }
    }
    struct.setGroupPrivilegesIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TMap _map71=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.LIST,iprot.readI32());
      struct.rolePrivileges=new HashMap<String,List<PrivilegeGrantInfo>>(2 * _map71.size);
      for (int _i72=0; _i72 < _map71.size; ++_i72) {
        String _key73;
        List<PrivilegeGrantInfo> _val74;
        _key73=iprot.readString();
{
          org.apache.thrift.protocol.TList _list75=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
          _val74=new ArrayList<PrivilegeGrantInfo>(_list75.size);
          for (int _i76=0; _i76 < _list75.size; ++_i76) {
            PrivilegeGrantInfo _elem77;
            _elem77=new PrivilegeGrantInfo();
            _elem77.read(iprot);
            _val74.add(_elem77);
          }
        }
        struct.rolePrivileges.put(_key73,_val74);
      }
    }
    struct.setRolePrivilegesIsSet(true);
  }
}
