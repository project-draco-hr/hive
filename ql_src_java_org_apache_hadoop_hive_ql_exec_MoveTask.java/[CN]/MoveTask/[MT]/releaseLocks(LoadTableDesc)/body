{
  if (!conf.getBoolVar(HiveConf.ConfVars.HIVE_SUPPORT_CONCURRENCY)) {
    return;
  }
  Context ctx=driverContext.getCtx();
  HiveLockManager lockMgr=ctx.getHiveTxnManager().getLockManager();
  WriteEntity output=ctx.getLoadTableOutputMap().get(ltd);
  List<HiveLockObj> lockObjects=ctx.getOutputLockObjects().get(output);
  if (lockObjects == null) {
    return;
  }
  for (  HiveLockObj lockObj : lockObjects) {
    List<HiveLock> locks=lockMgr.getLocks(lockObj.getObj(),false,true);
    for (    HiveLock lock : locks) {
      if (lock.getHiveLockMode() == lockObj.getMode()) {
        if (ctx.getHiveLocks().remove(lock)) {
          LOG.info("about to release lock for output: " + output.toString() + " lock: "+ lock.getHiveLockObject().getName());
          try {
            lockMgr.unlock(lock);
          }
 catch (          LockException le) {
            LOG.warn("Could not release lock " + lock.getHiveLockObject().getName());
          }
        }
      }
    }
  }
}
