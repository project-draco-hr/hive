{
  List<StreamBuffer> dataToDiscard=new ArrayList<StreamBuffer>(pendingData.size() * colCount);
  List<EncodedColumnBatch> batches=new ArrayList<EncodedColumnBatch>(pendingData.size());
synchronized (pendingData) {
    if (isStopped) {
      this.isStopped=true;
    }
    batches.addAll(pendingData.values());
    pendingData.clear();
  }
  for (  EncodedColumnBatch batch : batches) {
synchronized (batch) {
      for (      StreamBuffer[] bb : batch.columnDatas) {
        for (        StreamBuffer b : bb) {
          dataToDiscard.add(b);
        }
      }
      batch.columnDatas=null;
    }
  }
  for (  StreamBuffer data : dataToDiscard) {
    if (data.decRef() == 0) {
      upstreamFeedback.returnData(data);
    }
  }
}
