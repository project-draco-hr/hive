{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  AddDynamicPartitions typedOther=(AddDynamicPartitions)other;
  lastComparison=Boolean.valueOf(isSetTxnid()).compareTo(typedOther.isSetTxnid());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTxnid()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.txnid,typedOther.txnid);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetDbname()).compareTo(typedOther.isSetDbname());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetDbname()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.dbname,typedOther.dbname);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetTablename()).compareTo(typedOther.isSetTablename());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetTablename()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.tablename,typedOther.tablename);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetPartitionnames()).compareTo(typedOther.isSetPartitionnames());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetPartitionnames()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.partitionnames,typedOther.partitionnames);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
