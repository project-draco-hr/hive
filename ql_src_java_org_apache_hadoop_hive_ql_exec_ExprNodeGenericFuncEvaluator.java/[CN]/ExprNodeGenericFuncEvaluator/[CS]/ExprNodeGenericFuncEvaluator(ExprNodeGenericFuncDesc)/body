{
  super(expr);
  children=new ExprNodeEvaluator[expr.getChildExprs().size()];
  isEager=false;
  for (int i=0; i < children.length; i++) {
    ExprNodeDesc child=expr.getChildExprs().get(i);
    ExprNodeEvaluator nodeEvaluator=ExprNodeEvaluatorFactory.get(child);
    children[i]=nodeEvaluator;
    if (nodeEvaluator instanceof ExprNodeGenericFuncEvaluator) {
      if (((ExprNodeGenericFuncEvaluator)nodeEvaluator).isEager) {
        isEager=true;
      }
      GenericUDF childUDF=((ExprNodeGenericFuncDesc)child).getGenericUDF();
      if (FunctionRegistry.isStateful(childUDF)) {
        isEager=true;
      }
    }
  }
  genericUDF=expr.getGenericUDF();
  if (isEager && (genericUDF instanceof GenericUDFCase || genericUDF instanceof GenericUDFWhen)) {
    throw new HiveException("Stateful expressions cannot be used inside of CASE");
  }
}
