{
  deferredChildren=new GenericUDF.DeferredObject[children.length];
  List<GenericUDF.DeferredObject> childrenNeedingPrepare=new ArrayList<GenericUDF.DeferredObject>(children.length);
  for (int i=0; i < deferredChildren.length; i++) {
    DeferredExprObject deferredExprObject=new DeferredExprObject(children[i],isEager);
    deferredChildren[i]=deferredExprObject;
    if (deferredExprObject.needsPrepare()) {
      childrenNeedingPrepare.add(deferredExprObject);
    }
  }
  this.childrenNeedingPrepare=childrenNeedingPrepare.toArray(new GenericUDF.DeferredObject[childrenNeedingPrepare.size()]);
  ObjectInspector[] childrenOIs=new ObjectInspector[children.length];
  for (int i=0; i < children.length; i++) {
    childrenOIs[i]=children[i].initialize(rowInspector);
  }
  MapredContext context=MapredContext.get();
  if (context != null) {
    context.setup(genericUDF);
  }
  outputOI=genericUDF.initializeAndFoldConstants(childrenOIs);
  isConstant=ObjectInspectorUtils.isConstantObjectInspector(outputOI) && isDeterministic();
  return outputOI;
}
