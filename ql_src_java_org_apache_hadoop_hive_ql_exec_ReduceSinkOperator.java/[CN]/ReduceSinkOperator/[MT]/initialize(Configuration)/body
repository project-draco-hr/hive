{
  super.initialize(hconf);
  try {
    keyEval=new ExprNodeEvaluator[conf.getKeyCols().size()];
    int i=0;
    for (    exprNodeDesc e : conf.getKeyCols()) {
      keyEval[i++]=ExprNodeEvaluatorFactory.get(e);
    }
    valueEval=new ExprNodeEvaluator[conf.getValueCols().size()];
    i=0;
    for (    exprNodeDesc e : conf.getValueCols()) {
      valueEval[i++]=ExprNodeEvaluatorFactory.get(e);
    }
    tag=conf.getTag();
    tagByte[0]=(byte)tag;
    LOG.info("Using tag = " + tag);
    tableDesc keyTableDesc=conf.getKeySerializeInfo();
    keySerializer=(Serializer)keyTableDesc.getDeserializerClass().newInstance();
    keySerializer.initialize(null,keyTableDesc.getProperties());
    tableDesc valueTableDesc=conf.getValueSerializeInfo();
    valueSerializer=(Serializer)valueTableDesc.getDeserializerClass().newInstance();
    valueSerializer.initialize(null,valueTableDesc.getProperties());
    numPartitionFields=conf.getNumPartitionFields();
  }
 catch (  Exception e) {
    e.printStackTrace();
    throw new RuntimeException(e);
  }
}
