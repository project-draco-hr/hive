{
  task.setOperatorGraph(new org.apache.hadoop.hive.ql.plan.api.Graph());
  task.getOperatorGraph().setNodeType(NodeType.OPERATOR);
  Queue<Operator<? extends OperatorDesc>> opsToVisit=new LinkedList<Operator<? extends OperatorDesc>>();
  Set<Operator<? extends OperatorDesc>> opsVisited=new HashSet<Operator<? extends OperatorDesc>>();
  opsToVisit.addAll(topOps);
  while (opsToVisit.peek() != null) {
    Operator<? extends OperatorDesc> op=opsToVisit.remove();
    opsVisited.add(op);
    org.apache.hadoop.hive.ql.plan.api.Operator operator=new org.apache.hadoop.hive.ql.plan.api.Operator();
    operator.setOperatorId(op.getOperatorId());
    operator.setOperatorType(op.getType());
    task.addToOperatorList(operator);
    if (op.getChildOperators() != null) {
      org.apache.hadoop.hive.ql.plan.api.Adjacency entry=new org.apache.hadoop.hive.ql.plan.api.Adjacency();
      entry.setAdjacencyType(AdjacencyType.CONJUNCTIVE);
      entry.setNode(op.getOperatorId());
      for (      Operator<? extends OperatorDesc> childOp : op.getChildOperators()) {
        entry.addToChildren(childOp.getOperatorId());
        if (!opsVisited.contains(childOp)) {
          opsToVisit.add(childOp);
        }
      }
      task.getOperatorGraph().addToAdjacencyList(entry);
    }
  }
}
