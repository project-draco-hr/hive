{
  AccumuloConnectionParameters accumuloParams=new AccumuloConnectionParameters(conf);
  ColumnMapper columnMapper=new ColumnMapper(conf.get(AccumuloSerDeParameters.COLUMN_MAPPINGS),conf.get(AccumuloSerDeParameters.DEFAULT_STORAGE_TYPE),columnNames,columnTypes);
  Set<Pair<Text,Text>> cfCqPairs=inputformat.getPairCollection(columnMapper.getColumnMappings());
  List<IteratorSetting> iterators=Collections.emptyList();
  Set<Range> ranges=Collections.singleton(new Range());
  HiveAccumuloTableInputFormat mockInputFormat=Mockito.mock(HiveAccumuloTableInputFormat.class);
  Mockito.doCallRealMethod().when(mockInputFormat).configure(conf,mockInstance,con,accumuloParams,columnMapper,iterators,ranges);
  Mockito.doCallRealMethod().when(mockInputFormat).getPairCollection(columnMapper.getColumnMappings());
  mockInputFormat.configure(conf,mockInstance,con,accumuloParams,columnMapper,iterators,ranges);
  Mockito.verify(mockInputFormat).setMockInstance(conf,mockInstance.getInstanceName());
  Mockito.verify(mockInputFormat).setConnectorInfo(conf,USER,new PasswordToken(PASS));
  Mockito.verify(mockInputFormat).setInputTableName(conf,TEST_TABLE);
  Mockito.verify(mockInputFormat).setScanAuthorizations(conf,con.securityOperations().getUserAuthorizations(USER));
  Mockito.verify(mockInputFormat).addIterators(conf,iterators);
  Mockito.verify(mockInputFormat).setRanges(conf,ranges);
  Mockito.verify(mockInputFormat).fetchColumns(conf,cfCqPairs);
}
