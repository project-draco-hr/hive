{
  FileInputFormat.addInputPath(conf,new Path("unused"));
  InputSplit[] splits=inputformat.getSplits(conf,0);
  assertEquals(splits.length,1);
  RecordReader<Text,AccumuloHiveRow> reader=inputformat.getRecordReader(splits[0],conf,null);
  Text rowId=new Text("r1");
  AccumuloHiveRow row=new AccumuloHiveRow();
  assertTrue(reader.next(rowId,row));
  assertEquals(row.getRowId(),rowId.toString());
  assertTrue(row.hasFamAndQual(COLUMN_FAMILY,NAME));
  assertArrayEquals(row.getValue(COLUMN_FAMILY,NAME),"brian".getBytes());
  rowId=new Text("r2");
  assertTrue(reader.next(rowId,row));
  assertEquals(row.getRowId(),rowId.toString());
  assertTrue(row.hasFamAndQual(COLUMN_FAMILY,NAME));
  assertArrayEquals(row.getValue(COLUMN_FAMILY,NAME),"mark".getBytes());
  rowId=new Text("r3");
  assertTrue(reader.next(rowId,row));
  assertEquals(row.getRowId(),rowId.toString());
  assertTrue(row.hasFamAndQual(COLUMN_FAMILY,NAME));
  assertArrayEquals(row.getValue(COLUMN_FAMILY,NAME),"dennis".getBytes());
  assertFalse(reader.next(rowId,row));
}
