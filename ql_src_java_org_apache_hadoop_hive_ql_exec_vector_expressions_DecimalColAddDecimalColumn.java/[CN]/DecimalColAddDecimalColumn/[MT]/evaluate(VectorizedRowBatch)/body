{
  if (childExpressions != null) {
    super.evaluateChildren(batch);
  }
  DecimalColumnVector inputColVector1=(DecimalColumnVector)batch.cols[colNum1];
  DecimalColumnVector inputColVector2=(DecimalColumnVector)batch.cols[colNum2];
  DecimalColumnVector outputColVector=(DecimalColumnVector)batch.cols[outputColumn];
  int[] sel=batch.selected;
  int n=batch.size;
  Decimal128[] vector1=inputColVector1.vector;
  Decimal128[] vector2=inputColVector2.vector;
  Decimal128[] outputVector=outputColVector.vector;
  if (n == 0) {
    return;
  }
  outputColVector.isRepeating=inputColVector1.isRepeating && inputColVector2.isRepeating || inputColVector1.isRepeating && !inputColVector1.noNulls && inputColVector1.isNull[0] || inputColVector2.isRepeating && !inputColVector2.noNulls && inputColVector2.isNull[0];
  NullUtil.propagateNullsColCol(inputColVector1,inputColVector2,outputColVector,sel,n,batch.selectedInUse);
  if (inputColVector1.isRepeating && inputColVector2.isRepeating) {
    addChecked(0,vector1[0],vector2[0],outputColVector);
  }
 else   if (inputColVector1.isRepeating) {
    if (batch.selectedInUse) {
      for (int j=0; j != n; j++) {
        int i=sel[j];
        addChecked(i,vector1[0],vector2[i],outputColVector);
      }
    }
 else {
      for (int i=0; i != n; i++) {
        addChecked(i,vector1[0],vector2[i],outputColVector);
      }
    }
  }
 else   if (inputColVector2.isRepeating) {
    if (batch.selectedInUse) {
      for (int j=0; j != n; j++) {
        int i=sel[j];
        addChecked(i,vector1[i],vector2[0],outputColVector);
      }
    }
 else {
      for (int i=0; i != n; i++) {
        addChecked(i,vector1[i],vector2[0],outputColVector);
      }
    }
  }
 else {
    if (batch.selectedInUse) {
      for (int j=0; j != n; j++) {
        int i=sel[j];
        addChecked(i,vector1[i],vector2[i],outputColVector);
      }
    }
 else {
      for (int i=0; i != n; i++) {
        addChecked(i,vector1[i],vector2[i],outputColVector);
      }
    }
  }
  NullUtil.setNullDataEntriesDecimal(outputColVector,batch.selectedInUse,sel,n);
}
