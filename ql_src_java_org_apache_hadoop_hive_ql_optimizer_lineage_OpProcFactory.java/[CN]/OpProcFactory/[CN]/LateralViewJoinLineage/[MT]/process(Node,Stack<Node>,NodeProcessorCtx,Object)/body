{
  assert(!stack.isEmpty());
  LineageCtx lCtx=(LineageCtx)procCtx;
  LateralViewJoinOperator op=(LateralViewJoinOperator)nd;
  boolean isUdtfPath=true;
  Operator<? extends OperatorDesc> inpOp=getParent(stack);
  ArrayList<ColumnInfo> cols=inpOp.getSchema().getSignature();
  lCtx.getIndex().copyPredicates(inpOp,op);
  if (inpOp instanceof SelectOperator) {
    isUdtfPath=false;
  }
  ArrayList<ColumnInfo> out_cols=op.getSchema().getSignature();
  int out_cols_size=out_cols.size();
  int cols_size=cols.size();
  int outColOffset=isUdtfPath ? out_cols_size - cols_size : 0;
  for (int cnt=0; cnt < cols_size; cnt++) {
    ColumnInfo outCol=out_cols.get(outColOffset + cnt);
    if (!outCol.isHiddenVirtualCol()) {
      ColumnInfo col=cols.get(cnt);
      lCtx.getIndex().mergeDependency(op,outCol,lCtx.getIndex().getDependency(inpOp,col));
    }
  }
  return null;
}
