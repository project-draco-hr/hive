{
  assert(!stack.isEmpty());
  LineageCtx lCtx=(LineageCtx)procCtx;
  LateralViewJoinOperator op=(LateralViewJoinOperator)nd;
  boolean isUdtfPath=true;
  Operator<? extends OperatorDesc> inpOp=getParent(stack);
  ArrayList<ColumnInfo> cols=inpOp.getSchema().getSignature();
  if (inpOp instanceof SelectOperator) {
    isUdtfPath=false;
  }
  ArrayList<ColumnInfo> out_cols=op.getSchema().getSignature();
  int out_cols_size=out_cols.size();
  int cols_size=cols.size();
  if (isUdtfPath) {
    int cnt=0;
    while (cnt < cols_size) {
      lCtx.getIndex().mergeDependency(op,out_cols.get(cnt),lCtx.getIndex().getDependency(inpOp,cols.get(cnt)));
      cnt++;
    }
  }
 else {
    int cnt=cols_size - 1;
    while (cnt >= 0) {
      lCtx.getIndex().mergeDependency(op,out_cols.get(out_cols_size - cols_size + cnt),lCtx.getIndex().getDependency(inpOp,cols.get(cnt)));
      cnt--;
    }
  }
  return null;
}
