{
  assert(!stack.isEmpty());
  LineageCtx lCtx=(LineageCtx)procCtx;
  JoinOperator op=(JoinOperator)nd;
  JoinDesc jd=op.getConf();
  ReduceSinkOperator inpOp=(ReduceSinkOperator)getParent(stack);
  ReduceSinkDesc rd=inpOp.getConf();
  int tag=rd.getTag();
  int cnt=0;
  List<ExprNodeDesc> exprs=jd.getExprs().get((byte)tag);
  for (  ColumnInfo ci : op.getSchema().getSignature()) {
    if (jd.getReversedExprs().get(ci.getInternalName()) != tag) {
      continue;
    }
    ExprNodeDesc expr=exprs.get(cnt++);
    Dependency dependency=ExprProcFactory.getExprDependency(lCtx,inpOp,expr);
    lCtx.getIndex().mergeDependency(op,ci,dependency);
  }
  return null;
}
