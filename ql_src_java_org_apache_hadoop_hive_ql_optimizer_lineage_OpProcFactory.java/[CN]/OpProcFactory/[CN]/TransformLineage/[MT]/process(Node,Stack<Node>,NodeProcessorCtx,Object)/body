{
  LineageCtx lCtx=(LineageCtx)procCtx;
  Operator<? extends Serializable> op=(Operator<? extends Serializable>)nd;
  Operator<? extends Serializable> inpOp=getParent(stack);
  Dependency dep=new Dependency();
  DependencyType new_type=LineageInfo.DependencyType.SCRIPT;
  dep.setType(LineageInfo.DependencyType.SCRIPT);
  dep.setExpr(null);
  LinkedHashSet<BaseColumnInfo> col_set=new LinkedHashSet<BaseColumnInfo>();
  for (  ColumnInfo ci : inpOp.getSchema().getSignature()) {
    Dependency d=lCtx.getIndex().getDependency(inpOp,ci);
    if (d != null) {
      new_type=LineageCtx.getNewDependencyType(d.getType(),new_type);
      col_set.addAll(d.getBaseCols());
    }
  }
  dep.setType(new_type);
  dep.setBaseCols(new ArrayList<BaseColumnInfo>(col_set));
  for (  ColumnInfo ci : op.getSchema().getSignature()) {
    lCtx.getIndex().putDependency(op,ci,dep);
  }
  return null;
}
