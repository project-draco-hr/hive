{
  assert(!stack.isEmpty());
  LineageCtx lCtx=(LineageCtx)procCtx;
  ReduceSinkOperator rop=(ReduceSinkOperator)nd;
  ArrayList<ColumnInfo> col_infos=rop.getSchema().getSignature();
  Operator<? extends OperatorDesc> inpOp=getParent(stack);
  int cnt=0;
  Operator<? extends OperatorDesc> op=rop.getChildOperators().get(0);
  while (op instanceof ForwardOperator) {
    op=op.getChildOperators().get(0);
  }
  if (op instanceof GroupByOperator) {
    for (    ExprNodeDesc expr : rop.getConf().getKeyCols()) {
      lCtx.getIndex().putDependency(rop,col_infos.get(cnt++),ExprProcFactory.getExprDependency(lCtx,inpOp,expr));
    }
  }
  for (  ExprNodeDesc expr : rop.getConf().getValueCols()) {
    lCtx.getIndex().putDependency(rop,col_infos.get(cnt++),ExprProcFactory.getExprDependency(lCtx,inpOp,expr));
  }
  return null;
}
