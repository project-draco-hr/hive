{
switch (cboCtx.type) {
case NONE:
    return newAst;
case CTAS:
{
    replaceASTChild(cboCtx.nodeOfInterest,newAst);
    return originalAst;
  }
case INSERT:
{
  ASTNode newDest=new ASTSearcher().simpleBreadthFirstSearch(newAst,HiveParser.TOK_QUERY,HiveParser.TOK_INSERT,HiveParser.TOK_DESTINATION);
  if (newDest == null) {
    LOG.error("Cannot find destination after CBO; new ast is " + newAst.dump());
    throw new SemanticException("Cannot find destination after CBO");
  }
  replaceASTChild(newDest,cboCtx.nodeOfInterest);
  return newAst;
}
default :
throw new AssertionError("Unexpected type " + cboCtx.type);
}
}
