{
  RelNode optimizedOptiqPlan=null;
  CalcitePlannerAction calcitePlannerAction=new CalcitePlannerAction(prunedPartitions);
  try {
    optimizedOptiqPlan=Frameworks.withPlanner(calcitePlannerAction,Frameworks.newConfigBuilder().typeSystem(new HiveTypeSystemImpl()).build());
  }
 catch (  Exception e) {
    rethrowCalciteException(e);
    throw new AssertionError("rethrowCalciteException didn't throw for " + e.getMessage());
  }
  RelNode modifiedOptimizedOptiqPlan=introduceProjectIfNeeded(optimizedOptiqPlan);
  Operator<?> hiveRoot=new HiveOpConverter(this,conf,unparseTranslator,topOps,HiveOpConverter.getAggOPMode(conf),conf.getVar(HiveConf.ConfVars.HIVEMAPREDMODE).equalsIgnoreCase("strict")).convert(modifiedOptimizedOptiqPlan);
  RowResolver hiveRootRR=genRowResolver(hiveRoot,getQB());
  opParseCtx.put(hiveRoot,new OpParseContext(hiveRootRR));
  return genFileSinkPlan(getQB().getParseInfo().getClauseNames().iterator().next(),getQB(),hiveRoot);
}
