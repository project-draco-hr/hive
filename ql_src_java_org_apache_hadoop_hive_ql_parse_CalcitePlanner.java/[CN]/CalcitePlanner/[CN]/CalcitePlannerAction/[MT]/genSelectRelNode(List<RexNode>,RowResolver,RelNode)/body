{
  Set<String> colNamesSet=new HashSet<String>();
  List<ColumnInfo> cInfoLst=out_rwsch.getRowSchema().getSignature();
  ArrayList<String> columnNames=new ArrayList<String>();
  String[] qualifiedColNames;
  String tmpColAlias;
  for (int i=0; i < calciteColLst.size(); i++) {
    ColumnInfo cInfo=cInfoLst.get(i);
    qualifiedColNames=out_rwsch.reverseLookup(cInfo.getInternalName());
    tmpColAlias=qualifiedColNames[1];
    if (tmpColAlias.startsWith("_c"))     tmpColAlias="_o_" + tmpColAlias;
    int suffix=1;
    while (colNamesSet.contains(tmpColAlias)) {
      tmpColAlias=qualifiedColNames[1] + suffix;
      suffix++;
    }
    colNamesSet.add(tmpColAlias);
    columnNames.add(tmpColAlias);
  }
  HiveRelNode selRel=HiveProject.create(srcRel,calciteColLst,columnNames);
  this.relToHiveColNameCalcitePosMap.put(selRel,buildHiveToCalciteColumnMap(out_rwsch,selRel));
  this.relToHiveRR.put(selRel,out_rwsch);
  return selRel;
}
