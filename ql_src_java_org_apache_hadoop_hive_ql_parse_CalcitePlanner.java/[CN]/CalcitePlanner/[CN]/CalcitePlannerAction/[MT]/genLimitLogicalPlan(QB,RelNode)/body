{
  HiveRelNode sortRel=null;
  QBParseInfo qbp=getQBParseInfo(qb);
  Integer limit=qbp.getDestToLimit().get(qbp.getClauseNames().iterator().next());
  if (limit != null) {
    RexNode fetch=cluster.getRexBuilder().makeExactLiteral(BigDecimal.valueOf(limit));
    RelTraitSet traitSet=cluster.traitSetOf(HiveRelNode.CONVENTION);
    RelCollation canonizedCollation=traitSet.canonize(RelCollations.EMPTY);
    sortRel=new HiveSort(cluster,traitSet,srcRel,canonizedCollation,null,fetch);
    RowResolver outputRR=new RowResolver();
    if (!RowResolver.add(outputRR,relToHiveRR.get(srcRel))) {
      throw new CalciteSemanticException("Duplicates detected when adding columns to RR: see previous message",UnsupportedFeature.Duplicates_in_RR);
    }
    ImmutableMap<String,Integer> hiveColNameCalcitePosMap=buildHiveToCalciteColumnMap(outputRR,sortRel);
    relToHiveRR.put(sortRel,outputRR);
    relToHiveColNameCalcitePosMap.put(sortRel,hiveColNameCalcitePosMap);
  }
  return sortRel;
}
