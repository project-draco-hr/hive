{
  TField field;
  iprot.readStructBegin();
  while (true) {
    field=iprot.readFieldBegin();
    if (field.type == TType.STOP) {
      break;
    }
switch (field.id) {
case STAGEID:
      if (field.type == TType.STRING) {
        this.stageId=iprot.readString();
      }
 else {
        TProtocolUtil.skip(iprot,field.type);
      }
    break;
case STAGETYPE:
  if (field.type == TType.I32) {
    this.stageType=iprot.readI32();
    this.__isset.stageType=true;
  }
 else {
    TProtocolUtil.skip(iprot,field.type);
  }
break;
case STAGEATTRIBUTES:
if (field.type == TType.MAP) {
{
  TMap _map36=iprot.readMapBegin();
  this.stageAttributes=new HashMap<String,String>(2 * _map36.size);
  for (int _i37=0; _i37 < _map36.size; ++_i37) {
    String _key38;
    String _val39;
    _key38=iprot.readString();
    _val39=iprot.readString();
    this.stageAttributes.put(_key38,_val39);
  }
  iprot.readMapEnd();
}
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
case STAGECOUNTERS:
if (field.type == TType.MAP) {
{
TMap _map40=iprot.readMapBegin();
this.stageCounters=new HashMap<String,Long>(2 * _map40.size);
for (int _i41=0; _i41 < _map40.size; ++_i41) {
String _key42;
long _val43;
_key42=iprot.readString();
_val43=iprot.readI64();
this.stageCounters.put(_key42,_val43);
}
iprot.readMapEnd();
}
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
case TASKLIST:
if (field.type == TType.LIST) {
{
TList _list44=iprot.readListBegin();
this.taskList=new ArrayList<Task>(_list44.size);
for (int _i45=0; _i45 < _list44.size; ++_i45) {
Task _elem46;
_elem46=new Task();
_elem46.read(iprot);
this.taskList.add(_elem46);
}
iprot.readListEnd();
}
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
case DONE:
if (field.type == TType.BOOL) {
this.done=iprot.readBool();
this.__isset.done=true;
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
case STARTED:
if (field.type == TType.BOOL) {
this.started=iprot.readBool();
this.__isset.started=true;
}
 else {
TProtocolUtil.skip(iprot,field.type);
}
break;
default :
TProtocolUtil.skip(iprot,field.type);
break;
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
validate();
}
