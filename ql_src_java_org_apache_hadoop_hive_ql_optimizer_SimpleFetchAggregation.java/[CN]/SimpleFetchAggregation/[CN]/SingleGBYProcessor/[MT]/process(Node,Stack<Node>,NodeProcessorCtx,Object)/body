{
  FileSinkOperator FS=(FileSinkOperator)nd;
  int shift=stack.get(stack.size() - 2) instanceof SelectOperator ? 0 : 1;
  GroupByOperator cGBY=(GroupByOperator)stack.get(stack.size() - 3 + shift);
  ReduceSinkOperator RS=(ReduceSinkOperator)stack.get(stack.size() - 4 + shift);
  if (RS.getConf().getNumReducers() != 1 || !RS.getConf().getKeyCols().isEmpty()) {
    return null;
  }
  GroupByOperator pGBY=(GroupByOperator)stack.get(stack.size() - 5 + shift);
  Path fileName=FS.getConf().getFinalDirName();
  TableDesc tsDesc=createIntermediateFS(pGBY,fileName);
  for (  AggregationDesc aggregation : cGBY.getConf().getAggregators()) {
    List<ExprNodeDesc> parameters=aggregation.getParameters();
    aggregation.setParameters(ExprNodeDescUtils.backtrack(parameters,cGBY,RS));
  }
  pctx.setFetchTabledesc(tsDesc);
  pctx.setFetchSource(cGBY);
  pctx.setFetchSink(SimpleFetchOptimizer.replaceFSwithLS(FS,"NULL"));
  RS.setParentOperators(null);
  RS.setChildOperators(null);
  cGBY.setParentOperators(null);
  return null;
}
