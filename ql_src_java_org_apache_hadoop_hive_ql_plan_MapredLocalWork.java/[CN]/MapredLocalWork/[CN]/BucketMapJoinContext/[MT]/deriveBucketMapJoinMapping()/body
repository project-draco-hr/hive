{
  if (aliasBucketFileNameMapping != null) {
    Iterator<Entry<String,LinkedHashMap<String,ArrayList<String>>>> iter=aliasBucketFileNameMapping.entrySet().iterator();
    aliasBucketBaseFileNameMapping=new LinkedHashMap<String,LinkedHashMap<String,ArrayList<String>>>();
    while (iter.hasNext()) {
      Entry<String,LinkedHashMap<String,ArrayList<String>>> old=iter.next();
      LinkedHashMap<String,ArrayList<String>> newBucketBaseFileNameMapping=new LinkedHashMap<String,ArrayList<String>>();
      Iterator<Entry<String,ArrayList<String>>> oldAliasFileNameMappingIter=old.getValue().entrySet().iterator();
      while (oldAliasFileNameMappingIter.hasNext()) {
        Entry<String,ArrayList<String>> oldTableBucketFileNames=oldAliasFileNameMappingIter.next();
        ArrayList<String> oldTableBucketNames=oldTableBucketFileNames.getValue();
        ArrayList<String> newTableBucketFileBaseName=new ArrayList<String>(oldTableBucketNames.size());
        if (oldTableBucketNames != null) {
          for (          String bucketFName : oldTableBucketNames) {
            newTableBucketFileBaseName.add(getBaseFileName(bucketFName));
          }
        }
        String bigTblBucketFileName=getBaseFileName(oldTableBucketFileNames.getKey());
        if (newBucketBaseFileNameMapping.containsKey(bigTblBucketFileName)) {
          String fullPath=oldTableBucketFileNames.getKey();
          String dir=getBaseFileName(fullPath.substring(0,fullPath.lastIndexOf(bigTblBucketFileName)));
          bigTblBucketFileName=dir + File.separator + bigTblBucketFileName;
        }
        newBucketBaseFileNameMapping.put(bigTblBucketFileName,newTableBucketFileBaseName);
      }
      String tableAlias=old.getKey();
      aliasBucketBaseFileNameMapping.put(tableAlias,newBucketBaseFileNameMapping);
    }
  }
}
