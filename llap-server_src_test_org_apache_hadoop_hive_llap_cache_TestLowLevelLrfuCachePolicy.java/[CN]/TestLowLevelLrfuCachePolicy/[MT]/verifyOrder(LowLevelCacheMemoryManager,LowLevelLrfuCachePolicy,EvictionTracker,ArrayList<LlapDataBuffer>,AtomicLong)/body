{
  LlapDataBuffer block;
  et.evicted.clear();
  for (int i=0; i < inserted.size(); ++i) {
    assertTrue(mm.reserveMemory(1,false));
    if (cacheUsed != null) {
      assertEquals(inserted.size(),cacheUsed.get());
    }
  }
  assertFalse(mm.reserveMemory(1,false));
  if (cacheUsed != null) {
    assertEquals(inserted.size(),cacheUsed.get());
  }
  for (int i=0; i < inserted.size(); ++i) {
    block=et.evicted.get(i);
    assertTrue(block.isInvalid());
    assertSame(inserted.get(i),block);
  }
  if (cacheUsed != null) {
    mm.releaseMemory(inserted.size());
    assertEquals(0,cacheUsed.get());
  }
}
