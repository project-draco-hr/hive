{
  ConditionalResolverCommonJoin resolver=new ConditionalResolverCommonJoin();
  HashMap<String,ArrayList<String>> pathToAliases=new HashMap<String,ArrayList<String>>();
  pathToAliases.put("path1",new ArrayList<String>(Arrays.asList("alias1","alias2")));
  pathToAliases.put("path2",new ArrayList<String>(Arrays.asList("alias3")));
  HashMap<String,Long> aliasToKnownSize=new HashMap<String,Long>();
  aliasToKnownSize.put("alias1",1024l);
  aliasToKnownSize.put("alias2",2048l);
  aliasToKnownSize.put("alias3",4096l);
  DDLTask task1=new DDLTask();
  task1.setId("alias2");
  DDLTask task2=new DDLTask();
  task2.setId("alias3");
  HashMap<Task<? extends Serializable>,Set<String>> taskToAliases=new LinkedHashMap<Task<? extends Serializable>,Set<String>>();
  taskToAliases.put(task1,new HashSet<String>(Arrays.asList("alias2")));
  taskToAliases.put(task2,new HashSet<String>(Arrays.asList("alias3")));
  ConditionalResolverCommonJoin.ConditionalResolverCommonJoinCtx ctx=new ConditionalResolverCommonJoin.ConditionalResolverCommonJoinCtx();
  ctx.setPathToAliases(pathToAliases);
  ctx.setTaskToAliases(taskToAliases);
  ctx.setAliasToKnownSize(aliasToKnownSize);
  HiveConf conf=new HiveConf();
  conf.setLongVar(HiveConf.ConfVars.HIVESMALLTABLESFILESIZE,4096);
  Task resolved=resolver.resolveMapJoinTask(ctx,conf);
  Assert.assertEquals("alias3",resolved.getId());
  conf.setLongVar(HiveConf.ConfVars.HIVESMALLTABLESFILESIZE,65536);
  resolved=resolver.resolveMapJoinTask(ctx,conf);
  Assert.assertEquals("alias3",resolved.getId());
  conf.setLongVar(HiveConf.ConfVars.HIVESMALLTABLESFILESIZE,2048);
  resolved=resolver.resolveMapJoinTask(ctx,conf);
  Assert.assertNull(resolved);
}
