{
  if (arguments.length < 1) {
    throw new UDFArgumentLengthException("The function CAST as DATE requires at least one argument, got " + arguments.length);
  }
  try {
    argumentOI=(PrimitiveObjectInspector)arguments[0];
switch (argumentOI.getPrimitiveCategory()) {
case DATE:
case STRING:
case TIMESTAMP:
      break;
default :
    throw new UDFArgumentException("CAST as DATE only allows date,string, or timestamp types");
}
}
 catch (ClassCastException e) {
throw new UDFArgumentException("The function CAST as DATE takes only primitive types");
}
dc=new DateConverter(argumentOI,PrimitiveObjectInspectorFactory.writableDateObjectInspector);
return PrimitiveObjectInspectorFactory.writableDateObjectInspector;
}
