{
  int sumLeastSigZero=0;
  int sumMostSigOne=0;
  double avgLeastSigZero;
  double avgMostSigOne;
  double numDistinctValues;
  for (int i=0; i < numBitVectors; i++) {
    int leastSigZero=bitVector[i].nextClearBit(0);
    sumLeastSigZero+=leastSigZero;
    int mostSigOne=bitVectorSize;
    for (int j=0; j < bitVectorSize; j++) {
      if (bitVector[i].get(j)) {
        mostSigOne=j;
      }
    }
    sumMostSigOne+=mostSigOne;
  }
  avgLeastSigZero=(double)(sumLeastSigZero / (numBitVectors * 1.0)) - (Math.log(phi) / Math.log(2.0));
  avgMostSigOne=(double)(sumMostSigOne / (numBitVectors * 1.0));
  numDistinctValues=Math.pow(2.0,(avgMostSigOne + avgLeastSigZero) / 2.0);
  return ((long)(numDistinctValues));
}
