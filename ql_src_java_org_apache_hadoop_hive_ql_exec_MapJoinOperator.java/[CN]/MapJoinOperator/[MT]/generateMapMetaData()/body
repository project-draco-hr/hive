{
  TableDesc keyTableDesc=conf.getKeyTblDesc();
  SerDe keySerializer=(SerDe)ReflectionUtils.newInstance(keyTableDesc.getDeserializerClass(),null);
  keySerializer.initialize(null,keyTableDesc.getProperties());
  metadata.put(Integer.valueOf(metadataKeyTag),new HashTableSinkObjectCtx(ObjectInspectorUtils.getStandardObjectInspector(keySerializer.getObjectInspector(),ObjectInspectorCopyOption.WRITABLE),keySerializer,keyTableDesc,false,hconf));
  for (int pos=0; pos < order.length; pos++) {
    if (pos == posBigTable) {
      continue;
    }
    TableDesc valueTableDesc;
    if (conf.getNoOuterJoin()) {
      valueTableDesc=conf.getValueTblDescs().get(pos);
    }
 else {
      valueTableDesc=conf.getValueFilteredTblDescs().get(pos);
    }
    SerDe valueSerDe=(SerDe)ReflectionUtils.newInstance(valueTableDesc.getDeserializerClass(),null);
    valueSerDe.initialize(null,valueTableDesc.getProperties());
    ObjectInspector inspector=valueSerDe.getObjectInspector();
    metadata.put(Integer.valueOf(pos),new HashTableSinkObjectCtx(ObjectInspectorUtils.getStandardObjectInspector(inspector,ObjectInspectorCopyOption.WRITABLE),valueSerDe,valueTableDesc,hasFilter(pos),hconf));
  }
}
