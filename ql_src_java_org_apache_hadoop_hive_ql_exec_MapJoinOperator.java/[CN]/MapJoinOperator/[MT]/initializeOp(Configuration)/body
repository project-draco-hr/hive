{
  unwrapContainer=new UnwrapRowContainer[conf.getTagLength()];
  super.initializeOp(hconf);
  int tagLen=conf.getTagLength();
  cacheKey=HiveConf.getVar(hconf,HiveConf.ConfVars.HIVEQUERYID) + "__HASH_MAP_" + this.getOperatorId()+ "_container";
  cache=ObjectCacheFactory.getCache(hconf);
  loader=HashTableLoaderFactory.getLoader(hconf);
  hashMapRowGetters=null;
  mapJoinTables=new MapJoinTableContainer[tagLen];
  mapJoinTableSerdes=new MapJoinTableContainerSerDe[tagLen];
  hashTblInitedOnce=false;
  generateMapMetaData();
  if (!conf.isBucketMapJoin()) {
    if (isLogInfoEnabled) {
      LOG.info("This is not bucket map join, so cache");
    }
    Pair<MapJoinTableContainer[],MapJoinTableContainerSerDe[]> pair=(Pair<MapJoinTableContainer[],MapJoinTableContainerSerDe[]>)cache.retrieve(cacheKey,new Callable<Object>(){
      public Object call() throws HiveException {
        return loadHashTable();
      }
    }
);
    mapJoinTables=pair.getLeft();
    mapJoinTableSerdes=pair.getRight();
    hashTblInitedOnce=true;
  }
 else {
    loadHashTable();
  }
  if (this.getExecContext() != null) {
    this.getExecContext().setLastInputPath(null);
    this.getExecContext().setCurrentInputPath(null);
  }
}
