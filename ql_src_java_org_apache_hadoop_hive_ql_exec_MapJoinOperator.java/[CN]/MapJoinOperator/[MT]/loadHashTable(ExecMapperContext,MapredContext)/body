{
  loadCalled=true;
  if (canSkipReload(mapContext)) {
    return new ImmutablePair<MapJoinTableContainer[],MapJoinTableContainerSerDe[]>(mapJoinTables,mapJoinTableSerdes);
  }
  perfLogger.PerfLogBegin(CLASS_NAME,PerfLogger.LOAD_HASHTABLE);
  loader.init(mapContext,mrContext,hconf,this);
  try {
    loader.load(mapJoinTables,mapJoinTableSerdes);
  }
 catch (  HiveException e) {
    if (isLogInfoEnabled) {
      LOG.info("Exception loading hash tables. Clearing partially loaded hash table containers.");
    }
    clearAllTableContainers();
    throw e;
  }
  hashTblInitedOnce=true;
  Pair<MapJoinTableContainer[],MapJoinTableContainerSerDe[]> pair=new ImmutablePair<MapJoinTableContainer[],MapJoinTableContainerSerDe[]>(mapJoinTables,mapJoinTableSerdes);
  perfLogger.PerfLogEnd(CLASS_NAME,PerfLogger.LOAD_HASHTABLE);
  if (canSkipJoinProcessing(mapContext)) {
    LOG.info("Skipping big table join processing for " + this.toString());
    this.setDone(true);
  }
  return pair;
}
