{
  trim(true);
  if (ngrams.size() < 1) {
    return null;
  }
  ArrayList<Object[]> result=new ArrayList<Object[]>();
  ArrayList<Map.Entry<ArrayList<String>,Double>> list=new ArrayList(ngrams.entrySet());
  Collections.sort(list,new Comparator<Map.Entry<ArrayList<String>,Double>>(){
    public int compare(    Map.Entry<ArrayList<String>,Double> o1,    Map.Entry<ArrayList<String>,Double> o2){
      return o2.getValue().compareTo(o1.getValue());
    }
  }
);
  for (int i=0; i < list.size(); i++) {
    ArrayList<String> key=list.get(i).getKey();
    Double val=list.get(i).getValue();
    Object[] curGram=new Object[2];
    ArrayList<Text> ng=new ArrayList<Text>();
    for (int j=0; j < key.size(); j++) {
      ng.add(new Text(key.get(j)));
    }
    curGram[0]=ng;
    curGram[1]=new DoubleWritable(val.doubleValue());
    result.add(curGram);
  }
  return result;
}
