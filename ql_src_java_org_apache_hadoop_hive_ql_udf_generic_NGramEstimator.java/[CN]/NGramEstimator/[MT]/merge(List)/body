{
  if (other == null) {
    return;
  }
  int otherK=Integer.parseInt(other.get(0).toString());
  int otherN=Integer.parseInt(other.get(1).toString());
  int otherPF=Integer.parseInt(other.get(2).toString());
  if (k > 0 && k != otherK) {
    throw new HiveException(getClass().getSimpleName() + ": mismatch in value for 'k'" + ", which usually is caused by a non-constant expression. Found '"+ k+ "' and '"+ otherK+ "'.");
  }
  if (n > 0 && otherN != n) {
    throw new HiveException(getClass().getSimpleName() + ": mismatch in value for 'n'" + ", which usually is caused by a non-constant expression. Found '"+ n+ "' and '"+ otherN+ "'.");
  }
  if (pf > 0 && otherPF != pf) {
    throw new HiveException(getClass().getSimpleName() + ": mismatch in value for 'pf'" + ", which usually is caused by a non-constant expression. Found '"+ pf+ "' and '"+ otherPF+ "'.");
  }
  k=otherK;
  pf=otherPF;
  n=otherN;
  for (int i=3; i < other.size(); i++) {
    ArrayList<String> key=new ArrayList<String>();
    for (int j=0; j < n; j++) {
      key.add(other.get(i + j).toString());
    }
    i+=n;
    double val=Double.parseDouble(other.get(i).toString());
    Double myval=ngrams.get(key);
    if (myval == null) {
      myval=new Double(val);
    }
 else {
      myval+=val;
    }
    ngrams.put(key,myval);
  }
  trim(false);
}
