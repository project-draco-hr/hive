{
  Operator<? extends Serializable> reducer=op.getChildOperators().get(0);
  Map<Operator<? extends Serializable>,GenMapRedCtx> mapCurrCtx=opProcCtx.getMapCurrCtx();
  GenMapRedCtx mapredCtx=mapCurrCtx.get(op.getParentOperators().get(0));
  Task<? extends Serializable> currTask=mapredCtx.getCurrTask();
  MapredWork plan=(MapredWork)currTask.getWork();
  HashMap<Operator<? extends Serializable>,Task<? extends Serializable>> opTaskMap=opProcCtx.getOpTaskMap();
  opTaskMap.put(reducer,currTask);
  plan.setReducer(reducer);
  ReduceSinkDesc desc=op.getConf();
  plan.setNumReduceTasks(desc.getNumReducers());
  if (reducer.getClass() == JoinOperator.class) {
    plan.setNeedsTagging(true);
  }
  initUnionPlan(opProcCtx,currTask,false);
}
