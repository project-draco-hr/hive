{
  CheckResult result=new CheckResult();
  checker.checkMetastore(dbName,null,null,result);
  assertTrue(result.getTablesNotInMs().isEmpty());
  assertTrue(result.getTablesNotOnFs().isEmpty());
  assertTrue(result.getPartitionsNotOnFs().isEmpty());
  assertTrue(result.getPartitionsNotInMs().isEmpty());
  result=new CheckResult();
  checker.checkMetastore(dbName,tableName,null,result);
  assertEquals(1,result.getTablesNotInMs().size());
  assertEquals(tableName,result.getTablesNotInMs().get(0));
  assertTrue(result.getTablesNotOnFs().isEmpty());
  assertTrue(result.getPartitionsNotOnFs().isEmpty());
  assertTrue(result.getPartitionsNotInMs().isEmpty());
  hive.createDatabase(dbName,"");
  Table table=new Table(tableName);
  table.getTTable().setDbName(dbName);
  table.setInputFormatClass(TextInputFormat.class);
  table.setOutputFormatClass(IgnoreKeyTextOutputFormat.class);
  hive.createTable(table);
  result=new CheckResult();
  checker.checkMetastore(dbName,null,null,result);
  assertTrue(result.getTablesNotInMs().isEmpty());
  assertTrue(result.getTablesNotOnFs().isEmpty());
  assertTrue(result.getPartitionsNotOnFs().isEmpty());
  assertTrue(result.getPartitionsNotInMs().isEmpty());
  result=new CheckResult();
  checker.checkMetastore(dbName,tableName,null,result);
  assertTrue(result.getTablesNotInMs().isEmpty());
  assertTrue(result.getTablesNotOnFs().isEmpty());
  assertTrue(result.getPartitionsNotOnFs().isEmpty());
  assertTrue(result.getPartitionsNotInMs().isEmpty());
  fs.delete(table.getPath(),true);
  result=new CheckResult();
  checker.checkMetastore(dbName,tableName,null,result);
  assertTrue(result.getTablesNotInMs().isEmpty());
  assertEquals(1,result.getTablesNotOnFs().size());
  assertEquals(tableName,result.getTablesNotOnFs().get(0));
  assertTrue(result.getPartitionsNotOnFs().isEmpty());
  assertTrue(result.getPartitionsNotInMs().isEmpty());
  fs.mkdirs(table.getPath());
  Path fakeTable=table.getPath().getParent().suffix(Path.SEPARATOR + "faketable");
  fs.mkdirs(fakeTable);
  result=new CheckResult();
  checker.checkMetastore(dbName,null,null,result);
  assertEquals(1,result.getTablesNotInMs().size());
  assertEquals(fakeTable.getName(),result.getTablesNotInMs().get(0));
  assertTrue(result.getTablesNotOnFs().isEmpty());
  assertTrue(result.getPartitionsNotOnFs().isEmpty());
  assertTrue(result.getPartitionsNotInMs().isEmpty());
  hive.dropTable(dbName,tableName);
  table.setProperty("EXTERNAL","TRUE");
  hive.createTable(table);
  result=new CheckResult();
  checker.checkMetastore(dbName,null,null,result);
  assertTrue(result.getTablesNotInMs().isEmpty());
  assertTrue(result.getTablesNotOnFs().isEmpty());
  assertTrue(result.getPartitionsNotOnFs().isEmpty());
  assertTrue(result.getPartitionsNotInMs().isEmpty());
}
