{
  StructTypeInfo structTypeInfo=new StructTypeInfo();
  ArrayList<String> names=new ArrayList<String>();
  names.add("field1");
  names.add("field2");
  structTypeInfo.setAllStructFieldNames(names);
  ArrayList<TypeInfo> typeInfos=new ArrayList<TypeInfo>();
  typeInfos.add(STRING);
  typeInfos.add(INT);
  structTypeInfo.setAllStructFieldTypeInfos(typeInfos);
  StructTypeInfo superStructTypeInfo=new StructTypeInfo();
  ArrayList<String> superNames=new ArrayList<String>();
  superNames.add("superfield1");
  superNames.add("superfield2");
  superStructTypeInfo.setAllStructFieldNames(superNames);
  ArrayList<TypeInfo> superTypeInfos=new ArrayList<TypeInfo>();
  superTypeInfos.add(STRING);
  superTypeInfos.add(structTypeInfo);
  superStructTypeInfo.setAllStructFieldTypeInfos(superTypeInfos);
  final String specificSchema=IOUtils.toString(Resources.getResource("avro-nested-struct.avsc").openStream()).replace("\n","");
  String expectedSchema=genSchema(specificSchema);
  Assert.assertEquals("Test for nested struct's avro schema failed",expectedSchema,getAvroSchemaString(superStructTypeInfo));
}
