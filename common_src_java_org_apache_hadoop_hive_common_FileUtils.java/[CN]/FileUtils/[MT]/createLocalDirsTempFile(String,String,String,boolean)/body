{
  if (localDirList == null || localDirList.isEmpty()) {
    return createFileInTmp(prefix,suffix,"Local directories not specified",isDirectory);
  }
  String[] localDirs=StringUtils.getTrimmedStrings(localDirList);
  if (localDirs.length == 0) {
    return createFileInTmp(prefix,suffix,"Local directories not specified",isDirectory);
  }
  String path=localDirs[random.nextInt(localDirs.length)];
  if (path == null || path.isEmpty()) {
    return createFileInTmp(prefix,suffix,"Empty path for one of the local dirs",isDirectory);
  }
  File targetDir=new File(path);
  if (!targetDir.exists() && !targetDir.mkdirs()) {
    return createFileInTmp(prefix,suffix,"Cannot access or create " + targetDir,isDirectory);
  }
  try {
    File file=File.createTempFile(prefix,suffix,targetDir);
    if (isDirectory && (!file.delete() || !file.mkdirs())) {
      return createFileInTmp(prefix,suffix,"Cannot recreate " + file + " as directory",isDirectory);
    }
    file.deleteOnExit();
    return file;
  }
 catch (  IOException ex) {
    LOG.error("Error creating a file in " + targetDir,ex);
    return createFileInTmp(prefix,suffix,"Cannot create a file in " + targetDir,isDirectory);
  }
}
