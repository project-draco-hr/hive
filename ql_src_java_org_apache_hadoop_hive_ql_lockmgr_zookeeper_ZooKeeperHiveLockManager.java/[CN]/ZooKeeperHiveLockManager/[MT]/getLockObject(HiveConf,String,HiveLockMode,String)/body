{
  try {
    Hive db=Hive.get(conf);
    int indx=path.lastIndexOf(mode.toString());
    String objName=path.substring(1,indx - 1);
    String[] names=objName.split("/")[1].split("@");
    if (names.length < 2) {
      return null;
    }
    Table tab=db.getTable(MetaStoreUtils.DEFAULT_DATABASE_NAME,names[1],false);
    if (tab == null) {
      return null;
    }
    if (names.length == 2) {
      return new HiveLockObject(tab,data);
    }
    String[] parts=names[2].split(conf.getVar(HiveConf.ConfVars.DEFAULT_ZOOKEEPER_PARTITION_NAME));
    Map<String,String> partSpec=new HashMap<String,String>();
    for (indx=0; indx < parts.length; indx++) {
      String[] partVals=parts[indx].split("=");
      partSpec.put(partVals[0],partVals[1]);
    }
    Partition partn;
    try {
      partn=db.getPartition(tab,partSpec,false);
    }
 catch (    HiveException e) {
      partn=null;
    }
    if (partn == null) {
      return new HiveLockObject(new DummyPartition(tab,objName.split("/")[1].replaceAll(conf.getVar(HiveConf.ConfVars.DEFAULT_ZOOKEEPER_PARTITION_NAME),"/")),data);
    }
    return new HiveLockObject(partn,data);
  }
 catch (  Exception e) {
    LOG.error("Failed to create ZooKeeper object: " + e);
    throw new LockException(e);
  }
}
