{
  int tryNum=1;
  ZooKeeperHiveLock ret=null;
  do {
    try {
      if (tryNum > 1) {
        Thread.sleep(sleepTime);
        prepareRetry();
      }
      ret=lockPrimitive(key,mode,keepAlive,parentCreated);
      if (ret != null) {
        break;
      }
      tryNum++;
    }
 catch (    Exception e1) {
      if (e1 instanceof KeeperException) {
        KeeperException e=(KeeperException)e1;
switch (e.code()) {
case CONNECTIONLOSS:
case OPERATIONTIMEOUT:
          LOG.warn("Possibly transient ZooKeeper exception: ",e);
        break;
default :
      LOG.error("Serious Zookeeper exception: ",e);
    break;
}
}
if (tryNum >= numRetriesForLock) {
throw new LockException(e1);
}
}
}
 while (tryNum < numRetriesForLock);
return ret;
}
