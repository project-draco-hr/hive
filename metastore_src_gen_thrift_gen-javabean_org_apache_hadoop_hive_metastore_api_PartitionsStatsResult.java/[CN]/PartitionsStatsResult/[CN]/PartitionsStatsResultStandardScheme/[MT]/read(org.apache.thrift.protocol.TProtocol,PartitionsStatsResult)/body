{
  org.apache.thrift.protocol.TField schemeField;
  iprot.readStructBegin();
  while (true) {
    schemeField=iprot.readFieldBegin();
    if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
      break;
    }
switch (schemeField.id) {
case 1:
      if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
{
          org.apache.thrift.protocol.TMap _map280=iprot.readMapBegin();
          struct.partStats=new HashMap<String,List<ColumnStatisticsObj>>(2 * _map280.size);
          for (int _i281=0; _i281 < _map280.size; ++_i281) {
            String _key282;
            List<ColumnStatisticsObj> _val283;
            _key282=iprot.readString();
{
              org.apache.thrift.protocol.TList _list284=iprot.readListBegin();
              _val283=new ArrayList<ColumnStatisticsObj>(_list284.size);
              for (int _i285=0; _i285 < _list284.size; ++_i285) {
                ColumnStatisticsObj _elem286;
                _elem286=new ColumnStatisticsObj();
                _elem286.read(iprot);
                _val283.add(_elem286);
              }
              iprot.readListEnd();
            }
            struct.partStats.put(_key282,_val283);
          }
          iprot.readMapEnd();
        }
        struct.setPartStatsIsSet(true);
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
      }
    break;
default :
  org.apache.thrift.protocol.TProtocolUtil.skip(iprot,schemeField.type);
}
iprot.readFieldEnd();
}
iprot.readStructEnd();
struct.validate();
}
