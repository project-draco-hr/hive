{
  final int count=rows.size();
  final int columnCount=typeInfos.length;
  WriteBuffers.ByteSegmentRef ref=hashMapResult.first();
  for (int a=0; a < count; a++) {
    int valueIndex=actualToValueMap[a];
    Object[] row=rows.get(valueIndex);
    byte[] bytes=ref.getBytes();
    int offset=(int)ref.getOffset();
    int length=ref.getLength();
    LazyBinaryDeserializeRead lazyBinaryDeserializeRead=new LazyBinaryDeserializeRead(typeInfos,false);
    lazyBinaryDeserializeRead.set(bytes,offset,length);
    for (int index=0; index < columnCount; index++) {
      Writable writable=(Writable)row[index];
      VerifyFastRow.verifyDeserializeRead(lazyBinaryDeserializeRead,(PrimitiveTypeInfo)typeInfos[index],writable);
    }
    lazyBinaryDeserializeRead.extraFieldsCheck();
    TestCase.assertTrue(!lazyBinaryDeserializeRead.readBeyondConfiguredFieldsWarned());
    TestCase.assertTrue(!lazyBinaryDeserializeRead.bufferRangeHasExtraDataWarned());
    ref=hashMapResult.next();
    if (a == count - 1) {
      TestCase.assertTrue(ref == null);
    }
 else {
      TestCase.assertTrue(ref != null);
    }
  }
}
