{
  if (desc.isExternal()) {
    return;
  }
  if (desc.getTableName().startsWith("tmp") || desc.getTableName().startsWith("temp") || desc.getTableName().startsWith("test")) {
    return;
  }
  if (tableExists(desc.getTableName())) {
    return;
  }
  String tableNeedsRetention="Newly created tables have to have " + retentionKey + " set unless the table name has one of the prefixes \"tmp\", \"temp\", or \"test\".";
  String tableRetentionFormat="The value of the " + retentionKey + " parameter must be an "+ "integer greater than or equal to -1, i.e. -1,0,1,...";
  String retentionValue="";
  if (desc.getTblProps() == null || (retentionValue=desc.getTblProps().get(retentionKey)) == null) {
    warnOrFail(warningOnly,ErrMsg("Table " + desc.getTableName() + " does not have "+ retentionKey+ " parameter set. "+ tableNeedsRetention+ "  "+ tableRetentionFormat));
    return;
  }
  int retentionIntValue;
  try {
    retentionIntValue=Integer.parseInt(retentionValue);
  }
 catch (  Exception e) {
    retentionIntValue=Integer.MIN_VALUE;
  }
  if (retentionIntValue < -1) {
    warnOrFail(warningOnly,ErrMsg("Table " + desc.getTableName() + " has an invalid value "+ retentionValue+ " for the parameter "+ retentionKey+ ".  "+ tableRetentionFormat+ "  "+ tableNeedsRetention));
  }
}
