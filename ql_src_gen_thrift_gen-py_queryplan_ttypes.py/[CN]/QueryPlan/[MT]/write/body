def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('QueryPlan')
    if (self.queries != None):
        oprot.writeFieldBegin('queries', TType.LIST, 1)
        oprot.writeListBegin(TType.STRUCT, len(self.queries))
        for iter120 in self.queries:
            iter120.write(oprot)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    if (self.done != None):
        oprot.writeFieldBegin('done', TType.BOOL, 2)
        oprot.writeBool(self.done)
        oprot.writeFieldEnd()
    if (self.started != None):
        oprot.writeFieldBegin('started', TType.BOOL, 3)
        oprot.writeBool(self.started)
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()

    def validate(self):
        return
