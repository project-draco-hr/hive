def write(self, oprot):
    if ((oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated) and (self.thrift_spec is not None) and (fastbinary is not None)):
        oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
        return
    oprot.writeStructBegin('Graph')
    if (self.nodeType is not None):
        oprot.writeFieldBegin('nodeType', TType.I32, 1)
        oprot.writeI32(self.nodeType)
        oprot.writeFieldEnd()
    if (self.roots is not None):
        oprot.writeFieldBegin('roots', TType.LIST, 2)
        oprot.writeListBegin(TType.STRING, len(self.roots))
        for iter19 in self.roots:
            oprot.writeString(iter19)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    if (self.adjacencyList is not None):
        oprot.writeFieldBegin('adjacencyList', TType.LIST, 3)
        oprot.writeListBegin(TType.STRUCT, len(self.adjacencyList))
        for iter20 in self.adjacencyList:
            iter20.write(oprot)
        oprot.writeListEnd()
        oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()
