{
  trace(ctx,"CREATE DATABASE");
  StringBuilder sql=new StringBuilder();
  sql.append(ctx.T_CREATE().getText() + " ");
  if (ctx.T_DATABASE() != null) {
    sql.append(ctx.T_DATABASE().getText() + " ");
  }
 else {
    sql.append(ctx.T_SCHEMA().getText() + " ");
  }
  if (ctx.T_IF() != null) {
    sql.append(exec.getText(ctx,ctx.T_IF().getSymbol(),ctx.T_EXISTS().getSymbol()) + " ");
  }
  sql.append(evalPop(ctx.expr()).toString());
  int cnt=ctx.create_database_option().size();
  for (int i=0; i < cnt; i++) {
    HplsqlParser.Create_database_optionContext option=ctx.create_database_option(i);
    if (option.T_COMMENT() != null) {
      sql.append(" " + option.T_COMMENT().getText() + " "+ evalPop(option.expr()).toSqlString());
    }
 else     if (option.T_LOCATION() != null) {
      sql.append(" " + option.T_LOCATION().getText() + " "+ evalPop(option.expr()).toSqlString());
    }
  }
  trace(ctx,sql.toString());
  Query query=exec.executeSql(ctx,sql.toString(),exec.conf.defaultConnection);
  if (query.error()) {
    exec.signal(query);
    return 1;
  }
  exec.setSqlSuccess();
  exec.closeQuery(query,exec.conf.defaultConnection);
  return 0;
}
