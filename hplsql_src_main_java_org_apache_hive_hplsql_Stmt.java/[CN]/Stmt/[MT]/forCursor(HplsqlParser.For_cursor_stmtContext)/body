{
  trace(ctx,"FOR CURSOR - ENTERED");
  exec.enterScope(Scope.Type.LOOP);
  String cursor=ctx.L_ID().getText();
  String sql=evalPop(ctx.select_stmt()).toString();
  trace(ctx,sql);
  Query query=exec.executeQuery(ctx,sql,exec.conf.defaultConnection);
  if (query.error()) {
    exec.signal(query);
    return 1;
  }
  trace(ctx,"SELECT completed successfully");
  exec.setSqlSuccess();
  try {
    ResultSet rs=query.getResultSet();
    if (rs != null) {
      ResultSetMetaData rm=rs.getMetaData();
      int cols=rm.getColumnCount();
      Var[] vars=new Var[cols];
      for (int i=0; i < cols; i++) {
        vars[i]=new Var();
        vars[i].setName(cursor + "." + rm.getColumnName(i + 1));
        vars[i].setType(rm.getColumnType(i + 1));
        exec.addVariable(vars[i]);
        if (trace) {
          trace(ctx,"Column: " + vars[i].getName() + " "+ rm.getColumnTypeName(i + 1));
        }
      }
      while (rs.next()) {
        for (int i=0; i < cols; i++) {
          vars[i].setValue(rs,rm,i + 1);
        }
        visit(ctx.block());
        exec.incRowCount();
      }
    }
  }
 catch (  SQLException e) {
    exec.signal(e);
    exec.closeQuery(query,exec.conf.defaultConnection);
    return 1;
  }
  exec.setSqlSuccess();
  exec.closeQuery(query,exec.conf.defaultConnection);
  exec.leaveScope();
  trace(ctx,"FOR CURSOR - LEFT");
  return 0;
}
