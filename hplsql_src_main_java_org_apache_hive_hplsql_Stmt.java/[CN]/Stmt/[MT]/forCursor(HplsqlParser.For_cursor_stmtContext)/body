{
  trace(ctx,"FOR CURSOR - ENTERED");
  exec.enterScope(Scope.Type.LOOP);
  String cursor=ctx.L_ID().getText();
  String sql=evalPop(ctx.select_stmt()).toString();
  trace(ctx,sql);
  Query query=exec.executeQuery(ctx,sql,exec.conf.defaultConnection);
  if (query.error()) {
    exec.signal(query);
    return 1;
  }
  trace(ctx,"SELECT completed successfully");
  exec.setSqlSuccess();
  try {
    ResultSet rs=query.getResultSet();
    if (rs != null) {
      ResultSetMetaData rm=rs.getMetaData();
      int cols=rm.getColumnCount();
      Row row=new Row();
      for (int i=1; i <= cols; i++) {
        row.addColumn(rm.getColumnName(i),rm.getColumnTypeName(i));
      }
      Var var=new Var(cursor,row);
      exec.addVariable(var);
      while (rs.next()) {
        var.setValues(rs,rm);
        if (trace) {
          trace(ctx,var,rs,rm,0);
        }
        visit(ctx.block());
        exec.incRowCount();
      }
    }
  }
 catch (  SQLException e) {
    exec.signal(e);
    exec.closeQuery(query,exec.conf.defaultConnection);
    return 1;
  }
  exec.setSqlSuccess();
  exec.closeQuery(query,exec.conf.defaultConnection);
  exec.leaveScope();
  trace(ctx,"FOR CURSOR - LEFT");
  return 0;
}
