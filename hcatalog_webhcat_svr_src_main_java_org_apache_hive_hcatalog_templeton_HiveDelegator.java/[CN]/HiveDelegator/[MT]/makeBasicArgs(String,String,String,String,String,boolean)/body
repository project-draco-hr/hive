{
  ArrayList<String> args=new ArrayList<String>();
  ArrayList<String> allFiles=new ArrayList<String>();
  if (TempletonUtils.isset(srcFile)) {
    allFiles.add(TempletonUtils.hadoopFsFilename(srcFile,appConf,runAs));
  }
  if (TempletonUtils.isset(otherFiles)) {
    String[] ofs=TempletonUtils.hadoopFsListAsArray(otherFiles,appConf,runAs);
    allFiles.addAll(Arrays.asList(ofs));
  }
  args.addAll(makeLauncherArgs(appConf,statusdir,completedUrl,allFiles,enablelog,JobType.HIVE));
  if (appConf.hiveArchive() != null && !appConf.hiveArchive().equals("")) {
    args.add(ARCHIVES);
    args.add(appConf.hiveArchive());
  }
  String extras=appConf.get(AppConfig.HIVE_EXTRA_FILES);
  if (extras != null && extras.length() > 0) {
    boolean foundFiles=false;
    for (int i=0; i < args.size(); i++) {
      if (FILES.equals(args.get(i))) {
        String value=args.get(i + 1);
        args.set(i + 1,value + "," + extras);
        foundFiles=true;
      }
    }
    if (!foundFiles) {
      args.add(FILES);
      args.add(extras);
    }
    String[] extraFiles=appConf.getStrings(AppConfig.HIVE_EXTRA_FILES);
    StringBuilder extraFileNames=new StringBuilder();
    for (    String file : extraFiles) {
      Path p=new Path(file);
      extraFileNames.append(p.getName()).append(",");
    }
    addDef(args,JobSubmissionConstants.HADOOP_CLASSPATH_EXTRAS,extraFileNames.toString());
  }
  return args;
}
