{
  if ((stripeStatistics == null || stripeStatistics.isEmpty()) && reader.getNumberOfRows() > 0) {
    keyWrapper.setInputPath(path);
    keyWrapper.setIsIncompatFile(true);
    skipFile=true;
    return true;
  }
  while (iter.hasNext()) {
    StripeInformation si=iter.next();
    if (si.getOffset() >= start && si.getOffset() < end) {
      valueWrapper.setStripeStatistics(stripeStatistics.get(stripeIdx++));
      valueWrapper.setStripeInformation(si);
      if (!iter.hasNext()) {
        valueWrapper.setLastStripeInFile(true);
        valueWrapper.setUserMetadata(((ReaderImpl)reader).getOrcProtoUserMetadata());
      }
      keyWrapper.setInputPath(path);
      keyWrapper.setCompression(reader.getCompression());
      keyWrapper.setCompressBufferSize(reader.getCompressionSize());
      keyWrapper.setVersion(reader.getFileVersion());
      keyWrapper.setRowIndexStride(reader.getRowIndexStride());
      keyWrapper.setTypes(reader.getTypes());
    }
 else {
      stripeIdx++;
      continue;
    }
    return true;
  }
  return false;
}
