{
  final int threads=10;
  ExecutorService executorService=Executors.newFixedThreadPool(threads);
  for (int i=0; i < threads; i++) {
    final int n=i;
    executorService.submit(new Callable<Void>(){
      @Override public Void call() throws Exception {
        testScopeImpl(n);
        return null;
      }
    }
);
  }
  executorService.shutdown();
  assertTrue(executorService.awaitTermination(periodMs * 3 * threads,TimeUnit.MILLISECONDS));
  final MetricsScope fooScope=Metrics.getScope(scopeName);
  assertEquals(Long.valueOf(3 * threads),fooScope.getNumCounter());
  assertTrue(fooScope.getTimeCounter().longValue() > 3 * periodMs * threads);
  Double avgT=(Double)Metrics.get("foo.avg_t");
  assertTrue(avgT.doubleValue() > periodMs);
}
