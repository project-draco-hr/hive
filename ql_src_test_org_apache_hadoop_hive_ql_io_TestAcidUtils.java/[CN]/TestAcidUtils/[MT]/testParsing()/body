{
  assertEquals(123,AcidUtils.parseBase(new Path("/tmp/base_000123")));
  Path dir=new Path("/tmp/tbl");
  Configuration conf=new Configuration();
  AcidOutputFormat.Options opts=AcidUtils.parseBaseOrDeltaBucketFilename(new Path(dir,"base_567/bucket_123"),conf);
  assertEquals(false,opts.getOldStyle());
  assertEquals(true,opts.isWritingBase());
  assertEquals(567,opts.getMaximumTransactionId());
  assertEquals(0,opts.getMinimumTransactionId());
  assertEquals(123,opts.getBucket());
  opts=AcidUtils.parseBaseOrDeltaBucketFilename(new Path(dir,"delta_000005_000006/bucket_00001"),conf);
  assertEquals(false,opts.getOldStyle());
  assertEquals(false,opts.isWritingBase());
  assertEquals(6,opts.getMaximumTransactionId());
  assertEquals(5,opts.getMinimumTransactionId());
  assertEquals(1,opts.getBucket());
  opts=AcidUtils.parseBaseOrDeltaBucketFilename(new Path(dir,"delete_delta_000005_000006/bucket_00001"),conf);
  assertEquals(false,opts.getOldStyle());
  assertEquals(false,opts.isWritingBase());
  assertEquals(6,opts.getMaximumTransactionId());
  assertEquals(5,opts.getMinimumTransactionId());
  assertEquals(1,opts.getBucket());
  opts=AcidUtils.parseBaseOrDeltaBucketFilename(new Path(dir,"000123_0"),conf);
  assertEquals(true,opts.getOldStyle());
  assertEquals(true,opts.isWritingBase());
  assertEquals(123,opts.getBucket());
  assertEquals(0,opts.getMinimumTransactionId());
  assertEquals(0,opts.getMaximumTransactionId());
}
