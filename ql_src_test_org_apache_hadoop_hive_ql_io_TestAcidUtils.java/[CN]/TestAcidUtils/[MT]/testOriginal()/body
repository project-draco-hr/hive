{
  Configuration conf=new Configuration();
  MockFileSystem fs=new MockFileSystem(conf,new MockFile("mock:/tbl/part1/000000_0",500,new byte[0]),new MockFile("mock:/tbl/part1/000001_1",500,new byte[0]),new MockFile("mock:/tbl/part1/000002_0",500,new byte[0]),new MockFile("mock:/tbl/part1/random",500,new byte[0]),new MockFile("mock:/tbl/part1/_done",0,new byte[0]),new MockFile("mock:/tbl/part1/subdir/000000_0",0,new byte[0]));
  AcidUtils.Directory dir=AcidUtils.getAcidState(new MockPath(fs,"/tbl/part1"),conf,new ValidReadTxnList("100:"));
  assertEquals(null,dir.getBaseDirectory());
  assertEquals(0,dir.getCurrentDirectories().size());
  assertEquals(0,dir.getObsolete().size());
  List<HdfsFileStatusWithId> result=dir.getOriginalFiles();
  assertEquals(5,result.size());
  assertEquals("mock:/tbl/part1/000000_0",result.get(0).getFileStatus().getPath().toString());
  assertEquals("mock:/tbl/part1/000001_1",result.get(1).getFileStatus().getPath().toString());
  assertEquals("mock:/tbl/part1/000002_0",result.get(2).getFileStatus().getPath().toString());
  assertEquals("mock:/tbl/part1/random",result.get(3).getFileStatus().getPath().toString());
  assertEquals("mock:/tbl/part1/subdir/000000_0",result.get(4).getFileStatus().getPath().toString());
}
