{
  Configuration conf=new Configuration();
  conf.setInt(HiveConf.ConfVars.HIVE_TXN_OPERATIONAL_PROPERTIES.varname,AcidUtils.AcidOperationalProperties.getDefault().toInt());
  MockFileSystem fs=new MockFileSystem(conf,new MockFile("mock:/tbl/part1/delta_1_1/bucket_0",500,new byte[0]),new MockFile("mock:/tbl/part1/delete_delta_2_2/bucket_0",500,new byte[0]),new MockFile("mock:/tbl/part1/delta_2_5/bucket_0",500,new byte[0]),new MockFile("mock:/tbl/part1/delete_delta_2_5/bucket_0",500,new byte[0]),new MockFile("mock:/tbl/part1/delta_2_5/bucket_0" + AcidUtils.DELTA_SIDE_FILE_SUFFIX,500,new byte[0]),new MockFile("mock:/tbl/part1/delete_delta_7_7/bucket_0",500,new byte[0]),new MockFile("mock:/tbl/part1/delta_6_10/bucket_0",500,new byte[0]));
  Path part=new MockPath(fs,"mock:/tbl/part1");
  AcidUtils.Directory dir=AcidUtils.getAcidState(part,conf,new ValidCompactorTxnList("4:" + Long.MAX_VALUE + ":"));
  List<AcidUtils.ParsedDelta> delts=dir.getCurrentDirectories();
  assertEquals(2,delts.size());
  assertEquals("mock:/tbl/part1/delta_1_1",delts.get(0).getPath().toString());
  assertEquals("mock:/tbl/part1/delete_delta_2_2",delts.get(1).getPath().toString());
}
