{
  Context ctx;
  ParseContext subPCtx=null;
  try {
    ctx=new Context(conf);
    ParseDriver pd=new ParseDriver();
    ASTNode tree=pd.parse(command,ctx);
    tree=ParseUtils.findRootNonNullToken(tree);
    BaseSemanticAnalyzer sem=SemanticAnalyzerFactory.get(conf,tree);
    assert(sem instanceof SemanticAnalyzer);
    doSemanticAnalysis((SemanticAnalyzer)sem,tree,ctx);
    subPCtx=((SemanticAnalyzer)sem).getParseContext();
    LOG.info("Sub-query Semantic Analysis Completed");
  }
 catch (  IOException e) {
    LOG.error("IOException in generating the operator " + "tree for input command - " + command + " ",e);
    LOG.error(org.apache.hadoop.util.StringUtils.stringifyException(e));
    throw new SemanticException(e.getMessage(),e);
  }
catch (  ParseException e) {
    LOG.error("ParseException in generating the operator " + "tree for input command - " + command + " ",e);
    LOG.error(org.apache.hadoop.util.StringUtils.stringifyException(e));
    throw new SemanticException(e.getMessage(),e);
  }
catch (  SemanticException e) {
    LOG.error("SemanticException in generating the operator " + "tree for input command - " + command + " ",e);
    LOG.error(org.apache.hadoop.util.StringUtils.stringifyException(e));
    throw new SemanticException(e.getMessage(),e);
  }
  return subPCtx;
}
