{
  for (int ai=0; ai < aggs.length; ai++) {
    Object[] o=new Object[aggregationParameterFields[ai].length];
    for (int pi=0; pi < aggregationParameterFields[ai].length; pi++) {
      o[pi]=aggregationParameterFields[ai][pi].evaluate(row);
    }
    if (aggregationIsDistinct[ai]) {
      if (hashAggr) {
        if (newEntry) {
          aggregationEvaluators[ai].aggregate(aggs[ai],o);
        }
      }
 else {
        if (lastInvoke[ai] == null) {
          lastInvoke[ai]=new Object[o.length];
        }
        if (ObjectInspectorUtils.compare(o,aggregationParameterObjectInspectors[ai],lastInvoke[ai],aggregationParameterStandardObjectInspectors[ai]) != 0) {
          aggregationEvaluators[ai].aggregate(aggs[ai],o);
          for (int pi=0; pi < o.length; pi++) {
            lastInvoke[ai][pi]=ObjectInspectorUtils.copyToStandardObject(o[pi],aggregationParameterObjectInspectors[ai][pi],ObjectInspectorCopyOption.WRITABLE);
          }
        }
      }
    }
 else {
      aggregationEvaluators[ai].aggregate(aggs[ai],o);
    }
  }
}
