{
  for (int ai=0; ai < aggs.length; ai++) {
    Object[] o=new Object[aggregationParameterFields[ai].length];
    for (int pi=0; pi < aggregationParameterFields[ai].length; pi++) {
      aggregationParameterFields[ai][pi].evaluate(row,rowInspector,tempInspectableObject);
      o[pi]=tempInspectableObject.o;
    }
    if (aggregationIsDistinct[ai]) {
      if (hashAggr) {
        if (newEntry) {
          FunctionRegistry.invoke(aggregationsAggregateMethods[ai],aggs[ai],o);
        }
      }
 else {
        boolean differentParameters=false;
        if ((lastInvoke == null) || (lastInvoke[ai] == null))         differentParameters=true;
 else {
          for (int pi=0; pi < o.length; pi++) {
            if (!o[pi].equals(lastInvoke[ai][pi])) {
              differentParameters=true;
              break;
            }
          }
        }
        if (differentParameters) {
          FunctionRegistry.invoke(aggregationsAggregateMethods[ai],aggs[ai],o);
          lastInvoke[ai]=o;
        }
      }
    }
 else {
      FunctionRegistry.invoke(aggregationsAggregateMethods[ai],aggs[ai],o);
    }
  }
}
