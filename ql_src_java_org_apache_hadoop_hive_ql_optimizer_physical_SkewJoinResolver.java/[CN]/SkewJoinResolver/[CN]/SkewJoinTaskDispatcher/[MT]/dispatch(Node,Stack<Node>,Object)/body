{
  Task<? extends Serializable> task=(Task<? extends Serializable>)nd;
  if (!task.isMapRedTask() || task instanceof ConditionalTask || ((MapredWork)task.getWork()).getReduceWork() == null) {
    return null;
  }
  SkewJoinProcCtx skewJoinProcContext=new SkewJoinProcCtx(task,physicalContext.getParseContext());
  Map<Rule,NodeProcessor> opRules=new LinkedHashMap<Rule,NodeProcessor>();
  opRules.put(new RuleRegExp("R1",CommonJoinOperator.getOperatorName() + "%"),SkewJoinProcFactory.getJoinProc());
  Dispatcher disp=new DefaultRuleDispatcher(SkewJoinProcFactory.getDefaultProc(),opRules,skewJoinProcContext);
  GraphWalker ogw=new DefaultGraphWalker(disp);
  ArrayList<Node> topNodes=new ArrayList<Node>();
  if (((MapredWork)task.getWork()).getReduceWork() != null) {
    topNodes.add(((MapredWork)task.getWork()).getReduceWork().getReducer());
  }
  ogw.startWalking(topNodes,null);
  return null;
}
