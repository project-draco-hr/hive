{
  ArrayList<exprNodeDesc> partitionCols=null;
  if (numPartitionFields >= keyCols.size()) {
    partitionCols=keyCols;
  }
 else   if (numPartitionFields >= 0) {
    partitionCols=new ArrayList<exprNodeDesc>(numPartitionFields);
    for (int i=0; i < numPartitionFields; i++) {
      partitionCols.add(keyCols.get(i));
    }
  }
 else {
    partitionCols=new ArrayList<exprNodeDesc>(1);
    partitionCols.add(SemanticAnalyzer.getFuncExprNodeDesc("rand"));
  }
  return getReduceSinkDesc(keyCols,valueCols,tag,partitionCols,numReducers,inferNumReducers);
}
