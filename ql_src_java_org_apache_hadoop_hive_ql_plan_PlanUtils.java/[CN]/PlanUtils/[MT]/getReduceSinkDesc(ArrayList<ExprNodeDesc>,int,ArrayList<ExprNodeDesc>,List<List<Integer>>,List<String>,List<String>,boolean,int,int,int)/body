{
  ArrayList<ExprNodeDesc> partitionCols=new ArrayList<ExprNodeDesc>();
  if (numPartitionFields >= keyCols.size()) {
    partitionCols.addAll(keyCols);
  }
 else   if (numPartitionFields >= 0) {
    partitionCols.addAll(keyCols.subList(0,numPartitionFields));
  }
 else {
    partitionCols.add(TypeCheckProcFactory.DefaultExprProcessor.getFuncExprNodeDesc("rand"));
  }
  StringBuilder order=new StringBuilder();
  for (int i=0; i < keyCols.size(); i++) {
    order.append("+");
  }
  return getReduceSinkDesc(keyCols,numKeys,valueCols,distinctColIndices,outputKeyColumnNames,outputValueColumnNames,includeKey,tag,partitionCols,order.toString(),numReducers);
}
