{
  Class<? extends Deserializer> serdeClass=LazySimpleSerDe.class;
  String separatorCode=Integer.toString(Utilities.ctrlaCode);
  String columns=cols;
  String columnTypes=colTypes;
  boolean lastColumnTakesRestOfTheLine=false;
  TableDesc ret;
  try {
    if (crtTblDesc.getSerName() != null) {
      Class c=Class.forName(crtTblDesc.getSerName());
      serdeClass=c;
    }
    if (crtTblDesc.getFieldDelim() != null) {
      separatorCode=crtTblDesc.getFieldDelim();
    }
    ret=getTableDesc(serdeClass,separatorCode,columns,columnTypes,lastColumnTakesRestOfTheLine,false);
    Properties properties=ret.getProperties();
    if (crtTblDesc.getCollItemDelim() != null) {
      properties.setProperty(Constants.COLLECTION_DELIM,crtTblDesc.getCollItemDelim());
    }
    if (crtTblDesc.getMapKeyDelim() != null) {
      properties.setProperty(Constants.MAPKEY_DELIM,crtTblDesc.getMapKeyDelim());
    }
    if (crtTblDesc.getFieldEscape() != null) {
      properties.setProperty(Constants.ESCAPE_CHAR,crtTblDesc.getFieldEscape());
    }
    if (crtTblDesc.getLineDelim() != null) {
      properties.setProperty(Constants.LINE_DELIM,crtTblDesc.getLineDelim());
    }
    if (crtTblDesc.getTableName() != null && crtTblDesc.getDatabaseName() != null) {
      properties.setProperty(org.apache.hadoop.hive.metastore.api.Constants.META_TABLE_NAME,crtTblDesc.getDatabaseName() + "." + crtTblDesc.getTableName());
    }
    Class c1=Class.forName(crtTblDesc.getInputFormat());
    Class c2=Class.forName(crtTblDesc.getOutputFormat());
    Class<? extends InputFormat> in_class=c1;
    Class<? extends HiveOutputFormat> out_class=c2;
    ret.setInputFileFormatClass(in_class);
    ret.setOutputFileFormatClass(out_class);
  }
 catch (  ClassNotFoundException e) {
    e.printStackTrace();
    return null;
  }
  return ret;
}
