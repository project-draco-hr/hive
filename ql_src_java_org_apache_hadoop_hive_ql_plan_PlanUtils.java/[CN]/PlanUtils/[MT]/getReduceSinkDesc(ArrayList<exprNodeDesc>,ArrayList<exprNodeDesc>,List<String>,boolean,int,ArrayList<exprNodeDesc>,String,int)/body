{
  tableDesc keyTable=null;
  tableDesc valueTable=null;
  ArrayList<String> outputKeyCols=new ArrayList<String>();
  ArrayList<String> outputValCols=new ArrayList<String>();
  if (includeKeyCols) {
    keyTable=getReduceKeyTableDesc(getFieldSchemasFromColumnList(keyCols,outputColumnNames,0,""),order);
    outputKeyCols.addAll(outputColumnNames.subList(0,keyCols.size()));
    valueTable=getReduceValueTableDesc(getFieldSchemasFromColumnList(valueCols,outputColumnNames,keyCols.size(),""));
    outputValCols.addAll(outputColumnNames.subList(keyCols.size(),outputColumnNames.size()));
  }
 else {
    keyTable=getReduceKeyTableDesc(getFieldSchemasFromColumnList(keyCols,"reducesinkkey"),order);
    for (int i=0; i < keyCols.size(); i++) {
      outputKeyCols.add("reducesinkkey" + i);
    }
    valueTable=getReduceValueTableDesc(getFieldSchemasFromColumnList(valueCols,outputColumnNames,0,""));
    outputValCols.addAll(outputColumnNames);
  }
  return new reduceSinkDesc(keyCols,valueCols,outputKeyCols,outputValCols,tag,partitionCols,numReducers,keyTable,valueTable);
}
