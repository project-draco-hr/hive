{
  List<FieldSchema> schemas=new ArrayList<FieldSchema>(length + 1);
  for (int i=0; i < length; i++) {
    schemas.add(MetaStoreUtils.getFieldSchemaFromTypeInfo(fieldPrefix + outputColumnNames.get(i),cols.get(i).getTypeInfo()));
  }
  List<TypeInfo> unionTypes=new ArrayList<TypeInfo>();
  for (  List<Integer> distinctCols : distinctColIndices) {
    List<String> names=new ArrayList<String>();
    List<TypeInfo> types=new ArrayList<TypeInfo>();
    int numExprs=0;
    for (    int i : distinctCols) {
      names.add(HiveConf.getColumnInternalName(numExprs));
      types.add(cols.get(i).getTypeInfo());
      numExprs++;
    }
    unionTypes.add(TypeInfoFactory.getStructTypeInfo(names,types));
  }
  if (outputColumnNames.size() - length > 0) {
    schemas.add(MetaStoreUtils.getFieldSchemaFromTypeInfo(fieldPrefix + outputColumnNames.get(length),TypeInfoFactory.getUnionTypeInfo(unionTypes)));
  }
  return schemas;
}
