{
  Map<ReadEntity,ReadEntity> readEntityMap=new LinkedHashMap<ReadEntity,ReadEntity>(inputs.size());
  for (  ReadEntity input : inputs) {
    readEntityMap.put(input,input);
  }
  for (  Partition part : parts) {
    ReadEntity newInput=null;
    if (part.getTable().isPartitioned()) {
      newInput=new ReadEntity(part,parentViewInfo,isDirectRead);
    }
 else {
      newInput=new ReadEntity(part.getTable(),parentViewInfo,isDirectRead);
    }
    if (readEntityMap.containsKey(newInput)) {
      ReadEntity input=readEntityMap.get(newInput);
      if ((newInput.getParents() != null) && (!newInput.getParents().isEmpty())) {
        input.getParents().addAll(newInput.getParents());
        input.setDirect(input.isDirect() || newInput.isDirect());
      }
    }
 else {
      readEntityMap.put(newInput,newInput);
    }
  }
  if (inputs.size() != readEntityMap.size()) {
    inputs.addAll(readEntityMap.keySet());
  }
}
