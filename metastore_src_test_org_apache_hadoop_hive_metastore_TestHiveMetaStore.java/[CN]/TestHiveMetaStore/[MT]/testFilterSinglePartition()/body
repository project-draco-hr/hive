{
  String dbName="filterdb";
  String tblName="filtertbl";
  List<String> vals=new ArrayList<String>(1);
  vals.add("p11");
  List<String> vals2=new ArrayList<String>(1);
  vals2.add("p12");
  List<String> vals3=new ArrayList<String>(1);
  vals3.add("p13");
  silentDropDatabase(dbName);
  Database db=new Database();
  db.setName(dbName);
  client.createDatabase(db);
  ArrayList<FieldSchema> cols=new ArrayList<FieldSchema>(2);
  cols.add(new FieldSchema("c1",serdeConstants.STRING_TYPE_NAME,""));
  cols.add(new FieldSchema("c2",serdeConstants.INT_TYPE_NAME,""));
  ArrayList<FieldSchema> partCols=new ArrayList<FieldSchema>(1);
  partCols.add(new FieldSchema("p1",serdeConstants.STRING_TYPE_NAME,""));
  Table tbl=new Table();
  tbl.setDbName(dbName);
  tbl.setTableName(tblName);
  StorageDescriptor sd=new StorageDescriptor();
  tbl.setSd(sd);
  sd.setCols(cols);
  sd.setCompressed(false);
  sd.setNumBuckets(1);
  sd.setParameters(new HashMap<String,String>());
  sd.setBucketCols(new ArrayList<String>());
  sd.setSerdeInfo(new SerDeInfo());
  sd.getSerdeInfo().setName(tbl.getTableName());
  sd.getSerdeInfo().setParameters(new HashMap<String,String>());
  sd.getSerdeInfo().getParameters().put(serdeConstants.SERIALIZATION_FORMAT,"1");
  sd.setSortCols(new ArrayList<Order>());
  tbl.setPartitionKeys(partCols);
  client.createTable(tbl);
  tbl=client.getTable(dbName,tblName);
  add_partition(client,tbl,vals,"part1");
  add_partition(client,tbl,vals2,"part2");
  add_partition(client,tbl,vals3,"part3");
  checkFilter(client,dbName,tblName,"p1 = \"p12\"",1);
  checkFilter(client,dbName,tblName,"p1 < \"p12\"",1);
  checkFilter(client,dbName,tblName,"p1 > \"p12\"",1);
  checkFilter(client,dbName,tblName,"p1 >= \"p12\"",2);
  checkFilter(client,dbName,tblName,"p1 <= \"p12\"",2);
  checkFilter(client,dbName,tblName,"p1 <> \"p12\"",2);
  checkFilter(client,dbName,tblName,"p1 like \"p1.*\"",3);
  checkFilter(client,dbName,tblName,"p1 like \"p.*2\"",1);
  client.dropTable(dbName,tblName);
  client.dropDatabase(dbName);
}
