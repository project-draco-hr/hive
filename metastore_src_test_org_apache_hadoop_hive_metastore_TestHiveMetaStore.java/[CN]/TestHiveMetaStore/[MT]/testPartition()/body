{
  try {
    String dbName="compdb";
    String tblName="comptbl";
    String typeName="Person";
    List<String> vals=new ArrayList<String>(2);
    vals.add("2008-07-01 14:13:12");
    vals.add("14");
    client.dropTable(dbName,tblName);
    client.dropDatabase(dbName);
    boolean ret=client.createDatabase(dbName,"strange_loc");
    assertTrue("Unable to create the databse " + dbName,ret);
    client.dropType(typeName);
    Type typ1=new Type();
    typ1.setName(typeName);
    typ1.setFields(new ArrayList<FieldSchema>(2));
    typ1.getFields().add(new FieldSchema("name",Constants.STRING_TYPE_NAME,""));
    typ1.getFields().add(new FieldSchema("income",Constants.INT_TYPE_NAME,""));
    ret=client.createType(typ1);
    assertTrue("Unable to create type " + typeName,ret);
    Table tbl=new Table();
    tbl.setDbName(dbName);
    tbl.setTableName(tblName);
    StorageDescriptor sd=new StorageDescriptor();
    tbl.setSd(sd);
    sd.setCols(typ1.getFields());
    sd.setCompressed(false);
    sd.setNumBuckets(1);
    sd.setParameters(new HashMap<String,String>());
    sd.getParameters().put("test_param_1","Use this for comments etc");
    sd.setBucketCols(new ArrayList<String>(2));
    sd.getBucketCols().add("name");
    sd.setSerdeInfo(new SerDeInfo());
    sd.getSerdeInfo().setName(tbl.getTableName());
    sd.getSerdeInfo().setParameters(new HashMap<String,String>());
    sd.getSerdeInfo().getParameters().put(Constants.SERIALIZATION_FORMAT,"1");
    sd.setSortCols(new ArrayList<Order>());
    tbl.setPartitionKeys(new ArrayList<FieldSchema>(2));
    tbl.getPartitionKeys().add(new FieldSchema("ds",Constants.STRING_TYPE_NAME,""));
    tbl.getPartitionKeys().add(new FieldSchema("hr",Constants.INT_TYPE_NAME,""));
    client.createTable(tbl);
    Partition part=new Partition();
    part.setDbName(dbName);
    part.setTableName(tblName);
    part.setValues(vals);
    part.setParameters(new HashMap<String,String>());
    part.setSd(tbl.getSd());
    part.getSd().setSerdeInfo(tbl.getSd().getSerdeInfo());
    part.getSd().setLocation(tbl.getSd().getLocation() + "/part1");
    Partition retp=client.add_partition(part);
    assertNotNull("Unable to create partition " + part,retp);
    Partition part2=client.getPartition(dbName,tblName,part.getValues());
    assertTrue("Partitions are not same",part.equals(part2));
    String partName="ds=2008-07-01 14%3A13%3A12/hr=14";
    Partition part3=client.getPartitionByName(dbName,tblName,partName);
    assertTrue("Partitions are not the same",part.equals(part2));
    boolean exceptionThrown=false;
    try {
      String badPartName="ds=2008-07-01 14%3A13%3A12/hrs=14";
      client.getPartitionByName(dbName,tblName,badPartName);
    }
 catch (    NoSuchObjectException e) {
      exceptionThrown=true;
    }
    assertTrue("Bad partition spec should have thrown an exception",exceptionThrown);
    FileSystem fs=FileSystem.get(hiveConf);
    Path partPath=new Path(part2.getSd().getLocation());
    assertTrue(fs.exists(partPath));
    ret=client.dropPartition(dbName,tblName,part.getValues(),true);
    assertTrue(ret);
    assertFalse(fs.exists(partPath));
    retp=client.add_partition(part);
    assertNotNull("Unable to create partition " + part,ret);
    client.dropTable(dbName,tblName);
    ret=client.dropType(typeName);
    assertTrue("Unable to drop type " + typeName,ret);
    tbl.setParameters(new HashMap<String,String>());
    tbl.getParameters().put("EXTERNAL","TRUE");
    client.createTable(tbl);
    retp=client.add_partition(part);
    assertTrue(fs.exists(partPath));
    client.dropPartition(dbName,tblName,part.getValues(),true);
    assertTrue(fs.exists(partPath));
    client.appendPartitionByName(dbName,tblName,partName);
    Partition part4=client.getPartition(dbName,tblName,part.getValues());
    assertTrue("Append partition by name failed",part4.getValues().equals(vals));
    ;
    assertTrue("Drop partition by name failed",client.dropPartitionByName(dbName,tblName,partName,false));
    ret=client.dropDatabase(dbName);
    assertTrue("Unable to create the databse " + dbName,ret);
  }
 catch (  Exception e) {
    System.err.println(StringUtils.stringifyException(e));
    System.err.println("testPartition() failed.");
    throw e;
  }
}
