{
  try {
    String dbName="alterdb";
    String invTblName="alter-tbl";
    String tblName="altertbl";
    client.dropTable(dbName,tblName);
    client.dropDatabase(dbName);
    boolean ret=client.createDatabase(dbName,"strange_loc");
    assertTrue("Unable to create the databse " + dbName,ret);
    ArrayList<FieldSchema> invCols=new ArrayList<FieldSchema>(2);
    invCols.add(new FieldSchema("n-ame",Constants.STRING_TYPE_NAME,""));
    invCols.add(new FieldSchema("in.come",Constants.INT_TYPE_NAME,""));
    Table tbl=new Table();
    tbl.setDbName(dbName);
    tbl.setTableName(invTblName);
    StorageDescriptor sd=new StorageDescriptor();
    tbl.setSd(sd);
    sd.setCols(invCols);
    sd.setCompressed(false);
    sd.setNumBuckets(1);
    sd.setParameters(new HashMap<String,String>());
    sd.getParameters().put("test_param_1","Use this for comments etc");
    sd.setBucketCols(new ArrayList<String>(2));
    sd.getBucketCols().add("name");
    sd.setSerdeInfo(new SerDeInfo());
    sd.getSerdeInfo().setName(tbl.getTableName());
    sd.getSerdeInfo().setParameters(new HashMap<String,String>());
    sd.getSerdeInfo().getParameters().put(org.apache.hadoop.hive.serde.Constants.SERIALIZATION_FORMAT,"1");
    boolean failed=false;
    try {
      client.createTable(tbl);
    }
 catch (    InvalidObjectException ex) {
      failed=true;
    }
    if (!failed) {
      assertTrue("Able to create table with invalid name: " + invTblName,false);
    }
    ArrayList<FieldSchema> cols=new ArrayList<FieldSchema>(2);
    cols.add(new FieldSchema("name",Constants.STRING_TYPE_NAME,""));
    cols.add(new FieldSchema("income",Constants.INT_TYPE_NAME,""));
    tbl.setTableName(tblName);
    tbl.getSd().setCols(cols);
    client.createTable(tbl);
    Table tbl2=client.getTable(dbName,tblName);
    failed=false;
    try {
      tbl2.setTableName(invTblName);
      tbl2.getSd().setCols(invCols);
      client.alter_table(dbName,tblName,tbl2);
    }
 catch (    InvalidOperationException ex) {
      failed=true;
    }
    if (!failed) {
      assertTrue("Able to rename table with invalid name: " + invTblName,false);
    }
    tbl2.setTableName(tblName + "_renamed");
    tbl2.getSd().setCols(cols);
    tbl2.getSd().setNumBuckets(32);
    client.alter_table(dbName,tblName,tbl2);
    Table tbl3=client.getTable(dbName,tbl2.getTableName());
    assertEquals("Alter table didn't succeed. Num buckets is different ",tbl2.getSd().getNumBuckets(),tbl3.getSd().getNumBuckets());
    FileSystem fs=FileSystem.get((new Path(tbl.getSd().getLocation())).toUri(),hiveConf);
    assertFalse("old table location still exists",fs.exists(new Path(tbl.getSd().getLocation())));
    assertTrue("data did not move to new location",fs.exists(new Path(tbl3.getSd().getLocation())));
    assertEquals("alter table didn't move data correct location",tbl3.getSd().getLocation(),tbl2.getSd().getLocation());
  }
 catch (  Exception e) {
    System.err.println(StringUtils.stringifyException(e));
    System.err.println("testSimpleTable() failed.");
    throw e;
  }
}
