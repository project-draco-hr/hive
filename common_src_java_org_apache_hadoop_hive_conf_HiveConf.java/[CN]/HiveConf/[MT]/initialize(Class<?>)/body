{
  hiveJar=(new JobConf(cls)).getJar();
  origProp=getUnderlyingProps();
  URL hconfurl=getClassLoader().getResource("hive-default.xml");
  if (hconfurl == null) {
    l4j.debug("hive-default.xml not found.");
  }
 else {
    addResource(hconfurl);
  }
  URL hsiteurl=getClassLoader().getResource("hive-site.xml");
  if (hsiteurl == null) {
    l4j.debug("hive-site.xml not found.");
  }
 else {
    addResource(hsiteurl);
  }
  URL hadoopconfurl=getClassLoader().getResource("hadoop-default.xml");
  if (hadoopconfurl == null) {
    hadoopconfurl=getClassLoader().getResource("hadoop-site.xml");
  }
  if (hadoopconfurl != null) {
    String conffile=hadoopconfurl.getPath();
    this.setVar(ConfVars.HADOOPCONF,conffile.substring(0,conffile.lastIndexOf('/')));
  }
  applySystemProperties();
  if (hiveJar == null) {
    hiveJar=this.get(ConfVars.HIVEJAR.varname);
  }
  if (auxJars == null) {
    auxJars=this.get(ConfVars.HIVEAUXJARS.varname);
  }
}
