{
  if (context.conf.getBoolVar(HiveConf.ConfVars.HIVE_AUTO_SORTMERGE_JOIN) == false) {
    fallbackToReduceSideJoin(joinOp,context);
    return null;
  }
  Class<? extends BigTableSelectorForAutoSMJ> bigTableMatcherClass=null;
  try {
    String selector=HiveConf.getVar(context.parseContext.getConf(),HiveConf.ConfVars.HIVE_AUTO_SORTMERGE_JOIN_BIGTABLE_SELECTOR);
    bigTableMatcherClass=JavaUtils.loadClass(selector);
  }
 catch (  ClassNotFoundException e) {
    throw new SemanticException(e.getMessage());
  }
  BigTableSelectorForAutoSMJ bigTableMatcher=ReflectionUtils.newInstance(bigTableMatcherClass,null);
  JoinDesc joinDesc=joinOp.getConf();
  JoinCondDesc[] joinCondns=joinDesc.getConds();
  Set<Integer> joinCandidates=MapJoinProcessor.getBigTableCandidates(joinCondns);
  if (joinCandidates.isEmpty()) {
    return false;
  }
  int mapJoinConversionPos=bigTableMatcher.getBigTablePosition(context.parseContext,joinOp,joinCandidates);
  if (mapJoinConversionPos < 0) {
    fallbackToReduceSideJoin(joinOp,context);
    return null;
  }
  if (checkConvertJoinSMBJoin(joinOp,context,mapJoinConversionPos,tezBucketJoinProcCtx)) {
    convertJoinSMBJoin(joinOp,context,mapJoinConversionPos,tezBucketJoinProcCtx.getNumBuckets(),true);
  }
 else {
    fallbackToReduceSideJoin(joinOp,context);
  }
  return null;
}
