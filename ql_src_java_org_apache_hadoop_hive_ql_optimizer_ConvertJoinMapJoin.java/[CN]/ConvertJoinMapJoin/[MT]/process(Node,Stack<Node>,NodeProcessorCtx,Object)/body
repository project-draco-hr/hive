{
  OptimizeTezProcContext context=(OptimizeTezProcContext)procCtx;
  if (!context.conf.getBoolVar(HiveConf.ConfVars.HIVECONVERTJOIN)) {
    return null;
  }
  JoinOperator joinOp=(JoinOperator)nd;
  int numBuckets=-1;
  int estimatedBuckets=-1;
  for (  Operator<? extends OperatorDesc> parentOp : joinOp.getParentOperators()) {
    if (parentOp.getOpTraits().getNumBuckets() > 0) {
      numBuckets=(numBuckets < parentOp.getOpTraits().getNumBuckets()) ? parentOp.getOpTraits().getNumBuckets() : numBuckets;
    }
    ReduceSinkOperator rs=(ReduceSinkOperator)parentOp;
    estimatedBuckets=(estimatedBuckets < rs.getConf().getNumReducers()) ? rs.getConf().getNumReducers() : estimatedBuckets;
  }
  if (numBuckets <= 0) {
    numBuckets=estimatedBuckets;
    if (numBuckets <= 0) {
      numBuckets=1;
    }
  }
  LOG.info("Estimated number of buckets " + numBuckets);
  int mapJoinConversionPos=mapJoinConversionPos(joinOp,context,numBuckets);
  if (mapJoinConversionPos < 0) {
    return null;
  }
  if (context.conf.getBoolVar(HiveConf.ConfVars.HIVE_CONVERT_JOIN_BUCKET_MAPJOIN_TEZ)) {
    if (convertJoinBucketMapJoin(joinOp,context,mapJoinConversionPos)) {
      return null;
    }
  }
  LOG.info("Convert to non-bucketed map join");
  MapJoinOperator mapJoinOp=convertJoinMapJoin(joinOp,context,mapJoinConversionPos);
  mapJoinOp.setOpTraits(new OpTraits(null,-1));
  for (  Operator<? extends OperatorDesc> childOp : mapJoinOp.getChildOperators()) {
    setAllChildrenTraitsToNull(childOp);
  }
  return null;
}
