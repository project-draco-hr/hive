{
  if (!(joinOp.getParentOperators().get(0) instanceof ReduceSinkOperator)) {
    LOG.info("Operator is " + joinOp.getParentOperators().get(0).getName() + ". Cannot convert to bucket map join");
    return false;
  }
  ReduceSinkOperator rs=(ReduceSinkOperator)joinOp.getParentOperators().get(bigTablePosition);
  List<List<String>> parentColNames=rs.getOpTraits().getBucketColNames();
  Operator<? extends OperatorDesc> parentOfParent=rs.getParentOperators().get(0);
  List<List<String>> grandParentColNames=parentOfParent.getOpTraits().getBucketColNames();
  int numBuckets=parentOfParent.getOpTraits().getNumBuckets();
  if (checkColEquality(grandParentColNames,parentColNames,rs.getColumnExprMap(),tezBucketJoinProcCtx) == false) {
    LOG.info("No info available to check for bucket map join. Cannot convert");
    return false;
  }
  if (numBuckets < 0) {
    numBuckets=rs.getConf().getNumReducers();
  }
  tezBucketJoinProcCtx.setNumBuckets(numBuckets);
  return true;
}
