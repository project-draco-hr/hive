{
  if (!getClass().equals(other.getClass())) {
    return getClass().getName().compareTo(other.getClass().getName());
  }
  int lastComparison=0;
  lastComparison=Boolean.valueOf(isSetSessionHandle()).compareTo(other.isSetSessionHandle());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetSessionHandle()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.sessionHandle,other.sessionHandle);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetParentCatalogName()).compareTo(other.isSetParentCatalogName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetParentCatalogName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.parentCatalogName,other.parentCatalogName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetParentSchemaName()).compareTo(other.isSetParentSchemaName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetParentSchemaName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.parentSchemaName,other.parentSchemaName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetParentTableName()).compareTo(other.isSetParentTableName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetParentTableName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.parentTableName,other.parentTableName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetForeignCatalogName()).compareTo(other.isSetForeignCatalogName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetForeignCatalogName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.foreignCatalogName,other.foreignCatalogName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetForeignSchemaName()).compareTo(other.isSetForeignSchemaName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetForeignSchemaName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.foreignSchemaName,other.foreignSchemaName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  lastComparison=Boolean.valueOf(isSetForeignTableName()).compareTo(other.isSetForeignTableName());
  if (lastComparison != 0) {
    return lastComparison;
  }
  if (isSetForeignTableName()) {
    lastComparison=org.apache.thrift.TBaseHelper.compareTo(this.foreignTableName,other.foreignTableName);
    if (lastComparison != 0) {
      return lastComparison;
    }
  }
  return 0;
}
