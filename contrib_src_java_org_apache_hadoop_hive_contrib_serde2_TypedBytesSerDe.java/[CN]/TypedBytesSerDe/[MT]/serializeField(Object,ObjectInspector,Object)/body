{
switch (oi.getCategory()) {
case PRIMITIVE:
{
      PrimitiveObjectInspector poi=(PrimitiveObjectInspector)oi;
switch (poi.getPrimitiveCategory()) {
case VOID:
{
          return;
        }
case BOOLEAN:
{
        BooleanObjectInspector boi=(BooleanObjectInspector)poi;
        BooleanWritable r=reuse == null ? new BooleanWritable() : (BooleanWritable)reuse;
        r.set(boi.get(o));
        tbOut.write(r);
        return;
      }
case BYTE:
{
      ByteObjectInspector boi=(ByteObjectInspector)poi;
      ByteWritable r=reuse == null ? new ByteWritable() : (ByteWritable)reuse;
      r.set(boi.get(o));
      tbOut.write(r);
      return;
    }
case SHORT:
{
    ShortObjectInspector spoi=(ShortObjectInspector)poi;
    ShortWritable r=reuse == null ? new ShortWritable() : (ShortWritable)reuse;
    r.set(spoi.get(o));
    tbOut.write(r);
    return;
  }
case INT:
{
  IntObjectInspector ioi=(IntObjectInspector)poi;
  IntWritable r=reuse == null ? new IntWritable() : (IntWritable)reuse;
  r.set(ioi.get(o));
  tbOut.write(r);
  return;
}
case LONG:
{
LongObjectInspector loi=(LongObjectInspector)poi;
LongWritable r=reuse == null ? new LongWritable() : (LongWritable)reuse;
r.set(loi.get(o));
tbOut.write(r);
return;
}
case FLOAT:
{
FloatObjectInspector foi=(FloatObjectInspector)poi;
FloatWritable r=reuse == null ? new FloatWritable() : (FloatWritable)reuse;
r.set(foi.get(o));
tbOut.write(r);
return;
}
case DOUBLE:
{
DoubleObjectInspector doi=(DoubleObjectInspector)poi;
DoubleWritable r=reuse == null ? new DoubleWritable() : (DoubleWritable)reuse;
r.set(doi.get(o));
tbOut.write(r);
return;
}
case STRING:
{
StringObjectInspector soi=(StringObjectInspector)poi;
Text t=soi.getPrimitiveWritableObject(o);
tbOut.write(t);
return;
}
default :
{
throw new RuntimeException("Unrecognized type: " + poi.getPrimitiveCategory());
}
}
}
case LIST:
case MAP:
case STRUCT:
{
String s=SerDeUtils.getJSONString(o,oi);
Text t=reuse == null ? new Text() : (Text)reuse;
t.set(s);
tbOut.write(t);
}
default :
{
throw new RuntimeException("Unrecognized type: " + oi.getCategory());
}
}
}
