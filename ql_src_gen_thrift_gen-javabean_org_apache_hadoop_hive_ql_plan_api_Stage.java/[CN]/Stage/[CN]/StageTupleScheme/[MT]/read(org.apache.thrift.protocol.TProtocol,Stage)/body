{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(7);
  if (incoming.get(0)) {
    struct.stageId=iprot.readString();
    struct.setStageIdIsSet(true);
  }
  if (incoming.get(1)) {
    struct.stageType=org.apache.hadoop.hive.ql.plan.api.StageType.findByValue(iprot.readI32());
    struct.setStageTypeIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TMap _map89=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.stageAttributes=new HashMap<String,String>(2 * _map89.size);
      String _key90;
      String _val91;
      for (int _i92=0; _i92 < _map89.size; ++_i92) {
        _key90=iprot.readString();
        _val91=iprot.readString();
        struct.stageAttributes.put(_key90,_val91);
      }
    }
    struct.setStageAttributesIsSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map93=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.I64,iprot.readI32());
      struct.stageCounters=new HashMap<String,Long>(2 * _map93.size);
      String _key94;
      long _val95;
      for (int _i96=0; _i96 < _map93.size; ++_i96) {
        _key94=iprot.readString();
        _val95=iprot.readI64();
        struct.stageCounters.put(_key94,_val95);
      }
    }
    struct.setStageCountersIsSet(true);
  }
  if (incoming.get(4)) {
{
      org.apache.thrift.protocol.TList _list97=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.taskList=new ArrayList<Task>(_list97.size);
      Task _elem98;
      for (int _i99=0; _i99 < _list97.size; ++_i99) {
        _elem98=new Task();
        _elem98.read(iprot);
        struct.taskList.add(_elem98);
      }
    }
    struct.setTaskListIsSet(true);
  }
  if (incoming.get(5)) {
    struct.done=iprot.readBool();
    struct.setDoneIsSet(true);
  }
  if (incoming.get(6)) {
    struct.started=iprot.readBool();
    struct.setStartedIsSet(true);
  }
}
