{
  TTupleProtocol iprot=(TTupleProtocol)prot;
  BitSet incoming=iprot.readBitSet(7);
  if (incoming.get(0)) {
    struct.stageId=iprot.readString();
    struct.setStageIdIsSet(true);
  }
  if (incoming.get(1)) {
    struct.stageType=StageType.findByValue(iprot.readI32());
    struct.setStageTypeIsSet(true);
  }
  if (incoming.get(2)) {
{
      org.apache.thrift.protocol.TMap _map89=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,iprot.readI32());
      struct.stageAttributes=new HashMap<String,String>(2 * _map89.size);
      for (int _i90=0; _i90 < _map89.size; ++_i90) {
        String _key91;
        String _val92;
        _key91=iprot.readString();
        _val92=iprot.readString();
        struct.stageAttributes.put(_key91,_val92);
      }
    }
    struct.setStageAttributesIsSet(true);
  }
  if (incoming.get(3)) {
{
      org.apache.thrift.protocol.TMap _map93=new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.I64,iprot.readI32());
      struct.stageCounters=new HashMap<String,Long>(2 * _map93.size);
      for (int _i94=0; _i94 < _map93.size; ++_i94) {
        String _key95;
        long _val96;
        _key95=iprot.readString();
        _val96=iprot.readI64();
        struct.stageCounters.put(_key95,_val96);
      }
    }
    struct.setStageCountersIsSet(true);
  }
  if (incoming.get(4)) {
{
      org.apache.thrift.protocol.TList _list97=new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,iprot.readI32());
      struct.taskList=new ArrayList<Task>(_list97.size);
      for (int _i98=0; _i98 < _list97.size; ++_i98) {
        Task _elem99;
        _elem99=new Task();
        _elem99.read(iprot);
        struct.taskList.add(_elem99);
      }
    }
    struct.setTaskListIsSet(true);
  }
  if (incoming.get(5)) {
    struct.done=iprot.readBool();
    struct.setDoneIsSet(true);
  }
  if (incoming.get(6)) {
    struct.started=iprot.readBool();
    struct.setStartedIsSet(true);
  }
}
