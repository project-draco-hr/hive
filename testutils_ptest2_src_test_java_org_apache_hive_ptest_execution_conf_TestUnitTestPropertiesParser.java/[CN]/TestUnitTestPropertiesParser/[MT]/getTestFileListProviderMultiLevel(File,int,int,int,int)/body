{
  return new FileListProvider(){
    @Override public Collection<File> listFiles(    File directory,    String[] extensions,    boolean recursive){
      List<File> list=new LinkedList<>();
      File l0F=new File(baseDir,Joiner.on("/").join("target","test","p1","p2"));
      for (int i=0; i < l0Count; i++) {
        list.add(new File(l0F,"Test" + TOP_LEVEL_TEST_NAME + (i + 1)+ ".class"));
      }
      File l1F=new File(baseDir,Joiner.on("/").join(MODULE1_NAME,"target","test"));
      for (int i=0; i < l1Count; i++) {
        list.add(new File(l1F,"Test" + MODULE1_TEST_NAME + (i + 1)+ ".class"));
      }
      File l2F=new File(baseDir,Joiner.on("/").join(TWO_LEVEL_MODULE1_NAME,"target","test"));
      for (int i=0; i < l2Count; i++) {
        list.add(new File(l2F,"Test" + TWO_LEVEL_TEST_NAME + (i + 1)+ ".class"));
      }
      File l3F=new File(baseDir,Joiner.on("/").join(THREE_LEVEL_MODULE1_NAME,"target","test"));
      for (int i=0; i < l3Count; i++) {
        list.add(new File(l3F,"Test" + THREE_LEVEL_TEST_NAME + (i + 1)+ ".class"));
      }
      return list;
    }
  }
;
}
