{
  if (usage > threshold) {
    flushInternal();
    if (excluded == 0) {
      LOG.info("Top-N hash is disabled");
      isEnabled=false;
    }
    return FORWARD;
  }
  int size=indexes.size();
  int index=size < topN ? size : evicted;
  keys[index]=Arrays.copyOf(key.getBytes(),key.getLength());
  distKeyLengths[index]=key.getDistKeyLength();
  hashes[index]=key.hashCode();
  if (null != indexes.store(index)) {
    return FORWARD;
  }
  if (size == topN) {
    evicted=indexes.removeBiggest();
    if (index == evicted) {
      excluded++;
      return EXCLUDE;
    }
    removed(evicted);
  }
  return index;
}
