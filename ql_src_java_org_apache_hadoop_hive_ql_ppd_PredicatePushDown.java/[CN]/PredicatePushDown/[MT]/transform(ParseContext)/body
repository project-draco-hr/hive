{
  pGraphContext=pctx;
  OpWalkerInfo opWalkerInfo=new OpWalkerInfo(pGraphContext);
  Map<Rule,NodeProcessor> opRules=new LinkedHashMap<Rule,NodeProcessor>();
  opRules.put(new RuleRegExp("R1",FilterOperator.getOperatorName() + "%"),OpProcFactory.getFilterProc());
  opRules.put(new RuleRegExp("R2",PTFOperator.getOperatorName() + "%"),OpProcFactory.getPTFProc());
  opRules.put(new RuleRegExp("R3",CommonJoinOperator.getOperatorName() + "%"),OpProcFactory.getJoinProc());
  opRules.put(new RuleRegExp("R4",TableScanOperator.getOperatorName() + "%"),OpProcFactory.getTSProc());
  opRules.put(new RuleRegExp("R5",ScriptOperator.getOperatorName() + "%"),OpProcFactory.getSCRProc());
  opRules.put(new RuleRegExp("R6",LimitOperator.getOperatorName() + "%"),OpProcFactory.getLIMProc());
  opRules.put(new RuleRegExp("R7",UDTFOperator.getOperatorName() + "%"),OpProcFactory.getUDTFProc());
  opRules.put(new RuleRegExp("R8",LateralViewForwardOperator.getOperatorName() + "%"),OpProcFactory.getLVFProc());
  opRules.put(new RuleRegExp("R9",LateralViewJoinOperator.getOperatorName() + "%"),OpProcFactory.getLVJProc());
  opRules.put(new RuleRegExp("R10",ReduceSinkOperator.getOperatorName() + "%"),OpProcFactory.getRSProc());
  Dispatcher disp=new DefaultRuleDispatcher(OpProcFactory.getDefaultProc(),opRules,opWalkerInfo);
  GraphWalker ogw=new DefaultGraphWalker(disp);
  ArrayList<Node> topNodes=new ArrayList<Node>();
  topNodes.addAll(pGraphContext.getTopOps().values());
  ogw.startWalking(topNodes,null);
  LOG.debug("After PPD:\n" + Operator.toString(pctx.getTopOps().values()));
  return pGraphContext;
}
