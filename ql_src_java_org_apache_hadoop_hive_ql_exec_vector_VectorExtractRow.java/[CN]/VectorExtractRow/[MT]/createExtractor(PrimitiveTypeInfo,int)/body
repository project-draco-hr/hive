{
  PrimitiveCategory primitiveCategory=primitiveTypeInfo.getPrimitiveCategory();
  Extractor extracter;
switch (primitiveCategory) {
case VOID:
    extracter=new VoidExtractor(columnIndex);
  break;
case BOOLEAN:
extracter=new BooleanExtractor(columnIndex);
break;
case BYTE:
extracter=new ByteExtractor(columnIndex);
break;
case SHORT:
extracter=new ShortExtractor(columnIndex);
break;
case INT:
extracter=new IntExtractor(columnIndex);
break;
case LONG:
extracter=new LongExtractor(columnIndex);
break;
case TIMESTAMP:
extracter=new TimestampExtractor(columnIndex);
break;
case DATE:
extracter=new DateExtractor(columnIndex);
break;
case FLOAT:
extracter=new FloatExtractor(columnIndex);
break;
case DOUBLE:
extracter=new DoubleExtractor(columnIndex);
break;
case BINARY:
extracter=new BinaryExtractorByValue(columnIndex);
break;
case STRING:
extracter=new StringExtractorByValue(columnIndex);
break;
case VARCHAR:
extracter=new VarCharExtractorByValue((VarcharTypeInfo)primitiveTypeInfo,columnIndex);
break;
case CHAR:
extracter=new CharExtractorByValue((CharTypeInfo)primitiveTypeInfo,columnIndex);
break;
case DECIMAL:
extracter=new DecimalExtractor((DecimalTypeInfo)primitiveTypeInfo,columnIndex);
break;
case INTERVAL_YEAR_MONTH:
extracter=new IntervalYearMonthExtractor(columnIndex);
break;
case INTERVAL_DAY_TIME:
extracter=new IntervalDayTimeExtractor(columnIndex);
break;
default :
throw new HiveException("No vector row extracter for primitive category " + primitiveCategory);
}
return extracter;
}
