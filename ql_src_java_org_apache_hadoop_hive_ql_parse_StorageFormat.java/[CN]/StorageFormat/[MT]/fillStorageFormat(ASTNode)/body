{
switch (child.getToken().getType()) {
case HiveParser.TOK_TABLEFILEFORMAT:
    if (child.getChildCount() < 2) {
      throw new SemanticException("Incomplete specification of File Format. " + "You must provide InputFormat, OutputFormat.");
    }
  inputFormat=ensureClassExists(BaseSemanticAnalyzer.unescapeSQLString(child.getChild(0).getText()));
outputFormat=ensureClassExists(BaseSemanticAnalyzer.unescapeSQLString(child.getChild(1).getText()));
if (child.getChildCount() == 3) {
serde=ensureClassExists(BaseSemanticAnalyzer.unescapeSQLString(child.getChild(2).getText()));
}
break;
case HiveParser.TOK_STORAGEHANDLER:
storageHandler=ensureClassExists(BaseSemanticAnalyzer.unescapeSQLString(child.getChild(0).getText()));
if (child.getChildCount() == 2) {
BaseSemanticAnalyzer.readProps((ASTNode)(child.getChild(1).getChild(0)),serdeProps);
}
break;
case HiveParser.TOK_FILEFORMAT_GENERIC:
ASTNode grandChild=(ASTNode)child.getChild(0);
String name=(grandChild == null ? "" : grandChild.getText()).trim().toUpperCase();
processStorageFormat(name);
break;
default :
return false;
}
return true;
}
