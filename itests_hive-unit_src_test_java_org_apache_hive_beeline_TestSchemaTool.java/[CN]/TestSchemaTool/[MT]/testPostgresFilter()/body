{
  String testScript[]={"-- this is a comment","DROP TABLE IF EXISTS fooTab;",HiveSchemaHelper.PostgresCommandParser.POSTGRES_STANDARD_STRINGS_OPT + ";","CREATE TABLE fooTab(id INTEGER);","DROP TABLE footab;","-- ending comment"};
  String expectedScriptWithOptionPresent[]={"DROP TABLE IF EXISTS fooTab",HiveSchemaHelper.PostgresCommandParser.POSTGRES_STANDARD_STRINGS_OPT,"CREATE TABLE fooTab(id INTEGER)","DROP TABLE footab"};
  NestedScriptParser noDbOptParser=HiveSchemaHelper.getDbCommandParser("postgres");
  String expectedSQL=StringUtils.join(expectedScriptWithOptionPresent,System.getProperty("line.separator")) + System.getProperty("line.separator");
  File testScriptFile=generateTestScript(testScript);
  String flattenedSql=noDbOptParser.buildCommand(testScriptFile.getParentFile().getPath(),testScriptFile.getName());
  assertEquals(expectedSQL,flattenedSql);
  String expectedScriptWithOptionAbsent[]={"DROP TABLE IF EXISTS fooTab","CREATE TABLE fooTab(id INTEGER)","DROP TABLE footab"};
  NestedScriptParser dbOptParser=HiveSchemaHelper.getDbCommandParser("postgres",PostgresCommandParser.POSTGRES_SKIP_STANDARD_STRINGS_DBOPT,null,null,null);
  expectedSQL=StringUtils.join(expectedScriptWithOptionAbsent,System.getProperty("line.separator")) + System.getProperty("line.separator");
  testScriptFile=generateTestScript(testScript);
  flattenedSql=dbOptParser.buildCommand(testScriptFile.getParentFile().getPath(),testScriptFile.getName());
  assertEquals(expectedSQL,flattenedSql);
}
