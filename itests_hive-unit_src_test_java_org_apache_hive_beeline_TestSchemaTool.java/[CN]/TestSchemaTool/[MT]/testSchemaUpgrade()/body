{
  boolean foundException=false;
  schemaTool.doInit("0.7.0");
  try {
    schemaTool.verifySchemaVersion();
  }
 catch (  HiveMetaException e) {
    foundException=true;
  }
  if (!foundException) {
    throw new Exception("Hive operations shouldn't pass with older version schema");
  }
  String invalidPreUpgradeScript=writeDummyPreUpgradeScript(0,"upgrade-0.11.0-to-0.12.0.derby.sql","foo bar;");
  String validPreUpgradeScript0=writeDummyPreUpgradeScript(0,"upgrade-0.12.0-to-0.13.0.derby.sql","CREATE TABLE schema_test0 (id integer);");
  String validPreUpgradeScript1=writeDummyPreUpgradeScript(1,"upgrade-0.12.0-to-0.13.0.derby.sql","CREATE TABLE schema_test1 (id integer);");
  schemaTool.setVerbose(true);
  OutputStream stderr=new ByteArrayOutputStream();
  PrintStream errPrintStream=new PrintStream(stderr);
  System.setErr(errPrintStream);
  OutputStream stdout=new ByteArrayOutputStream();
  PrintStream outPrintStream=new PrintStream(stdout);
  System.setOut(outPrintStream);
  schemaTool.doUpgrade("0.7.0");
  assertTrue(stderr.toString().contains(invalidPreUpgradeScript));
  assertTrue(stderr.toString().contains("foo"));
  assertFalse(stderr.toString().contains(validPreUpgradeScript0));
  assertFalse(stderr.toString().contains(validPreUpgradeScript1));
  assertTrue(stdout.toString().contains(validPreUpgradeScript0));
  assertTrue(stdout.toString().contains(validPreUpgradeScript1));
  schemaTool.verifySchemaVersion();
}
