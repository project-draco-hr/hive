{
  TestInStream.OutputCollector collect=new TestInStream.OutputCollector();
  final int COUNT=16384;
  BitFieldWriter out=new BitFieldWriter(new OutStream("test",500,codec,collect),1);
  TestInStream.PositionCollector[] positions=new TestInStream.PositionCollector[COUNT];
  for (int i=0; i < COUNT; ++i) {
    positions[i]=new TestInStream.PositionCollector();
    out.getPosition(positions[i]);
    if (i < COUNT / 2) {
      out.write(i & 1);
    }
 else {
      out.write((i / 3) & 1);
    }
  }
  out.flush();
  ByteBuffer inBuf=ByteBuffer.allocate(collect.buffer.size());
  collect.buffer.setByteBuffer(inBuf,0,collect.buffer.size());
  inBuf.flip();
  BitFieldReader in=new BitFieldReader(InStream.create("test",inBuf,codec,500),1);
  for (int i=0; i < COUNT; ++i) {
    int x=in.next();
    if (i < COUNT / 2) {
      assertEquals(i & 1,x);
    }
 else {
      assertEquals((i / 3) & 1,x);
    }
  }
  for (int i=COUNT - 1; i >= 0; --i) {
    in.seek(positions[i]);
    int x=in.next();
    if (i < COUNT / 2) {
      assertEquals(i & 1,x);
    }
 else {
      assertEquals((i / 3) & 1,x);
    }
  }
}
