{
  if (o[0] == null) {
    forward(nullCols);
    return;
  }
  if (!pathParsed) {
    for (int i=0; i < numCols; ++i) {
      paths[i]=((StringObjectInspector)inputOIs[i + 1]).getPrimitiveJavaObject(o[i + 1]);
    }
    pathParsed=true;
  }
  String jsonStr=((StringObjectInspector)inputOIs[0]).getPrimitiveJavaObject(o[0]);
  if (jsonStr == null) {
    forward(nullCols);
    return;
  }
  try {
    JSONObject jsonObj=new JSONObject(jsonStr);
    for (int i=0; i < numCols; ++i) {
      if (jsonObj.isNull(paths[i])) {
        retCols[i]=null;
      }
 else {
        if (retCols[i] == null) {
          retCols[i]=cols[i];
        }
        retCols[i].set(jsonObj.getString(paths[i]));
      }
    }
    forward(retCols);
    return;
  }
 catch (  JSONException e) {
    if (!seenErrors) {
      LOG.error("The input is not a valid JSON string: " + jsonStr + ". Skipping such error messages in the future.");
      seenErrors=true;
    }
    forward(nullCols);
    return;
  }
catch (  Throwable e) {
    LOG.error("JSON parsing/evaluation exception" + e);
    forward(nullCols);
  }
}
