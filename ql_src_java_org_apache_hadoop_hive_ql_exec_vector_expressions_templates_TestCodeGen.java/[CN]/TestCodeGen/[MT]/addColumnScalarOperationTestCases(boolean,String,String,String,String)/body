{
  TestSuiteClassName template=TestSuiteClassName.TestColumnScalarOperationVectorExpressionEvaluation;
  String templateFile=CodeGen.joinPath(this.testTemplateDirectory,template.toString() + ".txt");
  String templateString=removeTemplateComments(CodeGen.readFile(templateFile));
  for (  Boolean[] testMatrix : new Boolean[][]{{false,true,true,true},{false,false,false,false},{true,false,true,false},{true,true,false,false},{true,false,false,true}}) {
    String testCase=templateString;
    testCase=testCase.replaceAll("<TestName>","test" + vectorExpClassName + createNullRepeatingNameFragment("Out",testMatrix[0],testMatrix[1])+ createNullRepeatingNameFragment("Col",testMatrix[2],testMatrix[3]));
    testCase=testCase.replaceAll("<VectorExpClassName>",vectorExpClassName);
    testCase=testCase.replaceAll("<InputColumnVectorType>",inputColumnVectorType);
    testCase=testCase.replaceAll("<OutputColumnVectorType>",outputColumnVectorType);
    testCase=testCase.replaceAll("<ScalarType>",scalarType);
    testCase=testCase.replaceAll("<CamelCaseScalarType>",CodeGen.getCamelCaseType(scalarType));
    testCase=testCase.replaceAll("<InitOuputColHasNulls>",testMatrix[0].toString());
    testCase=testCase.replaceAll("<InitOuputColIsRepeating>",testMatrix[1].toString());
    testCase=testCase.replaceAll("<ColumnHasNulls>",testMatrix[2].toString());
    testCase=testCase.replaceAll("<ColumnIsRepeating>",testMatrix[3].toString());
    if (op1IsCol) {
      testCase=testCase.replaceAll("<ConstructorParams>","0, scalarValue");
    }
 else {
      testCase=testCase.replaceAll("<ConstructorParams>","scalarValue, 0");
    }
    testsuites.get(template).append(testCase);
  }
}
