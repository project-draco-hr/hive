{
  if (eof) {
    return false;
  }
  try {
    if (firstRecord) {
      firstRecord=false;
    }
 else     if (!realReader.nextKeyValue()) {
      eof=true;
      return false;
    }
    final ObjectArrayWritable tmpCurValue=realReader.getCurrentValue();
    if (value != tmpCurValue) {
      final Object[] arrValue=value.get();
      final Object[] arrCurrent=tmpCurValue.get();
      if (value != null && arrValue.length == arrCurrent.length) {
        System.arraycopy(arrCurrent,0,arrValue,0,arrCurrent.length);
      }
 else {
        if (arrValue.length != arrCurrent.length) {
          throw new IOException("DeprecatedParquetHiveInput : size of object differs. Value" + " size :  " + arrValue.length + ", Current Object size : "+ arrCurrent.length);
        }
 else {
          throw new IOException("DeprecatedParquetHiveInput can not support RecordReaders that" + " don't return same key & value & value is null");
        }
      }
    }
    return true;
  }
 catch (  final InterruptedException e) {
    throw new IOException(e);
  }
}
