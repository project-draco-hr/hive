{
  ConstantVectorExpression longCve=new ConstantVectorExpression(0,17);
  ConstantVectorExpression doubleCve=new ConstantVectorExpression(1,17.34);
  String str="alpha";
  ConstantVectorExpression bytesCve=new ConstantVectorExpression(2,str.getBytes());
  HiveDecimal decVal=HiveDecimal.create("25.8");
  ConstantVectorExpression decimalCve=new ConstantVectorExpression(3,decVal);
  ConstantVectorExpression nullCve=new ConstantVectorExpression(4,"string",true);
  int size=20;
  VectorizedRowBatch vrg=VectorizedRowGroupGenUtil.getVectorizedRowBatch(size,5,0);
  LongColumnVector lcv=(LongColumnVector)vrg.cols[0];
  DoubleColumnVector dcv=new DoubleColumnVector(size);
  BytesColumnVector bcv=new BytesColumnVector(size);
  DecimalColumnVector dv=new DecimalColumnVector(5,1);
  BytesColumnVector bcvn=new BytesColumnVector(size);
  vrg.cols[1]=dcv;
  vrg.cols[2]=bcv;
  vrg.cols[3]=dv;
  vrg.cols[4]=bcvn;
  longCve.evaluate(vrg);
  doubleCve.evaluate(vrg);
  bytesCve.evaluate(vrg);
  decimalCve.evaluate(vrg);
  nullCve.evaluate(vrg);
  assertTrue(lcv.isRepeating);
  assertTrue(dcv.isRepeating);
  assertTrue(bcv.isRepeating);
  assertEquals(17,lcv.vector[0]);
  assertTrue(17.34 == dcv.vector[0]);
  assertTrue(bcvn.isRepeating);
  assertTrue(bcvn.isNull[0]);
  assertTrue(!bcvn.noNulls);
  byte[] alphaBytes="alpha".getBytes();
  assertTrue(bcv.length[0] == alphaBytes.length);
  assertTrue(sameFirstKBytes(alphaBytes,bcv.vector[0],alphaBytes.length));
  ((BytesColumnVector)(vrg.cols[2])).vector[0]="beta".getBytes();
  bytesCve.evaluate(vrg);
  assertTrue(bcv.length[0] == alphaBytes.length);
  assertTrue(sameFirstKBytes(alphaBytes,bcv.vector[0],alphaBytes.length));
  assertTrue(25.8 == dv.vector[0].getHiveDecimal().doubleValue());
  ((DecimalColumnVector)(vrg.cols[3])).vector[0].set(HiveDecimal.create("39.7"));
  decimalCve.evaluate(vrg);
  assertTrue(25.8 == dv.vector[0].getHiveDecimal().doubleValue());
}
