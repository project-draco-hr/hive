{
  Preconditions.checkArgument(client != null && client.getState() == CuratorFrameworkState.STARTED,"client is not started");
synchronized (this) {
    if (stateChangeListeners.isEmpty())     return;
    ChildData childData=event.getData();
    if (childData == null)     return;
    String nodeName=extractNodeName(childData);
    if (!nodeName.startsWith(WORKER_PREFIX))     return;
    LOG.info("{} for zknode {} in llap namespace",event.getType(),childData.getPath());
    ServiceInstance instance=extractServiceInstance(event,childData);
    for (    ServiceInstanceStateChangeListener listener : stateChangeListeners) {
switch (event.getType()) {
case CHILD_ADDED:
        listener.onCreate(instance);
      break;
case CHILD_UPDATED:
    listener.onUpdate(instance);
  break;
case CHILD_REMOVED:
listener.onRemove(instance);
break;
default :
}
}
}
}
