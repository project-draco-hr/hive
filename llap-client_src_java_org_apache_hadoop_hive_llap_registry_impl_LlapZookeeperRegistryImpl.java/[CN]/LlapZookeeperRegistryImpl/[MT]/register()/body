{
  ServiceRecord srv=new ServiceRecord();
  Endpoint rpcEndpoint=getRpcEndpoint();
  srv.addInternalEndpoint(rpcEndpoint);
  srv.addInternalEndpoint(getMngEndpoint());
  srv.addInternalEndpoint(getShuffleEndpoint());
  srv.addExternalEndpoint(getServicesEndpoint());
  srv.addInternalEndpoint(getOutputFormatEndpoint());
  for (  Map.Entry<String,String> kv : this.conf) {
    if (kv.getKey().startsWith(HiveConf.PREFIX_LLAP) || kv.getKey().startsWith(HiveConf.PREFIX_HIVE_LLAP)) {
      srv.set(kv.getKey(),kv.getValue());
    }
  }
  srv.set(UNIQUE_IDENTIFIER,uniq.toString());
  try {
    znode=new PersistentEphemeralNode(zooKeeperClient,PersistentEphemeralNode.Mode.EPHEMERAL_SEQUENTIAL,pathPrefix,encoder.toBytes(srv));
    znode.start();
    long znodeCreationTimeout=120;
    if (!znode.waitForInitialCreate(znodeCreationTimeout,TimeUnit.SECONDS)) {
      throw new Exception("Max znode creation wait time: " + znodeCreationTimeout + "s exhausted");
    }
    znodePath=znode.getActualPath();
    if (HiveConf.getBoolVar(conf,ConfVars.LLAP_VALIDATE_ACLS)) {
      checkAcls();
    }
    if (zooKeeperClient.checkExists().forPath(znodePath) == null) {
      throw new Exception("Unable to create znode for this LLAP instance on ZooKeeper.");
    }
    LOG.info("Registered node. Created a znode on ZooKeeper for LLAP instance: rpc: {}, shuffle: {}," + " webui: {}, mgmt: {}, znodePath: {} ",rpcEndpoint,getShuffleEndpoint(),getServicesEndpoint(),getMngEndpoint(),znodePath);
  }
 catch (  Exception e) {
    LOG.error("Unable to create a znode for this server instance",e);
    CloseableUtils.closeQuietly(znode);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Created zknode with path: {} service record: {}",znodePath,srv);
  }
  return uniq.toString();
}
