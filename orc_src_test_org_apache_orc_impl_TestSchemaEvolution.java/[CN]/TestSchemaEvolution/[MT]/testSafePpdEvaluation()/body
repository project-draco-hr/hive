{
  TypeDescription fileStruct1=TypeDescription.createStruct().addField("f1",TypeDescription.createInt()).addField("f2",TypeDescription.createString()).addField("f3",TypeDescription.createDecimal().withPrecision(38).withScale(10));
  SchemaEvolution same1=new SchemaEvolution(fileStruct1,null);
  assertTrue(same1.isPPDSafeConversion(0));
  assertFalse(same1.hasConversion());
  TypeDescription readerStruct1=TypeDescription.createStruct().addField("f1",TypeDescription.createInt()).addField("f2",TypeDescription.createString()).addField("f3",TypeDescription.createDecimal().withPrecision(38).withScale(10));
  SchemaEvolution both1=new SchemaEvolution(fileStruct1,readerStruct1,null);
  assertFalse(both1.hasConversion());
  assertTrue(both1.isPPDSafeConversion(0));
  assertTrue(both1.isPPDSafeConversion(1));
  assertTrue(both1.isPPDSafeConversion(2));
  assertTrue(both1.isPPDSafeConversion(3));
  TypeDescription readerStruct1diff=TypeDescription.createStruct().addField("f1",TypeDescription.createLong()).addField("f2",TypeDescription.createString()).addField("f3",TypeDescription.createDecimal().withPrecision(38).withScale(10));
  SchemaEvolution both1diff=new SchemaEvolution(fileStruct1,readerStruct1diff,null);
  assertTrue(both1diff.hasConversion());
  assertFalse(both1diff.isPPDSafeConversion(0));
  assertTrue(both1diff.isPPDSafeConversion(1));
  assertTrue(both1diff.isPPDSafeConversion(2));
  assertTrue(both1diff.isPPDSafeConversion(3));
  TypeDescription readerStruct1diffPrecision=TypeDescription.createStruct().addField("f1",TypeDescription.createInt()).addField("f2",TypeDescription.createString()).addField("f3",TypeDescription.createDecimal().withPrecision(12).withScale(10));
  SchemaEvolution both1diffPrecision=new SchemaEvolution(fileStruct1,readerStruct1diffPrecision,new boolean[]{true,false,false,true});
  assertTrue(both1diffPrecision.hasConversion());
  assertFalse(both1diffPrecision.isPPDSafeConversion(0));
  assertFalse(both1diffPrecision.isPPDSafeConversion(1));
  assertFalse(both1diffPrecision.isPPDSafeConversion(2));
  assertFalse(both1diffPrecision.isPPDSafeConversion(3));
  readerStruct1=TypeDescription.createStruct().addField("f1",TypeDescription.createInt()).addField("f2",TypeDescription.createString()).addField("f3",TypeDescription.createDecimal().withPrecision(38).withScale(10)).addField("f4",TypeDescription.createBoolean());
  both1=new SchemaEvolution(fileStruct1,readerStruct1,null);
  assertTrue(both1.hasConversion());
  assertFalse(both1.isPPDSafeConversion(0));
  assertTrue(both1.isPPDSafeConversion(1));
  assertTrue(both1.isPPDSafeConversion(2));
  assertTrue(both1.isPPDSafeConversion(3));
  assertFalse(both1.isPPDSafeConversion(4));
}
