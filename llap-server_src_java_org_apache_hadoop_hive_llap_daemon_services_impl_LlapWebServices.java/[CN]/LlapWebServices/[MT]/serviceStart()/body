{
  String bindAddress="0.0.0.0";
  Configuration conf=getConfig();
  if (UserGroupInformation.isSecurityEnabled() && HiveConf.getBoolVar(conf,ConfVars.LLAP_WEB_AUTO_AUTH)) {
    conf.set("hadoop.http.authentication.type","kerberos");
    conf.set("hadoop.http.authentication.kerberos.principal",HiveConf.getVar(conf,ConfVars.LLAP_KERBEROS_PRINCIPAL));
    conf.set("hadoop.http.authentication.kerberos.keytab",HiveConf.getVar(conf,ConfVars.LLAP_KERBEROS_KEYTAB_FILE));
    String authFilterName=AuthenticationFilterInitializer.class.getName();
    String initializers=conf.getTrimmed("hadoop.http.filter.initializers");
    if (initializers == null || initializers.isEmpty()) {
      initializers=authFilterName;
    }
 else     if (!initializers.contains(authFilterName)) {
      initializers=authFilterName + "," + initializers;
    }
    conf.set("hadoop.http.filter.initializers",initializers);
  }
  Builder<Object> webAppBuilder=WebApps.$for("llap").at(bindAddress).at(port).with(conf);
  if (UserGroupInformation.isSecurityEnabled()) {
    webAppBuilder.withHttpPolicy(conf,Policy.HTTPS_ONLY);
  }
  this.webApp=webAppBuilder.start();
}
