{
  ObjectInspector inspector;
synchronized (TestOrcFile.class) {
    inspector=ObjectInspectorFactory.getReflectionObjectInspector(Long.class,ObjectInspectorFactory.ObjectInspectorOptions.JAVA);
  }
  long[] inp=new long[]{20,2,3,2,1,3,17,71,35,2,1,139,2,2,3,1783,475,2,1,1,3,1,3,2,32,1,2,3,1,8,30,1,3,414,1,1,135,3,3,1,414,2,1,2,2,594,2,5,6,4,11,1,2,2,1,1,52,4,1,2,7,1,17,334,1,2,1,2,2,6,1,266,1,2,217,2,6,2,13,2,2,1,2,3,5,1,2,1,7244,11813,1,33,2,-1,1,2,3,13,1,92,3,13,5,14,9,141,12,6,15,25,1,1,1,46,2,1,1,141,3,1,1,1,1,2,1,4,34,5,78,8,1,2,2,1,9,10,2,1,4,13,1,5,4,4,19,5,1,1,1,68,33,399,1,1885,25,5,2,4,1,1,2,16,1,2966,3,1,1,25501,1,1,1,66,1,3,8,131,14,5,1,2,2,1,1,8,1,1,2,1,5,9,2,3,112,13,2,2,1,5,10,3,1,1,13,2,3,4,1,3,1,1,2,1,1,2,4,2,207,1,1,2,4,3,3,2,2,16};
  List<Long> input=Lists.newArrayList(Longs.asList(inp));
  Writer writer=OrcFile.createWriter(testFilePath,OrcFile.writerOptions(conf).inspector(inspector).stripeSize(100000).compress(CompressionKind.NONE).bufferSize(10000));
  for (  Long l : input) {
    writer.addRow(l);
  }
  writer.close();
  Reader reader=OrcFile.createReader(testFilePath,OrcFile.readerOptions(conf).filesystem(fs));
  RecordReader rows=reader.rows();
  int idx=0;
  while (rows.hasNext()) {
    Object row=rows.next(null);
    assertEquals(input.get(idx++).longValue(),((LongWritable)row).get());
  }
}
