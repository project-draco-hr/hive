{
  VectorColumnAssign[] vcas=new VectorColumnAssign[outputBatch.numCols];
  for (int i=0; i < writables.length; ++i) {
    if (writables[i] == null) {
      assert(outputBatch.cols[i] == null);
      vcas[i]=buildObjectAssign(outputBatch,i,PrimitiveCategory.VOID);
    }
 else     if (writables[i] instanceof ByteWritable) {
      vcas[i]=buildObjectAssign(outputBatch,i,PrimitiveCategory.BYTE);
    }
 else     if (writables[i] instanceof ShortWritable) {
      vcas[i]=buildObjectAssign(outputBatch,i,PrimitiveCategory.SHORT);
    }
 else     if (writables[i] instanceof IntWritable) {
      vcas[i]=buildObjectAssign(outputBatch,i,PrimitiveCategory.INT);
    }
 else     if (writables[i] instanceof LongWritable) {
      vcas[i]=buildObjectAssign(outputBatch,i,PrimitiveCategory.LONG);
    }
 else     if (writables[i] instanceof FloatWritable) {
      vcas[i]=buildObjectAssign(outputBatch,i,PrimitiveCategory.FLOAT);
    }
 else     if (writables[i] instanceof DoubleWritable) {
      vcas[i]=buildObjectAssign(outputBatch,i,PrimitiveCategory.DOUBLE);
    }
 else     if (writables[i] instanceof Text) {
      vcas[i]=buildObjectAssign(outputBatch,i,PrimitiveCategory.STRING);
    }
 else     if (writables[i] instanceof BytesWritable) {
      vcas[i]=buildObjectAssign(outputBatch,i,PrimitiveCategory.BINARY);
    }
 else     if (writables[i] instanceof TimestampWritable) {
      vcas[i]=buildObjectAssign(outputBatch,i,PrimitiveCategory.TIMESTAMP);
    }
 else     if (writables[i] instanceof HiveIntervalYearMonthWritable) {
      vcas[i]=buildObjectAssign(outputBatch,i,PrimitiveCategory.INTERVAL_YEAR_MONTH);
    }
 else     if (writables[i] instanceof HiveIntervalDayTimeWritable) {
      vcas[i]=buildObjectAssign(outputBatch,i,PrimitiveCategory.INTERVAL_DAY_TIME);
    }
 else     if (writables[i] instanceof BooleanWritable) {
      vcas[i]=buildObjectAssign(outputBatch,i,PrimitiveCategory.BOOLEAN);
    }
 else     if (writables[i] instanceof HiveDecimalWritable) {
      vcas[i]=buildObjectAssign(outputBatch,i,PrimitiveCategory.DECIMAL);
    }
 else     if (writables[i] instanceof HiveCharWritable) {
      vcas[i]=buildObjectAssign(outputBatch,i,PrimitiveCategory.CHAR);
    }
 else     if (writables[i] instanceof HiveVarcharWritable) {
      vcas[i]=buildObjectAssign(outputBatch,i,PrimitiveCategory.VARCHAR);
    }
 else {
      throw new HiveException("Unimplemented vector assigner for writable type " + writables[i].getClass());
    }
  }
  return vcas;
}
