{
  DataInputStream dis=null;
  try {
    ByteArrayInputStream bais=new ByteArrayInputStream(in.readBytes());
    dis=new DataInputStream(bais);
    String className=WritableUtils.readString(dis);
    if (writable == null) {
      try {
        Class<? extends Writable> cls=conf.getClassByName(className).asSubclass(Writable.class);
        writable=(Writable)ReflectionUtils.newInstance(cls,conf);
      }
 catch (      ClassNotFoundException e) {
        throw new IOException(e);
      }
    }
 else     if (!writable.getClass().getName().equals(className)) {
      throw new IOException("wrong Writable class given");
    }
    writable.readFields(dis);
    dis.close();
    dis=null;
    return writable;
  }
  finally {
    IOUtils.closeStream(dis);
  }
}
