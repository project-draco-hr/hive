{
  mjdesc.setPosBigTable(0);
  List<ExprNodeDesc> expr=new ArrayList<ExprNodeDesc>();
  expr.add(new ExprNodeColumnDesc(Integer.class,"col1","T",false));
  Map<Byte,List<ExprNodeDesc>> keyMap=new HashMap<Byte,List<ExprNodeDesc>>();
  keyMap.put((byte)0,expr);
  mjdesc.setKeys(keyMap);
  mjdesc.setExprs(keyMap);
  GenericUDFOPEqual udf=new GenericUDFOPEqual();
  ExprNodeGenericFuncDesc equalExprDesc=new ExprNodeGenericFuncDesc();
  equalExprDesc.setTypeInfo(TypeInfoFactory.booleanTypeInfo);
  equalExprDesc.setGenericUDF(udf);
  List<ExprNodeDesc> children1=new ArrayList<ExprNodeDesc>(2);
  children1.add(new ExprNodeColumnDesc(Integer.class,"col2","T1",false));
  children1.add(new ExprNodeColumnDesc(Integer.class,"col3","T2",false));
  equalExprDesc.setChildren(children1);
  List<ExprNodeDesc> filterExpr=new ArrayList<ExprNodeDesc>();
  filterExpr.add(equalExprDesc);
  Map<Byte,List<ExprNodeDesc>> filterMap=new HashMap<Byte,List<ExprNodeDesc>>();
  filterMap.put((byte)0,expr);
  mjdesc.setFilters(filterMap);
}
