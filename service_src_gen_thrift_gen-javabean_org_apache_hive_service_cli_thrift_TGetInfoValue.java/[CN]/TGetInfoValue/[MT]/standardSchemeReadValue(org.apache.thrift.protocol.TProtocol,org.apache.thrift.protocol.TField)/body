{
  _Fields setField=_Fields.findByThriftId(field.id);
  if (setField != null) {
switch (setField) {
case STRING_VALUE:
      if (field.type == STRING_VALUE_FIELD_DESC.type) {
        String stringValue;
        stringValue=iprot.readString();
        return stringValue;
      }
 else {
        org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
        return null;
      }
case SMALL_INT_VALUE:
    if (field.type == SMALL_INT_VALUE_FIELD_DESC.type) {
      Short smallIntValue;
      smallIntValue=iprot.readI16();
      return smallIntValue;
    }
 else {
      org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
      return null;
    }
case INTEGER_BITMASK:
  if (field.type == INTEGER_BITMASK_FIELD_DESC.type) {
    Integer integerBitmask;
    integerBitmask=iprot.readI32();
    return integerBitmask;
  }
 else {
    org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
    return null;
  }
case INTEGER_FLAG:
if (field.type == INTEGER_FLAG_FIELD_DESC.type) {
  Integer integerFlag;
  integerFlag=iprot.readI32();
  return integerFlag;
}
 else {
  org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
  return null;
}
case BINARY_VALUE:
if (field.type == BINARY_VALUE_FIELD_DESC.type) {
Integer binaryValue;
binaryValue=iprot.readI32();
return binaryValue;
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
case LEN_VALUE:
if (field.type == LEN_VALUE_FIELD_DESC.type) {
Long lenValue;
lenValue=iprot.readI64();
return lenValue;
}
 else {
org.apache.thrift.protocol.TProtocolUtil.skip(iprot,field.type);
return null;
}
default :
throw new IllegalStateException("setField wasn't null, but didn't match any of the case statements!");
}
}
 else {
return null;
}
}
