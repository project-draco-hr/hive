{
switch (setField) {
case STRING_VALUE:
    if (value instanceof String) {
      break;
    }
  throw new ClassCastException("Was expecting value of type String for field 'stringValue', but got " + value.getClass().getSimpleName());
case SMALL_INT_VALUE:
if (value instanceof Short) {
  break;
}
throw new ClassCastException("Was expecting value of type Short for field 'smallIntValue', but got " + value.getClass().getSimpleName());
case INTEGER_BITMASK:
if (value instanceof Integer) {
break;
}
throw new ClassCastException("Was expecting value of type Integer for field 'integerBitmask', but got " + value.getClass().getSimpleName());
case INTEGER_FLAG:
if (value instanceof Integer) {
break;
}
throw new ClassCastException("Was expecting value of type Integer for field 'integerFlag', but got " + value.getClass().getSimpleName());
case BINARY_VALUE:
if (value instanceof Integer) {
break;
}
throw new ClassCastException("Was expecting value of type Integer for field 'binaryValue', but got " + value.getClass().getSimpleName());
case LEN_VALUE:
if (value instanceof Long) {
break;
}
throw new ClassCastException("Was expecting value of type Long for field 'lenValue', but got " + value.getClass().getSimpleName());
default :
throw new IllegalArgumentException("Unknown field id " + setField);
}
}
