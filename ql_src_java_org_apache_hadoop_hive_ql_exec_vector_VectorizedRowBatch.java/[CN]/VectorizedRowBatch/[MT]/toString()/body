{
  if (size == 0) {
    return "";
  }
  StringBuilder b=new StringBuilder();
  try {
    if (this.selectedInUse) {
      for (int j=0; j < size; j++) {
        int i=selected[j];
        for (int k=0; k < projectionSize; k++) {
          int projIndex=projectedColumns[k];
          ColumnVector cv=cols[projIndex];
          if (k > 0) {
            b.append('\u0001');
          }
          if (cv.isRepeating) {
            b.append(toUTF8(valueWriters[k].writeValue(cv,0)));
          }
 else {
            b.append(toUTF8(valueWriters[k].writeValue(cv,i)));
          }
        }
        if (j < size - 1) {
          b.append('\n');
        }
      }
    }
 else {
      for (int i=0; i < size; i++) {
        for (int k=0; k < projectionSize; k++) {
          int projIndex=projectedColumns[k];
          ColumnVector cv=cols[projIndex];
          if (k > 0) {
            b.append('\u0001');
          }
          if (cv.isRepeating) {
            b.append(toUTF8(valueWriters[k].writeValue(cv,0)));
          }
 else {
            b.append(toUTF8(valueWriters[k].writeValue(cv,i)));
          }
        }
        if (i < size - 1) {
          b.append('\n');
        }
      }
    }
  }
 catch (  HiveException ex) {
    throw new RuntimeException(ex);
  }
  return b.toString();
}
