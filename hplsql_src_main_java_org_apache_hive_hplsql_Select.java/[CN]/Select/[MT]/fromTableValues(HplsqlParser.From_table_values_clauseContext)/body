{
  StringBuilder sql=new StringBuilder();
  int rows=ctx.from_table_values_row().size();
  sql.append("(");
  for (int i=0; i < rows; i++) {
    int cols=ctx.from_table_values_row(i).expr().size();
    int cols_as=ctx.from_alias_clause().L_ID().size();
    sql.append("SELECT ");
    for (int j=0; j < cols; j++) {
      sql.append(evalPop(ctx.from_table_values_row(i).expr(j)));
      if (j < cols_as) {
        sql.append(" AS ");
        sql.append(ctx.from_alias_clause().L_ID(j));
      }
      if (j + 1 < cols) {
        sql.append(", ");
      }
    }
    sql.append(" FROM " + conf.dualTable);
    if (i + 1 < rows) {
      sql.append("\nUNION ALL\n");
    }
  }
  sql.append(") ");
  if (ctx.from_alias_clause() != null) {
    sql.append(ctx.from_alias_clause().ident().getText());
  }
  exec.stackPush(sql);
  return 0;
}
