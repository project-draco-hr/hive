{
  StringBuilder sql=new StringBuilder();
  if (ctx.T_SELECT() != null) {
    sql.append(ctx.T_SELECT().getText());
  }
  sql.append(" " + evalPop(ctx.select_list()));
  if (ctx.from_clause() != null) {
    sql.append(" " + evalPop(ctx.from_clause()));
  }
 else {
    sql.append(" FROM " + conf.dualTable);
  }
  if (ctx.where_clause() != null) {
    sql.append(" " + evalPop(ctx.where_clause()));
  }
  if (ctx.group_by_clause() != null) {
    sql.append(" " + getText(ctx.group_by_clause()));
  }
  if (ctx.having_clause() != null) {
    sql.append(" " + getText(ctx.having_clause()));
  }
  if (ctx.order_by_clause() != null) {
    sql.append(" " + getText(ctx.order_by_clause()));
  }
  if (ctx.select_options() != null) {
    Var opt=evalPop(ctx.select_options());
    if (!opt.isNull()) {
      sql.append(" " + opt.toString());
    }
  }
  if (ctx.select_list().select_list_limit() != null) {
    sql.append(" LIMIT " + evalPop(ctx.select_list().select_list_limit().expr()));
  }
  exec.stackPush(sql);
  return 0;
}
