{
  int seed=17;
  VectorizedRowBatch b=VectorizedRowGroupGenUtil.getVectorizedRowBatch(VectorizedRowBatch.DEFAULT_SIZE,2,seed);
  LongColumnVector lcv0=(LongColumnVector)b.cols[0];
  LongColumnVector lcv1=(LongColumnVector)b.cols[1];
  b.size=3;
  FilterLongColGreaterLongColumn expr=new FilterLongColGreaterLongColumn(0,1);
  lcv0.vector[0]=10;
  lcv0.vector[1]=10;
  lcv0.vector[2]=10;
  lcv1.vector[0]=20;
  lcv1.vector[1]=1;
  lcv1.vector[2]=7;
  expr.evaluate(b);
  assertEquals(2,b.size);
  assertEquals(1,b.selected[0]);
  assertEquals(2,b.selected[1]);
  lcv0.noNulls=false;
  lcv0.isNull[1]=true;
  expr.evaluate(b);
  assertEquals(1,b.size);
  assertEquals(2,b.selected[0]);
  b.size=3;
  b.selectedInUse=false;
  lcv0.isRepeating=true;
  lcv0.noNulls=true;
  expr.evaluate(b);
  assertEquals(2,b.size);
  b.size=3;
  b.selectedInUse=false;
  lcv0.isNull[0]=true;
  lcv0.noNulls=false;
  expr.evaluate(b);
  assertEquals(0,b.size);
  b.size=3;
  b.selectedInUse=false;
  lcv0.isRepeating=false;
  lcv1.noNulls=false;
  lcv1.isNull[2]=true;
  expr.evaluate(b);
  assertEquals(0,b.size);
}
