{
  super.initializeOp(hconf,reporter,inputObjInspector);
  ArrayList<ObjectInspector> structFieldObjectInspectors=new ArrayList<ObjectInspector>(totalSz);
  for (  Byte alias : order) {
    int sz=conf.getExprs().get(alias).size();
    StructObjectInspector fldObjIns=(StructObjectInspector)((StructObjectInspector)inputObjInspector[alias.intValue()]).getStructFieldRef("VALUE").getFieldObjectInspector();
    for (int i=0; i < sz; i++) {
      structFieldObjectInspectors.add(ObjectInspectorUtils.getStandardObjectInspector(fldObjIns.getAllStructFieldRefs().get(i).getFieldObjectInspector(),ObjectInspectorCopyOption.KEEP));
    }
  }
  joinOutputObjectInspector=ObjectInspectorFactory.getStandardStructObjectInspector(conf.getOutputColumnNames(),structFieldObjectInspectors);
  LOG.info("JOIN " + ((StructObjectInspector)joinOutputObjectInspector).getTypeName() + " totalsz = "+ totalSz);
  initializeChildren(hconf,reporter,new ObjectInspector[]{joinOutputObjectInspector});
}
