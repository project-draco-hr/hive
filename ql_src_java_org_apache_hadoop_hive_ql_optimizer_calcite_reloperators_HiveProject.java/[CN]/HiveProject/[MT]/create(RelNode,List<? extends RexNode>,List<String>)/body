{
  RelOptCluster cluster=child.getCluster();
  if (fieldNames != null && !Util.isDistinct(fieldNames)) {
    String msg="Select list contains multiple expressions with the same name." + fieldNames;
    throw new CalciteSemanticException(msg);
  }
  RelDataType rowType=RexUtil.createStructType(cluster.getTypeFactory(),exps,fieldNames);
  return create(cluster,child,exps,rowType,Collections.<RelCollation>emptyList());
}
