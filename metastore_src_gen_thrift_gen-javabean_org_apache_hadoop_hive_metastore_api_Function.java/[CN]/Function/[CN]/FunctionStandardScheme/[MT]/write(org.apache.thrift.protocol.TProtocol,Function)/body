{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.functionName != null) {
    oprot.writeFieldBegin(FUNCTION_NAME_FIELD_DESC);
    oprot.writeString(struct.functionName);
    oprot.writeFieldEnd();
  }
  if (struct.dbName != null) {
    oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
    oprot.writeString(struct.dbName);
    oprot.writeFieldEnd();
  }
  if (struct.className != null) {
    oprot.writeFieldBegin(CLASS_NAME_FIELD_DESC);
    oprot.writeString(struct.className);
    oprot.writeFieldEnd();
  }
  if (struct.ownerName != null) {
    oprot.writeFieldBegin(OWNER_NAME_FIELD_DESC);
    oprot.writeString(struct.ownerName);
    oprot.writeFieldEnd();
  }
  if (struct.ownerType != null) {
    oprot.writeFieldBegin(OWNER_TYPE_FIELD_DESC);
    oprot.writeI32(struct.ownerType.getValue());
    oprot.writeFieldEnd();
  }
  oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
  oprot.writeI32(struct.createTime);
  oprot.writeFieldEnd();
  if (struct.functionType != null) {
    oprot.writeFieldBegin(FUNCTION_TYPE_FIELD_DESC);
    oprot.writeI32(struct.functionType.getValue());
    oprot.writeFieldEnd();
  }
  if (struct.resourceUris != null) {
    oprot.writeFieldBegin(RESOURCE_URIS_FIELD_DESC);
{
      oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT,struct.resourceUris.size()));
      for (      ResourceUri _iter381 : struct.resourceUris) {
        _iter381.write(oprot);
      }
      oprot.writeListEnd();
    }
    oprot.writeFieldEnd();
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
