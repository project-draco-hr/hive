{
  if (replicationSpec == null) {
    replicationSpec=new ReplicationSpec();
  }
  if (tableHandle == null) {
    replicationSpec.setNoop(true);
  }
  OutputStream out=fs.create(metadataPath);
  JsonGenerator jgen=(new JsonFactory()).createJsonGenerator(out);
  jgen.writeStartObject();
  jgen.writeStringField("version",METADATA_FORMAT_VERSION);
  if (METADATA_FORMAT_FORWARD_COMPATIBLE_VERSION != null) {
    jgen.writeStringField("fcversion",METADATA_FORMAT_FORWARD_COMPATIBLE_VERSION);
  }
  if (replicationSpec.isInReplicationScope()) {
    for (    ReplicationSpec.KEY key : ReplicationSpec.KEY.values()) {
      String value=replicationSpec.get(key);
      if (value != null) {
        jgen.writeStringField(key.toString(),value);
      }
    }
    if (tableHandle != null) {
      Table ttable=tableHandle.getTTable();
      ttable.putToParameters(ReplicationSpec.KEY.CURR_STATE_ID.toString(),replicationSpec.getCurrentReplicationState());
      if ((ttable.getParameters().containsKey("EXTERNAL")) && (ttable.getParameters().get("EXTERNAL").equalsIgnoreCase("TRUE"))) {
        ttable.putToParameters("EXTERNAL","FALSE");
      }
      if (ttable.isSetTableType() && ttable.getTableType().equalsIgnoreCase(TableType.EXTERNAL_TABLE.toString())) {
        ttable.setTableType(TableType.MANAGED_TABLE.toString());
      }
    }
  }
 else {
  }
  if ((tableHandle != null) && (!replicationSpec.isNoop())) {
    TSerializer serializer=new TSerializer(new TJSONProtocol.Factory());
    try {
      jgen.writeStringField("table",serializer.toString(tableHandle.getTTable(),"UTF-8"));
      jgen.writeFieldName("partitions");
      jgen.writeStartArray();
      if (partitions != null) {
        for (        org.apache.hadoop.hive.ql.metadata.Partition partition : partitions) {
          Partition tptn=partition.getTPartition();
          if (replicationSpec.isInReplicationScope()) {
            tptn.putToParameters(ReplicationSpec.KEY.CURR_STATE_ID.toString(),replicationSpec.getCurrentReplicationState());
            if ((tptn.getParameters().containsKey("EXTERNAL")) && (tptn.getParameters().get("EXTERNAL").equalsIgnoreCase("TRUE"))) {
              tptn.putToParameters("EXTERNAL","FALSE");
            }
          }
          jgen.writeString(serializer.toString(tptn,"UTF-8"));
          jgen.flush();
        }
      }
      jgen.writeEndArray();
    }
 catch (    TException e) {
      throw new SemanticException(ErrorMsg.GENERIC_ERROR.getMsg("Exception while serializing the metastore objects"),e);
    }
  }
  jgen.writeEndObject();
  jgen.close();
}
