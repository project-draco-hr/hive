{
  this.context=context;
  repositoryType=context.getString(REPOSITORY_TYPE,GIT).trim();
  repository=Preconditions.checkNotNull(context.getString(REPOSITORY),REPOSITORY).trim();
  repositoryName=Preconditions.checkNotNull(context.getString(REPOSITORY_NAME),REPOSITORY_NAME).trim();
  if (GIT.equals(repositoryType)) {
    branch=Preconditions.checkNotNull(context.getString(BRANCH),BRANCH).trim();
  }
 else   if (SVN.equals(repositoryType)) {
    branch=Strings.nullToEmpty(null);
  }
 else {
    throw new IllegalArgumentException("Unkown repository type '" + repositoryType + "'");
  }
  antArgs=Preconditions.checkNotNull(context.getString(ANT_ARGS),ANT_ARGS).trim();
  antTestArgs=context.getString(ANT_TEST_ARGS,"").trim();
  antEnvOpts=context.getString(ANT_ENV_OPTS,"").trim();
  antTestTarget=context.getString(ANT_TEST_TARGET,"test").trim();
  javaHome=context.getString(JAVA_HOME,"").trim();
  javaHomeForTests=context.getString(JAVA_HOME_TEST,"").trim();
  patch=Strings.nullToEmpty(null);
  jiraName=Strings.nullToEmpty(null);
  jiraUrl=context.getString(JIRA_URL,"").trim();
  jiraUser=context.getString(JIRA_USER,"").trim();
  jiraPassword=context.getString(JIRA_PASSWORD,"").trim();
  jenkinsURL=context.getString(JENKINS_URL,"https://builds.apache.org/job").trim();
}
