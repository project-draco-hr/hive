{
  int rightBorderInd=indexMap.size() - 1;
  int minInd=indexMap.get((String)min[1]);
  int maxInd=indexMap.get((String)max[1]);
  if (minInd == maxInd) {
    return min[0];
  }
  double decimalmin=0;
  double decimalmax=0;
  if (colStatTypes[colStatIndex] == ColStatType.Decimal) {
    BigDecimal bdmin=new BigDecimal(min[0].toString());
    decimalmin=bdmin.doubleValue();
    BigDecimal bdmax=new BigDecimal(max[0].toString());
    decimalmax=bdmax.doubleValue();
  }
  if (aggrTypes[colStatIndex] == AggrType.Max) {
    if (minInd < maxInd) {
      if (colStatTypes[colStatIndex] == ColStatType.Long) {
        return (Long)((Long)min[0] + (((Long)max[0] - (Long)min[0]) * (rightBorderInd - minInd) / (maxInd - minInd)));
      }
 else       if (colStatTypes[colStatIndex] == ColStatType.Double) {
        return (Double)((Double)min[0] + (((Double)max[0] - (Double)min[0]) * (rightBorderInd - minInd) / (maxInd - minInd)));
      }
 else {
        double ret=decimalmin + (decimalmax - decimalmin) * (rightBorderInd - minInd) / (maxInd - minInd);
        return String.valueOf(ret);
      }
    }
 else {
      if (colStatTypes[colStatIndex] == ColStatType.Long) {
        return (Long)((Long)min[0] + ((Long)max[0] - (Long)min[0]) * minInd / (minInd - maxInd));
      }
 else       if (colStatTypes[colStatIndex] == ColStatType.Double) {
        return (Double)((Double)min[0] + ((Double)max[0] - (Double)min[0]) * minInd / (minInd - maxInd));
      }
 else {
        double ret=decimalmin + (decimalmax - decimalmin) * minInd / (minInd - maxInd);
        return String.valueOf(ret);
      }
    }
  }
 else {
    if (minInd < maxInd) {
      if (colStatTypes[colStatIndex] == ColStatType.Long) {
        Long ret=(Long)max[0] - ((Long)max[0] - (Long)min[0]) * maxInd / (maxInd - minInd);
        return ret;
      }
 else       if (colStatTypes[colStatIndex] == ColStatType.Double) {
        Double ret=(Double)max[0] - ((Double)max[0] - (Double)min[0]) * maxInd / (maxInd - minInd);
        return ret;
      }
 else {
        double ret=decimalmax - (decimalmax - decimalmin) * maxInd / (maxInd - minInd);
        return String.valueOf(ret);
      }
    }
 else {
      if (colStatTypes[colStatIndex] == ColStatType.Long) {
        Long ret=(Long)max[0] - ((Long)max[0] - (Long)min[0]) * (rightBorderInd - maxInd) / (minInd - maxInd);
        return ret;
      }
 else       if (colStatTypes[colStatIndex] == ColStatType.Double) {
        Double ret=(Double)max[0] - ((Double)max[0] - (Double)min[0]) * (rightBorderInd - maxInd) / (minInd - maxInd);
        return ret;
      }
 else {
        double ret=decimalmax - (decimalmax - decimalmin) * (rightBorderInd - maxInd) / (minInd - maxInd);
        return String.valueOf(ret);
      }
    }
  }
}
