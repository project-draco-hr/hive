{
  initFields();
  int mutable_bitField0_=0;
  com.google.protobuf.UnknownFieldSet.Builder unknownFields=com.google.protobuf.UnknownFieldSet.newBuilder();
  try {
    boolean done=false;
    while (!done) {
      int tag=input.readTag();
switch (tag) {
case 0:
        done=true;
      break;
default :
{
      if (!parseUnknownField(input,unknownFields,extensionRegistry,tag)) {
        done=true;
      }
      break;
    }
case 8:
{
    bitField0_|=0x00000001;
    footerLength_=input.readUInt64();
    break;
  }
case 16:
{
  int rawValue=input.readEnum();
  org.apache.hadoop.hive.ql.io.orc.OrcProto.CompressionKind value=org.apache.hadoop.hive.ql.io.orc.OrcProto.CompressionKind.valueOf(rawValue);
  if (value == null) {
    unknownFields.mergeVarintField(2,rawValue);
  }
 else {
    bitField0_|=0x00000002;
    compression_=value;
  }
  break;
}
case 24:
{
bitField0_|=0x00000004;
compressionBlockSize_=input.readUInt64();
break;
}
case 32:
{
if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
version_=new java.util.ArrayList<java.lang.Integer>();
mutable_bitField0_|=0x00000008;
}
version_.add(input.readUInt32());
break;
}
case 34:
{
int length=input.readRawVarint32();
int limit=input.pushLimit(length);
if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
version_=new java.util.ArrayList<java.lang.Integer>();
mutable_bitField0_|=0x00000008;
}
while (input.getBytesUntilLimit() > 0) {
version_.add(input.readUInt32());
}
input.popLimit(limit);
break;
}
case 64002:
{
bitField0_|=0x00000008;
magic_=input.readBytes();
break;
}
}
}
}
 catch (com.google.protobuf.InvalidProtocolBufferException e) {
throw e.setUnfinishedMessage(this);
}
catch (java.io.IOException e) {
throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
}
 finally {
if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
version_=java.util.Collections.unmodifiableList(version_);
}
this.unknownFields=unknownFields.build();
makeExtensionsImmutable();
}
}
