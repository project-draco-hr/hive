{
  AnnotateOpTraitsProcCtx annotateCtx=new AnnotateOpTraitsProcCtx(pctx);
  Map<Rule,NodeProcessor> opRules=new LinkedHashMap<Rule,NodeProcessor>();
  opRules.put(new RuleRegExp("TS",TableScanOperator.getOperatorName() + "%"),OpTraitsRulesProcFactory.getTableScanRule());
  opRules.put(new RuleRegExp("RS",ReduceSinkOperator.getOperatorName() + "%"),OpTraitsRulesProcFactory.getReduceSinkRule());
  opRules.put(new RuleRegExp("JOIN",JoinOperator.getOperatorName() + "%"),OpTraitsRulesProcFactory.getJoinRule());
  opRules.put(new RuleRegExp("MAPJOIN",MapJoinOperator.getOperatorName() + "%"),OpTraitsRulesProcFactory.getMultiParentRule());
  opRules.put(new RuleRegExp("SMB",SMBMapJoinOperator.getOperatorName() + "%"),OpTraitsRulesProcFactory.getMultiParentRule());
  opRules.put(new RuleRegExp("MUX",MuxOperator.getOperatorName() + "%"),OpTraitsRulesProcFactory.getMultiParentRule());
  opRules.put(new RuleRegExp("DEMUX",DemuxOperator.getOperatorName() + "%"),OpTraitsRulesProcFactory.getMultiParentRule());
  opRules.put(new RuleRegExp("UNION",UnionOperator.getOperatorName() + "%"),OpTraitsRulesProcFactory.getMultiParentRule());
  opRules.put(new RuleRegExp("GBY",GroupByOperator.getOperatorName() + "%"),OpTraitsRulesProcFactory.getGroupByRule());
  opRules.put(new RuleRegExp("SEL",SelectOperator.getOperatorName() + "%"),OpTraitsRulesProcFactory.getSelectRule());
  Dispatcher disp=new DefaultRuleDispatcher(OpTraitsRulesProcFactory.getDefaultRule(),opRules,annotateCtx);
  GraphWalker ogw=new LevelOrderWalker(disp,0);
  ArrayList<Node> topNodes=new ArrayList<Node>();
  topNodes.addAll(pctx.getTopOps().values());
  ogw.startWalking(topNodes,null);
  return pctx;
}
