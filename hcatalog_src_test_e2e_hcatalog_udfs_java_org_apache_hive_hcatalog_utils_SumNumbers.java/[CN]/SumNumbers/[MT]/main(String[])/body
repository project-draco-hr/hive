{
  Configuration conf=new Configuration();
  args=new GenericOptionsParser(conf,args).getRemainingArgs();
  String[] otherArgs=new String[4];
  int j=0;
  for (int i=0; i < args.length; i++) {
    if (args[i].equals("-libjars")) {
      conf.set("tmpjars",args[i + 1]);
      i=i + 1;
    }
 else {
      otherArgs[j++]=args[i];
    }
  }
  if (otherArgs.length != 4) {
    System.err.println("Usage: hadoop jar sumnumbers <serveruri> <output dir> <-libjars hive-hcat jar>\n" + "The <tab|ctrla> argument controls the output delimiter.\n" + "The hcat jar location should be specified as file://<full path to jar>\n");
    System.exit(2);
  }
  String serverUri=otherArgs[0];
  String tableName=NUMBERS_TABLE_NAME;
  String outputDir=otherArgs[1];
  String dbName="default";
  String principalID=System.getProperty(HCatConstants.HCAT_METASTORE_PRINCIPAL);
  if (principalID != null)   conf.set(HCatConstants.HCAT_METASTORE_PRINCIPAL,principalID);
  Job job=new Job(conf,"sumnumbers");
  HCatInputFormat.setInput(job,dbName,tableName);
  job.setInputFormatClass(HCatInputFormat.class);
  job.setOutputFormatClass(TextOutputFormat.class);
  job.setJarByClass(SumNumbers.class);
  job.setMapperClass(SumMapper.class);
  job.setReducerClass(SumReducer.class);
  job.setMapOutputKeyClass(IntWritable.class);
  job.setMapOutputValueClass(ArrayWritable.class);
  job.setOutputKeyClass(LongWritable.class);
  job.setOutputValueClass(Text.class);
  FileOutputFormat.setOutputPath(job,new Path(outputDir));
  System.exit(job.waitForCompletion(true) ? 0 : 1);
}
