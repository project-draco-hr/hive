{
  String columnNames="int,double,boolean,float,string,tinyint,smallint,bigint";
  String columnTypes="int,double,boolean,float,string,tinyint,smallint,bigint";
  String fileSchema="message hive_schema {\n" + "  optional int32 int;\n" + "  optional double double;\n"+ "  optional boolean boolean;\n"+ "  optional float float;\n"+ "  optional binary string (UTF8);\n"+ "  optional int32 tinyint;\n"+ "  optional int32 smallint;\n"+ "  optional int64 bigint;\n"+ "}\n";
  ArrayWritable hiveRecord=createGroup(createInt(1),createDouble(1.0),createBoolean(true),createFloat(1.0f),createString("one"),createTinyInt((byte)1),createSmallInt((short)1),createBigInt((long)1));
  writeParquetRecord(fileSchema,getParquetWritable(columnNames,columnTypes,hiveRecord));
  startMessage();
  startField("int",0);
  addInteger(1);
  endField("int",0);
  startField("double",1);
  addDouble(1.0);
  endField("double",1);
  startField("boolean",2);
  addBoolean(true);
  endField("boolean",2);
  startField("float",3);
  addFloat(1.0f);
  endField("float",3);
  startField("string",4);
  addString("one");
  endField("string",4);
  startField("tinyint",5);
  addInteger(1);
  endField("tinyint",5);
  startField("smallint",6);
  addInteger(1);
  endField("smallint",6);
  startField("bigint",7);
  addLong(1);
  endField("bigint",7);
  endMessage();
}
