{
  this.oi0=oi0;
  this.oi1=oi1;
  TypeInfo type0=TypeInfoUtils.getTypeInfoFromObjectInspector(oi0);
  TypeInfo type1=TypeInfoUtils.getTypeInfoFromObjectInspector(oi1);
  if (type0.equals(TypeInfoFactory.stringTypeInfo) && type1.equals(TypeInfoFactory.stringTypeInfo)) {
    soi0=(StringObjectInspector)oi0;
    soi1=(StringObjectInspector)oi1;
    if (soi0.preferWritable() || soi1.preferWritable()) {
      compareType=CompareType.COMPARE_TEXT;
    }
 else {
      compareType=CompareType.COMPARE_STRING;
    }
  }
 else   if (type0.equals(TypeInfoFactory.intTypeInfo) && type1.equals(TypeInfoFactory.intTypeInfo)) {
    compareType=CompareType.COMPARE_INT;
    ioi0=(IntObjectInspector)oi0;
    ioi1=(IntObjectInspector)oi1;
  }
 else   if (type0.equals(TypeInfoFactory.longTypeInfo) && type1.equals(TypeInfoFactory.longTypeInfo)) {
    compareType=CompareType.COMPARE_LONG;
    loi0=(LongObjectInspector)oi0;
    loi1=(LongObjectInspector)oi1;
  }
 else   if (type0.equals(TypeInfoFactory.byteTypeInfo) && type1.equals(TypeInfoFactory.byteTypeInfo)) {
    compareType=CompareType.COMPARE_BYTE;
    byoi0=(ByteObjectInspector)oi0;
    byoi1=(ByteObjectInspector)oi1;
  }
 else   if (type0.equals(TypeInfoFactory.booleanTypeInfo) && type1.equals(TypeInfoFactory.booleanTypeInfo)) {
    compareType=CompareType.COMPARE_BOOL;
    boi0=(BooleanObjectInspector)oi0;
    boi1=(BooleanObjectInspector)oi1;
  }
 else {
    compareType=CompareType.OTHER;
  }
}
