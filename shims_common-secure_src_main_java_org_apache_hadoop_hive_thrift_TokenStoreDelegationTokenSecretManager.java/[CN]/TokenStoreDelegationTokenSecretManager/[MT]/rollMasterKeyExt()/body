{
  Map<Integer,DelegationKey> keys=reloadKeys();
  int currentKeyId=super.currentId;
  HiveDelegationTokenSupport.rollMasterKey(TokenStoreDelegationTokenSecretManager.this);
  List<DelegationKey> keysAfterRoll=Arrays.asList(getAllKeys());
  for (  DelegationKey key : keysAfterRoll) {
    keys.remove(key.getKeyId());
    if (key.getKeyId() == currentKeyId) {
      tokenStore.updateMasterKey(currentKeyId,encodeWritable(key));
    }
  }
  for (  DelegationKey expiredKey : keys.values()) {
    LOGGER.info("Removing expired key id={}",expiredKey.getKeyId());
    try {
      tokenStore.removeMasterKey(expiredKey.getKeyId());
    }
 catch (    Exception e) {
      LOGGER.error("Error removing expired key id={}",expiredKey.getKeyId(),e);
    }
  }
}
