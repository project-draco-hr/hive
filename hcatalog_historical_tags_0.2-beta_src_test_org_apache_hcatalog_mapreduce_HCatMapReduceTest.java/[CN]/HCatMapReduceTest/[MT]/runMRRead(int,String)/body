{
  MapRead.readCount=0;
  readRecords.clear();
  Configuration conf=new Configuration();
  Job job=new Job(conf,"hcat mapreduce read test");
  job.setJarByClass(this.getClass());
  job.setMapperClass(HCatMapReduceTest.MapRead.class);
  job.setInputFormatClass(HCatInputFormat.class);
  job.setOutputFormatClass(TextOutputFormat.class);
  HCatTableInfo inputInfo=HCatTableInfo.getInputTableInfo(thriftUri,null,dbName,tableName,filter);
  HCatInputFormat.setInput(job,inputInfo);
  job.setMapOutputKeyClass(BytesWritable.class);
  job.setMapOutputValueClass(Text.class);
  job.setNumReduceTasks(0);
  Path path=new Path(fs.getWorkingDirectory(),"mapred/testHCatMapReduceOutput");
  if (fs.exists(path)) {
    fs.delete(path,true);
  }
  TextOutputFormat.setOutputPath(job,path);
  job.waitForCompletion(true);
  Assert.assertEquals(readCount,MapRead.readCount);
  return readRecords;
}
