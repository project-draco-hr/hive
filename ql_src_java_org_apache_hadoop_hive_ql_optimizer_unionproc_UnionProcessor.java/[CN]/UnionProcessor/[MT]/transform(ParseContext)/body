{
  Map<Rule,NodeProcessor> opRules=new LinkedHashMap<Rule,NodeProcessor>();
  opRules.put(new RuleRegExp("R1",ReduceSinkOperator.getOperatorName() + "%.*" + UnionOperator.getOperatorName()+ "%"),UnionProcFactory.getMapRedUnion());
  opRules.put(new RuleRegExp("R2",UnionOperator.getOperatorName() + "%.*" + UnionOperator.getOperatorName()+ "%"),UnionProcFactory.getUnknownUnion());
  opRules.put(new RuleRegExp("R3",TableScanOperator.getOperatorName() + "%.*" + UnionOperator.getOperatorName()+ "%"),UnionProcFactory.getMapUnion());
  UnionProcContext uCtx=new UnionProcContext();
  uCtx.setParseContext(pCtx);
  Dispatcher disp=new DefaultRuleDispatcher(UnionProcFactory.getNoUnion(),opRules,uCtx);
  LevelOrderWalker ogw=new LevelOrderWalker(disp);
  ogw.setNodeTypes(UnionOperator.class);
  ArrayList<Node> topNodes=new ArrayList<Node>();
  topNodes.addAll(pCtx.getTopOps().values());
  ogw.startWalking(topNodes,null);
  pCtx.setUCtx(uCtx);
  HiveConf conf=pCtx.getConf();
  opRules.clear();
  if (conf.getBoolVar(HiveConf.ConfVars.HIVE_OPTIMIZE_UNION_REMOVE) && !conf.getVar(HiveConf.ConfVars.HIVE_EXECUTION_ENGINE).equals("spark")) {
    if (!conf.getBoolVar(HiveConf.ConfVars.HIVE_HADOOP_SUPPORTS_SUBDIRECTORIES)) {
      throw new SemanticException(ErrorMsg.HIVE_UNION_REMOVE_OPTIMIZATION_NEEDS_SUBDIRECTORIES.getMsg());
    }
    opRules.put(new RuleRegExp("R5",UnionOperator.getOperatorName() + "%" + ".*"+ FileSinkOperator.getOperatorName()+ "%"),UnionProcFactory.getUnionNoProcessFile());
    disp=new DefaultRuleDispatcher(UnionProcFactory.getNoUnion(),opRules,uCtx);
    ogw=new LevelOrderWalker(disp);
    ogw.setNodeTypes(FileSinkOperator.class);
    topNodes.clear();
    topNodes.addAll(pCtx.getTopOps().values());
    ogw.startWalking(topNodes,null);
  }
  return pCtx;
}
