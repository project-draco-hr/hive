{
  Map<Rule,NodeProcessor> opRules=new LinkedHashMap<Rule,NodeProcessor>();
  opRules.put(new RuleRegExp("R1",ReduceSinkOperator.getOperatorName() + "%.*" + UnionOperator.getOperatorName()+ "%"),UnionProcFactory.getMapRedUnion());
  opRules.put(new RuleRegExp("R2",UnionOperator.getOperatorName() + "%.*" + UnionOperator.getOperatorName()+ "%"),UnionProcFactory.getUnknownUnion());
  opRules.put(new RuleRegExp("R3",TableScanOperator.getOperatorName() + "%.*" + UnionOperator.getOperatorName()+ "%"),UnionProcFactory.getMapUnion());
  opRules.put(new RuleRegExp("R3",MapJoinOperator.getOperatorName() + "%.*" + UnionOperator.getOperatorName()+ "%"),UnionProcFactory.getMapJoinUnion());
  UnionProcContext uCtx=new UnionProcContext();
  Dispatcher disp=new DefaultRuleDispatcher(UnionProcFactory.getNoUnion(),opRules,uCtx);
  GraphWalker ogw=new PreOrderWalker(disp);
  ArrayList<Node> topNodes=new ArrayList<Node>();
  topNodes.addAll(pCtx.getTopOps().values());
  ogw.startWalking(topNodes,null);
  pCtx.setUCtx(uCtx);
  return pCtx;
}
