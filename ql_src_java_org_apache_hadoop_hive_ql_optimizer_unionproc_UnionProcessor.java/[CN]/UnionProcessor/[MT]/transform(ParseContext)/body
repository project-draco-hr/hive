{
  Map<Rule,NodeProcessor> opRules=new LinkedHashMap<Rule,NodeProcessor>();
  opRules.put(new RuleRegExp(new String("R1"),"RS%.*UNION%"),UnionProcFactory.getMapRedUnion());
  opRules.put(new RuleRegExp(new String("R2"),"UNION%.*UNION%"),UnionProcFactory.getUnknownUnion());
  opRules.put(new RuleRegExp(new String("R3"),"TS%.*UNION%"),UnionProcFactory.getMapUnion());
  opRules.put(new RuleRegExp(new String("R3"),"MAPJOIN%.*UNION%"),UnionProcFactory.getMapJoinUnion());
  UnionProcContext uCtx=new UnionProcContext();
  Dispatcher disp=new DefaultRuleDispatcher(UnionProcFactory.getNoUnion(),opRules,uCtx);
  GraphWalker ogw=new PreOrderWalker(disp);
  ArrayList<Node> topNodes=new ArrayList<Node>();
  topNodes.addAll(pCtx.getTopOps().values());
  ogw.startWalking(topNodes,null);
  pCtx.setUCtx(uCtx);
  return pCtx;
}
