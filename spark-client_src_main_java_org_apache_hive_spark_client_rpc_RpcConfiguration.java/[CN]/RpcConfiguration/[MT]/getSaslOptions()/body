{
  Map<String,String> opts=new HashMap<String,String>();
  Map<String,String> saslOpts=ImmutableMap.<String,String>builder().put(Sasl.CREDENTIALS,"credentials").put(Sasl.MAX_BUFFER,"max_buffer").put(Sasl.POLICY_FORWARD_SECRECY,"policy_forward_secrecy").put(Sasl.POLICY_NOACTIVE,"policy_noactive").put(Sasl.POLICY_NOANONYMOUS,"policy_noanonymous").put(Sasl.POLICY_NODICTIONARY,"policy_nodictionary").put(Sasl.POLICY_NOPLAINTEXT,"policy_noplaintext").put(Sasl.POLICY_PASS_CREDENTIALS,"policy_pass_credentials").put(Sasl.QOP,"qop").put(Sasl.RAW_SEND_SIZE,"raw_send_size").put(Sasl.REUSE,"reuse").put(Sasl.SERVER_AUTH,"server_auth").put(Sasl.STRENGTH,"strength").build();
  for (  Map.Entry<String,String> e : saslOpts.entrySet()) {
    String value=config.get(RPC_SASL_OPT_PREFIX + e.getValue());
    if (value != null) {
      opts.put(e.getKey(),value);
    }
  }
  return opts;
}
