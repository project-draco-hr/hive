{
  String oldHiveHome=System.getenv("HIVE_HOME");
  String oldHiveConfDir=System.getenv("HIVE_CONF_DIR");
  File homeFile=File.createTempFile("test","hive");
  String tmpDir=homeFile.getParentFile().getAbsoluteFile() + File.separator + "TestCliDriverMethods";
  homeFile.delete();
  FileUtils.deleteDirectory(new File(tmpDir));
  homeFile=new File(tmpDir + File.separator + "bin"+ File.separator+ CliDriver.HIVERCFILE);
  homeFile.getParentFile().mkdirs();
  homeFile.createNewFile();
  FileUtils.write(homeFile,"-- init hive file for test ");
  setEnv("HIVE_HOME",homeFile.getParentFile().getParentFile().getAbsolutePath());
  setEnv("HIVE_CONF_DIR",homeFile.getParentFile().getAbsolutePath());
  CliSessionState sessionState=new CliSessionState(new HiveConf());
  ByteArrayOutputStream data=new ByteArrayOutputStream();
  sessionState.err=new PrintStream(data);
  sessionState.out=System.out;
  try {
    CliSessionState.start(sessionState);
    CliDriver cliDriver=new CliDriver();
    cliDriver.processInitFiles(sessionState);
    assertTrue(data.toString().contains("Putting the global hiverc in $HIVE_HOME/bin/.hiverc is deprecated. " + "Please use $HIVE_CONF_DIR/.hiverc instead."));
    FileUtils.write(homeFile,"bla bla bla");
    try {
      cliDriver.processInitFiles(sessionState);
      fail("should be exit");
    }
 catch (    ExitException e) {
      assertEquals(40000,e.getStatus());
    }
    setEnv("HIVE_HOME",null);
    try {
      cliDriver.processInitFiles(sessionState);
      fail("should be exit");
    }
 catch (    ExitException e) {
      assertEquals(40000,e.getStatus());
    }
  }
  finally {
    setEnv("HIVE_HOME",oldHiveHome);
    setEnv("HIVE_CONF_DIR",oldHiveConfDir);
    FileUtils.deleteDirectory(new File(tmpDir));
  }
  File f=File.createTempFile("hive","test");
  FileUtils.write(f,"bla bla bla");
  try {
    sessionState.initFiles=Arrays.asList(new String[]{f.getAbsolutePath()});
    CliDriver cliDriver=new CliDriver();
    cliDriver.processInitFiles(sessionState);
    fail("should be exit");
  }
 catch (  ExitException e) {
    assertEquals(40000,e.getStatus());
    assertTrue(data.toString().contains("cannot recognize input near 'bla' 'bla' 'bla'"));
  }
}
