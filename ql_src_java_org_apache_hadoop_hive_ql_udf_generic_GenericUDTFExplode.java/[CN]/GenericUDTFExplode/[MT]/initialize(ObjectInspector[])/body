{
  if (args.length != 1) {
    throw new UDFArgumentException("explode() takes only one argument");
  }
  ArrayList<String> fieldNames=new ArrayList<String>();
  ArrayList<ObjectInspector> fieldOIs=new ArrayList<ObjectInspector>();
switch (args[0].getCategory()) {
case LIST:
    inputOI=args[0];
  fieldNames.add("col");
fieldOIs.add(((ListObjectInspector)inputOI).getListElementObjectInspector());
break;
case MAP:
inputOI=args[0];
fieldNames.add("key");
fieldNames.add("value");
fieldOIs.add(((MapObjectInspector)inputOI).getMapKeyObjectInspector());
fieldOIs.add(((MapObjectInspector)inputOI).getMapValueObjectInspector());
break;
default :
throw new UDFArgumentException("explode() takes an array or a map as a parameter");
}
return ObjectInspectorFactory.getStandardStructObjectInspector(fieldNames,fieldOIs);
}
