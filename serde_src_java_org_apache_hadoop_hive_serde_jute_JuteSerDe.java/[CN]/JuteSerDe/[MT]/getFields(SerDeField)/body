{
  Class c=type;
  if (parentField != null) {
    if (parentField.isPrimitive() || parentField.isMap()) {
      throw new SerDeException("Trying to list fields of primitive or map");
    }
    if (parentField.isList()) {
      c=parentField.getListElementType();
    }
 else {
      c=parentField.getType();
    }
  }
  Field[] farr=c.getDeclaredFields();
  ArrayList<SerDeField> ret=new ArrayList<SerDeField>(farr.length - 1);
  for (  Field onef : farr) {
    ret.add(this.getFieldFromExpression(parentField,onef.getName()));
  }
  return ret;
}
