{
  Configuration conf=new Configuration();
  HiveConf hiveConf=new HiveConf(conf,TestAddPartition.class);
  HiveMetaStoreClient client=null;
  try {
    client=new HiveMetaStoreClient(hiveConf);
    String dbName="testdb";
    String tableName="tablename";
    Table tbl=new Table();
    tbl.setTableName(tableName);
    tbl.setDbName(dbName);
    tbl.setParameters(new HashMap<String,String>());
    StorageDescriptor sd=new StorageDescriptor();
    sd.setSerdeInfo(new SerDeInfo());
    sd.getSerdeInfo().setName(tbl.getTableName());
    sd.getSerdeInfo().setSerializationLib(LazySimpleSerDe.class.getName());
    List<FieldSchema> fss=new ArrayList<FieldSchema>();
    fss.add(new FieldSchema("name",Constants.STRING_TYPE_NAME,""));
    sd.setCols(fss);
    tbl.setSd(sd);
    tbl.setPartitionKeys(new ArrayList<FieldSchema>());
    tbl.getPartitionKeys().add(new FieldSchema(PART1_NAME,Constants.STRING_TYPE_NAME,""));
    tbl.getPartitionKeys().add(new FieldSchema(PART2_NAME,Constants.STRING_TYPE_NAME,""));
    client.dropTable(dbName,tableName);
    client.dropDatabase(dbName);
    client.createDatabase(dbName,"newloc");
    client.createTable(tbl);
    tbl=client.getTable(dbName,tableName);
    List<String> partValues=new ArrayList<String>();
    partValues.add("value1");
    partValues.add("value2");
    Map<String,String> part1=new HashMap<String,String>();
    part1.put(PART1_NAME,"value1");
    part1.put(PART2_NAME,"value2");
    List<Map<String,String>> partitions=new ArrayList<Map<String,String>>();
    partitions.add(part1);
    List<Partition> parts=client.listPartitions(dbName,tableName,(short)-1);
    assertTrue(parts.isEmpty());
    String partitionLocation=PART1_NAME + Path.SEPARATOR + PART2_NAME;
    for (    Map<String,String> map : partitions) {
      AddPartitionDesc addPartition=new AddPartitionDesc(dbName,tableName,map,partitionLocation);
      Task<DDLWork> task=TaskFactory.get(new DDLWork(addPartition),hiveConf);
      task.initialize(hiveConf);
      assertEquals(0,task.execute());
    }
    parts=client.listPartitions(dbName,tableName,(short)-1);
    assertEquals(1,parts.size());
    Partition insertedPart=parts.get(0);
    assertEquals(tbl.getSd().getLocation() + Path.SEPARATOR + partitionLocation,insertedPart.getSd().getLocation());
    client.dropPartition(dbName,tableName,insertedPart.getValues());
    AddPartitionDesc addPartition=new AddPartitionDesc(dbName,tableName,part1,null);
    Task<DDLWork> task=TaskFactory.get(new DDLWork(addPartition),hiveConf);
    task.initialize(hiveConf);
    assertEquals(0,task.execute());
    parts=client.listPartitions(dbName,tableName,(short)-1);
    assertEquals(1,parts.size());
    addPartition=new AddPartitionDesc(dbName,"doesnotexist",part1,null);
    task=TaskFactory.get(new DDLWork(addPartition),hiveConf);
    task.initialize(hiveConf);
    assertEquals(1,task.execute());
  }
  finally {
    if (client != null) {
      client.close();
    }
  }
}
