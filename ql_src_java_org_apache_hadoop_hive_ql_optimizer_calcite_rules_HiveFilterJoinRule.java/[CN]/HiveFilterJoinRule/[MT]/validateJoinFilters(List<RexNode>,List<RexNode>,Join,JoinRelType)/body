{
  if (joinType.equals(JoinRelType.INNER)) {
    ListIterator<RexNode> filterIter=joinFilters.listIterator();
    while (filterIter.hasNext()) {
      RexNode exp=filterIter.next();
      if (exp instanceof RexCall) {
        RexCall c=(RexCall)exp;
        boolean validHiveJoinFilter=false;
        if ((c.getOperator().getKind() == SqlKind.EQUALS)) {
          validHiveJoinFilter=true;
          for (          RexNode rn : c.getOperands()) {
            if (filterRefersToBothSidesOfJoin(rn,join)) {
              validHiveJoinFilter=false;
              break;
            }
          }
        }
 else         if ((c.getOperator().getKind() == SqlKind.LESS_THAN) || (c.getOperator().getKind() == SqlKind.GREATER_THAN) || (c.getOperator().getKind() == SqlKind.LESS_THAN_OR_EQUAL)|| (c.getOperator().getKind() == SqlKind.GREATER_THAN_OR_EQUAL)) {
          validHiveJoinFilter=true;
          if (filterRefersToBothSidesOfJoin(c,join)) {
            validHiveJoinFilter=false;
          }
        }
        if (validHiveJoinFilter)         continue;
      }
      aboveFilters.add(exp);
      filterIter.remove();
    }
  }
}
