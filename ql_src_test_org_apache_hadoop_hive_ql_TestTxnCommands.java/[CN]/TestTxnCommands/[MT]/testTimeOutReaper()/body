{
  runStatementOnDriver("set autocommit false");
  runStatementOnDriver("start transaction");
  runStatementOnDriver("delete from " + Table.ACIDTBL + " where a = 5");
  hiveConf.setTimeVar(HiveConf.ConfVars.HIVE_TIMEDOUT_TXN_REAPER_START,0,TimeUnit.SECONDS);
  hiveConf.setTimeVar(HiveConf.ConfVars.HIVE_TXN_TIMEOUT,2,TimeUnit.MILLISECONDS);
  AcidHouseKeeperService houseKeeperService=new AcidHouseKeeperService();
  TestTxnCommands2.runHouseKeeperService(houseKeeperService,hiveConf);
  CommandProcessorResponse cpr=runStatementOnDriverNegative("delete from " + Table.ACIDTBL + " where a = 5");
  Assert.assertTrue("Actual: " + cpr.getErrorMessage(),cpr.getErrorMessage().contains("Transaction manager has aborted the transaction txnid:1"));
  hiveConf.setTimeVar(HiveConf.ConfVars.HIVE_TXN_TIMEOUT,10,TimeUnit.MINUTES);
  runStatementOnDriver("start transaction");
  runStatementOnDriver("select count(*) from " + Table.ACIDTBL + " where a = 17");
  TxnStore txnHandler=TxnUtils.getTxnStore(hiveConf);
  ShowLocksResponse slr=txnHandler.showLocks(new ShowLocksRequest());
  TestDbTxnManager2.checkLock(LockType.SHARED_READ,LockState.ACQUIRED,"default",Table.ACIDTBL.name,null,slr.getLocks().get(0));
  TestTxnCommands2.runHouseKeeperService(houseKeeperService,hiveConf);
  slr=txnHandler.showLocks(new ShowLocksRequest());
  TestDbTxnManager2.checkLock(LockType.SHARED_READ,LockState.ACQUIRED,"default",Table.ACIDTBL.name,null,slr.getLocks().get(0));
  Assert.assertEquals("Unexpected lock count",1,slr.getLocks().size());
  TestTxnCommands2.runHouseKeeperService(houseKeeperService,hiveConf);
  slr=txnHandler.showLocks(new ShowLocksRequest());
  TestDbTxnManager2.checkLock(LockType.SHARED_READ,LockState.ACQUIRED,"default",Table.ACIDTBL.name,null,slr.getLocks().get(0));
  Assert.assertEquals("Unexpected lock count",1,slr.getLocks().size());
  runStatementOnDriver("rollback");
  slr=txnHandler.showLocks(new ShowLocksRequest());
  Assert.assertEquals("Unexpected lock count",0,slr.getLocks().size());
}
