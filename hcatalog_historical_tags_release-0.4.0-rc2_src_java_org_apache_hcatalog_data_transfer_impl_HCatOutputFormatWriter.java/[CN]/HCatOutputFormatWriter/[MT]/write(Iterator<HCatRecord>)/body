{
  int id=sp.getId();
  setVarsInConf(id);
  HCatOutputFormat outFormat=new HCatOutputFormat();
  TaskAttemptContext cntxt=new TaskAttemptContext(conf,new TaskAttemptID(new TaskID(),id));
  OutputCommitter committer=null;
  RecordWriter<WritableComparable<?>,HCatRecord> writer;
  try {
    committer=outFormat.getOutputCommitter(cntxt);
    committer.setupTask(cntxt);
    writer=outFormat.getRecordWriter(cntxt);
    while (recordItr.hasNext()) {
      HCatRecord rec=recordItr.next();
      writer.write(null,rec);
    }
    writer.close(cntxt);
    if (committer.needsTaskCommit(cntxt)) {
      committer.commitTask(cntxt);
    }
  }
 catch (  IOException e) {
    if (null != committer) {
      try {
        committer.abortTask(cntxt);
      }
 catch (      IOException e1) {
        throw new HCatException(ErrorType.ERROR_INTERNAL_EXCEPTION,e1);
      }
    }
    throw new HCatException("Failed while writing",e);
  }
catch (  InterruptedException e) {
    if (null != committer) {
      try {
        committer.abortTask(cntxt);
      }
 catch (      IOException e1) {
        throw new HCatException(ErrorType.ERROR_INTERNAL_EXCEPTION,e1);
      }
    }
    throw new HCatException("Failed while writing",e);
  }
}
