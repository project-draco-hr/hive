{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.client_protocol != null) {
    oprot.writeFieldBegin(CLIENT_PROTOCOL_FIELD_DESC);
    oprot.writeI32(struct.client_protocol.getValue());
    oprot.writeFieldEnd();
  }
  if (struct.username != null) {
    if (struct.isSetUsername()) {
      oprot.writeFieldBegin(USERNAME_FIELD_DESC);
      oprot.writeString(struct.username);
      oprot.writeFieldEnd();
    }
  }
  if (struct.password != null) {
    if (struct.isSetPassword()) {
      oprot.writeFieldBegin(PASSWORD_FIELD_DESC);
      oprot.writeString(struct.password);
      oprot.writeFieldEnd();
    }
  }
  if (struct.configuration != null) {
    if (struct.isSetConfiguration()) {
      oprot.writeFieldBegin(CONFIGURATION_FIELD_DESC);
{
        oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,struct.configuration.size()));
        for (        Map.Entry<String,String> _iter138 : struct.configuration.entrySet()) {
          oprot.writeString(_iter138.getKey());
          oprot.writeString(_iter138.getValue());
        }
        oprot.writeMapEnd();
      }
      oprot.writeFieldEnd();
    }
  }
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
