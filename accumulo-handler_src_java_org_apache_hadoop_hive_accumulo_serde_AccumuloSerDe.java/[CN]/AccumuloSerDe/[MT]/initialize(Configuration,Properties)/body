{
  accumuloSerDeParameters=new AccumuloSerDeParameters(conf,properties,getClass().getName());
  final LazySerDeParameters serDeParams=accumuloSerDeParameters.getSerDeParameters();
  final List<ColumnMapping> mappings=accumuloSerDeParameters.getColumnMappings();
  final List<TypeInfo> columnTypes=accumuloSerDeParameters.getHiveColumnTypes();
  final AccumuloRowIdFactory factory=accumuloSerDeParameters.getRowIdFactory();
  ArrayList<ObjectInspector> columnObjectInspectors=getColumnObjectInspectors(columnTypes,serDeParams,mappings,factory);
  cachedObjectInspector=LazyObjectInspectorFactory.getLazySimpleStructObjectInspector(serDeParams.getColumnNames(),columnObjectInspectors,serDeParams.getSeparators()[0],serDeParams.getNullSequence(),serDeParams.isLastColumnTakesRest(),serDeParams.isEscaped(),serDeParams.getEscapeChar());
  cachedRow=new LazyAccumuloRow((LazySimpleStructObjectInspector)cachedObjectInspector);
  serializer=new AccumuloRowSerializer(accumuloSerDeParameters.getRowIdOffset(),accumuloSerDeParameters.getSerDeParameters(),accumuloSerDeParameters.getColumnMappings(),accumuloSerDeParameters.getTableVisibilityLabel(),accumuloSerDeParameters.getRowIdFactory());
  if (log.isInfoEnabled()) {
    log.info("Initialized with {} type: {}",accumuloSerDeParameters.getSerDeParameters().getColumnNames(),accumuloSerDeParameters.getSerDeParameters().getColumnTypes());
  }
}
