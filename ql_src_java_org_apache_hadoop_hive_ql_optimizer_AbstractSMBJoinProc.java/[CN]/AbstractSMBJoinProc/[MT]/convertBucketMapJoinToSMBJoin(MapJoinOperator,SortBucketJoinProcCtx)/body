{
  String[] srcs=smbJoinContext.getSrcs();
  SMBMapJoinOperator smbJop=new SMBMapJoinOperator(mapJoinOp);
  SMBJoinDesc smbJoinDesc=new SMBJoinDesc(mapJoinOp.getConf());
  smbJop.setConf(smbJoinDesc);
  HashMap<Byte,String> tagToAlias=new HashMap<Byte,String>();
  for (int i=0; i < srcs.length; i++) {
    tagToAlias.put((byte)i,srcs[i]);
  }
  smbJoinDesc.setTagToAlias(tagToAlias);
  int indexInListMapJoinNoReducer=this.pGraphContext.getListMapJoinOpsNoReducer().indexOf(mapJoinOp);
  if (indexInListMapJoinNoReducer >= 0) {
    this.pGraphContext.getListMapJoinOpsNoReducer().remove(indexInListMapJoinNoReducer);
    this.pGraphContext.getListMapJoinOpsNoReducer().add(indexInListMapJoinNoReducer,smbJop);
  }
  Map<String,DummyStoreOperator> aliasToSink=new HashMap<String,DummyStoreOperator>();
  List<Operator<? extends OperatorDesc>> parentOperators=mapJoinOp.getParentOperators();
  for (int i=0; i < parentOperators.size(); i++) {
    Operator<? extends OperatorDesc> par=parentOperators.get(i);
    int index=par.getChildOperators().indexOf(mapJoinOp);
    par.getChildOperators().remove(index);
    if (i == smbJoinDesc.getPosBigTable()) {
      par.getChildOperators().add(index,smbJop);
    }
 else {
      DummyStoreOperator dummyStoreOp=new DummyStoreOperator(par.getCompilationOpContext());
      par.getChildOperators().add(index,dummyStoreOp);
      List<Operator<? extends OperatorDesc>> childrenOps=new ArrayList<Operator<? extends OperatorDesc>>();
      childrenOps.add(smbJop);
      dummyStoreOp.setChildOperators(childrenOps);
      List<Operator<? extends OperatorDesc>> parentOps=new ArrayList<Operator<? extends OperatorDesc>>();
      parentOps.add(par);
      dummyStoreOp.setParentOperators(parentOps);
      aliasToSink.put(srcs[i],dummyStoreOp);
      smbJop.getParentOperators().remove(i);
      smbJop.getParentOperators().add(i,dummyStoreOp);
    }
  }
  smbJoinDesc.setAliasToSink(aliasToSink);
  List<Operator<? extends OperatorDesc>> childOps=mapJoinOp.getChildOperators();
  for (int i=0; i < childOps.size(); i++) {
    Operator<? extends OperatorDesc> child=childOps.get(i);
    int index=child.getParentOperators().indexOf(mapJoinOp);
    child.getParentOperators().remove(index);
    child.getParentOperators().add(index,smbJop);
  }
  smbJop.getConf().setQBJoinTreeProps(mapJoinOp.getConf());
  pGraphContext.getSmbMapJoinOps().add(smbJop);
  pGraphContext.getMapJoinOps().remove(mapJoinOp);
  return smbJop;
}
