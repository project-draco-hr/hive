{
  if (updateTx == null) {
    throw new IOException("The transaction to be updated found to be null.");
  }
  List<FamilyRevision> currentData=getTransactionList(path);
  List<FamilyRevision> newData=new ArrayList<FamilyRevision>();
  boolean dataFound=false;
  long updateVersion=updateTx.getRevision();
  for (  FamilyRevision tranx : currentData) {
    if (tranx.getRevision() != updateVersion) {
      newData.add(tranx);
    }
 else {
      dataFound=true;
    }
  }
switch (mode) {
case REMOVE:
    if (dataFound == false) {
      throw new IOException("The transaction to be removed not found in the data.");
    }
  LOG.info("Removed trasaction : " + updateTx.toString());
break;
case KEEP_ALIVE:
if (dataFound == false) {
throw new IOException("The transaction to be kept alove not found in the data. It might have been expired.");
}
newData.add(updateTx);
LOG.info("keep alive of transaction : " + updateTx.toString());
break;
case APPEND:
if (dataFound == true) {
throw new IOException("The data to be appended already exists.");
}
newData.add(updateTx);
LOG.info("Added transaction : " + updateTx.toString());
break;
}
List<StoreFamilyRevision> newTxnList=new ArrayList<StoreFamilyRevision>();
for (FamilyRevision wtxn : newData) {
StoreFamilyRevision newTxn=new StoreFamilyRevision(wtxn.getRevision(),wtxn.getExpireTimestamp());
newTxnList.add(newTxn);
}
StoreFamilyRevisionList wtxnList=new StoreFamilyRevisionList(newTxnList);
byte[] newByteData=serialize(wtxnList);
Stat stat=null;
try {
stat=zkSession.setData(path,newByteData,-1);
}
 catch (KeeperException e) {
throw new IOException("Exception while updating trasactional data. ",e);
}
catch (InterruptedException e) {
throw new IOException("Exception while updating trasactional data. ",e);
}
if (stat != null) {
LOG.info("Transaction list stored at " + path + ".");
}
}
