{
  if (isSubQ || (joinExpr != null) || (!destToGroupby.isEmpty())|| (!destToClusterby.isEmpty())|| (!aliasToLateralViews.isEmpty())) {
    return false;
  }
  Iterator<Map.Entry<String,LinkedHashMap<String,ASTNode>>> aggrIter=destToAggregationExprs.entrySet().iterator();
  while (aggrIter.hasNext()) {
    HashMap<String,ASTNode> h=aggrIter.next().getValue();
    if ((h != null) && (!h.isEmpty())) {
      return false;
    }
  }
  if (!destToDistinctFuncExprs.isEmpty()) {
    Iterator<Map.Entry<String,List<ASTNode>>> distn=destToDistinctFuncExprs.entrySet().iterator();
    while (distn.hasNext()) {
      List<ASTNode> ct=distn.next().getValue();
      if (!ct.isEmpty()) {
        return false;
      }
    }
  }
  Iterator<Map.Entry<String,ASTNode>> iter=nameToDest.entrySet().iterator();
  while (iter.hasNext()) {
    Map.Entry<String,ASTNode> entry=iter.next();
    ASTNode v=entry.getValue();
    if (!(((ASTNode)v.getChild(0)).getToken().getType() == HiveParser.TOK_TMP_FILE)) {
      return false;
    }
  }
  return true;
}
