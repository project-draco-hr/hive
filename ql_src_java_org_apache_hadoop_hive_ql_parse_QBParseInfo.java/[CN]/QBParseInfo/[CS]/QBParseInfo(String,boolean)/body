{
  aliasToSrc=new HashMap<String,ASTNode>();
  nameToDest=new HashMap<String,ASTNode>();
  nameToSample=new HashMap<String,TableSample>();
  exprToColumnAlias=new HashMap<ASTNode,String>();
  destToLateralView=new HashMap<String,ASTNode>();
  destToSelExpr=new LinkedHashMap<String,ASTNode>();
  destToWhereExpr=new HashMap<String,ASTNode>();
  destToGroupby=new HashMap<String,ASTNode>();
  destToHaving=new HashMap<String,ASTNode>();
  destToClusterby=new HashMap<String,ASTNode>();
  destToDistributeby=new HashMap<String,ASTNode>();
  destToSortby=new HashMap<String,ASTNode>();
  destToOrderby=new HashMap<String,ASTNode>();
  destToLimit=new HashMap<String,Integer>();
  insertIntoTables=new HashSet<String>();
  destRollups=new HashSet<String>();
  destCubes=new HashSet<String>();
  destGroupingSets=new HashSet<String>();
  destToAggregationExprs=new LinkedHashMap<String,LinkedHashMap<String,ASTNode>>();
  destToWindowingExprs=new LinkedHashMap<String,LinkedHashMap<String,ASTNode>>();
  destToDistinctFuncExprs=new HashMap<String,List<ASTNode>>();
  this.alias=alias;
  this.isSubQ=isSubQ;
  outerQueryLimit=-1;
  aliasToLateralViews=new HashMap<String,ArrayList<ASTNode>>();
  tableSpecs=new HashMap<String,BaseSemanticAnalyzer.tableSpec>();
}
