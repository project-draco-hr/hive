{
  TTupleProtocol oprot=(TTupleProtocol)prot;
  BitSet optionals=new BitSet();
  if (struct.isSetIndexName()) {
    optionals.set(0);
  }
  if (struct.isSetIndexHandlerClass()) {
    optionals.set(1);
  }
  if (struct.isSetDbName()) {
    optionals.set(2);
  }
  if (struct.isSetOrigTableName()) {
    optionals.set(3);
  }
  if (struct.isSetCreateTime()) {
    optionals.set(4);
  }
  if (struct.isSetLastAccessTime()) {
    optionals.set(5);
  }
  if (struct.isSetIndexTableName()) {
    optionals.set(6);
  }
  if (struct.isSetSd()) {
    optionals.set(7);
  }
  if (struct.isSetParameters()) {
    optionals.set(8);
  }
  if (struct.isSetDeferredRebuild()) {
    optionals.set(9);
  }
  oprot.writeBitSet(optionals,10);
  if (struct.isSetIndexName()) {
    oprot.writeString(struct.indexName);
  }
  if (struct.isSetIndexHandlerClass()) {
    oprot.writeString(struct.indexHandlerClass);
  }
  if (struct.isSetDbName()) {
    oprot.writeString(struct.dbName);
  }
  if (struct.isSetOrigTableName()) {
    oprot.writeString(struct.origTableName);
  }
  if (struct.isSetCreateTime()) {
    oprot.writeI32(struct.createTime);
  }
  if (struct.isSetLastAccessTime()) {
    oprot.writeI32(struct.lastAccessTime);
  }
  if (struct.isSetIndexTableName()) {
    oprot.writeString(struct.indexTableName);
  }
  if (struct.isSetSd()) {
    struct.sd.write(oprot);
  }
  if (struct.isSetParameters()) {
{
      oprot.writeI32(struct.parameters.size());
      for (      Map.Entry<String,String> _iter215 : struct.parameters.entrySet()) {
        oprot.writeString(_iter215.getKey());
        oprot.writeString(_iter215.getValue());
      }
    }
  }
  if (struct.isSetDeferredRebuild()) {
    oprot.writeBool(struct.deferredRebuild);
  }
}
