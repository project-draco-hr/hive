{
  struct.validate();
  oprot.writeStructBegin(STRUCT_DESC);
  if (struct.indexName != null) {
    oprot.writeFieldBegin(INDEX_NAME_FIELD_DESC);
    oprot.writeString(struct.indexName);
    oprot.writeFieldEnd();
  }
  if (struct.indexHandlerClass != null) {
    oprot.writeFieldBegin(INDEX_HANDLER_CLASS_FIELD_DESC);
    oprot.writeString(struct.indexHandlerClass);
    oprot.writeFieldEnd();
  }
  if (struct.dbName != null) {
    oprot.writeFieldBegin(DB_NAME_FIELD_DESC);
    oprot.writeString(struct.dbName);
    oprot.writeFieldEnd();
  }
  if (struct.origTableName != null) {
    oprot.writeFieldBegin(ORIG_TABLE_NAME_FIELD_DESC);
    oprot.writeString(struct.origTableName);
    oprot.writeFieldEnd();
  }
  oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
  oprot.writeI32(struct.createTime);
  oprot.writeFieldEnd();
  oprot.writeFieldBegin(LAST_ACCESS_TIME_FIELD_DESC);
  oprot.writeI32(struct.lastAccessTime);
  oprot.writeFieldEnd();
  if (struct.indexTableName != null) {
    oprot.writeFieldBegin(INDEX_TABLE_NAME_FIELD_DESC);
    oprot.writeString(struct.indexTableName);
    oprot.writeFieldEnd();
  }
  if (struct.sd != null) {
    oprot.writeFieldBegin(SD_FIELD_DESC);
    struct.sd.write(oprot);
    oprot.writeFieldEnd();
  }
  if (struct.parameters != null) {
    oprot.writeFieldBegin(PARAMETERS_FIELD_DESC);
{
      oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING,org.apache.thrift.protocol.TType.STRING,struct.parameters.size()));
      for (      Map.Entry<String,String> _iter264 : struct.parameters.entrySet()) {
        oprot.writeString(_iter264.getKey());
        oprot.writeString(_iter264.getValue());
      }
      oprot.writeMapEnd();
    }
    oprot.writeFieldEnd();
  }
  oprot.writeFieldBegin(DEFERRED_REBUILD_FIELD_DESC);
  oprot.writeBool(struct.deferredRebuild);
  oprot.writeFieldEnd();
  oprot.writeFieldStop();
  oprot.writeStructEnd();
}
