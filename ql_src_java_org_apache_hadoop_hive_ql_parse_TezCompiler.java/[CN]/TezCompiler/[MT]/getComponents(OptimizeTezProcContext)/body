{
  Deque<Operator<?>> deque=new LinkedList<Operator<?>>();
  deque.addAll(procCtx.parseContext.getTopOps().values());
  AtomicInteger index=new AtomicInteger();
  Map<Operator<?>,Integer> indexes=new HashMap<Operator<?>,Integer>();
  Map<Operator<?>,Integer> lowLinks=new HashMap<Operator<?>,Integer>();
  Stack<Operator<?>> nodes=new Stack<Operator<?>>();
  Set<Set<Operator<?>>> components=new HashSet<Set<Operator<?>>>();
  for (  Operator<?> o : deque) {
    if (!indexes.containsKey(o)) {
      connect(o,index,nodes,indexes,lowLinks,components);
    }
  }
  return components;
}
