{
  ParseContext tempParseContext=getParseContext(pCtx,rootTasks);
  GenTezWork genTezWork=new GenTezWork();
  Deque<Operator<?>> deque=new LinkedList<Operator<?>>();
  deque.addAll(pCtx.getTopOps().values());
  GenTezProcContext procCtx=new GenTezProcContext(conf,tempParseContext,mvTask,rootTasks,inputs,outputs,deque);
  Map<Rule,NodeProcessor> opRules=new LinkedHashMap<Rule,NodeProcessor>();
  opRules.put(new RuleRegExp(new String("Split Work - ReduceSink"),ReduceSinkOperator.getOperatorName() + "%"),genTezWork);
  opRules.put(new RuleRegExp(new String("No more walking on ReduceSink-MapJoin"),ReduceSinkOperator.getOperatorName() + "%" + MapJoinOperator.getOperatorName()+ "%"),new ReduceSinkMapJoinProc());
  opRules.put(new RuleRegExp(new String("Split Work - FileSink"),FileSinkOperator.getOperatorName() + "%"),genTezWork);
  Dispatcher disp=new DefaultRuleDispatcher(null,opRules,procCtx);
  List<Node> topNodes=new ArrayList<Node>();
  topNodes.addAll(pCtx.getTopOps().values());
  GraphWalker ogw=new TezWalker(disp);
  ogw.startWalking(topNodes,null);
}
