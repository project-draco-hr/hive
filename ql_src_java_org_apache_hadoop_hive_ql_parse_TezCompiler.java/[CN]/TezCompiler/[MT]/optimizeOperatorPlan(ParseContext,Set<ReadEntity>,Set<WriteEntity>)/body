{
  PerfLogger perfLogger=SessionState.getPerfLogger();
  OptimizeTezProcContext procCtx=new OptimizeTezProcContext(conf,pCtx,inputs,outputs);
  perfLogger.PerfLogBegin(this.getClass().getName(),PerfLogger.TEZ_COMPILER);
  runDynamicPartitionPruning(procCtx,inputs,outputs);
  perfLogger.PerfLogEnd(this.getClass().getName(),PerfLogger.TEZ_COMPILER,"Setup dynamic partition pruning");
  perfLogger.PerfLogBegin(this.getClass().getName(),PerfLogger.TEZ_COMPILER);
  runStatsAnnotation(procCtx);
  perfLogger.PerfLogEnd(this.getClass().getName(),PerfLogger.TEZ_COMPILER,"Setup stats in the operator plan");
  perfLogger.PerfLogBegin(this.getClass().getName(),PerfLogger.TEZ_COMPILER);
  runStatsDependentOptimizations(procCtx,inputs,outputs);
  perfLogger.PerfLogEnd(this.getClass().getName(),PerfLogger.TEZ_COMPILER,"Run the optimizations that use stats for optimization");
  perfLogger.PerfLogBegin(this.getClass().getName(),PerfLogger.TEZ_COMPILER);
  runCycleAnalysisForPartitionPruning(procCtx,inputs,outputs);
  perfLogger.PerfLogEnd(this.getClass().getName(),PerfLogger.TEZ_COMPILER,"Run cycle analysis for partition pruning");
}
