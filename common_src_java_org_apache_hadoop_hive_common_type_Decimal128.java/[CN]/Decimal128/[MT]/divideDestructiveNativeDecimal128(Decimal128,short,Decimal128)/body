{
  if (right.signum == 0) {
    SqlMathUtil.throwZeroDivisionException();
  }
  if (this.signum == 0) {
    this.scale=newScale;
    this.actualScale=newScale;
    remainder.update(this);
    return;
  }
  short scaleBack=(short)(this.scale - right.scale - newScale);
  if (scaleBack >= 0) {
    this.unscaledValue.divideDestructive(right.unscaledValue,remainder.unscaledValue);
    this.unscaledValue.scaleDownTenDestructive(scaleBack);
    remainder.unscaledValue.scaleDownTenDestructive(scaleBack);
  }
 else {
    this.unscaledValue.divideScaleUpTenDestructive(right.unscaledValue,(short)-scaleBack,remainder.unscaledValue);
  }
  this.scale=newScale;
  this.actualScale=newScale;
  this.signum=(byte)(this.unscaledValue.isZero() ? 0 : (this.signum * right.signum));
  remainder.scale=scale;
  remainder.signum=(byte)(remainder.unscaledValue.isZero() ? 0 : 1);
  this.unscaledValue.throwIfExceedsTenToThirtyEight();
}
