{
  String tableName="dynamicpart";
  CommandProcessorResponse ret=driver.run("CREATE TABLE " + tableName + " (key string, value string) partitioned by (part1 string, part2 string)");
  Assert.assertEquals(0,ret.getResponseCode());
  assertExistence(testDir + "/" + tableName);
  setPermissions(testDir + "/" + tableName,FsPermission.createImmutable((short)0777));
  ret=driver.run("insert into table " + tableName + " partition (part1,part2) select key,value,part1,part2 from mysrc");
  Assert.assertEquals(0,ret.getResponseCode());
  Assert.assertEquals("rwxrwxrwx",getPermissions(testDir + "/" + tableName+ "/part1=1").toString());
  Assert.assertEquals("rwxrwxrwx",getPermissions(testDir + "/" + tableName+ "/part1=1/part2=1").toString());
  Assert.assertEquals("rwxrwxrwx",getPermissions(testDir + "/" + tableName+ "/part1=2").toString());
  Assert.assertEquals("rwxrwxrwx",getPermissions(testDir + "/" + tableName+ "/part1=2/part2=2").toString());
  Assert.assertTrue(listChildrenPerms(testDir + "/" + tableName+ "/part1=1/part2=1").size() > 0);
  for (  FsPermission perm : listChildrenPerms(testDir + "/" + tableName+ "/part1=1/part2=1")) {
    Assert.assertEquals("rwxrwxrwx",perm.toString());
  }
  Assert.assertTrue(listChildrenPerms(testDir + "/" + tableName+ "/part1=2/part2=2").size() > 0);
  for (  FsPermission perm : listChildrenPerms(testDir + "/" + tableName+ "/part1=2/part2=2")) {
    Assert.assertEquals("rwxrwxrwx",perm.toString());
  }
}
