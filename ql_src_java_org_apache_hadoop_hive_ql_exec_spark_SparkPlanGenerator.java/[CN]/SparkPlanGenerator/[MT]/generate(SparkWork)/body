{
  SparkPlan plan=new SparkPlan();
  List<SparkTran> trans=new ArrayList<SparkTran>();
  Set<BaseWork> roots=sparkWork.getRoots();
  assert(roots != null && roots.size() == 1);
  BaseWork w=roots.iterator().next();
  MapWork mapWork=(MapWork)w;
  trans.add(generate(w));
  while (sparkWork.getChildren(w).size() > 0) {
    BaseWork child=sparkWork.getChildren(w).get(0);
    SparkEdgeProperty edge=sparkWork.getEdgeProperty(w,child);
    trans.add(generate(edge));
    trans.add(generate(child));
    w=child;
  }
  ChainedTran chainedTran=new ChainedTran(trans);
  plan.setTran(chainedTran);
  JavaPairRDD<BytesWritable,BytesWritable> input=generateRDD(mapWork);
  plan.setInput(input);
  return plan;
}
