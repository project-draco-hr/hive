{
  SparkPlan sparkPlan=new SparkPlan();
  cloneToWork=sparkWork.getCloneToWork();
  workToTranMap.clear();
  workToParentWorkTranMap.clear();
  for (  BaseWork work : sparkWork.getAllWork()) {
    SparkTran tran;
    if (work instanceof MapWork) {
      SparkTran mapInput=generateParentTran(sparkPlan,sparkWork,work);
      tran=generate((MapWork)work);
      sparkPlan.addTran(tran);
      sparkPlan.connect(mapInput,tran);
    }
 else     if (work instanceof ReduceWork) {
      SparkTran shuffleTran=generateParentTran(sparkPlan,sparkWork,work);
      tran=generate((ReduceWork)work);
      sparkPlan.addTran(tran);
      sparkPlan.connect(shuffleTran,tran);
    }
 else {
      List<BaseWork> parentWorks=sparkWork.getParents(work);
      tran=new IdentityTran();
      sparkPlan.addTran(tran);
      for (      BaseWork parentWork : parentWorks) {
        SparkTran parentTran=workToTranMap.get(parentWork);
        sparkPlan.connect(parentTran,tran);
      }
    }
    workToTranMap.put(work,tran);
  }
  return sparkPlan;
}
