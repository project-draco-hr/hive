{
  if (cloneToWork.containsKey(work)) {
    BaseWork originalWork=cloneToWork.get(work);
    if (workToParentWorkTranMap.containsKey(originalWork)) {
      return workToParentWorkTranMap.get(originalWork);
    }
  }
  SparkTran result;
  if (work instanceof MapWork) {
    result=generateMapInput((MapWork)work);
    sparkPlan.addTran(result);
  }
 else   if (work instanceof ReduceWork) {
    List<BaseWork> parentWorks=sparkWork.getParents(work);
    StorageLevel level=cloneToWork.containsKey(work) ? getStorageLevel(jobConf) : null;
    result=generate(sparkWork.getEdgeProperty(parentWorks.get(0),work),level);
    sparkPlan.addTran(result);
    for (    BaseWork parentWork : parentWorks) {
      sparkPlan.connect(workToTranMap.get(parentWork),result);
    }
  }
 else {
    throw new IllegalStateException("AssertionError: generateParentTran() only expect MapWork or ReduceWork," + " but found " + work.getClass().getName());
  }
  if (cloneToWork.containsKey(work)) {
    workToParentWorkTranMap.put(cloneToWork.get(work),result);
  }
  return result;
}
