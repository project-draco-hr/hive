{
  initStatsPublisher(work);
  JobConf newJobConf=cloneJobConf(work);
  byte[] confBytes=KryoSerializer.serializeJobConf(newJobConf);
  if (work instanceof MapWork) {
    MapTran mapTran=new MapTran();
    HiveMapFunction mapFunc=new HiveMapFunction(confBytes,sparkReporter);
    mapTran.setMapFunction(mapFunc);
    return mapTran;
  }
 else   if (work instanceof ReduceWork) {
    ReduceTran reduceTran=new ReduceTran();
    HiveReduceFunction reduceFunc=new HiveReduceFunction(confBytes,sparkReporter);
    reduceTran.setReduceFunction(reduceFunc);
    return reduceTran;
  }
 else {
    throw new IllegalStateException("AssertionError: expected either MapWork or ReduceWork, " + "but found " + work.getClass().getName());
  }
}
