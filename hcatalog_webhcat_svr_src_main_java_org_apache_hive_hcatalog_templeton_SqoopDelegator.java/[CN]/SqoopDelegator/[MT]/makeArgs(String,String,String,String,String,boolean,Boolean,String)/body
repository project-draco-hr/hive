{
  ArrayList<String> args=new ArrayList<String>();
  try {
    args.addAll(makeBasicArgs(optionsFile,otherFiles,statusdir,completedUrl,enablelog,enableJobReconnect,libdir));
    args.add("--");
    TempletonUtils.addCmdForWindows(args);
    args.add(appConf.sqoopPath());
    if (TempletonUtils.isset(command)) {
      String[] temArgs=command.split(" ");
      for (int i=0; i < temArgs.length; i++) {
        args.add(TempletonUtils.quoteForWindows(temArgs[i]));
        if (i == 0 && !temArgs[i].startsWith("--")) {
          args.add("-D" + TempletonControllerJob.TOKEN_FILE_ARG_PLACEHOLDER);
          args.add("-D" + TempletonControllerJob.MAPREDUCE_JOB_TAGS_ARG_PLACEHOLDER);
        }
        if (i == 0 && TempletonUtils.isset(libdir) && TempletonUtils.isset(appConf.sqoopArchive())) {
          String libJars=null;
          for (          String s : args) {
            if (s.startsWith(JobSubmissionConstants.Sqoop.LIB_JARS)) {
              libJars=s.substring(s.indexOf("=") + 1);
              break;
            }
          }
          args.add(TempletonUtils.quoteForWindows("-libjars"));
          args.add(TempletonUtils.quoteForWindows(libJars));
        }
      }
    }
 else     if (TempletonUtils.isset(optionsFile)) {
      args.add("--options-file");
      args.add(TempletonUtils.hadoopFsPath(optionsFile,appConf,runAs).getName());
    }
  }
 catch (  FileNotFoundException e) {
    throw new BadParam(e.getMessage());
  }
catch (  URISyntaxException e) {
    throw new BadParam(e.getMessage());
  }
  return args;
}
