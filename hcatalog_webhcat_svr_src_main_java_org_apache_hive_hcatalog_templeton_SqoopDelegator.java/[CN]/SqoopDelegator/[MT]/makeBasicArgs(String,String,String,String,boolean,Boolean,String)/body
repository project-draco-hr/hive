{
  ArrayList<String> args=new ArrayList<String>();
  ArrayList<String> allFiles=new ArrayList<String>();
  if (TempletonUtils.isset(optionsFile))   allFiles.add(TempletonUtils.hadoopFsFilename(optionsFile,appConf,runAs));
  if (TempletonUtils.isset(otherFiles)) {
    String[] ofs=TempletonUtils.hadoopFsListAsArray(otherFiles,appConf,runAs);
    allFiles.addAll(Arrays.asList(ofs));
  }
  if (TempletonUtils.isset(libdir) && TempletonUtils.isset(appConf.sqoopArchive())) {
    LOG.debug("libdir=" + libdir);
    List<Path> jarList=TempletonUtils.hadoopFsListChildren(libdir,appConf,runAs);
    if (TempletonUtils.isset(jarList)) {
      StringBuilder sb=new StringBuilder();
      for (      Path jar : jarList) {
        allFiles.add(jar.toString());
        sb.append(jar.getName()).append(',');
      }
      sb.setLength(sb.length() - 1);
      addDef(args,JobSubmissionConstants.Sqoop.LIB_JARS,sb.toString());
      addDef(args,AppConfig.SQOOP_HOME_PATH,appConf.get(AppConfig.SQOOP_HOME_PATH));
    }
  }
  args.addAll(makeLauncherArgs(appConf,statusdir,completedUrl,allFiles,enablelog,enableJobReconnect,JobType.SQOOP));
  if (TempletonUtils.isset(appConf.sqoopArchive())) {
    args.add("-archives");
    args.add(appConf.sqoopArchive());
  }
  return args;
}
