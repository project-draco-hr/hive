{
  long txnid=openTxn();
  LockComponent comp=new LockComponent(LockType.SHARED_WRITE,LockLevel.DB,"mydb");
  comp.setTablename("mytable");
  List<LockComponent> components=new ArrayList<LockComponent>(1);
  components.add(comp);
  comp=new LockComponent(LockType.SHARED_WRITE,LockLevel.DB,"mydb");
  comp.setTablename("yourtable");
  comp.setPartitionname("mypartition");
  components.add(comp);
  LockRequest req=new LockRequest(components,"me","localhost");
  req.setTxnid(txnid);
  LockResponse res=txnHandler.lock(req);
  assertTrue(res.getState() == LockState.ACQUIRED);
  txnHandler.commitTxn(new CommitTxnRequest(txnid));
  assertEquals(0,txnHandler.numLocksInLockTable());
  Set<CompactionInfo> potentials=txnHandler.findPotentialCompactions(100);
  assertEquals(2,potentials.size());
  boolean sawMyTable=false, sawYourTable=false;
  for (  CompactionInfo ci : potentials) {
    sawMyTable|=(ci.dbname.equals("mydb") && ci.tableName.equals("mytable") && ci.partName == null);
    sawYourTable|=(ci.dbname.equals("mydb") && ci.tableName.equals("yourtable") && ci.partName.equals("mypartition"));
  }
  assertTrue(sawMyTable);
  assertTrue(sawYourTable);
}
