{
  String dbName="default";
  String tableName="adp_table";
  OpenTxnsResponse openTxns=txnHandler.openTxns(new OpenTxnRequest(1,"me","localhost"));
  long txnId=openTxns.getTxn_ids().get(0);
  LockComponent lc=new LockComponent(LockType.SHARED_WRITE,LockLevel.TABLE,dbName);
  lc.setTablename(tableName);
  LockRequest lr=new LockRequest(Arrays.asList(lc),"me","localhost");
  lr.setTxnid(txnId);
  LockResponse lock=txnHandler.lock(lr);
  assertEquals(LockState.ACQUIRED,lock.getState());
  txnHandler.addDynamicPartitions(new AddDynamicPartitions(txnId,dbName,tableName,Arrays.asList("ds=yesterday","ds=today")));
  txnHandler.commitTxn(new CommitTxnRequest(txnId));
  Set<CompactionInfo> potentials=txnHandler.findPotentialCompactions(1000);
  assertEquals(2,potentials.size());
  SortedSet<CompactionInfo> sorted=new TreeSet<CompactionInfo>(potentials);
  int i=0;
  for (  CompactionInfo ci : sorted) {
    assertEquals(dbName,ci.dbname);
    assertEquals(tableName,ci.tableName);
switch (i++) {
case 0:
      assertEquals("ds=today",ci.partName);
    break;
case 1:
  assertEquals("ds=yesterday",ci.partName);
break;
default :
throw new RuntimeException("What?");
}
}
}
