{
  RelOptCost algorithmCost;
switch (algorithm) {
case COMMON_JOIN:
    algorithmCost=computeCostCommonJoin(join);
  break;
case MAP_JOIN:
algorithmCost=computeCostMapJoin(join);
break;
case BUCKET_JOIN:
algorithmCost=computeCostBucketJoin(join);
break;
case SMB_JOIN:
algorithmCost=computeCostSMBJoin(join);
break;
default :
algorithmCost=null;
}
return algorithmCost;
}
