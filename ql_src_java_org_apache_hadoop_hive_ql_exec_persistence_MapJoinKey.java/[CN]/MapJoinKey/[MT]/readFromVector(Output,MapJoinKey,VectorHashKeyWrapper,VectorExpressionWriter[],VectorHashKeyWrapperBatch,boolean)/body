{
  boolean useOptimized=useOptimizedKeyBasedOnPrev(key);
  if (useOptimized || key == null) {
    byte[] structBytes=null;
    try {
      structBytes=serializeVector(output,kw,keyOutputWriters,keyWrapperBatch);
    }
 catch (    SerDeException e) {
      throw new HiveException(e);
    }
    if (structBytes != null) {
      return MapJoinKeyBytes.fromBytes(key,mayReuseKey,structBytes);
    }
 else     if (useOptimized) {
      throw new HiveException("Failed to serialize " + kw + " even though optimized keys are used");
    }
  }
  MapJoinKeyObject result=mayReuseKey ? (MapJoinKeyObject)key : new MapJoinKeyObject();
  result.readFromVector(kw,keyOutputWriters,keyWrapperBatch);
  return result;
}
