{
  SerDe serde=context.getSerDe();
  Object obj=serde.deserialize(writable);
  boolean useOptimized=useOptimizedKeyBasedOnPrev(key);
  if (useOptimized || key == null) {
    byte[] structBytes=serializeKey(output,obj,serde.getObjectInspector());
    if (structBytes != null) {
      return MapJoinKeyBytes.fromBytes(key,mayReuseKey,structBytes);
    }
 else     if (useOptimized) {
      throw new SerDeException("Failed to serialize " + obj + " even though optimized keys are used");
    }
  }
  MapJoinKeyObject result=mayReuseKey ? (MapJoinKeyObject)key : new MapJoinKeyObject();
  result.read(serde.getObjectInspector(),obj);
  return result;
}
