{
  return ugi.doAs(new PrivilegedAction<TTransport>(){
    @Override public TTransport run(){
      short numRetries=0;
      Random rand=new Random();
      while (true) {
        try {
          return wrapped.getTransport(trans);
        }
 catch (        RuntimeException e) {
          if (e.getCause() instanceof TTransportException) {
            if (++numRetries < authMaxRetries) {
              LOG.warn(e.getMessage());
              try {
                Thread.sleep(rand.nextInt(1000));
              }
 catch (              InterruptedException ie) {
              }
              continue;
            }
          }
          throw e;
        }
      }
    }
  }
);
}
