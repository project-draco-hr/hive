{
  Object p=parameters[0];
  StringStatsAgg myagg=(StringStatsAgg)agg;
  boolean emptyTable=false;
  if (parameters[1] == null) {
    emptyTable=true;
  }
  if (myagg.firstItem) {
    int numVectors=0;
    if (!emptyTable) {
      numVectors=PrimitiveObjectInspectorUtils.getInt(parameters[1],numVectorsOI);
    }
    if (numVectors > MAX_BIT_VECTORS) {
      throw new HiveException("The maximum allowed value for number of bit vectors " + " is " + MAX_BIT_VECTORS + " , but was passed "+ numVectors+ " bit vectors");
    }
    initNDVEstimator(myagg,numVectors);
    myagg.firstItem=false;
    myagg.numBitVectors=numVectors;
  }
  if (!emptyTable) {
    if (p == null) {
      myagg.countNulls++;
    }
 else {
      try {
        String v=PrimitiveObjectInspectorUtils.getString(p,inputOI);
        int len=v.length();
        if (len > myagg.maxLength) {
          myagg.maxLength=len;
        }
        myagg.sumLength+=len;
        myagg.count++;
        myagg.numDV.addToEstimator(v);
      }
 catch (      NumberFormatException e) {
        if (!warned) {
          warned=true;
          LOG.warn(getClass().getSimpleName() + " " + StringUtils.stringifyException(e));
          LOG.warn(getClass().getSimpleName() + " ignoring similar exceptions.");
        }
      }
    }
  }
}
