{
  super.init(m,parameters);
  if (mode == Mode.PARTIAL1 || mode == Mode.COMPLETE) {
    inputOI=(PrimitiveObjectInspector)parameters[0];
    numVectorsOI=(PrimitiveObjectInspector)parameters[1];
  }
 else {
    soi=(StructObjectInspector)parameters[0];
    maxLengthField=soi.getStructFieldRef("MaxLength");
    maxLengthFieldOI=(WritableLongObjectInspector)maxLengthField.getFieldObjectInspector();
    sumLengthField=soi.getStructFieldRef("SumLength");
    sumLengthFieldOI=(WritableLongObjectInspector)sumLengthField.getFieldObjectInspector();
    countField=soi.getStructFieldRef("Count");
    countFieldOI=(WritableLongObjectInspector)countField.getFieldObjectInspector();
    countNullsField=soi.getStructFieldRef("CountNulls");
    countNullsFieldOI=(WritableLongObjectInspector)countNullsField.getFieldObjectInspector();
    ndvField=soi.getStructFieldRef("BitVector");
    ndvFieldOI=(WritableStringObjectInspector)ndvField.getFieldObjectInspector();
    numBitVectorsField=soi.getStructFieldRef("NumBitVectors");
    numBitVectorsFieldOI=(WritableIntObjectInspector)numBitVectorsField.getFieldObjectInspector();
  }
  if (mode == Mode.PARTIAL1 || mode == Mode.PARTIAL2) {
    List<ObjectInspector> foi=new ArrayList<ObjectInspector>();
    foi.add(PrimitiveObjectInspectorFactory.writableStringObjectInspector);
    foi.add(PrimitiveObjectInspectorFactory.writableLongObjectInspector);
    foi.add(PrimitiveObjectInspectorFactory.writableLongObjectInspector);
    foi.add(PrimitiveObjectInspectorFactory.writableLongObjectInspector);
    foi.add(PrimitiveObjectInspectorFactory.writableLongObjectInspector);
    foi.add(PrimitiveObjectInspectorFactory.writableStringObjectInspector);
    foi.add(PrimitiveObjectInspectorFactory.writableIntObjectInspector);
    List<String> fname=new ArrayList<String>();
    fname.add("ColumnType");
    fname.add("MaxLength");
    fname.add("SumLength");
    fname.add("Count");
    fname.add("CountNulls");
    fname.add("BitVector");
    fname.add("NumBitVectors");
    partialResult=new Object[7];
    partialResult[0]=new Text();
    partialResult[1]=new LongWritable(0);
    partialResult[2]=new LongWritable(0);
    partialResult[3]=new LongWritable(0);
    partialResult[4]=new LongWritable(0);
    partialResult[5]=new Text();
    partialResult[6]=new IntWritable(0);
    return ObjectInspectorFactory.getStandardStructObjectInspector(fname,foi);
  }
 else {
    List<ObjectInspector> foi=new ArrayList<ObjectInspector>();
    foi.add(PrimitiveObjectInspectorFactory.writableStringObjectInspector);
    foi.add(PrimitiveObjectInspectorFactory.writableLongObjectInspector);
    foi.add(PrimitiveObjectInspectorFactory.writableDoubleObjectInspector);
    foi.add(PrimitiveObjectInspectorFactory.writableLongObjectInspector);
    foi.add(PrimitiveObjectInspectorFactory.writableLongObjectInspector);
    List<String> fname=new ArrayList<String>();
    fname.add("ColumnType");
    fname.add("MaxLength");
    fname.add("AvgLength");
    fname.add("CountNulls");
    fname.add("NumDistinctValues");
    result=new Object[5];
    result[0]=new Text();
    result[1]=new LongWritable(0);
    result[2]=new DoubleWritable(0);
    result[3]=new LongWritable(0);
    result[4]=new LongWritable(0);
    return ObjectInspectorFactory.getStandardStructObjectInspector(fname,foi);
  }
}
