{
  if (arguments[0].get() == null) {
    return null;
  }
  StringBuilder sb=new StringBuilder();
  Formatter formatter=new Formatter(sb,Locale.US);
  Text pattern=(Text)converterFormat.convert(arguments[0].get());
  ArrayList<Object> argumentList=new ArrayList<Object>();
  for (int i=1; i < arguments.length; i++) {
switch (((PrimitiveObjectInspector)argumentOIs[i]).getPrimitiveCategory()) {
case BOOLEAN:
case BYTE:
case SHORT:
case INT:
case LONG:
case FLOAT:
case DOUBLE:
case CHAR:
case VARCHAR:
case STRING:
case TIMESTAMP:
case DECIMAL:
      argumentList.add(((PrimitiveObjectInspector)argumentOIs[i]).getPrimitiveJavaObject(arguments[i].get()));
    break;
default :
  argumentList.add(arguments[i].get());
break;
}
}
formatter.format(pattern.toString(),argumentList.toArray());
resultText.set(sb.toString());
formatter.close();
return resultText;
}
