{
  ColorBuffer buf=beeLine.getColorBuffer();
  for (int i=0; i < row.values.length; i++) {
    if (buf.getVisibleLength() > 0) {
      buf.green(delim);
    }
    ColorBuffer v;
    if (row.isMeta) {
      v=beeLine.getColorBuffer().center(row.values[i],row.sizes[i]);
      if (rows.isPrimaryKey(i)) {
        buf.cyan(v.getMono());
      }
 else {
        buf.bold(v.getMono());
      }
    }
 else {
      v=beeLine.getColorBuffer().pad(row.values[i],row.sizes[i]);
      if (rows.isPrimaryKey(i)) {
        buf.cyan(v.getMono());
      }
 else {
        buf.append(v.getMono());
      }
    }
  }
  if (row.deleted) {
    buf=beeLine.getColorBuffer().red(buf.getMono());
  }
 else   if (row.updated) {
    buf=beeLine.getColorBuffer().blue(buf.getMono());
  }
 else   if (row.inserted) {
    buf=beeLine.getColorBuffer().green(buf.getMono());
  }
  return buf;
}
