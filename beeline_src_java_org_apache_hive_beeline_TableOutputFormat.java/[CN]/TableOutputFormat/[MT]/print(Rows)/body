{
  int index=0;
  ColorBuffer header=null;
  ColorBuffer headerCols=null;
  final int width=beeLine.getOpts().getMaxWidth() - 4;
  rows.normalizeWidths();
  for (; rows.hasNext(); ) {
    Rows.Row row=(Rows.Row)rows.next();
    ColorBuffer cbuf=getOutputString(rows,row);
    if (beeLine.getOpts().getTruncateTable()) {
      cbuf=cbuf.truncate(width);
    }
    if (index == 0) {
      sb.setLength(0);
      for (int j=0; j < row.sizes.length; j++) {
        for (int k=0; k < row.sizes[j]; k++) {
          sb.append('-');
        }
        sb.append("-+-");
      }
      headerCols=cbuf;
      header=beeLine.getColorBuffer().green(sb.toString());
      if (beeLine.getOpts().getTruncateTable()) {
        header=header.truncate(headerCols.getVisibleLength());
      }
    }
    if (beeLine.getOpts().getShowHeader()) {
      if (index == 0 || (index - 1 > 0 && ((index - 1) % beeLine.getOpts().getHeaderInterval() == 0))) {
        printRow(header,true);
        printRow(headerCols,false);
        printRow(header,true);
      }
    }
 else     if (index == 0) {
      printRow(header,true);
    }
    if (index != 0) {
      printRow(cbuf,false);
    }
    index++;
  }
  if (header != null) {
    printRow(header,true);
  }
  return index - 1;
}
