{
  @SuppressWarnings("unchecked") JobHandle.Listener<T> listener=mock(JobHandle.Listener.class);
  answerWhen(listener,"cancelled").onJobCancelled(Mockito.<JobHandle<T>>any());
  answerWhen(listener,"queued").onJobQueued(Mockito.<JobHandle<T>>any());
  answerWhen(listener,"started").onJobStarted(Mockito.<JobHandle<T>>any());
  answerWhen(listener,"succeeded").onJobSucceeded(Mockito.<JobHandle<T>>any(),Mockito.<T>any());
  answerWhen(listener,"job started").onSparkJobStarted(Mockito.<JobHandle<T>>any(),Mockito.anyInt());
  Mockito.doAnswer(new Answer<Void>(){
    public Void answer(    InvocationOnMock invocation) throws Throwable {
      @SuppressWarnings("rawtypes") JobHandleImpl arg=((JobHandleImpl)invocation.getArguments()[0]);
      LOG.info("Job failed " + arg.getClientJobId(),(Throwable)invocation.getArguments()[1]);
      return null;
    }
  }
).when(listener).onJobFailed(Mockito.<JobHandle<T>>any(),Mockito.<Throwable>any());
  return listener;
}
