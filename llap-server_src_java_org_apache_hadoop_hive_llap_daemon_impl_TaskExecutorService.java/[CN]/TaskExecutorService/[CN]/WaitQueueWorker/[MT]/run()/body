{
  try {
synchronized (lock) {
      while (waitQueue.isEmpty()) {
        lock.wait();
      }
    }
    while (true) {
synchronized (lock) {
        task=waitQueue.peek();
        if (task == null) {
          break;
        }
        boolean shouldWait=false;
        if (task.getTaskRunnerCallable().canFinish()) {
          if (numSlotsAvailable.get() == 0 && preemptionQueue.isEmpty()) {
            shouldWait=true;
          }
        }
 else {
          if (numSlotsAvailable.get() == 0) {
            shouldWait=true;
          }
        }
        if (shouldWait) {
          lock.wait();
          continue;
        }
      }
      boolean scheduled=trySchedule(task);
      if (scheduled) {
synchronized (lock) {
          waitQueue.remove(task);
        }
      }
synchronized (lock) {
        while (waitQueue.isEmpty()) {
          lock.wait();
        }
      }
    }
  }
 catch (  InterruptedException e) {
    LOG.info(WAIT_QUEUE_SCHEDULER_THREAD_NAME_FORMAT + " thread has been interrupted.");
  }
}
