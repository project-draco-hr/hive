{
  try {
    Method[] m=beeLine.getDatabaseConnection().getDatabaseMetaData().getClass().getMethods();
    Set<String> methodNames=new TreeSet<String>();
    Set<String> methodNamesUpper=new TreeSet<String>();
    for (int i=0; i < m.length; i++) {
      methodNames.add(m[i].getName());
      methodNamesUpper.add(m[i].getName().toUpperCase());
    }
    if (!methodNamesUpper.contains(cmd.toUpperCase())) {
      beeLine.error(beeLine.loc("no-such-method",cmd));
      beeLine.error(beeLine.loc("possible-methods"));
      for (Iterator<String> i=methodNames.iterator(); i.hasNext(); ) {
        beeLine.error("   " + i.next());
      }
      return false;
    }
    Object res=beeLine.getReflector().invoke(beeLine.getDatabaseConnection().getDatabaseMetaData(),DatabaseMetaData.class,cmd,Arrays.asList(args));
    if (res instanceof ResultSet) {
      ResultSet rs=(ResultSet)res;
      if (rs != null) {
        try {
          beeLine.print(rs);
        }
  finally {
          rs.close();
        }
      }
    }
 else     if (res != null) {
      beeLine.output(res.toString());
    }
  }
 catch (  Exception e) {
    return beeLine.error(e);
  }
  return true;
}
