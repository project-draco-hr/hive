{
  if (!(beeLine.assertConnection())) {
    return false;
  }
  int i;
  if (line.endsWith("TRANSACTION_NONE")) {
    i=Connection.TRANSACTION_NONE;
  }
 else   if (line.endsWith("TRANSACTION_READ_COMMITTED")) {
    i=Connection.TRANSACTION_READ_COMMITTED;
  }
 else   if (line.endsWith("TRANSACTION_READ_UNCOMMITTED")) {
    i=Connection.TRANSACTION_READ_UNCOMMITTED;
  }
 else   if (line.endsWith("TRANSACTION_REPEATABLE_READ")) {
    i=Connection.TRANSACTION_REPEATABLE_READ;
  }
 else   if (line.endsWith("TRANSACTION_SERIALIZABLE")) {
    i=Connection.TRANSACTION_SERIALIZABLE;
  }
 else {
    return beeLine.error("Usage: isolation <TRANSACTION_NONE " + "| TRANSACTION_READ_COMMITTED " + "| TRANSACTION_READ_UNCOMMITTED "+ "| TRANSACTION_REPEATABLE_READ "+ "| TRANSACTION_SERIALIZABLE>");
  }
  beeLine.getDatabaseConnection().getConnection().setTransactionIsolation(i);
  int isol=beeLine.getDatabaseConnection().getConnection().getTransactionIsolation();
  final String isoldesc;
switch (i) {
case Connection.TRANSACTION_NONE:
    isoldesc="TRANSACTION_NONE";
  break;
case Connection.TRANSACTION_READ_COMMITTED:
isoldesc="TRANSACTION_READ_COMMITTED";
break;
case Connection.TRANSACTION_READ_UNCOMMITTED:
isoldesc="TRANSACTION_READ_UNCOMMITTED";
break;
case Connection.TRANSACTION_REPEATABLE_READ:
isoldesc="TRANSACTION_REPEATABLE_READ";
break;
case Connection.TRANSACTION_SERIALIZABLE:
isoldesc="TRANSACTION_SERIALIZABLE";
break;
default :
isoldesc="UNKNOWN";
}
beeLine.info(beeLine.loc("isolation-status",isoldesc));
return true;
}
