{
  List<Range> orRanges=new ArrayList<Range>(nodeOutputs.length);
  for (  Object nodeOutput : nodeOutputs) {
    if (nodeOutput instanceof Range) {
      orRanges.add((Range)nodeOutput);
    }
 else     if (nodeOutput instanceof List) {
      @SuppressWarnings("unchecked") List<Range> childRanges=(List<Range>)nodeOutput;
      orRanges.addAll(childRanges);
    }
 else {
      log.error("Expected Range from " + nd + " but got "+ nodeOutput);
      throw new IllegalArgumentException("Expected Range but got " + nodeOutput.getClass().getName());
    }
  }
  if (orRanges.size() > 1) {
    return Range.mergeOverlapping(orRanges);
  }
 else   if (1 == orRanges.size()) {
    return orRanges.get(0);
  }
 else {
    return orRanges;
  }
}
