{
  try {
    Converter booleanConverter=ObjectInspectorConverters.getConverter(PrimitiveObjectInspectorFactory.javaIntObjectInspector,PrimitiveObjectInspectorFactory.writableBooleanObjectInspector);
    assertEquals("BooleanConverter",new BooleanWritable(false),booleanConverter.convert(Integer.valueOf(0)));
    assertEquals("BooleanConverter",new BooleanWritable(true),booleanConverter.convert(Integer.valueOf(1)));
    Converter byteConverter=ObjectInspectorConverters.getConverter(PrimitiveObjectInspectorFactory.javaIntObjectInspector,PrimitiveObjectInspectorFactory.writableByteObjectInspector);
    assertEquals("ByteConverter",new ByteWritable((byte)0),byteConverter.convert(Integer.valueOf(0)));
    assertEquals("ByteConverter",new ByteWritable((byte)1),byteConverter.convert(Integer.valueOf(1)));
    Converter shortConverter=ObjectInspectorConverters.getConverter(PrimitiveObjectInspectorFactory.javaIntObjectInspector,PrimitiveObjectInspectorFactory.writableShortObjectInspector);
    assertEquals("ShortConverter",new ShortWritable((short)0),shortConverter.convert(Integer.valueOf(0)));
    assertEquals("ShortConverter",new ShortWritable((short)1),shortConverter.convert(Integer.valueOf(1)));
    Converter intConverter=ObjectInspectorConverters.getConverter(PrimitiveObjectInspectorFactory.javaIntObjectInspector,PrimitiveObjectInspectorFactory.writableIntObjectInspector);
    assertEquals("IntConverter",new IntWritable((int)0),intConverter.convert(Integer.valueOf(0)));
    assertEquals("IntConverter",new IntWritable((int)1),intConverter.convert(Integer.valueOf(1)));
    Converter longConverter=ObjectInspectorConverters.getConverter(PrimitiveObjectInspectorFactory.javaIntObjectInspector,PrimitiveObjectInspectorFactory.writableLongObjectInspector);
    assertEquals("LongConverter",new LongWritable((long)0),longConverter.convert(Integer.valueOf(0)));
    assertEquals("LongConverter",new LongWritable((long)1),longConverter.convert(Integer.valueOf(1)));
    Converter floatConverter=ObjectInspectorConverters.getConverter(PrimitiveObjectInspectorFactory.javaIntObjectInspector,PrimitiveObjectInspectorFactory.writableFloatObjectInspector);
    assertEquals("LongConverter",new FloatWritable((float)0),floatConverter.convert(Integer.valueOf(0)));
    assertEquals("LongConverter",new FloatWritable((float)1),floatConverter.convert(Integer.valueOf(1)));
    Converter doubleConverter=ObjectInspectorConverters.getConverter(PrimitiveObjectInspectorFactory.javaIntObjectInspector,PrimitiveObjectInspectorFactory.writableDoubleObjectInspector);
    assertEquals("DoubleConverter",new DoubleWritable((double)0),doubleConverter.convert(Integer.valueOf(0)));
    assertEquals("DoubleConverter",new DoubleWritable((double)1),doubleConverter.convert(Integer.valueOf(1)));
    Converter textConverter=ObjectInspectorConverters.getConverter(PrimitiveObjectInspectorFactory.javaIntObjectInspector,PrimitiveObjectInspectorFactory.writableStringObjectInspector);
    assertEquals("TextConverter",new Text("0"),textConverter.convert(Integer.valueOf(0)));
    assertEquals("TextConverter",new Text("1"),textConverter.convert(Integer.valueOf(1)));
  }
 catch (  Throwable e) {
    e.printStackTrace();
    throw e;
  }
}
