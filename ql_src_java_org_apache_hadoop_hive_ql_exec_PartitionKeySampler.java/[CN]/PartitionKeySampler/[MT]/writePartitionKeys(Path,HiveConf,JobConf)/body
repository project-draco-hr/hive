{
  byte[][] partitionKeys=getPartitionKeys(job.getNumReduceTasks());
  int numPartition=partitionKeys.length + 1;
  if (numPartition != job.getNumReduceTasks()) {
    job.setNumReduceTasks(numPartition);
  }
  FileSystem fs=path.getFileSystem(job);
  SequenceFile.Writer writer=SequenceFile.createWriter(fs,job,path,BytesWritable.class,NullWritable.class);
  try {
    for (    byte[] pkey : partitionKeys) {
      BytesWritable wrapper=new BytesWritable(pkey);
      writer.append(wrapper,NullWritable.get());
    }
  }
  finally {
    IOUtils.closeStream(writer);
  }
}
