{
  if (sampled.size() < numReduce - 1) {
    throw new IllegalStateException("not enough number of sample");
  }
  byte[][] sorted=sampled.toArray(new byte[sampled.size()][]);
  Arrays.sort(sorted,C);
  byte[][] partitionKeys=new byte[numReduce - 1][];
  float stepSize=sorted.length / (float)numReduce;
  int last=-1;
  for (int i=1; i < numReduce; ++i) {
    int k=Math.round(stepSize * i);
    while (last >= k && C.compare(sorted[last],sorted[k]) == 0) {
      k++;
    }
    partitionKeys[i - 1]=sorted[k];
    last=k;
  }
  return partitionKeys;
}
