{
  byte[][] partitionKeys=new byte[numPartition - 1][];
  int last=0;
  int current=0;
  for (int i=0; i < numPartition - 1; i++) {
    current+=Math.round((float)(sorted.length - current) / (numPartition - i));
    while (i > 0 && current < sorted.length && C.compare(sorted[last],sorted[current]) == 0) {
      current++;
    }
    if (current >= sorted.length) {
      return Arrays.copyOfRange(partitionKeys,0,i);
    }
    if (LOG.isDebugEnabled()) {
      LOG.debug("Partition key " + current + "th :"+ new BytesWritable(sorted[current]));
    }
    partitionKeys[i]=sorted[current];
    last=current;
  }
  return partitionKeys;
}
